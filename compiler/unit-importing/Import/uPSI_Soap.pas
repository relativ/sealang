unit uPSI_Soap;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 

 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_Soap = class(TPSPlugin)
  public
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_IInterface(CL: TPSPascalCompiler);
procedure SIRegister_Soap(CL: TPSPascalCompiler);

{ run-time registration functions }

procedure Register;

implementation


uses
   Soap
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_Soap]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_IInterface(CL: TPSPascalCompiler);
begin
  //with RegInterfaceS(CL,'IUNKNOWN', 'IInterface') do
  with CL.AddInterface(CL.FindInterface('IUNKNOWN'),IInterface, 'IInterface') do
  begin
    RegisterMethod('Function QueryInterface( const IID : TGUID; out Obj) : HResult', CdStdCall);
    RegisterMethod('Function _AddRef : Integer', CdStdCall);
    RegisterMethod('Function _Release : Integer', CdStdCall);
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_Soap(CL: TPSPascalCompiler);
begin
  SIRegister_IInterface(CL);
end;

(* === run-time registration functions === *)
 
 
{ TPSImport_Soap }
(*----------------------------------------------------------------------------*)
procedure TPSImport_Soap.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_Soap(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_Soap.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
end;
(*----------------------------------------------------------------------------*)
 
 
end.
