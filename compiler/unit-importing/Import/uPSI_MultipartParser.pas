unit uPSI_MultipartParser;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 

 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_MultipartParser = class(TPSPlugin)
  public
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_TMultiPartContentParser(CL: TPSPascalCompiler);
procedure SIRegister_TMultiPartHTTPFiles(CL: TPSPascalCompiler);
procedure SIRegister_TMultiPartHTTPFile(CL: TPSPascalCompiler);
procedure SIRegister_MultipartParser(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_TMultiPartContentParser(CL: TPSRuntimeClassImporter);
procedure RIRegister_TMultiPartHTTPFiles(CL: TPSRuntimeClassImporter);
procedure RIRegister_TMultiPartHTTPFile(CL: TPSRuntimeClassImporter);
procedure RIRegister_MultipartParser(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
   HTTPAPP
  ,contnrs
  ,MultipartParser
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_MultipartParser]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_TMultiPartContentParser(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TAbstractContentParser', 'TMultiPartContentParser') do
  with CL.AddClassN(CL.FindClass('TAbstractContentParser'),'TMultiPartContentParser') do
  begin
    RegisterMethod('Procedure Parse');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_TMultiPartHTTPFiles(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TAbstractWebRequestFiles', 'TMultiPartHTTPFiles') do
  with CL.AddClassN(CL.FindClass('TAbstractWebRequestFiles'),'TMultiPartHTTPFiles') do
  begin
    RegisterMethod('Constructor Create');
    RegisterMethod('Procedure Clear');
    RegisterMethod('Function Add( AObject : TMultiPartHTTPFile) : Integer');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_TMultiPartHTTPFile(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TAbstractWebRequestFile', 'TMultiPartHTTPFile') do
  with CL.AddClassN(CL.FindClass('TAbstractWebRequestFile'),'TMultiPartHTTPFile') do
  begin
    RegisterMethod('Constructor Create( const Data, dataSize : LongWord; const ContentType, FieldName, FileName : string)');
    RegisterMethod('Procedure SaveToFile( SaveAsFile : string)');
    RegisterMethod('Procedure SaveToStream( Stream : TStream)');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_MultipartParser(CL: TPSPascalCompiler);
begin
  CL.AddClassN(CL.FindClass('TOBJECT'),'EClientConnectionDropped');
  SIRegister_TMultiPartHTTPFile(CL);
  SIRegister_TMultiPartHTTPFiles(CL);
  SIRegister_TMultiPartContentParser(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure RIRegister_TMultiPartContentParser(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TMultiPartContentParser) do
  begin
    RegisterMethod(@TMultiPartContentParser.Parse, 'Parse');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TMultiPartHTTPFiles(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TMultiPartHTTPFiles) do
  begin
    RegisterConstructor(@TMultiPartHTTPFiles.Create, 'Create');
    RegisterMethod(@TMultiPartHTTPFiles.Clear, 'Clear');
    RegisterMethod(@TMultiPartHTTPFiles.Add, 'Add');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TMultiPartHTTPFile(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TMultiPartHTTPFile) do
  begin
    RegisterConstructor(@TMultiPartHTTPFile.Create, 'Create');
    RegisterMethod(@TMultiPartHTTPFile.SaveToFile, 'SaveToFile');
    RegisterMethod(@TMultiPartHTTPFile.SaveToStream, 'SaveToStream');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_MultipartParser(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(EClientConnectionDropped) do
  RIRegister_TMultiPartHTTPFile(CL);
  RIRegister_TMultiPartHTTPFiles(CL);
  RIRegister_TMultiPartContentParser(CL);
end;

 
 
{ TPSImport_MultipartParser }
(*----------------------------------------------------------------------------*)
procedure TPSImport_MultipartParser.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_MultipartParser(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_MultipartParser.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_MultipartParser(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
