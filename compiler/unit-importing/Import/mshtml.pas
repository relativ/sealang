{*******************************************************}
{                                                       }
{           CodeGear Delphi Runtime Library             }
{ Copyright(c) 2014-2017 Embarcadero Technologies, Inc. }
{              All rights reserved                      }
{                                                       }
{*******************************************************}

unit MSHTML;

// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// The types declared in this file were generated from data read from a       
// Type Library. If this type library is explicitly or indirectly (via        
// another type library referring to this type library) re-imported, or the   
// 'Refresh' command of the Type Library Editor activated while editing the   
// Type Library, the contents of this file will be regenerated and all        
// manual modifications will be lost.                                         
// ************************************************************************ //

// $Rev: 52393 $
// File generated on 2014/01/28 14:14:57 from Type Library described below.

// ************************************************************************  //
// Type Lib: mshtml.tlb (1)
// LIBID: {3050F1C5-98B5-11CF-BB82-00AA00BDCE0B}
// LCID: 0
// Helpfile: 
// HelpString: Microsoft HTML Object Library
// DepndLst: 
//   (1) v2.0 stdole, (C:\Windows\SysWOW64\stdole2.tlb)
// SYS_KIND: SYS_WIN32
// Errors:
//   Hint: Symbol 'type' renamed to 'type_'
//   Hint: Symbol 'className' renamed to '_className'
//   Hint: Parameter 'String' of IHTMLElement.toString changed to 'String_'
//   Hint: Parameter 'String' of IHTMLStyle.toString changed to 'String_'
//   Hint: Parameter 'type' of IEventTarget.addEventListener changed to 'type_'
//   Hint: Parameter 'type' of IEventTarget.removeEventListener changed to 'type_'
//   Hint: Member 'constructor' of 'IHTMLDOMConstructor' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLStyle' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLRuleStyle' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLCurrentStyle' changed to 'constructor_'
//   Hint: Parameter 'String' of IHTMLElementCollection.toString changed to 'String_'
//   Hint: Parameter 'String' of IHTMLWindow2.toString changed to 'String_'
//   Hint: Symbol 'assign' renamed to 'Assign_'
//   Hint: Parameter 'String' of IHTMLLocation.toString changed to 'String_'
//   Hint: Parameter 'String' of IOmNavigator.toString changed to 'String_'
//   Hint: Parameter 'String' of IHTMLDocument2.toString changed to 'String_'
//   Hint: Parameter 'String' of IHTMLDOMTextNode.toString changed to 'String_'
//   Hint: Member 'constructor' of 'DispHTMLDOMAttribute' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLDOMTextNode' changed to 'constructor_'
//   Hint: Parameter 'type' of DispHTMLDOMTextNode.addEventListener changed to 'type_'
//   Hint: Parameter 'type' of DispHTMLDOMTextNode.removeEventListener changed to 'type_'
//   Hint: Member 'constructor' of 'DispHTMLDOMImplementation' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLAttributeCollection' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispStaticNodeList' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispDOMChildrenCollection' changed to 'constructor_'
//   Hint: Enum Member 'htmlInputImage' of '_htmlInput' changed to 'htmlInputImage_'
//   Hint: Member 'property' of 'IRulesAppliedCollection' changed to 'property_'
//   Hint: Member 'constructor' of 'DispHTMLDefaults' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLUrnCollection' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLGenericElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLStyleSheetRule' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLStyleSheetRulesCollection' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLStyleSheetPage' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLStyleSheetPagesCollection' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLStyleSheet' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLStyleSheetsCollection' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLLinkElement' changed to 'constructor_'
//   Hint: Parameter 'Unit' of IHTMLTxtRange.expand changed to 'Unit_'
//   Hint: Parameter 'Unit' of IHTMLTxtRange.move changed to 'Unit_'
//   Hint: Parameter 'Unit' of IHTMLTxtRange.moveStart changed to 'Unit_'
//   Hint: Parameter 'Unit' of IHTMLTxtRange.moveEnd changed to 'Unit_'
//   Hint: Parameter 'String' of IHTMLTxtRange.findText changed to 'String_'
//   Hint: Member 'constructor' of 'DispHTMLFormElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLTextElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLImg' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLBody' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLFontElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLAnchorElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLLabelElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLListElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLUListElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLOListElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLLIElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLBlockElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLDivElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLDDElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLDTElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLBRElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLDListElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLHRElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLParaElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLElementCollection' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLHeaderElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLSelectElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLWndSelectElement' changed to 'constructor_'
//   Hint: Member 'label' of 'IHTMLOptionElement3' changed to 'label_'
//   Hint: Member 'constructor' of 'DispHTMLOptionElement' changed to 'constructor_'
//   Hint: Member 'label' of 'DispHTMLOptionElement' changed to 'label_'
//   Hint: Member 'constructor' of 'DispHTMLWndOptionElement' changed to 'constructor_'
//   Hint: Member 'label' of 'DispHTMLWndOptionElement' changed to 'label_'
//   Hint: Parameter 'end' of IHTMLInputTextElement2.setSelectionRange changed to 'end_'
//   Hint: Member 'constructor' of 'DispHTMLInputElement' changed to 'constructor_'
//   Hint: Parameter 'end' of DispHTMLInputElement.setSelectionRange changed to 'end_'
//   Hint: Parameter 'end' of IHTMLTextAreaElement2.setSelectionRange changed to 'end_'
//   Hint: Member 'constructor' of 'DispHTMLTextAreaElement' changed to 'constructor_'
//   Hint: Parameter 'end' of DispHTMLTextAreaElement.setSelectionRange changed to 'end_'
//   Hint: Member 'constructor' of 'DispHTMLRichtextElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLButtonElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLMarqueeElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLHtmlElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLHeadElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLTitleElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLMetaElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLBaseElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLIsIndexElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLNextIdElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLBaseFontElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLUnknownElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLHistory' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispCPlugins' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLNavigator' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLLocation' changed to 'constructor_'
//   Hint: Member 'repeat' of 'IHTMLEventObj2' changed to 'repeat_'
//   Hint: Member 'repeat' of 'DispCEventObj' changed to 'repeat_'
//   Hint: Member 'constructor' of 'DispCEventObj' changed to 'constructor_'
//   Hint: Parameter 'String' of IHTMLPerformance.toString changed to 'String_'
//   Hint: Parameter 'String' of IHTMLPerformanceNavigation.toString changed to 'String_'
//   Hint: Parameter 'String' of IHTMLPerformanceTiming.toString changed to 'String_'
//   Hint: Member 'constructor' of 'DispHTMLScreen' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLWindow2' changed to 'constructor_'
//   Hint: Parameter 'type' of DispHTMLWindow2.addEventListener changed to 'type_'
//   Hint: Parameter 'type' of DispHTMLWindow2.removeEventListener changed to 'type_'
//   Hint: Member 'constructor' of 'DispHTMLWindowProxy' changed to 'constructor_'
//   Hint: Parameter 'type' of DispHTMLWindowProxy.addEventListener changed to 'type_'
//   Hint: Parameter 'type' of DispHTMLWindowProxy.removeEventListener changed to 'type_'
//   Hint: Member 'constructor' of 'DispHTMLDocumentCompatibleInfo' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLDocumentCompatibleInfoCollection' changed to 'constructor_'
//   Hint: Member 'implementation' of 'IHTMLDocument5' changed to 'implementation_'
//   Hint: Member 'implementation' of 'DispHTMLDocument' changed to 'implementation_'
//   Hint: Member 'constructor' of 'DispHTMLDocument' changed to 'constructor_'
//   Hint: Parameter 'type' of DispHTMLDocument.addEventListener changed to 'type_'
//   Hint: Parameter 'type' of DispHTMLDocument.removeEventListener changed to 'type_'
//   Hint: Symbol 'True' renamed to 'True_'
//   Hint: Symbol 'False' renamed to 'False_'
//   Hint: Member 'constructor' of 'DispHTMLEmbed' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLAreasCollection' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLMapElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLAreaElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLTableCaption' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLCommentElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLPhraseElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLSpanElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLTable' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLTableCol' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLTableSection' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLTableRow' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLTableCell' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLScriptElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLNoShowElement' changed to 'constructor_'
//   Hint: Member 'object' of 'IHTMLObjectElement' changed to 'object_'
//   Hint: Member 'object' of 'IHTMLObjectElement5' changed to 'object_'
//   Hint: Member 'constructor' of 'DispHTMLObjectElement' changed to 'constructor_'
//   Hint: Member 'object' of 'DispHTMLObjectElement' changed to 'object_'
//   Hint: Member 'constructor' of 'DispHTMLParamElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLFrameBase' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLFrameElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLIFrame' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLDivPosition' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLFieldSetElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLLegendElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLSpanFlow' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLFrameSetSite' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLBGsound' changed to 'constructor_'
//   Hint: Parameter 'object' of IHTMLOptionsHolder.isApartmentModel changed to 'object_'
//   Hint: Member 'constructor' of 'DispHTMLStyleElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispXDomainRequest' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLStorage' changed to 'constructor_'
//   Hint: Member 'repeat' of 'IDOMKeyboardEvent' changed to 'repeat_'
//   Hint: Parameter 'repeat' of IDOMKeyboardEvent.initKeyboardEvent changed to 'repeat_'
//   Hint: Member 'repeat' of 'DispDOMKeyboardEvent' changed to 'repeat_'
//   Hint: Parameter 'repeat' of DispDOMKeyboardEvent.initKeyboardEvent changed to 'repeat_'
//   Hint: Parameter 'type' of IHTMLCanvasElement.toDataURL changed to 'type_'
//   Hint: Member 'constructor' of 'DispHTMLCanvasElement' changed to 'constructor_'
//   Hint: Parameter 'type' of DispHTMLCanvasElement.toDataURL changed to 'type_'
//   Hint: Parameter 'type' of DispXMLHttpRequestEventTarget.addEventListener changed to 'type_'
//   Hint: Parameter 'type' of DispXMLHttpRequestEventTarget.removeEventListener changed to 'type_'
//   Hint: Member 'constructor' of 'DispHTMLXMLHttpRequest' changed to 'constructor_'
//   Hint: Parameter 'type' of DispHTMLXMLHttpRequest.addEventListener changed to 'type_'
//   Hint: Parameter 'type' of DispHTMLXMLHttpRequest.removeEventListener changed to 'type_'
//   Hint: Member 'property' of 'DispRulesAppliedCollection' changed to 'property_'
//   Hint: Member 'end' of 'IHTMLTimeRanges' changed to 'end_'
//   Hint: Parameter 'type' of IHTMLMediaElement.canPlayType changed to 'type_'
//   Hint: Member 'end' of 'DispHTMLTimeRanges' changed to 'end_'
//   Hint: Member 'constructor' of 'DispHTMLMediaElement' changed to 'constructor_'
//   Hint: Parameter 'type' of DispHTMLMediaElement.canPlayType changed to 'type_'
//   Hint: Member 'constructor' of 'DispHTMLSourceElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLAudioElement' changed to 'constructor_'
//   Hint: Parameter 'type' of DispHTMLAudioElement.canPlayType changed to 'type_'
//   Hint: Member 'constructor' of 'DispHTMLVideoElement' changed to 'constructor_'
//   Hint: Parameter 'type' of DispHTMLVideoElement.canPlayType changed to 'type_'
//   Hint: Parameter 'type' of DispSVGElementInstance.addEventListener changed to 'type_'
//   Hint: Parameter 'type' of DispSVGElementInstance.removeEventListener changed to 'type_'
//   Hint: Member 'constructor' of 'DispHTMLSemanticElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLProgressElement' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLNamespace' changed to 'constructor_'
//   Hint: Member 'constructor' of 'DispHTMLNamespaceCollection' changed to 'constructor_'
//   Hint: Parameter 'String' of IHTMLDialog.toString changed to 'String_'
//   Hint: Member 'constructor' of 'DispHTMLPopup' changed to 'constructor_'
//   Error creating palette bitmap of (TScriptlet) : Registry key CLSID\{AE24FDAE-03C6-11D1-8B76-0080C744F389}\ToolboxBitmap32 not found
// Cmdline:
//   tlibimp  -P -Hs- -Hr- -Fe- mshtml.tlb
// ************************************************************************ //
{$TYPEDADDRESS OFF} // Unit must be compiled without type-checked pointers. 
{$WARN SYMBOL_PLATFORM OFF}
{$WRITEABLECONST ON}
{$VARPROPSETTER ON}
{$ALIGN 4}
interface

uses Windows, ActiveX, Classes, Graphics, OleCtrls, OleServer,
  StdVCL, Variants;


// *********************************************************************//
// GUIDS declared in the TypeLibrary. Following prefixes are used:        
//   Type Libraries     : LIBID_xxxx                                      
//   CoClasses          : CLASS_xxxx                                      
//   DISPInterfaces     : DIID_xxxx                                       
//   Non-DISP interfaces: IID_xxxx                                        
// *********************************************************************//
const
  // TypeLibrary Major and minor versions
  MSHTMLMajorVersion = 4;
  MSHTMLMinorVersion = 0;

  LIBID_MSHTML: TGUID = '{3050F1C5-98B5-11CF-BB82-00AA00BDCE0B}';

  IID_IHTMLEventObj: TGUID = '{3050F32D-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLElement: TGUID = '{3050F1FF-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyle: TGUID = '{3050F25E-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFiltersCollection: TGUID = '{3050F3EE-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementBehaviorSite: TGUID = '{3050F427-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementBehavior: TGUID = '{3050F425-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementBehaviorFactory: TGUID = '{3050F429-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementBehaviorSiteOM: TGUID = '{3050F489-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementBehaviorRender: TGUID = '{3050F4AA-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementBehaviorSiteRender: TGUID = '{3050F4A7-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDOMEvent: TGUID = '{305104BA-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IEventTarget: TGUID = '{305104B9-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDOMConstructor: TGUID = '{3051049B-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyleSheetRule: TGUID = '{3050F357-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLRuleStyle: TGUID = '{3050F3CF-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLCSSStyleDeclaration: TGUID = '{30510740-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLCSSStyleDeclaration2: TGUID = '{305107D1-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLCSSStyleDeclaration3: TGUID = '{3051085C-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyleEnabled: TGUID = '{305104C2-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLCSSStyleDeclaration: TGUID = '{3059009A-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLCSSStyleDeclaration: TGUID = '{30510741-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyle2: TGUID = '{3050F4A2-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyle3: TGUID = '{3050F656-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyle4: TGUID = '{3050F816-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyle5: TGUID = '{3050F33A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyle6: TGUID = '{30510480-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLRuleStyle2: TGUID = '{3050F4AC-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLRuleStyle3: TGUID = '{3050F657-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLRuleStyle4: TGUID = '{3050F817-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLRuleStyle5: TGUID = '{3050F335-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLRuleStyle6: TGUID = '{30510471-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLStyle: TGUID = '{3050F55A-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLStyle: TGUID = '{3050F285-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLRuleStyle: TGUID = '{3050F55C-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLRuleStyle: TGUID = '{3050F3D0-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyleSheetRulesCollection: TGUID = '{3050F2E5-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyleSheet: TGUID = '{3050F2E3-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyleSheetsCollection: TGUID = '{3050F37E-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLCSSRule: TGUID = '{305106E9-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLCSSImportRule: TGUID = '{305106EA-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLCSSMediaRule: TGUID = '{305106EB-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLCSSMediaList: TGUID = '{30510731-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLCSSNamespaceRule: TGUID = '{305106EE-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLMSCSSKeyframeRule: TGUID = '{3051080C-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLMSCSSKeyframesRule: TGUID = '{3051080D-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLCSSRule: TGUID = '{3059007D-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLCSSRule: TGUID = '{305106EF-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLCSSImportRule: TGUID = '{3059007E-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLCSSImportRule: TGUID = '{305106F0-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLCSSMediaRule: TGUID = '{3059007F-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLCSSMediaRule: TGUID = '{305106F1-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLCSSMediaList: TGUID = '{30590097-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLCSSMediaList: TGUID = '{30510732-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLCSSNamespaceRule: TGUID = '{30590080-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLCSSNamespaceRule: TGUID = '{305106F2-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLMSCSSKeyframeRule: TGUID = '{305900DE-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLMSCSSKeyframeRule: TGUID = '{3051080E-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLMSCSSKeyframesRule: TGUID = '{305900DF-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLMSCSSKeyframesRule: TGUID = '{3051080F-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLRenderStyle: TGUID = '{3050F6AE-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLRenderStyle: TGUID = '{3050F58B-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLRenderStyle: TGUID = '{3050F6AA-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLCurrentStyle: TGUID = '{3050F3DB-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLCurrentStyle2: TGUID = '{3050F658-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLCurrentStyle3: TGUID = '{3050F818-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLCurrentStyle4: TGUID = '{3050F33B-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLCurrentStyle5: TGUID = '{30510481-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLCurrentStyle: TGUID = '{3050F557-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLCurrentStyle: TGUID = '{3050F3DC-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLRect: TGUID = '{3050F4A3-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLRect2: TGUID = '{3051076C-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLRectCollection: TGUID = '{3050F4A4-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLElementCollection: TGUID = '{3050F21F-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLElement2: TGUID = '{3050F434-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLAttributeCollection3: TGUID = '{30510469-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDOMAttribute: TGUID = '{3050F4B0-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDOMDocumentType: TGUID = '{30510738-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDocument7: TGUID = '{305104B8-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFramesCollection2: TGUID = '{332C4426-26CB-11D0-B483-00C04FD90119}';
  IID_IHTMLWindow2: TGUID = '{332C4427-26CB-11D0-B483-00C04FD90119}';
  IID_IHTMLImageElementFactory: TGUID = '{3050F38E-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLImgElement: TGUID = '{3050F240-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLLocation: TGUID = '{163BB1E0-6E00-11CF-837A-48DC04C10000}';
  IID_IOmHistory: TGUID = '{FECEAAA2-8405-11CF-8BA1-00AA00476DA6}';
  IID_IOmNavigator: TGUID = '{FECEAAA5-8405-11CF-8BA1-00AA00476DA6}';
  IID_IHTMLMimeTypesCollection: TGUID = '{3050F3FC-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLPluginsCollection: TGUID = '{3050F3FD-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLOpsProfile: TGUID = '{3050F401-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDocument: TGUID = '{626FC520-A41E-11CF-A731-00A0C9082637}';
  IID_IHTMLDocument2: TGUID = '{332C4425-26CB-11D0-B483-00C04FD90119}';
  IID_IHTMLSelectionObject: TGUID = '{3050F25A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLScreen: TGUID = '{3050F35C-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLOptionElementFactory: TGUID = '{3050F38C-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLOptionElement: TGUID = '{3050F211-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFormElement: TGUID = '{3050F1F7-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDOMNode: TGUID = '{3050F5DA-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLSelection: TGUID = '{305104B6-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDOMRange: TGUID = '{305104AE-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDOMProcessingInstruction: TGUID = '{30510742-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDOMNode3: TGUID = '{305106E0-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDOMNode2: TGUID = '{3050F80B-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDOMAttribute2: TGUID = '{3050F810-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDOMAttribute3: TGUID = '{30510468-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDOMAttribute4: TGUID = '{305106F9-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDOMTextNode: TGUID = '{3050F4B1-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDOMTextNode2: TGUID = '{3050F809-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDOMTextNode3: TGUID = '{3051073E-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDOMImplementation: TGUID = '{3050F80D-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDOMImplementation2: TGUID = '{3051073C-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLDOMAttribute: TGUID = '{3050F564-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLDOMAttribute: TGUID = '{3050F4B2-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLDOMTextNode: TGUID = '{3050F565-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLDOMTextNode: TGUID = '{3050F4BA-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLDOMImplementation: TGUID = '{3050F58F-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLDOMImplementation: TGUID = '{3050F80E-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLAttributeCollection: TGUID = '{3050F4C3-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLAttributeCollection2: TGUID = '{3050F80A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLAttributeCollection4: TGUID = '{305106FA-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDOMChildrenCollection: TGUID = '{3050F5AB-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDOMChildrenCollection2: TGUID = '{30510791-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLAttributeCollection: TGUID = '{3050F56C-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLAttributeCollection: TGUID = '{3050F4CC-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispStaticNodeList: TGUID = '{3050F59B-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_StaticNodeList: TGUID = '{30510467-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispDOMChildrenCollection: TGUID = '{3050F577-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_DOMChildrenCollection: TGUID = '{3050F5AA-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLElementEvents4: TGUID = '{3051075E-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLElementEvents3: TGUID = '{3050F59F-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLElementEvents2: TGUID = '{3050F60F-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLElementEvents: TGUID = '{3050F33C-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IRulesAppliedCollection: TGUID = '{305104BE-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IRulesApplied: TGUID = '{305104BF-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyleSheetRulesAppliedCollection: TGUID = '{305104C0-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLElement3: TGUID = '{3050F673-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLElement4: TGUID = '{3050F80F-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementSelector: TGUID = '{30510463-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLElementRender: TGUID = '{3050F669-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLUniqueName: TGUID = '{3050F4D0-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLElement5: TGUID = '{3051045D-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLElement6: TGUID = '{305106F8-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLElement7: TGUID = '{305107AA-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLElementAppliedStyles: TGUID = '{305104BD-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementTraversal: TGUID = '{30510736-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDatabinding: TGUID = '{3050F3F2-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLElementDefaults: TGUID = '{3050F6C9-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLDefaults: TGUID = '{3050F58C-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLDefaults: TGUID = '{3050F6C8-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTCDefaultDispatch: TGUID = '{3050F4FD-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTCPropertyBehavior: TGUID = '{3050F5DF-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTCMethodBehavior: TGUID = '{3050F631-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTCEventBehavior: TGUID = '{3050F4FF-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTCAttachBehavior: TGUID = '{3050F5F4-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTCAttachBehavior2: TGUID = '{3050F7EB-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTCDescBehavior: TGUID = '{3050F5DC-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTCDefaultDispatch: TGUID = '{3050F573-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTCDefaultDispatch: TGUID = '{3050F4FC-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTCPropertyBehavior: TGUID = '{3050F57F-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTCPropertyBehavior: TGUID = '{3050F5DE-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTCMethodBehavior: TGUID = '{3050F587-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTCMethodBehavior: TGUID = '{3050F630-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTCEventBehavior: TGUID = '{3050F574-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTCEventBehavior: TGUID = '{3050F4FE-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTCAttachBehavior: TGUID = '{3050F583-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTCAttachBehavior: TGUID = '{3050F5F5-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTCDescBehavior: TGUID = '{3050F57E-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTCDescBehavior: TGUID = '{3050F5DD-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLUrnCollection: TGUID = '{3050F5E2-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLUrnCollection: TGUID = '{3050F551-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLUrnCollection: TGUID = '{3050F580-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLGenericElement: TGUID = '{3050F4B7-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLGenericElement: TGUID = '{3050F563-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLGenericElement: TGUID = '{3050F4B8-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyleSheetRuleApplied: TGUID = '{305104C1-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyleSheetRule2: TGUID = '{305106FD-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyleSheetRulesCollection2: TGUID = '{305106E8-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLStyleSheetRule: TGUID = '{3050F50E-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLStyleSheetRule: TGUID = '{3050F3CE-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLStyleSheetRulesCollection: TGUID = '{3050F52F-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLStyleSheetRulesCollection: TGUID = '{3050F3CD-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyleSheetPage: TGUID = '{3050F7EE-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyleSheetPage2: TGUID = '{305106ED-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyleSheetPagesCollection: TGUID = '{3050F7F0-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLStyleSheetPage: TGUID = '{3050F540-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLStyleSheetPage: TGUID = '{3050F7EF-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLStyleSheetPagesCollection: TGUID = '{3050F543-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLStyleSheetPagesCollection: TGUID = '{3050F7F1-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyleSheet2: TGUID = '{3050F3D1-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyleSheet3: TGUID = '{30510496-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyleSheet4: TGUID = '{305106F4-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLStyleSheet: TGUID = '{3050F58D-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLStyleSheet: TGUID = '{3050F2E4-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyleSheetsCollection2: TGUID = '{305106E7-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLStyleSheetsCollection: TGUID = '{3050F547-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLStyleSheetsCollection: TGUID = '{3050F37F-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLLinkElementEvents2: TGUID = '{3050F61D-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLLinkElementEvents: TGUID = '{3050F3CC-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLLinkElement: TGUID = '{3050F205-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLLinkElement2: TGUID = '{3050F4E5-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLLinkElement3: TGUID = '{3050F81E-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLLinkElement4: TGUID = '{3051043A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLLinkElement5: TGUID = '{30510726-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLLinkElement: TGUID = '{3050F524-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLLinkElement: TGUID = '{3050F277-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTxtRange: TGUID = '{3050F220-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTextRangeMetrics: TGUID = '{3050F40B-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTextRangeMetrics2: TGUID = '{3050F4A6-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTxtRangeCollection: TGUID = '{3050F7ED-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLDOMRange: TGUID = '{3050F5A3-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLDOMRange: TGUID = '{305106C3-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLFormElementEvents2: TGUID = '{3050F614-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLFormElementEvents: TGUID = '{3050F364-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFormElement2: TGUID = '{3050F4F6-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFormElement3: TGUID = '{3050F836-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLSubmitData: TGUID = '{3050F645-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFormElement4: TGUID = '{3051042C-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLFormElement: TGUID = '{3050F510-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLFormElement: TGUID = '{3050F251-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLControlElementEvents2: TGUID = '{3050F612-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLControlElementEvents: TGUID = '{3050F4EA-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLControlElement: TGUID = '{3050F4E9-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTextElement: TGUID = '{3050F218-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLTextElement: TGUID = '{3050F537-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLTextElement: TGUID = '{3050F26A-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLTextContainerEvents2: TGUID = '{3050F624-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLTextContainerEvents: TGUID = '{1FF6AA72-5842-11CF-A707-00AA00C0098D}';
  IID_IHTMLTextContainer: TGUID = '{3050F230-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLControlRange: TGUID = '{3050F29C-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLControlRange2: TGUID = '{3050F65E-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLImgEvents2: TGUID = '{3050F616-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLImgEvents: TGUID = '{3050F25B-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLImgElement2: TGUID = '{3050F826-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLImgElement3: TGUID = '{30510434-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLImgElement4: TGUID = '{305107F6-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLMSImgElement: TGUID = '{30510793-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLImg: TGUID = '{3050F51C-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLImg: TGUID = '{3050F241-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLImageElementFactory: TGUID = '{3050F38F-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLBodyElement: TGUID = '{3050F1D8-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLBodyElement2: TGUID = '{3050F5C5-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLBodyElement3: TGUID = '{30510422-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLBodyElement4: TGUID = '{30510795-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLBodyElement5: TGUID = '{30510822-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLBody: TGUID = '{3050F507-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLBody: TGUID = '{3050F24A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFontElement: TGUID = '{3050F1D9-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLFontElement: TGUID = '{3050F512-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLFontElement: TGUID = '{3050F27B-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLAnchorEvents2: TGUID = '{3050F610-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLAnchorEvents: TGUID = '{3050F29D-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLAnchorElement: TGUID = '{3050F1DA-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLAnchorElement2: TGUID = '{3050F825-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLAnchorElement3: TGUID = '{3051041D-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLAnchorElement: TGUID = '{3050F502-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLAnchorElement: TGUID = '{3050F248-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLLabelEvents2: TGUID = '{3050F61C-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLLabelEvents: TGUID = '{3050F329-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLLabelElement: TGUID = '{3050F32A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLLabelElement2: TGUID = '{3050F832-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLLabelElement: TGUID = '{3050F522-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLLabelElement: TGUID = '{3050F32B-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLListElement: TGUID = '{3050F20E-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLListElement2: TGUID = '{3050F822-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLListElement: TGUID = '{3050F525-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLListElement: TGUID = '{3050F272-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLUListElement: TGUID = '{3050F1DD-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLUListElement: TGUID = '{3050F538-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLUListElement: TGUID = '{3050F269-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLOListElement: TGUID = '{3050F1DE-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLOListElement: TGUID = '{3050F52A-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLOListElement: TGUID = '{3050F270-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLLIElement: TGUID = '{3050F1E0-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLLIElement: TGUID = '{3050F523-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLLIElement: TGUID = '{3050F273-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLBlockElement: TGUID = '{3050F208-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLBlockElement2: TGUID = '{3050F823-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLBlockElement3: TGUID = '{30510494-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLBlockElement: TGUID = '{3050F506-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLBlockElement: TGUID = '{3050F281-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDivElement: TGUID = '{3050F200-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLDivElement: TGUID = '{3050F50C-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLDivElement: TGUID = '{3050F27E-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDDElement: TGUID = '{3050F1F2-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLDDElement: TGUID = '{3050F50B-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLDDElement: TGUID = '{3050F27F-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDTElement: TGUID = '{3050F1F3-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLDTElement: TGUID = '{3050F50D-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLDTElement: TGUID = '{3050F27C-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLBRElement: TGUID = '{3050F1F0-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLBRElement: TGUID = '{3050F53A-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLBRElement: TGUID = '{3050F280-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDListElement: TGUID = '{3050F1F1-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLDListElement: TGUID = '{3050F53B-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLDListElement: TGUID = '{3050F27D-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLHRElement: TGUID = '{3050F1F4-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLHRElement: TGUID = '{3050F53D-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLHRElement: TGUID = '{3050F252-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLParaElement: TGUID = '{3050F1F5-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLParaElement: TGUID = '{3050F52C-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLParaElement: TGUID = '{3050F26F-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLElementCollection2: TGUID = '{3050F5EE-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLElementCollection3: TGUID = '{3050F835-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLElementCollection4: TGUID = '{30510425-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLElementCollection: TGUID = '{3050F56B-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLElementCollection: TGUID = '{3050F4CB-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLHeaderElement: TGUID = '{3050F1F6-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLHeaderElement: TGUID = '{3050F515-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLHeaderElement: TGUID = '{3050F27A-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLSelectElementEvents2: TGUID = '{3050F622-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLSelectElementEvents: TGUID = '{3050F302-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLSelectElementEx: TGUID = '{3050F2D1-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLSelectElement: TGUID = '{3050F244-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLSelectElement2: TGUID = '{3050F5ED-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLSelectElement4: TGUID = '{3050F838-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLSelectElement5: TGUID = '{3051049D-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLSelectElement6: TGUID = '{30510760-98B6-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLSelectElement: TGUID = '{3050F531-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLSelectElement: TGUID = '{3050F245-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLWndSelectElement: TGUID = '{3050F597-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLWndSelectElement: TGUID = '{3050F2CF-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLSelectionObject2: TGUID = '{3050F7EC-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLOptionElement3: TGUID = '{3050F820-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLOptionElement4: TGUID = '{305107B4-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLOptionElement: TGUID = '{3050F52B-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLOptionElement: TGUID = '{3050F24D-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLOptionElementFactory: TGUID = '{3050F38D-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLWndOptionElement: TGUID = '{3050F598-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLWndOptionElement: TGUID = '{3050F2D0-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLButtonElementEvents2: TGUID = '{3050F617-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLButtonElementEvents: TGUID = '{3050F2B3-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLInputTextElementEvents2: TGUID = '{3050F618-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLOptionButtonElementEvents2: TGUID = '{3050F619-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLInputFileElementEvents2: TGUID = '{3050F61A-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLInputImageEvents2: TGUID = '{3050F61B-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLInputTextElementEvents: TGUID = '{3050F2A7-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLOptionButtonElementEvents: TGUID = '{3050F2BD-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLInputFileElementEvents: TGUID = '{3050F2AF-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLInputImageEvents: TGUID = '{3050F2C3-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLInputElement: TGUID = '{3050F5D2-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLInputElement2: TGUID = '{3050F821-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLInputElement3: TGUID = '{30510435-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLInputButtonElement: TGUID = '{3050F2B2-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLInputHiddenElement: TGUID = '{3050F2A4-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLInputTextElement: TGUID = '{3050F2A6-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLInputTextElement2: TGUID = '{3050F2D2-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLInputFileElement: TGUID = '{3050F2AD-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLOptionButtonElement: TGUID = '{3050F2BC-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLInputImage: TGUID = '{3050F2C2-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLInputRangeElement: TGUID = '{3050F2D4-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLInputElement: TGUID = '{3050F57D-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLInputElement: TGUID = '{3050F5D8-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTextAreaElement: TGUID = '{3050F2AA-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTextAreaElement2: TGUID = '{3050F2D3-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLTextAreaElement: TGUID = '{3050F521-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLTextAreaElement: TGUID = '{3050F2AC-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLRichtextElement: TGUID = '{3050F54D-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLRichtextElement: TGUID = '{3050F2DF-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLButtonElement: TGUID = '{3050F2BB-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLButtonElement2: TGUID = '{305106F3-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLButtonElement: TGUID = '{3050F51F-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLButtonElement: TGUID = '{3050F2C6-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLMarqueeElementEvents2: TGUID = '{3050F61F-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLMarqueeElementEvents: TGUID = '{3050F2B8-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLMarqueeElement: TGUID = '{3050F2B5-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLMarqueeElement: TGUID = '{3050F527-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLMarqueeElement: TGUID = '{3050F2B9-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLHtmlElement: TGUID = '{3050F81C-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLHeadElement: TGUID = '{3050F81D-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLHeadElement2: TGUID = '{3051042F-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTitleElement: TGUID = '{3050F322-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLMetaElement: TGUID = '{3050F203-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLMetaElement2: TGUID = '{3050F81F-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLMetaElement3: TGUID = '{30510495-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLBaseElement: TGUID = '{3050F204-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLBaseElement2: TGUID = '{30510420-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLIsIndexElement: TGUID = '{3050F206-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLIsIndexElement2: TGUID = '{3050F82F-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLNextIdElement: TGUID = '{3050F207-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLHtmlElement: TGUID = '{3050F560-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLHtmlElement: TGUID = '{3050F491-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLHeadElement: TGUID = '{3050F561-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLHeadElement: TGUID = '{3050F493-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLTitleElement: TGUID = '{3050F516-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLTitleElement: TGUID = '{3050F284-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLMetaElement: TGUID = '{3050F517-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLMetaElement: TGUID = '{3050F275-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLBaseElement: TGUID = '{3050F518-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLBaseElement: TGUID = '{3050F276-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLIsIndexElement: TGUID = '{3050F519-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLIsIndexElement: TGUID = '{3050F278-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLNextIdElement: TGUID = '{3050F51A-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLNextIdElement: TGUID = '{3050F279-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLBaseFontElement: TGUID = '{3050F202-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLBaseFontElement: TGUID = '{3050F504-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLBaseFontElement: TGUID = '{3050F282-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLUnknownElement: TGUID = '{3050F209-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLUnknownElement: TGUID = '{3050F539-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLUnknownElement: TGUID = '{3050F268-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IWebGeolocation: TGUID = '{305107C5-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_INavigatorGeolocation: TGUID = '{305107CF-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_INavigatorDoNotTrack: TGUID = '{30510804-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLHistory: TGUID = '{3050F549-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLHistory: TGUID = '{FECEAAA3-8405-11CF-8BA1-00AA00476DA6}';
  CLASS_CMimeTypes: TGUID = '{3050F3FE-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispCPlugins: TGUID = '{3050F54A-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_CPlugins: TGUID = '{3050F3FF-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_COpsProfile: TGUID = '{3050F402-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLNavigator: TGUID = '{3050F54C-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLNavigator: TGUID = '{FECEAAA6-8405-11CF-8BA1-00AA00476DA6}';
  DIID_DispHTMLLocation: TGUID = '{3050F54E-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLLocation: TGUID = '{163BB1E1-6E00-11CF-837A-48DC04C10000}';
  IID_IHTMLBookmarkCollection: TGUID = '{3050F4CE-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDataTransfer: TGUID = '{3050F4B3-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLEventObj2: TGUID = '{3050F48B-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLEventObj3: TGUID = '{3050F680-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLEventObj4: TGUID = '{3050F814-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLEventObj5: TGUID = '{30510478-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLEventObj6: TGUID = '{30510734-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispCEventObj: TGUID = '{3050F558-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_CEventObj: TGUID = '{3050F48A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyleMedia: TGUID = '{3051074B-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLStyleMedia: TGUID = '{3059009E-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLStyleMedia: TGUID = '{3051074C-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLWindowEvents3: TGUID = '{3050F5A1-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLWindowEvents2: TGUID = '{3050F625-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLWindowEvents: TGUID = '{96A0A4E0-D062-11CF-94B6-00AA0060275C}';
  IID_IHTMLWindow3: TGUID = '{3050F4AE-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFrameBase: TGUID = '{3050F311-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStorage: TGUID = '{30510474-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLPerformance: TGUID = '{3051074E-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLPerformanceNavigation: TGUID = '{30510750-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLPerformanceTiming: TGUID = '{30510752-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLApplicationCache: TGUID = '{30510828-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLScreen2: TGUID = '{3050F84A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLScreen3: TGUID = '{305104A1-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLScreen4: TGUID = '{3051076B-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLWindow4: TGUID = '{3050F6CF-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLWindow5: TGUID = '{3051040E-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLWindow6: TGUID = '{30510453-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLWindow7: TGUID = '{305104B7-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLWindow8: TGUID = '{305107AB-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_FramesCollection: TGUID = '{3050F7F6-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLScreen: TGUID = '{3050F591-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLScreen: TGUID = '{3050F35D-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLWindow2: TGUID = '{3050F55D-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLWindow2: TGUID = '{D48A6EC6-6A4A-11CF-94A7-444553540000}';
  DIID_DispHTMLWindowProxy: TGUID = '{3050F55E-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLWindowProxy: TGUID = '{3050F391-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDocumentCompatibleInfo: TGUID = '{3051041A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDocumentCompatibleInfoCollection: TGUID = '{30510418-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLDocumentCompatibleInfo: TGUID = '{3050F53E-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLDocumentCompatibleInfo: TGUID = '{3051041B-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLDocumentCompatibleInfoCollection: TGUID = '{3050F53F-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLDocumentCompatibleInfoCollection: TGUID = '{30510419-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLDocumentEvents4: TGUID = '{30510737-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLDocumentEvents3: TGUID = '{3050F5A0-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLDocumentEvents2: TGUID = '{3050F613-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLDocumentEvents: TGUID = '{3050F260-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGSVGElement: TGUID = '{305104E7-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGAnimatedLength: TGUID = '{305104D0-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGLength: TGUID = '{305104CF-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGRect: TGUID = '{305104D7-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGViewSpec: TGUID = '{305104E2-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGPoint: TGUID = '{305104F4-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGMatrix: TGUID = '{305104F6-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGElement: TGUID = '{305104C5-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGAnimatedEnumeration: TGUID = '{305104C9-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGNumber: TGUID = '{305104CB-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGAngle: TGUID = '{305104D3-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGTransform: TGUID = '{305104F7-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDOMNodeIterator: TGUID = '{30510746-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDOMTreeWalker: TGUID = '{30510748-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDocument3: TGUID = '{3050F485-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDocument4: TGUID = '{3050F69A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDocument5: TGUID = '{3050F80C-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDocument6: TGUID = '{30510417-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDocument8: TGUID = '{305107D0-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDocumentEvent: TGUID = '{305104BC-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDocumentRange: TGUID = '{305104AF-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDocumentSelector: TGUID = '{30510462-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDocumentTraversal: TGUID = '{30510744-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLDocument: TGUID = '{3050F55F-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGDocument: TGUID = '{305104E6-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLDocument: TGUID = '{25336920-03F9-11CF-8FD0-00AA00686F13}';
  DIID_DWebBridgeEvents: TGUID = '{A6D897FF-0A95-11D1-B0BA-006008166E11}';
  IID_IWebBridge: TGUID = '{AE24FDAD-03C6-11D1-8B76-0080C744F389}';
  IID_IWBScriptControl: TGUID = '{A5170870-0CF8-11D1-8B91-0080C744F389}';
  CLASS_Scriptlet: TGUID = '{AE24FDAE-03C6-11D1-8B76-0080C744F389}';
  IID_IHTMLEmbedElement: TGUID = '{3050F25F-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLEmbedElement2: TGUID = '{30510493-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLEmbed: TGUID = '{3050F52E-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IGetSVGDocument: TGUID = '{305105AB-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLEmbed: TGUID = '{3050F25D-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLMapEvents2: TGUID = '{3050F61E-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLMapEvents: TGUID = '{3050F3BA-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLAreasCollection: TGUID = '{3050F383-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLAreasCollection2: TGUID = '{3050F5EC-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLAreasCollection3: TGUID = '{3050F837-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLAreasCollection4: TGUID = '{30510492-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLMapElement: TGUID = '{3050F266-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLAreasCollection: TGUID = '{3050F56A-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLAreasCollection: TGUID = '{3050F4CA-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLMapElement: TGUID = '{3050F526-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLMapElement: TGUID = '{3050F271-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLAreaEvents2: TGUID = '{3050F611-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLAreaEvents: TGUID = '{3050F366-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLAreaElement: TGUID = '{3050F265-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLAreaElement2: TGUID = '{3051041F-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLAreaElement: TGUID = '{3050F503-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLAreaElement: TGUID = '{3050F283-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTableCaption: TGUID = '{3050F2EB-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLTableCaption: TGUID = '{3050F508-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLTableCaption: TGUID = '{3050F2EC-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLCommentElement: TGUID = '{3050F20C-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLCommentElement2: TGUID = '{3050F813-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLCommentElement3: TGUID = '{3051073F-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLCommentElement: TGUID = '{3050F50A-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLCommentElement: TGUID = '{3050F317-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLPhraseElement: TGUID = '{3050F20A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLPhraseElement2: TGUID = '{3050F824-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLPhraseElement3: TGUID = '{3051043D-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLSpanElement: TGUID = '{3050F3F3-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLPhraseElement: TGUID = '{3050F52D-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLPhraseElement: TGUID = '{3050F26E-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLSpanElement: TGUID = '{3050F548-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLSpanElement: TGUID = '{3050F3F5-98B4-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLTableEvents2: TGUID = '{3050F623-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLTableEvents: TGUID = '{3050F407-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTableSection: TGUID = '{3050F23B-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTable: TGUID = '{3050F21E-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTable2: TGUID = '{3050F4AD-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTable3: TGUID = '{3050F829-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTable4: TGUID = '{305106C2-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTableCol: TGUID = '{3050F23A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTableCol2: TGUID = '{3050F82A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTableCol3: TGUID = '{305106C4-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTableSection2: TGUID = '{3050F5C7-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTableSection3: TGUID = '{3050F82B-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTableSection4: TGUID = '{305106C5-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTableRow: TGUID = '{3050F23C-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTableRow2: TGUID = '{3050F4A1-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTableRow3: TGUID = '{3050F82C-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTableRow4: TGUID = '{305106C6-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTableRowMetrics: TGUID = '{3050F413-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTableCell: TGUID = '{3050F23D-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTableCell2: TGUID = '{3050F82D-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTableCell3: TGUID = '{305106C7-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLTable: TGUID = '{3050F532-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLTable: TGUID = '{3050F26B-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLTableCol: TGUID = '{3050F533-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLTableCol: TGUID = '{3050F26C-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLTableSection: TGUID = '{3050F534-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLTableSection: TGUID = '{3050F2E9-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLTableRow: TGUID = '{3050F535-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLTableRow: TGUID = '{3050F26D-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLTableCell: TGUID = '{3050F536-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLTableCell: TGUID = '{3050F246-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLScriptEvents2: TGUID = '{3050F621-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLScriptEvents: TGUID = '{3050F3E2-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLScriptElement: TGUID = '{3050F28B-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLScriptElement2: TGUID = '{3050F828-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLScriptElement3: TGUID = '{30510447-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLScriptElement4: TGUID = '{30510801-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLScriptElement: TGUID = '{3050F530-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLScriptElement: TGUID = '{3050F28C-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLNoShowElement: TGUID = '{3050F38A-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLNoShowElement: TGUID = '{3050F528-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLNoShowElement: TGUID = '{3050F38B-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLObjectElementEvents2: TGUID = '{3050F620-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLObjectElementEvents: TGUID = '{3050F3C4-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLObjectElement: TGUID = '{3050F24F-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLObjectElement2: TGUID = '{3050F4CD-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLObjectElement3: TGUID = '{3050F827-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLObjectElement4: TGUID = '{3051043E-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLObjectElement5: TGUID = '{305104B5-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLParamElement: TGUID = '{3050F83D-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLParamElement2: TGUID = '{30510444-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLObjectElement: TGUID = '{3050F529-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLObjectElement: TGUID = '{3050F24E-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLParamElement: TGUID = '{3050F590-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLParamElement: TGUID = '{3050F83E-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLFrameSiteEvents2: TGUID = '{3050F7FF-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLFrameSiteEvents: TGUID = '{3050F800-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFrameBase2: TGUID = '{3050F6DB-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFrameBase3: TGUID = '{3050F82E-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLFrameBase: TGUID = '{3050F541-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLFrameBase: TGUID = '{3050F312-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFrameElement: TGUID = '{3050F313-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFrameElement2: TGUID = '{3050F7F5-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFrameElement3: TGUID = '{3051042D-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLFrameElement: TGUID = '{3050F513-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLFrameElement: TGUID = '{3050F314-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLIFrameElement: TGUID = '{3050F315-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLIFrameElement2: TGUID = '{3050F4E6-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLIFrameElement3: TGUID = '{30510433-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLIFrame: TGUID = '{3050F51B-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLIFrame: TGUID = '{3050F316-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDivPosition: TGUID = '{3050F212-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFieldSetElement: TGUID = '{3050F3E7-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFieldSetElement2: TGUID = '{3050F833-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLLegendElement: TGUID = '{3050F3EA-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLLegendElement2: TGUID = '{3050F834-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLDivPosition: TGUID = '{3050F50F-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLDivPosition: TGUID = '{3050F249-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLFieldSetElement: TGUID = '{3050F545-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLFieldSetElement: TGUID = '{3050F3E8-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLLegendElement: TGUID = '{3050F546-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLLegendElement: TGUID = '{3050F3E9-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLSpanFlow: TGUID = '{3050F3E5-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLSpanFlow: TGUID = '{3050F544-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLSpanFlow: TGUID = '{3050F3E6-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFrameSetElement: TGUID = '{3050F319-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFrameSetElement2: TGUID = '{3050F5C6-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFrameSetElement3: TGUID = '{30510796-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLFrameSetSite: TGUID = '{3050F514-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLFrameSetSite: TGUID = '{3050F31A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLBGsound: TGUID = '{3050F369-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLBGsound: TGUID = '{3050F53C-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLBGsound: TGUID = '{3050F370-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFontNamesCollection: TGUID = '{3050F376-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLFontSizesCollection: TGUID = '{3050F377-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLOptionsHolder: TGUID = '{3050F378-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLStyleElementEvents2: TGUID = '{3050F615-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLStyleElementEvents: TGUID = '{3050F3CB-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyleElement: TGUID = '{3050F375-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyleElement2: TGUID = '{3051072A-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLStyleElement: TGUID = '{3050F511-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLStyleElement: TGUID = '{3050F37D-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyleFontFace: TGUID = '{3050F3D5-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStyleFontFace2: TGUID = '{305106EC-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLStyleFontFace: TGUID = '{30590081-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLStyleFontFace: TGUID = '{3050F3D4-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLXDomainRequest: TGUID = '{30510454-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLXDomainRequestFactory: TGUID = '{30510456-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispXDomainRequest: TGUID = '{3050F599-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_XDomainRequest: TGUID = '{30510455-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_XDomainRequestFactory: TGUID = '{30510457-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLStorage2: TGUID = '{30510799-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLStorage: TGUID = '{3050F59D-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLStorage: TGUID = '{30510475-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispDOMEvent: TGUID = '{3050F5A2-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_DOMEvent: TGUID = '{305104BB-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDOMUIEvent: TGUID = '{305106CA-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispDOMUIEvent: TGUID = '{30590072-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_DOMUIEvent: TGUID = '{305106CB-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDOMMouseEvent: TGUID = '{305106CE-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispDOMMouseEvent: TGUID = '{30590073-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_DOMMouseEvent: TGUID = '{305106CF-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDOMDragEvent: TGUID = '{30510761-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispDOMDragEvent: TGUID = '{305900A7-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_DOMDragEvent: TGUID = '{30510762-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDOMMouseWheelEvent: TGUID = '{305106D0-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispDOMMouseWheelEvent: TGUID = '{30590074-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_DOMMouseWheelEvent: TGUID = '{305106D1-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDOMWheelEvent: TGUID = '{305106D2-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispDOMWheelEvent: TGUID = '{30590075-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_DOMWheelEvent: TGUID = '{305106D3-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDOMTextEvent: TGUID = '{305106D4-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispDOMTextEvent: TGUID = '{30590076-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_DOMTextEvent: TGUID = '{305106D5-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDOMKeyboardEvent: TGUID = '{305106D6-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispDOMKeyboardEvent: TGUID = '{30590077-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_DOMKeyboardEvent: TGUID = '{305106D7-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDOMCompositionEvent: TGUID = '{305106D8-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispDOMCompositionEvent: TGUID = '{30590078-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_DOMCompositionEvent: TGUID = '{305106D9-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDOMMutationEvent: TGUID = '{305106DA-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispDOMMutationEvent: TGUID = '{30590079-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_DOMMutationEvent: TGUID = '{305106DB-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDOMBeforeUnloadEvent: TGUID = '{30510763-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispDOMBeforeUnloadEvent: TGUID = '{305900A8-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_DOMBeforeUnloadEvent: TGUID = '{30510764-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDOMFocusEvent: TGUID = '{305106CC-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispDOMFocusEvent: TGUID = '{30590071-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_DOMFocusEvent: TGUID = '{305106CD-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDOMCustomEvent: TGUID = '{305106DE-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispDOMCustomEvent: TGUID = '{3059007C-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_DOMCustomEvent: TGUID = '{305106DF-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ICanvasGradient: TGUID = '{30510714-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ICanvasPattern: TGUID = '{30510716-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ICanvasTextMetrics: TGUID = '{30510718-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ICanvasImageData: TGUID = '{3051071A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ICanvasPixelArray: TGUID = '{3051071C-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLCanvasElement: TGUID = '{305106E4-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ICanvasRenderingContext2D: TGUID = '{305106FF-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispCanvasGradient: TGUID = '{3059008C-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_CanvasGradient: TGUID = '{30510715-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispCanvasPattern: TGUID = '{3059008D-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_CanvasPattern: TGUID = '{30510717-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispCanvasTextMetrics: TGUID = '{3059008E-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_CanvasTextMetrics: TGUID = '{30510719-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispCanvasImageData: TGUID = '{3059008F-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_CanvasImageData: TGUID = '{3051071B-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispCanvasRenderingContext2D: TGUID = '{30590082-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_CanvasRenderingContext2D: TGUID = '{30510700-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLCanvasElement: TGUID = '{3059007B-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLCanvasElement: TGUID = '{305106E5-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDOMProgressEvent: TGUID = '{3051071E-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispDOMProgressEvent: TGUID = '{30590091-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_DOMProgressEvent: TGUID = '{3051071F-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDOMMessageEvent: TGUID = '{30510720-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispDOMMessageEvent: TGUID = '{30590092-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_DOMMessageEvent: TGUID = '{30510721-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDOMSiteModeEvent: TGUID = '{30510765-98B6-11CF-BB82-00AA00BDCE0B}';
  DIID_DispDOMSiteModeEvent: TGUID = '{305900A9-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_DOMSiteModeEvent: TGUID = '{30510766-98B6-11CF-BB82-00AA00BDCE0B}';
  IID_IDOMStorageEvent: TGUID = '{30510722-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispDOMStorageEvent: TGUID = '{30590093-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_DOMStorageEvent: TGUID = '{30510723-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IXMLHttpRequestEventTarget: TGUID = '{30510830-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispXMLHttpRequestEventTarget: TGUID = '{305900E7-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_XMLHttpRequestEventTarget: TGUID = '{30510831-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLXMLHttpRequestEvents: TGUID = '{30510498-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLXMLHttpRequest: TGUID = '{3051040A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLXMLHttpRequest2: TGUID = '{30510482-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLXMLHttpRequestFactory: TGUID = '{3051040C-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLXMLHttpRequest: TGUID = '{3050F596-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLXMLHttpRequest: TGUID = '{3051040B-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLXMLHttpRequestFactory: TGUID = '{3051040D-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGAngle: TGUID = '{30510584-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGStringList: TGUID = '{305104C8-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGAnimatedRect: TGUID = '{305104D8-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGAnimatedString: TGUID = '{305104C7-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGAnimatedBoolean: TGUID = '{305104C6-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGAnimatedTransformList: TGUID = '{305104F9-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGTransformList: TGUID = '{305104F8-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGAnimatedPreserveAspectRatio: TGUID = '{305104FB-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGPreserveAspectRatio: TGUID = '{305104FA-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGStylable: TGUID = '{305104DA-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGLocatable: TGUID = '{305104DB-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGTransformable: TGUID = '{305104DC-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGTests: TGUID = '{305104DD-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGLangSpace: TGUID = '{305104DE-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGExternalResourcesRequired: TGUID = '{305104DF-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGFitToViewBox: TGUID = '{305104E0-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGZoomAndPan: TGUID = '{305104E1-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGURIReference: TGUID = '{305104E3-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGAnimatedAngle: TGUID = '{305104D4-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGAnimatedAngle: TGUID = '{305105E4-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGAnimatedTransformList: TGUID = '{305105B1-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGAnimatedBoolean: TGUID = '{3051058B-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGAnimatedEnumeration: TGUID = '{3051058E-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGAnimatedInteger: TGUID = '{305104CA-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGAnimatedInteger: TGUID = '{3051058F-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGAnimatedLength: TGUID = '{30510581-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGLengthList: TGUID = '{305104D1-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGAnimatedLengthList: TGUID = '{305104D2-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGAnimatedLengthList: TGUID = '{30510582-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGAnimatedNumber: TGUID = '{305104CC-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGAnimatedNumber: TGUID = '{30510588-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGNumberList: TGUID = '{305104CD-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGAnimatedNumberList: TGUID = '{305104CE-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGAnimatedNumberList: TGUID = '{3051058A-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGAnimatedRect: TGUID = '{30510586-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGAnimatedString: TGUID = '{3051058C-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGClipPathElement: TGUID = '{3051052D-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGClipPathElement: TGUID = '{3059003B-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGClipPathElement: TGUID = '{305105E6-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGElement: TGUID = '{30590000-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGElement: TGUID = '{30510564-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IICCSVGColor: TGUID = '{305104D6-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGLength: TGUID = '{3051057E-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGLengthList: TGUID = '{30510580-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGMatrix: TGUID = '{305105AE-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGNumber: TGUID = '{30510587-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGNumberList: TGUID = '{30510589-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGPaint: TGUID = '{30510524-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGPatternElement: TGUID = '{3051052C-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGPatternElement: TGUID = '{3059002C-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGPatternElement: TGUID = '{305105D4-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGPathSeg: TGUID = '{305104FC-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGPathSegArcAbs: TGUID = '{30510506-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGPathSegArcRel: TGUID = '{30510507-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGPathSegClosePath: TGUID = '{305104FD-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGPathSegMovetoAbs: TGUID = '{305104FE-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGPathSegMovetoRel: TGUID = '{305104FF-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGPathSegLinetoAbs: TGUID = '{30510500-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGPathSegLinetoRel: TGUID = '{30510501-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGPathSegCurvetoCubicAbs: TGUID = '{30510502-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGPathSegCurvetoCubicRel: TGUID = '{30510503-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGPathSegCurvetoCubicSmoothAbs: TGUID = '{3051050C-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGPathSegCurvetoCubicSmoothRel: TGUID = '{3051050D-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGPathSegCurvetoQuadraticAbs: TGUID = '{30510504-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGPathSegCurvetoQuadraticRel: TGUID = '{30510505-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGPathSegCurvetoQuadraticSmoothAbs: TGUID = '{3051050E-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGPathSegCurvetoQuadraticSmoothRel: TGUID = '{3051050F-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGPathSegLinetoHorizontalAbs: TGUID = '{30510508-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGPathSegLinetoHorizontalRel: TGUID = '{30510509-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGPathSegLinetoVerticalAbs: TGUID = '{3051050A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGPathSegLinetoVerticalRel: TGUID = '{3051050B-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGPathSeg: TGUID = '{305105B3-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGPathSegArcAbs: TGUID = '{30590013-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGPathSegArcAbs: TGUID = '{305105BB-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGPathSegArcRel: TGUID = '{30590014-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGPathSegArcRel: TGUID = '{305105BC-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGPathSegClosePath: TGUID = '{30590015-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGPathSegClosePath: TGUID = '{305105BD-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGPathSegMovetoAbs: TGUID = '{30590024-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGPathSegMovetoAbs: TGUID = '{305105CC-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGPathSegMovetoRel: TGUID = '{30590025-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGPathSegMovetoRel: TGUID = '{305105CD-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGPathSegLinetoAbs: TGUID = '{3059001E-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGPathSegLinetoAbs: TGUID = '{305105C6-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGPathSegLinetoRel: TGUID = '{30590021-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGPathSegLinetoRel: TGUID = '{305105C9-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGPathSegCurvetoCubicAbs: TGUID = '{30590016-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGPathSegCurvetoCubicAbs: TGUID = '{305105BE-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGPathSegCurvetoCubicRel: TGUID = '{30590017-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGPathSegCurvetoCubicRel: TGUID = '{305105BF-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGPathSegCurvetoCubicSmoothAbs: TGUID = '{30590018-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGPathSegCurvetoCubicSmoothAbs: TGUID = '{305105C0-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGPathSegCurvetoCubicSmoothRel: TGUID = '{30590019-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGPathSegCurvetoCubicSmoothRel: TGUID = '{305105C1-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGPathSegCurvetoQuadraticAbs: TGUID = '{3059001A-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGPathSegCurvetoQuadraticAbs: TGUID = '{305105C2-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGPathSegCurvetoQuadraticRel: TGUID = '{3059001B-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGPathSegCurvetoQuadraticRel: TGUID = '{305105C3-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGPathSegCurvetoQuadraticSmoothAbs: TGUID = '{3059001C-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGPathSegCurvetoQuadraticSmoothAbs: TGUID = '{305105C4-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGPathSegCurvetoQuadraticSmoothRel: TGUID = '{3059001D-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGPathSegCurvetoQuadraticSmoothRel: TGUID = '{305105C5-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGPathSegLinetoHorizontalAbs: TGUID = '{3059001F-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGPathSegLinetoHorizontalAbs: TGUID = '{305105C7-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGPathSegLinetoHorizontalRel: TGUID = '{30590020-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGPathSegLinetoHorizontalRel: TGUID = '{305105C8-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGPathSegLinetoVerticalAbs: TGUID = '{30590022-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGPathSegLinetoVerticalAbs: TGUID = '{305105CA-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGPathSegLinetoVerticalRel: TGUID = '{30590023-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGPathSegLinetoVerticalRel: TGUID = '{305105CB-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGPathSegList: TGUID = '{30510510-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGPathSegList: TGUID = '{305105B4-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGPoint: TGUID = '{305105BA-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGPointList: TGUID = '{305104F5-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGPointList: TGUID = '{305105B9-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGRect: TGUID = '{30510583-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGStringList: TGUID = '{3051058D-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGTransform: TGUID = '{305105AF-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGSVGElement: TGUID = '{30590001-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGSVGElement: TGUID = '{30510574-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGElementInstance: TGUID = '{305104EE-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGUseElement: TGUID = '{305104ED-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGElementInstanceList: TGUID = '{305104EF-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGUseElement: TGUID = '{30590010-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGUseElement: TGUID = '{30510590-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLStyleSheetRulesAppliedCollection: TGUID = '{3050F5A6-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLStyleSheetRulesAppliedCollection: TGUID = '{EB36F845-2395-4719-B85C-D0D80E184BD9}';
  DIID_DispRulesApplied: TGUID = '{3050F5A5-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_RulesApplied: TGUID = '{7C803920-7A53-4D26-98AC-FDD23E6B9E01}';
  DIID_DispRulesAppliedCollection: TGUID = '{3050F5A4-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_RulesAppliedCollection: TGUID = '{671926EE-C3CF-40AF-BE8F-1CBAEE6486E8}';
  DIID_DispHTMLW3CComputedStyle: TGUID = '{30590070-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLW3CComputedStyle: TGUID = '{305106C8-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGTransformList: TGUID = '{305105B0-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGAnimatedPoints: TGUID = '{30510517-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGCircleElement: TGUID = '{30510514-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGEllipseElement: TGUID = '{30510515-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGLineElement: TGUID = '{30510516-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGRectElement: TGUID = '{30510513-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGPolygonElement: TGUID = '{30510519-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGPolylineElement: TGUID = '{30510518-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGCircleElement: TGUID = '{3059000A-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGCircleElement: TGUID = '{30510578-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGEllipseElement: TGUID = '{3059000B-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGEllipseElement: TGUID = '{30510579-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGLineElement: TGUID = '{3059000C-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGLineElement: TGUID = '{3051057A-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGRectElement: TGUID = '{30590009-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGRectElement: TGUID = '{30510577-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGPolygonElement: TGUID = '{3059000D-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGPolygonElement: TGUID = '{3051057B-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGPolylineElement: TGUID = '{3059000E-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGPolylineElement: TGUID = '{3051057C-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGGElement: TGUID = '{305104E8-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGGElement: TGUID = '{30590002-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGGElement: TGUID = '{3051056F-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGSymbolElement: TGUID = '{305104EC-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGSymbolElement: TGUID = '{30590004-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGSymbolElement: TGUID = '{30510571-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGDefsElement: TGUID = '{305104E9-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGDefsElement: TGUID = '{30590003-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGDefsElement: TGUID = '{30510570-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGAnimatedPathData: TGUID = '{30510511-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGPathElement: TGUID = '{30510512-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGPathElement: TGUID = '{30590011-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGPathElement: TGUID = '{305105B2-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGPreserveAspectRatio: TGUID = '{305105D0-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGTextElement: TGUID = '{3051051C-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGTextElement: TGUID = '{30590037-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGTextPositioningElement: TGUID = '{3051051B-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGTextContentElement: TGUID = '{3051051A-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGTextElement: TGUID = '{305105DF-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGAnimatedPreserveAspectRatio: TGUID = '{305105CE-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGImageElement: TGUID = '{305104F0-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGImageElement: TGUID = '{30590027-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGImageElement: TGUID = '{305105CF-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGStopElement: TGUID = '{3051052B-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGStopElement: TGUID = '{3059002D-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGStopElement: TGUID = '{305105D5-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGGradientElement: TGUID = '{30510528-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGGradientElement: TGUID = '{3059002E-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGGradientElement: TGUID = '{305105D6-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGLinearGradientElement: TGUID = '{30510529-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGLinearGradientElement: TGUID = '{3059002A-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGLinearGradientElement: TGUID = '{305105D2-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGRadialGradientElement: TGUID = '{3051052A-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGRadialGradientElement: TGUID = '{3059002B-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGRadialGradientElement: TGUID = '{305105D3-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGMaskElement: TGUID = '{3051052E-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGMaskElement: TGUID = '{3059003C-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGMaskElement: TGUID = '{305105E7-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGMarkerElement: TGUID = '{30510525-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGMarkerElement: TGUID = '{30590036-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGMarkerElement: TGUID = '{305105DE-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGZoomEvent: TGUID = '{3051054E-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGZoomEvent: TGUID = '{30590031-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGZoomEvent: TGUID = '{305105D9-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGAElement: TGUID = '{3051054B-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGAElement: TGUID = '{30590033-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGAElement: TGUID = '{305105DB-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGViewElement: TGUID = '{3051054C-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGViewElement: TGUID = '{30590034-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGViewElement: TGUID = '{305105DC-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLMediaError: TGUID = '{30510704-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTimeRanges: TGUID = '{30510705-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLTimeRanges2: TGUID = '{3051080B-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLMediaElement: TGUID = '{30510706-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLMediaElement2: TGUID = '{30510809-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLMSMediaElement: TGUID = '{30510792-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLSourceElement: TGUID = '{30510707-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLAudioElement: TGUID = '{30510708-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLVideoElement: TGUID = '{30510709-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLAudioElementFactory: TGUID = '{305107EB-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLMediaError: TGUID = '{30590086-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLMediaError: TGUID = '{3051070A-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLTimeRanges: TGUID = '{30590087-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLTimeRanges: TGUID = '{3051070B-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLMediaElement: TGUID = '{30590088-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLMediaElement: TGUID = '{3051070C-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLSourceElement: TGUID = '{30590089-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLSourceElement: TGUID = '{3051070D-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLAudioElement: TGUID = '{3059008A-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLAudioElement: TGUID = '{3051070E-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLAudioElementFactory: TGUID = '{305107EC-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLVideoElement: TGUID = '{3059008B-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLVideoElement: TGUID = '{3051070F-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGSwitchElement: TGUID = '{305104F1-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGSwitchElement: TGUID = '{30590030-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGSwitchElement: TGUID = '{305105D8-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGDescElement: TGUID = '{305104EA-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGDescElement: TGUID = '{30590005-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGDescElement: TGUID = '{30510572-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGTitleElement: TGUID = '{305104EB-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGTitleElement: TGUID = '{30590006-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGTitleElement: TGUID = '{30510573-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGMetadataElement: TGUID = '{30510560-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGMetadataElement: TGUID = '{3059002F-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGMetadataElement: TGUID = '{305105D7-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGElementInstance: TGUID = '{30590007-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGElementInstance: TGUID = '{30510575-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGElementInstanceList: TGUID = '{30590008-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGElementInstanceList: TGUID = '{30510576-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDOMException: TGUID = '{3051072B-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IRangeException: TGUID = '{3051072D-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGException: TGUID = '{3051072F-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IEventException: TGUID = '{3051073A-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispDOMException: TGUID = '{30590094-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_DOMException: TGUID = '{3051072C-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispRangeException: TGUID = '{30590095-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_RangeException: TGUID = '{3051072E-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGException: TGUID = '{30590096-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGException: TGUID = '{30510730-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispEventException: TGUID = '{30590099-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_EventException: TGUID = '{3051073B-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGScriptElement: TGUID = '{3051054D-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGScriptElement: TGUID = '{30590039-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGScriptElement: TGUID = '{305105E1-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGStyleElement: TGUID = '{305104F3-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGStyleElement: TGUID = '{30590029-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGStyleElement: TGUID = '{305105D1-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGTextContentElement: TGUID = '{30590035-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGTextContentElement: TGUID = '{305105DD-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGTextPositioningElement: TGUID = '{30590038-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGTextPositioningElement: TGUID = '{305105E0-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispDOMDocumentType: TGUID = '{30590098-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_DOMDocumentType: TGUID = '{30510739-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispNodeIterator: TGUID = '{3059009C-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_NodeIterator: TGUID = '{30510745-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispTreeWalker: TGUID = '{3059009D-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_TreeWalker: TGUID = '{30510747-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispDOMProcessingInstruction: TGUID = '{3059009B-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_DOMProcessingInstruction: TGUID = '{30510743-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLPerformance: TGUID = '{3059009F-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLPerformance: TGUID = '{3051074F-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLPerformanceNavigation: TGUID = '{305900A0-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLPerformanceNavigation: TGUID = '{30510751-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLPerformanceTiming: TGUID = '{305900A1-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLPerformanceTiming: TGUID = '{30510753-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISVGTSpanElement: TGUID = '{3051051D-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGTSpanElement: TGUID = '{3059003A-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGTSpanElement: TGUID = '{305105E2-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ITemplatePrinter: TGUID = '{3050F6B4-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ITemplatePrinter2: TGUID = '{3050F83F-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ITemplatePrinter3: TGUID = '{305104A3-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IPrintManagerTemplatePrinter: TGUID = '{F633BE14-9EFF-4C4D-929E-05717B21B3E6}';
  IID_IPrintManagerTemplatePrinter2: TGUID = '{C6403497-7493-4F09-8016-54B03E9BDA69}';
  CLASS_CTemplatePrinter: TGUID = '{3050F6B3-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispCPrintManagerTemplatePrinter: TGUID = '{305900E9-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_CPrintManagerTemplatePrinter: TGUID = '{63619F54-9D71-4C23-A08D-50D7F18DB2E9}';
  IID_ISVGTextPathElement: TGUID = '{3051051F-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispSVGTextPathElement: TGUID = '{3059003D-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_SVGTextPathElement: TGUID = '{305105EB-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDOMXmlSerializer: TGUID = '{3051077D-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDOMXmlSerializerFactory: TGUID = '{3051077F-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDOMParser: TGUID = '{30510781-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDOMParserFactory: TGUID = '{30510783-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispXMLSerializer: TGUID = '{305900AD-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_XMLSerializer: TGUID = '{3051077E-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLDOMXmlSerializerFactory: TGUID = '{30510780-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispDOMParser: TGUID = '{305900AE-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_DOMParser: TGUID = '{30510782-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_DOMParserFactory: TGUID = '{30510784-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLSemanticElement: TGUID = '{305900BA-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLSemanticElement: TGUID = '{305107B0-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLProgressElement: TGUID = '{3050F2D6-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLProgressElement: TGUID = '{305900AF-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLProgressElement: TGUID = '{3050F2D5-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDOMMSTransitionEvent: TGUID = '{305107B5-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispDOMMSTransitionEvent: TGUID = '{305900BB-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_DOMMSTransitionEvent: TGUID = '{305107B6-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDOMMSAnimationEvent: TGUID = '{305107B7-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispDOMMSAnimationEvent: TGUID = '{305900BC-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_DOMMSAnimationEvent: TGUID = '{305107B8-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IWebGeocoordinates: TGUID = '{305107C7-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IWebGeopositionError: TGUID = '{305107C9-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IWebGeoposition: TGUID = '{305107CD-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispWebGeolocation: TGUID = '{305900BD-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_WebGeolocation: TGUID = '{305107C6-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispWebGeocoordinates: TGUID = '{305900BE-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_WebGeocoordinates: TGUID = '{305107C8-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispWebGeopositionError: TGUID = '{305900BF-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_WebGeopositionError: TGUID = '{305107CA-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispWebGeoposition: TGUID = '{305900C1-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_WebGeoposition: TGUID = '{305107CE-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IClientCaps: TGUID = '{7E8BC44D-AEFF-11D1-89C2-00C04FB6BFC4}';
  CLASS_CClientCaps: TGUID = '{7E8BC44E-AEFF-11D1-89C2-00C04FB6BFC4}';
  IID_IDOMMSManipulationEvent: TGUID = '{30510816-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispDOMMSManipulationEvent: TGUID = '{305900E1-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_DOMMSManipulationEvent: TGUID = '{30510817-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDOMCloseEvent: TGUID = '{305107FF-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispDOMCloseEvent: TGUID = '{305900DC-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_DOMCloseEvent: TGUID = '{30510800-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispApplicationCache: TGUID = '{305900E4-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_applicationCache: TGUID = '{30510829-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ICSSFilterSite: TGUID = '{3050F3ED-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IMarkupPointer: TGUID = '{3050F49F-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IMarkupContainer: TGUID = '{3050F5F9-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IMarkupContainer2: TGUID = '{3050F648-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLChangeSink: TGUID = '{3050F64A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLChangeLog: TGUID = '{3050F649-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IActiveIMMApp: TGUID = '{08C0E040-62D1-11D1-9326-0060B067B86E}';
  IID_IEnumRegisterWordA: TGUID = '{08C03412-F96B-11D0-A475-00AA006BCC59}';
  IID_IEnumRegisterWordW: TGUID = '{4955DD31-B159-11D0-8FCF-00AA006BCC59}';
  IID_IEnumInputContext: TGUID = '{09B5EAB0-F997-11D1-93D4-0060B067B86E}';
  IID_ISegmentList: TGUID = '{3050F605-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISegmentListIterator: TGUID = '{3050F692-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISegment: TGUID = '{3050F683-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLCaret: TGUID = '{3050F604-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDisplayPointer: TGUID = '{3050F69E-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ILineInfo: TGUID = '{3050F7E2-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementSegment: TGUID = '{3050F68F-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHighlightSegment: TGUID = '{3050F690-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHighlightRenderingServices: TGUID = '{3050F606-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDisplayServices: TGUID = '{3050F69D-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLComputedStyle: TGUID = '{3050F6C3-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHtmlDlgSafeHelper: TGUID = '{3050F81A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IBlockFormats: TGUID = '{3050F830-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IFontNames: TGUID = '{3050F839-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ICSSFilter: TGUID = '{3050F3EC-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISecureUrlHost: TGUID = '{C81984C4-74C8-11D2-BAA9-00C04FC2040E}';
  IID_IMarkupServices: TGUID = '{3050F4A0-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IMarkupServices2: TGUID = '{3050F682-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLChangePlayback: TGUID = '{3050F6E0-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IMarkupPointer2: TGUID = '{3050F675-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IMarkupTextFrags: TGUID = '{3050F5FA-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IXMLGenericParse: TGUID = '{E4E23071-4D07-11D2-AE76-0080C73BC199}';
  IID_IHTMLEditHost: TGUID = '{3050F6A0-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLEditHost2: TGUID = '{3050F848-98B5-11CF-BB82-00AA00BDCE0D}';
  IID_ISequenceNumber: TGUID = '{3050F6C1-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IIMEServices: TGUID = '{3050F6CA-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISelectionServicesListener: TGUID = '{3050F699-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISelectionServices: TGUID = '{3050F684-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLEditDesigner: TGUID = '{3050F662-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLEditServices: TGUID = '{3050F663-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLEditServices2: TGUID = '{3050F812-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HtmlDlgSafeHelper: TGUID = '{3050F819-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_BlockFormats: TGUID = '{3050F831-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_FontNames: TGUID = '{3050F83A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDeveloperConsoleMessageReceiver: TGUID = '{30510808-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IScriptEventHandler: TGUID = '{3051083A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDebugCallbackNotificationHandler: TGUID = '{30510842-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IScriptEventHandlerSourceInfo: TGUID = '{30510841-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IDOMEventRegistrationCallback: TGUID = '{3051083B-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IEventTarget2: TGUID = '{30510839-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_HTMLNamespaceEvents: TGUID = '{3050F6BD-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLNamespace: TGUID = '{3050F6BB-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLNamespaceCollection: TGUID = '{3050F6B8-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLNamespace: TGUID = '{3050F54F-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLNamespace: TGUID = '{3050F6BC-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLNamespaceCollection: TGUID = '{3050F550-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLNamespaceCollection: TGUID = '{3050F6B9-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLPainter: TGUID = '{3050F6A6-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLPaintSite: TGUID = '{3050F6A7-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLPainterEventInfo: TGUID = '{3050F6DF-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLPainterOverlay: TGUID = '{3050F7E3-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLIPrintCollection: TGUID = '{3050F6B5-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IEnumPrivacyRecords: TGUID = '{3050F844-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IWPCBlockedUrls: TGUID = '{30510413-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDOMConstructorCollection: TGUID = '{3051049C-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDialog: TGUID = '{3050F216-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDialog2: TGUID = '{3050F5E0-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLDialog3: TGUID = '{3050F388-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLModelessInit: TGUID = '{3050F5E4-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_ThreadDialogProcParam: TGUID = '{3050F5EB-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLDialog: TGUID = '{3050F28A-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLPopup: TGUID = '{3050F666-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLPopup: TGUID = '{3050F589-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLPopup: TGUID = '{3050F667-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLAppBehavior: TGUID = '{3050F5CA-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLAppBehavior2: TGUID = '{3050F5C9-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHTMLAppBehavior3: TGUID = '{3050F5CD-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispHTMLAppBehavior: TGUID = '{3050F57C-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLAppBehavior: TGUID = '{3050F5CB-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_OldHTMLDocument: TGUID = '{D48A6EC9-6A4A-11CF-94A7-444553540000}';
  CLASS_OldHTMLFormElement: TGUID = '{0D04D285-6BEC-11CF-8B97-00AA00476DA6}';
  DIID_DispIHTMLInputButtonElement: TGUID = '{3050F51E-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLInputButtonElement: TGUID = '{3050F2B4-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispIHTMLInputTextElement: TGUID = '{3050F520-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLInputTextElement: TGUID = '{3050F2AB-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispIHTMLInputFileElement: TGUID = '{3050F542-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLInputFileElement: TGUID = '{3050F2AE-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispIHTMLOptionButtonElement: TGUID = '{3050F509-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_HTMLOptionButtonElement: TGUID = '{3050F2BE-98B5-11CF-BB82-00AA00BDCE0B}';
  DIID_DispIHTMLInputImage: TGUID = '{3050F51D-98B5-11CF-BB82-00AA00BDCE0B}';
  CLASS_htmlInputImage: TGUID = '{3050F2C4-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementNamespace: TGUID = '{3050F671-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementNamespaceTable: TGUID = '{3050F670-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementNamespaceFactory: TGUID = '{3050F672-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementNamespaceFactory2: TGUID = '{3050F805-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementNamespaceFactoryCallback: TGUID = '{3050F7FD-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementBehaviorSiteOM2: TGUID = '{3050F659-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementBehaviorCategory: TGUID = '{3050F4ED-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementBehaviorSiteCategory: TGUID = '{3050F4EE-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IEnumUnknown: TGUID = '{00000100-0000-0000-C000-000000000046}';
  IID_IElementBehaviorSubmit: TGUID = '{3050F646-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementBehaviorFocus: TGUID = '{3050F6B6-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementBehaviorLayout: TGUID = '{3050F6BA-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementBehaviorLayout2: TGUID = '{3050F846-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementBehaviorSiteLayout: TGUID = '{3050F6B7-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IElementBehaviorSiteLayout2: TGUID = '{3050F847-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IHostBehaviorInit: TGUID = '{3050F842-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ISurfacePresenter: TGUID = '{305106E2-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IViewObjectPresentSite: TGUID = '{305106E1-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ICanvasPixelArrayData: TGUID = '{305107F9-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IViewObjectPrint: TGUID = '{305106E3-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IViewObjectPresentNotifySite: TGUID = '{305107FA-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IViewObjectPresentNotify: TGUID = '{305107F8-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_ITrackingProtection: TGUID = '{30510803-98B5-11CF-BB82-00AA00BDCE0B}';
  IID_IBFCacheable: TGUID = '{30510861-98B5-11CF-BB82-00AA00BDCE0B}';

// *********************************************************************//
// Declaration of Enumerations defined in Type Library                    
// *********************************************************************//
// Constants for enum _htmlDesignMode
type
  _htmlDesignMode = TOleEnum;
const
  htmlDesignModeInherit = $FFFFFFFE;
  htmlDesignModeOn = $FFFFFFFF;
  htmlDesignModeOff = $00000000;
  htmlDesignMode_Max = $7FFFFFFF;

// Constants for enum _htmlZOrder
type
  _htmlZOrder = TOleEnum;
const
  htmlZOrderFront = $00000000;
  htmlZOrderBack = $00000001;
  htmlZOrder_Max = $7FFFFFFF;

// Constants for enum _htmlClear
type
  _htmlClear = TOleEnum;
const
  htmlClearNotSet = $00000000;
  htmlClearAll = $00000001;
  htmlClearLeft = $00000002;
  htmlClearRight = $00000003;
  htmlClearBoth = $00000004;
  htmlClearNone = $00000005;
  htmlClear_Max = $7FFFFFFF;

// Constants for enum _htmlControlAlign
type
  _htmlControlAlign = TOleEnum;
const
  htmlControlAlignNotSet = $00000000;
  htmlControlAlignLeft = $00000001;
  htmlControlAlignCenter = $00000002;
  htmlControlAlignRight = $00000003;
  htmlControlAlignTextTop = $00000004;
  htmlControlAlignAbsMiddle = $00000005;
  htmlControlAlignBaseline = $00000006;
  htmlControlAlignAbsBottom = $00000007;
  htmlControlAlignBottom = $00000008;
  htmlControlAlignMiddle = $00000009;
  htmlControlAlignTop = $0000000A;
  htmlControlAlign_Max = $7FFFFFFF;

// Constants for enum _htmlBlockAlign
type
  _htmlBlockAlign = TOleEnum;
const
  htmlBlockAlignNotSet = $00000000;
  htmlBlockAlignLeft = $00000001;
  htmlBlockAlignCenter = $00000002;
  htmlBlockAlignRight = $00000003;
  htmlBlockAlignJustify = $00000004;
  htmlBlockAlign_Max = $7FFFFFFF;

// Constants for enum _htmlReadyState
type
  _htmlReadyState = TOleEnum;
const
  htmlReadyStateuninitialized = $00000000;
  htmlReadyStateloading = $00000001;
  htmlReadyStateloaded = $00000002;
  htmlReadyStateinteractive = $00000003;
  htmlReadyStatecomplete = $00000004;
  htmlReadyState_Max = $7FFFFFFF;

// Constants for enum _htmlLoop
type
  _htmlLoop = TOleEnum;
const
  htmlLoopLoopInfinite = $FFFFFFFF;
  htmlLoop_Max = $7FFFFFFF;

// Constants for enum _mediaType
type
  _mediaType = TOleEnum;
const
  mediaTypeNotSet = $00000000;
  mediaTypeAll = $000001FF;
  mediaTypeAural = $00000001;
  mediaTypeBraille = $00000002;
  mediaTypeEmbossed = $00000004;
  mediaTypeHandheld = $00000008;
  mediaTypePrint = $00000010;
  mediaTypeProjection = $00000020;
  mediaTypeScreen = $00000040;
  mediaTypeTty = $00000080;
  mediaTypeTv = $00000100;
  mediaType_Max = $7FFFFFFF;

// Constants for enum _DomConstructor
type
  _DomConstructor = TOleEnum;
const
  DomConstructorObject = $00000000;
  DomConstructorAttr = $00000001;
  DomConstructorBehaviorUrnsCollection = $00000002;
  DomConstructorBookmarkCollection = $00000003;
  DomConstructorCompatibleInfo = $00000004;
  DomConstructorCompatibleInfoCollection = $00000005;
  DomConstructorControlRangeCollection = $00000006;
  DomConstructorCSSCurrentStyleDeclaration = $00000007;
  DomConstructorCSSRuleList = $00000008;
  DomConstructorCSSRuleStyleDeclaration = $00000009;
  DomConstructorCSSStyleDeclaration = $0000000A;
  DomConstructorCSSStyleRule = $0000000B;
  DomConstructorCSSStyleSheet = $0000000C;
  DomConstructorDataTransfer = $0000000D;
  DomConstructorDOMImplementation = $0000000E;
  DomConstructorElement = $0000000F;
  DomConstructorEvent = $00000010;
  DomConstructorHistory = $00000011;
  DomConstructorHTCElementBehaviorDefaults = $00000012;
  DomConstructorHTMLAnchorElement = $00000013;
  DomConstructorHTMLAreaElement = $00000014;
  DomConstructorHTMLAreasCollection = $00000015;
  DomConstructorHTMLBaseElement = $00000016;
  DomConstructorHTMLBaseFontElement = $00000017;
  DomConstructorHTMLBGSoundElement = $00000018;
  DomConstructorHTMLBlockElement = $00000019;
  DomConstructorHTMLBodyElement = $0000001A;
  DomConstructorHTMLBRElement = $0000001B;
  DomConstructorHTMLButtonElement = $0000001C;
  DomConstructorHTMLCollection = $0000001D;
  DomConstructorHTMLCommentElement = $0000001E;
  DomConstructorHTMLDDElement = $0000001F;
  DomConstructorHTMLDivElement = $00000020;
  DomConstructorHTMLDocument = $00000021;
  DomConstructorHTMLDListElement = $00000022;
  DomConstructorHTMLDTElement = $00000023;
  DomConstructorHTMLEmbedElement = $00000024;
  DomConstructorHTMLFieldSetElement = $00000025;
  DomConstructorHTMLFontElement = $00000026;
  DomConstructorHTMLFormElement = $00000027;
  DomConstructorHTMLFrameElement = $00000028;
  DomConstructorHTMLFrameSetElement = $00000029;
  DomConstructorHTMLGenericElement = $0000002A;
  DomConstructorHTMLHeadElement = $0000002B;
  DomConstructorHTMLHeadingElement = $0000002C;
  DomConstructorHTMLHRElement = $0000002D;
  DomConstructorHTMLHtmlElement = $0000002E;
  DomConstructorHTMLIFrameElement = $0000002F;
  DomConstructorHTMLImageElement = $00000030;
  DomConstructorHTMLInputElement = $00000031;
  DomConstructorHTMLIsIndexElement = $00000032;
  DomConstructorHTMLLabelElement = $00000033;
  DomConstructorHTMLLegendElement = $00000034;
  DomConstructorHTMLLIElement = $00000035;
  DomConstructorHTMLLinkElement = $00000036;
  DomConstructorHTMLMapElement = $00000037;
  DomConstructorHTMLMarqueeElement = $00000038;
  DomConstructorHTMLMetaElement = $00000039;
  DomConstructorHTMLModelessDialog = $0000003A;
  DomConstructorHTMLNamespaceInfo = $0000003B;
  DomConstructorHTMLNamespaceInfoCollection = $0000003C;
  DomConstructorHTMLNextIdElement = $0000003D;
  DomConstructorHTMLNoShowElement = $0000003E;
  DomConstructorHTMLObjectElement = $0000003F;
  DomConstructorHTMLOListElement = $00000040;
  DomConstructorHTMLOptionElement = $00000041;
  DomConstructorHTMLParagraphElement = $00000042;
  DomConstructorHTMLParamElement = $00000043;
  DomConstructorHTMLPhraseElement = $00000044;
  DomConstructorHTMLPluginsCollection = $00000045;
  DomConstructorHTMLPopup = $00000046;
  DomConstructorHTMLScriptElement = $00000047;
  DomConstructorHTMLSelectElement = $00000048;
  DomConstructorHTMLSpanElement = $00000049;
  DomConstructorHTMLStyleElement = $0000004A;
  DomConstructorHTMLTableCaptionElement = $0000004B;
  DomConstructorHTMLTableCellElement = $0000004C;
  DomConstructorHTMLTableColElement = $0000004D;
  DomConstructorHTMLTableElement = $0000004E;
  DomConstructorHTMLTableRowElement = $0000004F;
  DomConstructorHTMLTableSectionElement = $00000050;
  DomConstructorHTMLTextAreaElement = $00000051;
  DomConstructorHTMLTextElement = $00000052;
  DomConstructorHTMLTitleElement = $00000053;
  DomConstructorHTMLUListElement = $00000054;
  DomConstructorHTMLUnknownElement = $00000055;
  DomConstructorImage = $00000056;
  DomConstructorLocation = $00000057;
  DomConstructorNamedNodeMap = $00000058;
  DomConstructorNavigator = $00000059;
  DomConstructorNodeList = $0000005A;
  DomConstructorOption = $0000005B;
  DomConstructorScreen = $0000005C;
  DomConstructorSelection = $0000005D;
  DomConstructorStaticNodeList = $0000005E;
  DomConstructorStorage = $0000005F;
  DomConstructorStyleSheetList = $00000060;
  DomConstructorStyleSheetPage = $00000061;
  DomConstructorStyleSheetPageList = $00000062;
  DomConstructorText = $00000063;
  DomConstructorTextRange = $00000064;
  DomConstructorTextRangeCollection = $00000065;
  DomConstructorTextRectangle = $00000066;
  DomConstructorTextRectangleList = $00000067;
  DomConstructorWindow = $00000068;
  DomConstructorXDomainRequest = $00000069;
  DomConstructorXMLHttpRequest = $0000006A;
  DomConstructorMax = $0000006B;
  DomConstructor_Max = $7FFFFFFF;

// Constants for enum _styleTextTransform
type
  _styleTextTransform = TOleEnum;
const
  styleTextTransformNotSet = $00000000;
  styleTextTransformCapitalize = $00000001;
  styleTextTransformLowercase = $00000002;
  styleTextTransformUppercase = $00000003;
  styleTextTransformNone = $00000004;
  styleTextTransform_Max = $7FFFFFFF;

// Constants for enum _styleDataRepeat
type
  _styleDataRepeat = TOleEnum;
const
  styleDataRepeatNone = $00000000;
  styleDataRepeatInner = $00000001;
  styleDataRepeat_Max = $7FFFFFFF;

// Constants for enum _styleOverflow
type
  _styleOverflow = TOleEnum;
const
  styleOverflowNotSet = $00000000;
  styleOverflowAuto = $00000001;
  styleOverflowHidden = $00000002;
  styleOverflowVisible = $00000003;
  styleOverflowScroll = $00000004;
  styleOverflow_Max = $7FFFFFFF;

// Constants for enum _styleMsOverflowStyle
type
  _styleMsOverflowStyle = TOleEnum;
const
  styleMsOverflowStyleNotSet = $00000000;
  styleMsOverflowStyleAuto = $00000001;
  styleMsOverflowStyleNone = $00000002;
  styleMsOverflowStyleScrollbar = $00000003;
  styleMsOverflowStyleMsAutoHidingScrollbar = $00000004;
  styleMsOverflowStyle_Max = $7FFFFFFF;

// Constants for enum _styleTableLayout
type
  _styleTableLayout = TOleEnum;
const
  styleTableLayoutNotSet = $00000000;
  styleTableLayoutAuto = $00000001;
  styleTableLayoutFixed = $00000002;
  styleTableLayout_Max = $7FFFFFFF;

// Constants for enum _styleBorderCollapse
type
  _styleBorderCollapse = TOleEnum;
const
  styleBorderCollapseNotSet = $00000000;
  styleBorderCollapseSeparate = $00000001;
  styleBorderCollapseCollapse = $00000002;
  styleBorderCollapse_Max = $7FFFFFFF;

// Constants for enum _styleCaptionSide
type
  _styleCaptionSide = TOleEnum;
const
  styleCaptionSideNotSet = $00000000;
  styleCaptionSideTop = $00000001;
  styleCaptionSideBottom = $00000002;
  styleCaptionSideLeft = $00000003;
  styleCaptionSideRight = $00000004;
  styleCaptionSide_Max = $7FFFFFFF;

// Constants for enum _styleEmptyCells
type
  _styleEmptyCells = TOleEnum;
const
  styleEmptyCellsNotSet = $00000000;
  styleEmptyCellsShow = $00000001;
  styleEmptyCellsHide = $00000002;
  styleEmptyCells_Max = $7FFFFFFF;

// Constants for enum _styleFontStyle
type
  _styleFontStyle = TOleEnum;
const
  styleFontStyleNotSet = $00000000;
  styleFontStyleItalic = $00000001;
  styleFontStyleOblique = $00000002;
  styleFontStyleNormal = $00000003;
  styleFontStyle_Max = $7FFFFFFF;

// Constants for enum _styleFontVariant
type
  _styleFontVariant = TOleEnum;
const
  styleFontVariantNotSet = $00000000;
  styleFontVariantSmallCaps = $00000001;
  styleFontVariantNormal = $00000002;
  styleFontVariant_Max = $7FFFFFFF;

// Constants for enum _styleBackgroundRepeat
type
  _styleBackgroundRepeat = TOleEnum;
const
  styleBackgroundRepeatRepeat = $00000000;
  styleBackgroundRepeatRepeatX = $00000001;
  styleBackgroundRepeatRepeatY = $00000002;
  styleBackgroundRepeatNoRepeat = $00000003;
  styleBackgroundRepeatNotSet = $00000004;
  styleBackgroundRepeat_Max = $7FFFFFFF;

// Constants for enum _styleBackgroundAttachment
type
  _styleBackgroundAttachment = TOleEnum;
const
  styleBackgroundAttachmentFixed = $00000000;
  styleBackgroundAttachmentScroll = $00000001;
  styleBackgroundAttachmentNotSet = $00000002;
  styleBackgroundAttachment_Max = $7FFFFFFF;

// Constants for enum _styleBackgroundAttachment3
type
  _styleBackgroundAttachment3 = TOleEnum;
const
  styleBackgroundAttachment3Fixed = $00000000;
  styleBackgroundAttachment3Scroll = $00000001;
  styleBackgroundAttachment3Local = $00000002;
  styleBackgroundAttachment3NotSet = $00000003;
  styleBackgroundAttachment3_Max = $7FFFFFFF;

// Constants for enum _styleBackgroundClip
type
  _styleBackgroundClip = TOleEnum;
const
  styleBackgroundClipBorderBox = $00000000;
  styleBackgroundClipPaddingBox = $00000001;
  styleBackgroundClipContentBox = $00000002;
  styleBackgroundClipNotSet = $00000003;
  styleBackgroundClip_Max = $7FFFFFFF;

// Constants for enum _styleBackgroundOrigin
type
  _styleBackgroundOrigin = TOleEnum;
const
  styleBackgroundOriginBorderBox = $00000000;
  styleBackgroundOriginPaddingBox = $00000001;
  styleBackgroundOriginContentBox = $00000002;
  styleBackgroundOriginNotSet = $00000003;
  styleBackgroundOrigin_Max = $7FFFFFFF;

// Constants for enum _styleVerticalAlign
type
  _styleVerticalAlign = TOleEnum;
const
  styleVerticalAlignAuto = $00000000;
  styleVerticalAlignBaseline = $00000001;
  styleVerticalAlignSub = $00000002;
  styleVerticalAlignSuper = $00000003;
  styleVerticalAlignTop = $00000004;
  styleVerticalAlignTextTop = $00000005;
  styleVerticalAlignMiddle = $00000006;
  styleVerticalAlignBottom = $00000007;
  styleVerticalAlignTextBottom = $00000008;
  styleVerticalAlignInherit = $00000009;
  styleVerticalAlignNotSet = $0000000A;
  styleVerticalAlign_Max = $7FFFFFFF;

// Constants for enum _styleFontWeight
type
  _styleFontWeight = TOleEnum;
const
  styleFontWeightNotSet = $00000000;
  styleFontWeight100 = $00000001;
  styleFontWeight200 = $00000002;
  styleFontWeight300 = $00000003;
  styleFontWeight400 = $00000004;
  styleFontWeight500 = $00000005;
  styleFontWeight600 = $00000006;
  styleFontWeight700 = $00000007;
  styleFontWeight800 = $00000008;
  styleFontWeight900 = $00000009;
  styleFontWeightNormal = $0000000A;
  styleFontWeightBold = $0000000B;
  styleFontWeightBolder = $0000000C;
  styleFontWeightLighter = $0000000D;
  styleFontWeight_Max = $7FFFFFFF;

// Constants for enum _styleFontSize
type
  _styleFontSize = TOleEnum;
const
  styleFontSizeXXSmall = $00000000;
  styleFontSizeXSmall = $00000001;
  styleFontSizeSmall = $00000002;
  styleFontSizeMedium = $00000003;
  styleFontSizeLarge = $00000004;
  styleFontSizeXLarge = $00000005;
  styleFontSizeXXLarge = $00000006;
  styleFontSizeSmaller = $00000007;
  styleFontSizeLarger = $00000008;
  styleFontSize_Max = $7FFFFFFF;

// Constants for enum _styleZIndex
type
  _styleZIndex = TOleEnum;
const
  styleZIndexAuto = $80000001;
  styleZIndex_Max = $7FFFFFFF;

// Constants for enum _styleWidowsOrphans
type
  _styleWidowsOrphans = TOleEnum;
const
  styleWidowsOrphansNotSet = $80000001;
  styleWidowsOrphans_Max = $7FFFFFFF;

// Constants for enum _styleAuto
type
  _styleAuto = TOleEnum;
const
  styleAutoAuto = $00000000;
  styleAuto_Max = $7FFFFFFF;

// Constants for enum _styleNone
type
  _styleNone = TOleEnum;
const
  styleNoneNone = $00000000;
  styleNone_Max = $7FFFFFFF;

// Constants for enum _styleNormal
type
  _styleNormal = TOleEnum;
const
  styleNormalNormal = $00000000;
  styleNormal_Max = $7FFFFFFF;

// Constants for enum _styleBorderWidth
type
  _styleBorderWidth = TOleEnum;
const
  styleBorderWidthThin = $00000000;
  styleBorderWidthMedium = $00000001;
  styleBorderWidthThick = $00000002;
  styleBorderWidth_Max = $7FFFFFFF;

// Constants for enum _stylePosition
type
  _stylePosition = TOleEnum;
const
  stylePositionNotSet = $00000000;
  stylePositionstatic = $00000001;
  stylePositionrelative = $00000002;
  stylePositionabsolute = $00000003;
  stylePositionfixed = $00000004;
  stylePositionMsPage = $00000005;
  stylePositionMsDeviceFixed = $00000006;
  stylePosition_Max = $7FFFFFFF;

// Constants for enum _styleBorderStyle
type
  _styleBorderStyle = TOleEnum;
const
  styleBorderStyleNotSet = $00000000;
  styleBorderStyleDotted = $00000001;
  styleBorderStyleDashed = $00000002;
  styleBorderStyleSolid = $00000003;
  styleBorderStyleDouble = $00000004;
  styleBorderStyleGroove = $00000005;
  styleBorderStyleRidge = $00000006;
  styleBorderStyleInset = $00000007;
  styleBorderStyleOutset = $00000008;
  styleBorderStyleWindowInset = $00000009;
  styleBorderStyleNone = $0000000A;
  styleBorderStyleHidden = $0000000B;
  styleBorderStyle_Max = $7FFFFFFF;

// Constants for enum _styleOutlineStyle
type
  _styleOutlineStyle = TOleEnum;
const
  styleOutlineStyleNotSet = $00000000;
  styleOutlineStyleDotted = $00000001;
  styleOutlineStyleDashed = $00000002;
  styleOutlineStyleSolid = $00000003;
  styleOutlineStyleDouble = $00000004;
  styleOutlineStyleGroove = $00000005;
  styleOutlineStyleRidge = $00000006;
  styleOutlineStyleInset = $00000007;
  styleOutlineStyleOutset = $00000008;
  styleOutlineStyleWindowInset = $00000009;
  styleOutlineStyleNone = $0000000A;
  styleOutlineStyle_Max = $7FFFFFFF;

// Constants for enum _styleStyleFloat
type
  _styleStyleFloat = TOleEnum;
const
  styleStyleFloatNotSet = $00000000;
  styleStyleFloatLeft = $00000001;
  styleStyleFloatRight = $00000002;
  styleStyleFloatNone = $00000003;
  styleStyleFloat_Max = $7FFFFFFF;

// Constants for enum _styleDisplay
type
  _styleDisplay = TOleEnum;
const
  styleDisplayNotSet = $00000000;
  styleDisplayBlock = $00000001;
  styleDisplayInline = $00000002;
  styleDisplayListItem = $00000003;
  styleDisplayNone = $00000004;
  styleDisplayTableHeaderGroup = $00000005;
  styleDisplayTableFooterGroup = $00000006;
  styleDisplayInlineBlock = $00000007;
  styleDisplayTable = $00000008;
  styleDisplayInlineTable = $00000009;
  styleDisplayTableRow = $0000000A;
  styleDisplayTableRowGroup = $0000000B;
  styleDisplayTableColumn = $0000000C;
  styleDisplayTableColumnGroup = $0000000D;
  styleDisplayTableCell = $0000000E;
  styleDisplayTableCaption = $0000000F;
  styleDisplayRunIn = $00000010;
  styleDisplayRuby = $00000011;
  styleDisplayRubyBase = $00000012;
  styleDisplayRubyText = $00000013;
  styleDisplayRubyBaseContainer = $00000014;
  styleDisplayRubyTextContainer = $00000015;
  styleDisplayMsFlexbox = $00000016;
  styleDisplayMsInlineFlexbox = $00000017;
  styleDisplayMsGrid = $00000018;
  styleDisplayMsInlineGrid = $00000019;
  styleDisplayFlex = $0000001A;
  styleDisplayInlineFlex = $0000001B;
  styleDisplay_Max = $7FFFFFFF;

// Constants for enum _styleVisibility
type
  _styleVisibility = TOleEnum;
const
  styleVisibilityNotSet = $00000000;
  styleVisibilityInherit = $00000001;
  styleVisibilityVisible = $00000002;
  styleVisibilityHidden = $00000003;
  styleVisibilityCollapse = $00000004;
  styleVisibility_Max = $7FFFFFFF;

// Constants for enum _styleListStyleType
type
  _styleListStyleType = TOleEnum;
const
  styleListStyleTypeNotSet = $00000000;
  styleListStyleTypeDisc = $00000001;
  styleListStyleTypeCircle = $00000002;
  styleListStyleTypeSquare = $00000003;
  styleListStyleTypeDecimal = $00000004;
  styleListStyleTypeLowerRoman = $00000005;
  styleListStyleTypeUpperRoman = $00000006;
  styleListStyleTypeLowerAlpha = $00000007;
  styleListStyleTypeUpperAlpha = $00000008;
  styleListStyleTypeNone = $00000009;
  styleListStyleTypeDecimalLeadingZero = $0000000A;
  styleListStyleTypeGeorgian = $0000000B;
  styleListStyleTypeArmenian = $0000000C;
  styleListStyleTypeUpperLatin = $0000000D;
  styleListStyleTypeLowerLatin = $0000000E;
  styleListStyleTypeUpperGreek = $0000000F;
  styleListStyleTypeLowerGreek = $00000010;
  styleListStyleType_Max = $7FFFFFFF;

// Constants for enum _styleListStylePosition
type
  _styleListStylePosition = TOleEnum;
const
  styleListStylePositionNotSet = $00000000;
  styleListStylePositionInside = $00000001;
  styleListStylePositionOutSide = $00000002;
  styleListStylePosition_Max = $7FFFFFFF;

// Constants for enum _styleWhiteSpace
type
  _styleWhiteSpace = TOleEnum;
const
  styleWhiteSpaceNotSet = $00000000;
  styleWhiteSpaceNormal = $00000001;
  styleWhiteSpacePre = $00000002;
  styleWhiteSpaceNowrap = $00000003;
  styleWhiteSpacePreline = $00000004;
  styleWhiteSpacePrewrap = $00000005;
  styleWhiteSpace_Max = $7FFFFFFF;

// Constants for enum _stylePageBreak
type
  _stylePageBreak = TOleEnum;
const
  stylePageBreakNotSet = $00000000;
  stylePageBreakAuto = $00000001;
  stylePageBreakAlways = $00000002;
  stylePageBreakLeft = $00000003;
  stylePageBreakRight = $00000004;
  stylePageBreakAvoid = $00000005;
  stylePageBreak_Max = $7FFFFFFF;

// Constants for enum _stylePageBreakInside
type
  _stylePageBreakInside = TOleEnum;
const
  stylePageBreakInsideNotSet = $00000000;
  stylePageBreakInsideAuto = $00000001;
  stylePageBreakInsideAvoid = $00000002;
  stylePageBreakInside_Max = $7FFFFFFF;

// Constants for enum _styleCursor
type
  _styleCursor = TOleEnum;
const
  styleCursorAuto = $00000000;
  styleCursorCrosshair = $00000001;
  styleCursorDefault = $00000002;
  styleCursorHand = $00000003;
  styleCursorMove = $00000004;
  styleCursorE_resize = $00000005;
  styleCursorNe_resize = $00000006;
  styleCursorNw_resize = $00000007;
  styleCursorN_resize = $00000008;
  styleCursorSe_resize = $00000009;
  styleCursorSw_resize = $0000000A;
  styleCursorS_resize = $0000000B;
  styleCursorW_resize = $0000000C;
  styleCursorText = $0000000D;
  styleCursorWait = $0000000E;
  styleCursorHelp = $0000000F;
  styleCursorPointer = $00000010;
  styleCursorProgress = $00000011;
  styleCursorNot_allowed = $00000012;
  styleCursorNo_drop = $00000013;
  styleCursorVertical_text = $00000014;
  styleCursorall_scroll = $00000015;
  styleCursorcol_resize = $00000016;
  styleCursorrow_resize = $00000017;
  styleCursorNone = $00000018;
  styleCursorContext_menu = $00000019;
  styleCursorEw_resize = $0000001A;
  styleCursorNs_resize = $0000001B;
  styleCursorNesw_resize = $0000001C;
  styleCursorNwse_resize = $0000001D;
  styleCursorCell = $0000001E;
  styleCursorCopy = $0000001F;
  styleCursorAlias = $00000020;
  styleCursorcustom = $00000021;
  styleCursorNotSet = $00000022;
  styleCursor_Max = $7FFFFFFF;

// Constants for enum _styleDir
type
  _styleDir = TOleEnum;
const
  styleDirNotSet = $00000000;
  styleDirLeftToRight = $00000001;
  styleDirRightToLeft = $00000002;
  styleDirInherit = $00000003;
  styleDir_Max = $7FFFFFFF;

// Constants for enum _styleBidi
type
  _styleBidi = TOleEnum;
const
  styleBidiNotSet = $00000000;
  styleBidiNormal = $00000001;
  styleBidiEmbed = $00000002;
  styleBidiOverride = $00000003;
  styleBidiInherit = $00000004;
  styleBidi_Max = $7FFFFFFF;

// Constants for enum _styleImeMode
type
  _styleImeMode = TOleEnum;
const
  styleImeModeAuto = $00000000;
  styleImeModeActive = $00000001;
  styleImeModeInactive = $00000002;
  styleImeModeDisabled = $00000003;
  styleImeModeNotSet = $00000004;
  styleImeMode_Max = $7FFFFFFF;

// Constants for enum _styleRubyAlign
type
  _styleRubyAlign = TOleEnum;
const
  styleRubyAlignNotSet = $00000000;
  styleRubyAlignAuto = $00000001;
  styleRubyAlignLeft = $00000002;
  styleRubyAlignCenter = $00000003;
  styleRubyAlignRight = $00000004;
  styleRubyAlignDistributeLetter = $00000005;
  styleRubyAlignDistributeSpace = $00000006;
  styleRubyAlignLineEdge = $00000007;
  styleRubyAlign_Max = $7FFFFFFF;

// Constants for enum _styleRubyPosition
type
  _styleRubyPosition = TOleEnum;
const
  styleRubyPositionNotSet = $00000000;
  styleRubyPositionAbove = $00000001;
  styleRubyPositionInline = $00000002;
  styleRubyPosition_Max = $7FFFFFFF;

// Constants for enum _styleRubyOverhang
type
  _styleRubyOverhang = TOleEnum;
const
  styleRubyOverhangNotSet = $00000000;
  styleRubyOverhangAuto = $00000001;
  styleRubyOverhangWhitespace = $00000002;
  styleRubyOverhangNone = $00000003;
  styleRubyOverhang_Max = $7FFFFFFF;

// Constants for enum _styleLayoutGridChar
type
  _styleLayoutGridChar = TOleEnum;
const
  styleLayoutGridCharNotSet = $00000000;
  styleLayoutGridCharAuto = $00000001;
  styleLayoutGridCharNone = $00000002;
  styleLayoutGridChar_Max = $7FFFFFFF;

// Constants for enum _styleLayoutGridLine
type
  _styleLayoutGridLine = TOleEnum;
const
  styleLayoutGridLineNotSet = $00000000;
  styleLayoutGridLineAuto = $00000001;
  styleLayoutGridLineNone = $00000002;
  styleLayoutGridLine_Max = $7FFFFFFF;

// Constants for enum _styleLayoutGridMode
type
  _styleLayoutGridMode = TOleEnum;
const
  styleLayoutGridModeNotSet = $00000000;
  styleLayoutGridModeChar = $00000001;
  styleLayoutGridModeLine = $00000002;
  styleLayoutGridModeBoth = $00000003;
  styleLayoutGridModeNone = $00000004;
  styleLayoutGridMode_Max = $7FFFFFFF;

// Constants for enum _styleLayoutGridType
type
  _styleLayoutGridType = TOleEnum;
const
  styleLayoutGridTypeNotSet = $00000000;
  styleLayoutGridTypeLoose = $00000001;
  styleLayoutGridTypeStrict = $00000002;
  styleLayoutGridTypeFixed = $00000003;
  styleLayoutGridType_Max = $7FFFFFFF;

// Constants for enum _styleLineBreak
type
  _styleLineBreak = TOleEnum;
const
  styleLineBreakNotSet = $00000000;
  styleLineBreakNormal = $00000001;
  styleLineBreakStrict = $00000002;
  styleLineBreak_Max = $7FFFFFFF;

// Constants for enum _styleWordBreak
type
  _styleWordBreak = TOleEnum;
const
  styleWordBreakNotSet = $00000000;
  styleWordBreakNormal = $00000001;
  styleWordBreakBreakAll = $00000002;
  styleWordBreakKeepAll = $00000003;
  styleWordBreak_Max = $7FFFFFFF;

// Constants for enum _styleWordWrap
type
  _styleWordWrap = TOleEnum;
const
  styleWordWrapNotSet = $00000000;
  styleWordWrapOff = $00000001;
  styleWordWrapOn = $00000002;
  styleWordWrap_Max = $7FFFFFFF;

// Constants for enum _styleTextJustify
type
  _styleTextJustify = TOleEnum;
const
  styleTextJustifyNotSet = $00000000;
  styleTextJustifyInterWord = $00000001;
  styleTextJustifyNewspaper = $00000002;
  styleTextJustifyDistribute = $00000003;
  styleTextJustifyDistributeAllLines = $00000004;
  styleTextJustifyInterIdeograph = $00000005;
  styleTextJustifyInterCluster = $00000006;
  styleTextJustifyKashida = $00000007;
  styleTextJustifyAuto = $00000008;
  styleTextJustify_Max = $7FFFFFFF;

// Constants for enum _styleTextAlignLast
type
  _styleTextAlignLast = TOleEnum;
const
  styleTextAlignLastNotSet = $00000000;
  styleTextAlignLastLeft = $00000001;
  styleTextAlignLastCenter = $00000002;
  styleTextAlignLastRight = $00000003;
  styleTextAlignLastJustify = $00000004;
  styleTextAlignLastAuto = $00000005;
  styleTextAlignLast_Max = $7FFFFFFF;

// Constants for enum _styleTextJustifyTrim
type
  _styleTextJustifyTrim = TOleEnum;
const
  styleTextJustifyTrimNotSet = $00000000;
  styleTextJustifyTrimNone = $00000001;
  styleTextJustifyTrimPunctuation = $00000002;
  styleTextJustifyTrimPunctAndKana = $00000003;
  styleTextJustifyTrim_Max = $7FFFFFFF;

// Constants for enum _styleAccelerator
type
  _styleAccelerator = TOleEnum;
const
  styleAcceleratorFalse = $00000000;
  styleAcceleratorTrue = $00000001;
  styleAccelerator_Max = $7FFFFFFF;

// Constants for enum _styleLayoutFlow
type
  _styleLayoutFlow = TOleEnum;
const
  styleLayoutFlowHorizontal = $00000000;
  styleLayoutFlowVerticalIdeographic = $00000001;
  styleLayoutFlowNotSet = $00000002;
  styleLayoutFlow_Max = $7FFFFFFF;

// Constants for enum _styleBlockProgression
type
  _styleBlockProgression = TOleEnum;
const
  styleBlockProgressionTb = $00000000;
  styleBlockProgressionRl = $00000001;
  styleBlockProgressionBt = $00000002;
  styleBlockProgressionLr = $00000003;
  styleBlockProgressionNotSet = $00000004;
  styleBlockProgression_Max = $7FFFFFFF;

// Constants for enum _styleWritingMode
type
  _styleWritingMode = TOleEnum;
const
  styleWritingModeLrtb = $00000000;
  styleWritingModeTbrl = $00000001;
  styleWritingModeRltb = $00000002;
  styleWritingModeBtrl = $00000003;
  styleWritingModeNotSet = $00000004;
  styleWritingModeTblr = $00000005;
  styleWritingModeBtlr = $00000006;
  styleWritingModeLrbt = $00000007;
  styleWritingModeRlbt = $00000008;
  styleWritingModeLr = $00000009;
  styleWritingModeRl = $0000000A;
  styleWritingModeTb = $0000000B;
  styleWritingMode_Max = $7FFFFFFF;

// Constants for enum _styleBool
type
  _styleBool = TOleEnum;
const
  styleBoolFalse = $00000000;
  styleBoolTrue = $00000001;
  styleBool_Max = $7FFFFFFF;

// Constants for enum _styleTextUnderlinePosition
type
  _styleTextUnderlinePosition = TOleEnum;
const
  styleTextUnderlinePositionBelow = $00000000;
  styleTextUnderlinePositionAbove = $00000001;
  styleTextUnderlinePositionAuto = $00000002;
  styleTextUnderlinePositionNotSet = $00000003;
  styleTextUnderlinePosition_Max = $7FFFFFFF;

// Constants for enum _styleTextOverflow
type
  _styleTextOverflow = TOleEnum;
const
  styleTextOverflowClip = $00000000;
  styleTextOverflowEllipsis = $00000001;
  styleTextOverflowNotSet = $00000002;
  styleTextOverflow_Max = $7FFFFFFF;

// Constants for enum _styleInterpolation
type
  _styleInterpolation = TOleEnum;
const
  styleInterpolationNotSet = $00000000;
  styleInterpolationNN = $00000001;
  styleInterpolationBCH = $00000002;
  styleInterpolation_Max = $7FFFFFFF;

// Constants for enum _styleBoxSizing
type
  _styleBoxSizing = TOleEnum;
const
  styleBoxSizingNotSet = $00000000;
  styleBoxSizingContentBox = $00000001;
  styleBoxSizingBorderBox = $00000002;
  styleBoxSizing_Max = $7FFFFFFF;

// Constants for enum _styleFlex
type
  _styleFlex = TOleEnum;
const
  styleFlexNone = $00000000;
  styleFlexNotSet = $00000001;
  styleFlex_Max = $7FFFFFFF;

// Constants for enum _styleFlexBasis
type
  _styleFlexBasis = TOleEnum;
const
  styleFlexBasisAuto = $00000000;
  styleFlexBasisNotSet = $00000001;
  styleFlexBasis_Max = $7FFFFFFF;

// Constants for enum _styleFlexDirection
type
  _styleFlexDirection = TOleEnum;
const
  styleFlexDirectionRow = $00000000;
  styleFlexDirectionRowReverse = $00000001;
  styleFlexDirectionColumn = $00000002;
  styleFlexDirectionColumnReverse = $00000003;
  styleFlexDirectionNotSet = $00000004;
  styleFlexDirection_Max = $7FFFFFFF;

// Constants for enum _styleFlexWrap
type
  _styleFlexWrap = TOleEnum;
const
  styleFlexWrapNowrap = $00000000;
  styleFlexWrapWrap = $00000001;
  styleFlexWrapWrapReverse = $00000002;
  styleFlexWrapNotSet = $00000003;
  styleFlexWrap_Max = $7FFFFFFF;

// Constants for enum _styleMsFlexAlign
type
  _styleMsFlexAlign = TOleEnum;
const
  styleMsFlexAlignStart = $00000000;
  styleMsFlexAlignEnd = $00000001;
  styleMsFlexAlignCenter = $00000002;
  styleMsFlexAlignBaseline = $00000003;
  styleMsFlexAlignStretch = $00000004;
  styleMsFlexAlignNotSet = $00000005;
  styleMsFlexAlign_Max = $7FFFFFFF;

// Constants for enum _styleAlignItems
type
  _styleAlignItems = TOleEnum;
const
  styleAlignItemsFlexStart = $00000000;
  styleAlignItemsFlexEnd = $00000001;
  styleAlignItemsCenter = $00000002;
  styleAlignItemsBaseline = $00000003;
  styleAlignItemsStretch = $00000004;
  styleAlignItemsNotSet = $00000005;
  styleAlignItems_Max = $7FFFFFFF;

// Constants for enum _styleMsFlexItemAlign
type
  _styleMsFlexItemAlign = TOleEnum;
const
  styleMsFlexItemAlignStart = $00000000;
  styleMsFlexItemAlignEnd = $00000001;
  styleMsFlexItemAlignCenter = $00000002;
  styleMsFlexItemAlignBaseline = $00000003;
  styleMsFlexItemAlignStretch = $00000004;
  styleMsFlexItemAlignAuto = $00000005;
  styleMsFlexItemAlignNotSet = $00000006;
  styleMsFlexItemAlign_Max = $7FFFFFFF;

// Constants for enum _styleAlignSelf
type
  _styleAlignSelf = TOleEnum;
const
  styleAlignSelfFlexStart = $00000000;
  styleAlignSelfFlexEnd = $00000001;
  styleAlignSelfCenter = $00000002;
  styleAlignSelfBaseline = $00000003;
  styleAlignSelfStretch = $00000004;
  styleAlignSelfAuto = $00000005;
  styleAlignSelfNotSet = $00000006;
  styleAlignSelf_Max = $7FFFFFFF;

// Constants for enum _styleMsFlexPack
type
  _styleMsFlexPack = TOleEnum;
const
  styleMsFlexPackStart = $00000000;
  styleMsFlexPackEnd = $00000001;
  styleMsFlexPackCenter = $00000002;
  styleMsFlexPackJustify = $00000003;
  styleMsFlexPackDistribute = $00000004;
  styleMsFlexPackNotSet = $00000005;
  styleMsFlexPack_Max = $7FFFFFFF;

// Constants for enum _styleJustifyContent
type
  _styleJustifyContent = TOleEnum;
const
  styleJustifyContentFlexStart = $00000000;
  styleJustifyContentFlexEnd = $00000001;
  styleJustifyContentCenter = $00000002;
  styleJustifyContentSpaceBetween = $00000003;
  styleJustifyContentSpaceAround = $00000004;
  styleJustifyContentNotSet = $00000005;
  styleJustifyContent_Max = $7FFFFFFF;

// Constants for enum _styleMsFlexLinePack
type
  _styleMsFlexLinePack = TOleEnum;
const
  styleMsFlexLinePackStart = $00000000;
  styleMsFlexLinePackEnd = $00000001;
  styleMsFlexLinePackCenter = $00000002;
  styleMsFlexLinePackJustify = $00000003;
  styleMsFlexLinePackDistribute = $00000004;
  styleMsFlexLinePackStretch = $00000005;
  styleMsFlexLinePackNotSet = $00000006;
  styleMsFlexLinePack_Max = $7FFFFFFF;

// Constants for enum _styleAlignContent
type
  _styleAlignContent = TOleEnum;
const
  styleAlignContentFlexStart = $00000000;
  styleAlignContentFlexEnd = $00000001;
  styleAlignContentCenter = $00000002;
  styleAlignContentSpaceBetween = $00000003;
  styleAlignContentSpaceAround = $00000004;
  styleAlignContentStretch = $00000005;
  styleAlignContentNotSet = $00000006;
  styleAlignContent_Max = $7FFFFFFF;

// Constants for enum _styleColumnFill
type
  _styleColumnFill = TOleEnum;
const
  styleColumnFillAuto = $00000000;
  styleColumnFillBalance = $00000001;
  styleColumnFillNotSet = $00000002;
  styleColumnFill_Max = $7FFFFFFF;

// Constants for enum _styleColumnSpan
type
  _styleColumnSpan = TOleEnum;
const
  styleColumnSpanOne = $00000000;
  styleColumnSpanAll = $00000001;
  styleColumnSpanNotSet = $00000002;
  styleColumnSpan_Max = $7FFFFFFF;

// Constants for enum _styleBreak
type
  _styleBreak = TOleEnum;
const
  styleBreakNotSet = $00000000;
  styleBreakAuto = $00000001;
  styleBreakAlways = $00000002;
  styleBreakAvoid = $00000003;
  styleBreakLeft = $00000004;
  styleBreakRight = $00000005;
  styleBreakPage = $00000006;
  styleBreakColumn = $00000007;
  styleBreakAvoidPage = $00000008;
  styleBreakAvoidColumn = $00000009;
  styleBreak_Max = $7FFFFFFF;

// Constants for enum _styleBreakInside
type
  _styleBreakInside = TOleEnum;
const
  styleBreakInsideNotSet = $00000000;
  styleBreakInsideAuto = $00000001;
  styleBreakInsideAvoid = $00000002;
  styleBreakInsideAvoidPage = $00000003;
  styleBreakInsideAvoidColumn = $00000004;
  styleBreakInside_Max = $7FFFFFFF;

// Constants for enum _styleMsScrollChaining
type
  _styleMsScrollChaining = TOleEnum;
const
  styleMsScrollChainingNotSet = $00000000;
  styleMsScrollChainingNone = $00000001;
  styleMsScrollChainingChained = $00000002;
  styleMsScrollChaining_Max = $7FFFFFFF;

// Constants for enum _styleMsContentZooming
type
  _styleMsContentZooming = TOleEnum;
const
  styleMsContentZoomingNotSet = $00000000;
  styleMsContentZoomingNone = $00000001;
  styleMsContentZoomingZoom = $00000002;
  styleMsContentZooming_Max = $7FFFFFFF;

// Constants for enum _styleMsContentZoomSnapType
type
  _styleMsContentZoomSnapType = TOleEnum;
const
  styleMsContentZoomSnapTypeNotSet = $00000000;
  styleMsContentZoomSnapTypeNone = $00000001;
  styleMsContentZoomSnapTypeMandatory = $00000002;
  styleMsContentZoomSnapTypeProximity = $00000003;
  styleMsContentZoomSnapType_Max = $7FFFFFFF;

// Constants for enum _styleMsScrollRails
type
  _styleMsScrollRails = TOleEnum;
const
  styleMsScrollRailsNotSet = $00000000;
  styleMsScrollRailsNone = $00000001;
  styleMsScrollRailsRailed = $00000002;
  styleMsScrollRails_Max = $7FFFFFFF;

// Constants for enum _styleMsContentZoomChaining
type
  _styleMsContentZoomChaining = TOleEnum;
const
  styleMsContentZoomChainingNotSet = $00000000;
  styleMsContentZoomChainingNone = $00000001;
  styleMsContentZoomChainingChained = $00000002;
  styleMsContentZoomChaining_Max = $7FFFFFFF;

// Constants for enum _styleMsScrollSnapType
type
  _styleMsScrollSnapType = TOleEnum;
const
  styleMsScrollSnapTypeNotSet = $00000000;
  styleMsScrollSnapTypeNone = $00000001;
  styleMsScrollSnapTypeMandatory = $00000002;
  styleMsScrollSnapTypeProximity = $00000003;
  styleMsScrollSnapType_Max = $7FFFFFFF;

// Constants for enum _styleGridColumn
type
  _styleGridColumn = TOleEnum;
const
  styleGridColumnNotSet = $00000000;
  styleGridColumn_Max = $7FFFFFFF;

// Constants for enum _styleGridColumnAlign
type
  _styleGridColumnAlign = TOleEnum;
const
  styleGridColumnAlignCenter = $00000000;
  styleGridColumnAlignEnd = $00000001;
  styleGridColumnAlignStart = $00000002;
  styleGridColumnAlignStretch = $00000003;
  styleGridColumnAlignNotSet = $00000004;
  styleGridColumnAlign_Max = $7FFFFFFF;

// Constants for enum _styleGridColumnSpan
type
  _styleGridColumnSpan = TOleEnum;
const
  styleGridColumnSpanNotSet = $00000000;
  styleGridColumnSpan_Max = $7FFFFFFF;

// Constants for enum _styleGridRow
type
  _styleGridRow = TOleEnum;
const
  styleGridRowNotSet = $00000000;
  styleGridRow_Max = $7FFFFFFF;

// Constants for enum _styleGridRowAlign
type
  _styleGridRowAlign = TOleEnum;
const
  styleGridRowAlignCenter = $00000000;
  styleGridRowAlignEnd = $00000001;
  styleGridRowAlignStart = $00000002;
  styleGridRowAlignStretch = $00000003;
  styleGridRowAlignNotSet = $00000004;
  styleGridRowAlign_Max = $7FFFFFFF;

// Constants for enum _styleGridRowSpan
type
  _styleGridRowSpan = TOleEnum;
const
  styleGridRowSpanNotSet = $00000000;
  styleGridRowSpan_Max = $7FFFFFFF;

// Constants for enum _styleWrapThrough
type
  _styleWrapThrough = TOleEnum;
const
  styleWrapThroughNotSet = $00000000;
  styleWrapThroughWrap = $00000001;
  styleWrapThroughNone = $00000002;
  styleWrapThrough_Max = $7FFFFFFF;

// Constants for enum _styleWrapFlow
type
  _styleWrapFlow = TOleEnum;
const
  styleWrapFlowNotSet = $00000000;
  styleWrapFlowAuto = $00000001;
  styleWrapFlowBoth = $00000002;
  styleWrapFlowStart = $00000003;
  styleWrapFlowEnd = $00000004;
  styleWrapFlowClear = $00000005;
  styleWrapFlowMinimum = $00000006;
  styleWrapFlowMaximum = $00000007;
  styleWrapFlow_Max = $7FFFFFFF;

// Constants for enum _styleAlignmentBaseline
type
  _styleAlignmentBaseline = TOleEnum;
const
  styleAlignmentBaselineNotSet = $00000000;
  styleAlignmentBaselineAfterEdge = $00000001;
  styleAlignmentBaselineAlphabetic = $00000002;
  styleAlignmentBaselineAuto = $00000003;
  styleAlignmentBaselineBaseline = $00000004;
  styleAlignmentBaselineBeforeEdge = $00000005;
  styleAlignmentBaselineCentral = $00000006;
  styleAlignmentBaselineHanging = $00000007;
  styleAlignmentBaselineMathematical = $00000008;
  styleAlignmentBaselineMiddle = $00000009;
  styleAlignmentBaselineTextAfterEdge = $0000000A;
  styleAlignmentBaselineTextBeforeEdge = $0000000B;
  styleAlignmentBaselineIdeographic = $0000000C;
  styleAlignmentBaseline_Max = $7FFFFFFF;

// Constants for enum _styleBaselineShift
type
  _styleBaselineShift = TOleEnum;
const
  styleBaselineShiftBaseline = $00000000;
  styleBaselineShiftSub = $00000001;
  styleBaselineShiftSuper = $00000002;
  styleBaselineShift_Max = $7FFFFFFF;

// Constants for enum _styleClipRule
type
  _styleClipRule = TOleEnum;
const
  styleClipRuleNotSet = $00000000;
  styleClipRuleNonZero = $00000001;
  styleClipRuleEvenOdd = $00000002;
  styleClipRule_Max = $7FFFFFFF;

// Constants for enum _styleDominantBaseline
type
  _styleDominantBaseline = TOleEnum;
const
  styleDominantBaselineNotSet = $00000000;
  styleDominantBaselineAlphabetic = $00000001;
  styleDominantBaselineAuto = $00000002;
  styleDominantBaselineCentral = $00000003;
  styleDominantBaselineHanging = $00000004;
  styleDominantBaselineIdeographic = $00000005;
  styleDominantBaselineMathematical = $00000006;
  styleDominantBaselineMiddle = $00000007;
  styleDominantBaselineNoChange = $00000008;
  styleDominantBaselineResetSize = $00000009;
  styleDominantBaselineTextAfterEdge = $0000000A;
  styleDominantBaselineTextBeforeEdge = $0000000B;
  styleDominantBaselineUseScript = $0000000C;
  styleDominantBaseline_Max = $7FFFFFFF;

// Constants for enum _styleFillRule
type
  _styleFillRule = TOleEnum;
const
  styleFillRuleNotSet = $00000000;
  styleFillRuleNonZero = $00000001;
  styleFillRuleEvenOdd = $00000002;
  styleFillRule_Max = $7FFFFFFF;

// Constants for enum _styleFontStretch
type
  _styleFontStretch = TOleEnum;
const
  styleFontStretchNotSet = $00000000;
  styleFontStretchWider = $00000001;
  styleFontStretchNarrower = $00000002;
  styleFontStretchUltraCondensed = $00000003;
  styleFontStretchExtraCondensed = $00000004;
  styleFontStretchCondensed = $00000005;
  styleFontStretchSemiCondensed = $00000006;
  styleFontStretchNormal = $00000007;
  styleFontStretchSemiExpanded = $00000008;
  styleFontStretchExpanded = $00000009;
  styleFontStretchExtraExpanded = $0000000A;
  styleFontStretchUltraExpanded = $0000000B;
  styleFontStretch_Max = $7FFFFFFF;

// Constants for enum _stylePointerEvents
type
  _stylePointerEvents = TOleEnum;
const
  stylePointerEventsNotSet = $00000000;
  stylePointerEventsVisiblePainted = $00000001;
  stylePointerEventsVisibleFill = $00000002;
  stylePointerEventsVisibleStroke = $00000003;
  stylePointerEventsVisible = $00000004;
  stylePointerEventsPainted = $00000005;
  stylePointerEventsFill = $00000006;
  stylePointerEventsStroke = $00000007;
  stylePointerEventsAll = $00000008;
  stylePointerEventsNone = $00000009;
  stylePointerEventsAuto = $0000000A;
  stylePointerEvents_Max = $7FFFFFFF;

// Constants for enum _styleEnableBackground
type
  _styleEnableBackground = TOleEnum;
const
  styleEnableBackgroundNotSet = $00000000;
  styleEnableBackgroundAccumulate = $00000001;
  styleEnableBackgroundNew = $00000002;
  styleEnableBackgroundInherit = $00000003;
  styleEnableBackground_Max = $7FFFFFFF;

// Constants for enum _styleStrokeLinecap
type
  _styleStrokeLinecap = TOleEnum;
const
  styleStrokeLinecapNotSet = $00000000;
  styleStrokeLinecapButt = $00000001;
  styleStrokeLinecapRound = $00000002;
  styleStrokeLinecapSquare = $00000003;
  styleStrokeLinecap_Max = $7FFFFFFF;

// Constants for enum _styleStrokeLinejoin
type
  _styleStrokeLinejoin = TOleEnum;
const
  styleStrokeLinejoinNotSet = $00000000;
  styleStrokeLinejoinMiter = $00000001;
  styleStrokeLinejoinRound = $00000002;
  styleStrokeLinejoinBevel = $00000003;
  styleStrokeLinejoin_Max = $7FFFFFFF;

// Constants for enum _styleTextAnchor
type
  _styleTextAnchor = TOleEnum;
const
  styleTextAnchorNotSet = $00000000;
  styleTextAnchorStart = $00000001;
  styleTextAnchorMiddle = $00000002;
  styleTextAnchorEnd = $00000003;
  styleTextAnchor_Max = $7FFFFFFF;

// Constants for enum _styleAttrType
type
  _styleAttrType = TOleEnum;
const
  styleAttrTypeString = $00000000;
  styleAttrTypeColor = $00000001;
  styleAttrTypeUrl = $00000002;
  styleAttrTypeInteger = $00000003;
  styleAttrTypeNumber = $00000004;
  styleAttrTypeLength = $00000005;
  styleAttrTypePx = $00000006;
  styleAttrTypeEm = $00000007;
  styleAttrTypeEx = $00000008;
  styleAttrTypeIn = $00000009;
  styleAttrTypeCm = $0000000A;
  styleAttrTypeMm = $0000000B;
  styleAttrTypePt = $0000000C;
  styleAttrTypePc = $0000000D;
  styleAttrTypeRem = $0000000E;
  styleAttrTypeCh = $0000000F;
  styleAttrTypeVh = $00000010;
  styleAttrTypeVw = $00000011;
  styleAttrTypeVmin = $00000012;
  styleAttrTypePercentage = $00000013;
  styleAttrTypeAngle = $00000014;
  styleAttrTypeDeg = $00000015;
  styleAttrTypeRad = $00000016;
  styleAttrTypeGrad = $00000017;
  styleAttrTypeTime = $00000018;
  styleAttrTypeS = $00000019;
  styleAttrTypeMs = $0000001A;
  styleAttrType_Max = $7FFFFFFF;

// Constants for enum _styleInitialColor
type
  _styleInitialColor = TOleEnum;
const
  styleInitialColorNoInitial = $00000000;
  styleInitialColorColorProperty = $00000001;
  styleInitialColorTransparent = $00000002;
  styleInitialColorInvert = $00000003;
  styleInitialColor_Max = $7FFFFFFF;

// Constants for enum _styleInitialString
type
  _styleInitialString = TOleEnum;
const
  styleInitialStringNoInitial = $00000000;
  styleInitialStringNone = $00000001;
  styleInitialStringAuto = $00000002;
  styleInitialStringNormal = $00000003;
  styleInitialString_Max = $7FFFFFFF;

// Constants for enum _styleTransformOriginX
type
  _styleTransformOriginX = TOleEnum;
const
  styleTransformOriginXNotSet = $00000000;
  styleTransformOriginXLeft = $00000001;
  styleTransformOriginXCenter = $00000002;
  styleTransformOriginXRight = $00000003;
  styleTransformOriginX_Max = $7FFFFFFF;

// Constants for enum _styleTransformOriginY
type
  _styleTransformOriginY = TOleEnum;
const
  styleTransformOriginYNotSet = $00000000;
  styleTransformOriginYTop = $00000001;
  styleTransformOriginYCenter = $00000002;
  styleTransformOriginYBottom = $00000003;
  styleTransformOriginY_Max = $7FFFFFFF;

// Constants for enum _stylePerspectiveOriginX
type
  _stylePerspectiveOriginX = TOleEnum;
const
  stylePerspectiveOriginXNotSet = $00000000;
  stylePerspectiveOriginXLeft = $00000001;
  stylePerspectiveOriginXCenter = $00000002;
  stylePerspectiveOriginXRight = $00000003;
  stylePerspectiveOriginX_Max = $7FFFFFFF;

// Constants for enum _stylePerspectiveOriginY
type
  _stylePerspectiveOriginY = TOleEnum;
const
  stylePerspectiveOriginYNotSet = $00000000;
  stylePerspectiveOriginYTop = $00000001;
  stylePerspectiveOriginYCenter = $00000002;
  stylePerspectiveOriginYBottom = $00000003;
  stylePerspectiveOriginY_Max = $7FFFFFFF;

// Constants for enum _styleTransformStyle
type
  _styleTransformStyle = TOleEnum;
const
  styleTransformStyleFlat = $00000000;
  styleTransformStyleNotSet = $00000001;
  styleTransformStyle_Max = $7FFFFFFF;

// Constants for enum _styleBackfaceVisibility
type
  _styleBackfaceVisibility = TOleEnum;
const
  styleBackfaceVisibilityVisible = $00000000;
  styleBackfaceVisibilityHidden = $00000001;
  styleBackfaceVisibilityNotSet = $00000002;
  styleBackfaceVisibility_Max = $7FFFFFFF;

// Constants for enum _styleTextSizeAdjust
type
  _styleTextSizeAdjust = TOleEnum;
const
  styleTextSizeAdjustNone = $00000000;
  styleTextSizeAdjustAuto = $00000001;
  styleTextSizeAdjust_Max = $7FFFFFFF;

// Constants for enum _styleColorInterpolationFilters
type
  _styleColorInterpolationFilters = TOleEnum;
const
  styleColorInterpolationFiltersAuto = $00000000;
  styleColorInterpolationFiltersSRgb = $00000001;
  styleColorInterpolationFiltersLinearRgb = $00000002;
  styleColorInterpolationFiltersNotSet = $00000003;
  styleColorInterpolationFilters_Max = $7FFFFFFF;

// Constants for enum _styleHyphens
type
  _styleHyphens = TOleEnum;
const
  styleHyphensNone = $00000000;
  styleHyphensManual = $00000001;
  styleHyphensAuto = $00000002;
  styleHyphensNotSet = $00000003;
  styleHyphens_Max = $7FFFFFFF;

// Constants for enum _styleHyphenateLimitLines
type
  _styleHyphenateLimitLines = TOleEnum;
const
  styleHyphenateLimitLinesNoLimit = $00000000;
  styleHyphenateLimitLines_Max = $7FFFFFFF;

// Constants for enum _styleMsAnimationPlayState
type
  _styleMsAnimationPlayState = TOleEnum;
const
  styleMsAnimationPlayStateRunning = $00000000;
  styleMsAnimationPlayStatePaused = $00000001;
  styleMsAnimationPlayStateNotSet = $00000002;
  styleMsAnimationPlayState_Max = $7FFFFFFF;

// Constants for enum _styleMsAnimationDirection
type
  _styleMsAnimationDirection = TOleEnum;
const
  styleMsAnimationDirectionNormal = $00000000;
  styleMsAnimationDirectionAlternate = $00000001;
  styleMsAnimationDirectionReverse = $00000002;
  styleMsAnimationDirectionAlternateReverse = $00000003;
  styleMsAnimationDirectionNotSet = $00000004;
  styleMsAnimationDirection_Max = $7FFFFFFF;

// Constants for enum _styleMsAnimationFillMode
type
  _styleMsAnimationFillMode = TOleEnum;
const
  styleMsAnimationFillModeNone = $00000000;
  styleMsAnimationFillModeForwards = $00000001;
  styleMsAnimationFillModeBackwards = $00000002;
  styleMsAnimationFillModeBoth = $00000003;
  styleMsAnimationFillModeNotSet = $00000004;
  styleMsAnimationFillMode_Max = $7FFFFFFF;

// Constants for enum _styleMsHighContrastAdjust
type
  _styleMsHighContrastAdjust = TOleEnum;
const
  styleMsHighContrastAdjustNotSet = $00000000;
  styleMsHighContrastAdjustAuto = $00000001;
  styleMsHighContrastAdjustNone = $00000002;
  styleMsHighContrastAdjust_Max = $7FFFFFFF;

// Constants for enum _styleMsUserSelect
type
  _styleMsUserSelect = TOleEnum;
const
  styleMsUserSelectAuto = $00000000;
  styleMsUserSelectText = $00000001;
  styleMsUserSelectElement = $00000002;
  styleMsUserSelectNone = $00000003;
  styleMsUserSelectNotSet = $00000004;
  styleMsUserSelect_Max = $7FFFFFFF;

// Constants for enum _styleMsTouchAction
type
  _styleMsTouchAction = TOleEnum;
const
  styleMsTouchActionNotSet = $FFFFFFFF;
  styleMsTouchActionNone = $00000000;
  styleMsTouchActionAuto = $00000001;
  styleMsTouchActionManipulation = $00000002;
  styleMsTouchActionDoubleTapZoom = $00000004;
  styleMsTouchActionPanX = $00000008;
  styleMsTouchActionPanY = $00000010;
  styleMsTouchActionPinchZoom = $00000020;
  styleMsTouchActionCrossSlideX = $00000040;
  styleMsTouchActionCrossSlideY = $00000080;
  styleMsTouchAction_Max = $7FFFFFFF;

// Constants for enum _styleMsTouchSelect
type
  _styleMsTouchSelect = TOleEnum;
const
  styleMsTouchSelectGrippers = $00000000;
  styleMsTouchSelectNone = $00000001;
  styleMsTouchSelectNotSet = $00000002;
  styleMsTouchSelect_Max = $7FFFFFFF;

// Constants for enum _styleMsScrollTranslation
type
  _styleMsScrollTranslation = TOleEnum;
const
  styleMsScrollTranslationNotSet = $00000000;
  styleMsScrollTranslationNone = $00000001;
  styleMsScrollTranslationVtoH = $00000002;
  styleMsScrollTranslation_Max = $7FFFFFFF;

// Constants for enum _styleBorderImageRepeat
type
  _styleBorderImageRepeat = TOleEnum;
const
  styleBorderImageRepeatStretch = $00000000;
  styleBorderImageRepeatRepeat = $00000001;
  styleBorderImageRepeatRound = $00000002;
  styleBorderImageRepeatSpace = $00000003;
  styleBorderImageRepeatNotSet = $00000004;
  styleBorderImageRepeat_Max = $7FFFFFFF;

// Constants for enum _styleBorderImageSliceFill
type
  _styleBorderImageSliceFill = TOleEnum;
const
  styleBorderImageSliceFillNotSet = $00000000;
  styleBorderImageSliceFillFill = $00000001;
  styleBorderImageSliceFill_Max = $7FFFFFFF;

// Constants for enum _styleMsImeAlign
type
  _styleMsImeAlign = TOleEnum;
const
  styleMsImeAlignAuto = $00000000;
  styleMsImeAlignAfter = $00000001;
  styleMsImeAlignNotSet = $00000002;
  styleMsImeAlign_Max = $7FFFFFFF;

// Constants for enum _styleMsTextCombineHorizontal
type
  _styleMsTextCombineHorizontal = TOleEnum;
const
  styleMsTextCombineHorizontalNone = $00000000;
  styleMsTextCombineHorizontalAll = $00000001;
  styleMsTextCombineHorizontalDigits = $00000002;
  styleMsTextCombineHorizontalNotSet = $00000003;
  styleMsTextCombineHorizontal_Max = $7FFFFFFF;

// Constants for enum _styleViewportSize
type
  _styleViewportSize = TOleEnum;
const
  styleViewportSizeAuto = $00000000;
  styleViewportSizeDeviceWidth = $00000001;
  styleViewportSizeDeviceHeight = $00000002;
  styleViewportSize_Max = $7FFFFFFF;

// Constants for enum _styleUserZoom
type
  _styleUserZoom = TOleEnum;
const
  styleUserZoomNotSet = $00000000;
  styleUserZoomZoom = $00000001;
  styleUserZoomFixed = $00000002;
  styleUserZoom_Max = $7FFFFFFF;

// Constants for enum _styleTextLineThroughStyle
type
  _styleTextLineThroughStyle = TOleEnum;
const
  styleTextLineThroughStyleUndefined = $00000000;
  styleTextLineThroughStyleSingle = $00000001;
  styleTextLineThroughStyleDouble = $00000002;
  styleTextLineThroughStyle_Max = $7FFFFFFF;

// Constants for enum _styleTextUnderlineStyle
type
  _styleTextUnderlineStyle = TOleEnum;
const
  styleTextUnderlineStyleUndefined = $00000000;
  styleTextUnderlineStyleSingle = $00000001;
  styleTextUnderlineStyleDouble = $00000002;
  styleTextUnderlineStyleWords = $00000003;
  styleTextUnderlineStyleDotted = $00000004;
  styleTextUnderlineStyleThick = $00000005;
  styleTextUnderlineStyleDash = $00000006;
  styleTextUnderlineStyleDotDash = $00000007;
  styleTextUnderlineStyleDotDotDash = $00000008;
  styleTextUnderlineStyleWave = $00000009;
  styleTextUnderlineStyleSingleAccounting = $0000000A;
  styleTextUnderlineStyleDoubleAccounting = $0000000B;
  styleTextUnderlineStyleThickDash = $0000000C;
  styleTextUnderlineStyle_Max = $7FFFFFFF;

// Constants for enum _styleTextEffect
type
  _styleTextEffect = TOleEnum;
const
  styleTextEffectNone = $00000000;
  styleTextEffectEmboss = $00000001;
  styleTextEffectEngrave = $00000002;
  styleTextEffectOutline = $00000003;
  styleTextEffect_Max = $7FFFFFFF;

// Constants for enum _styleDefaultTextSelection
type
  _styleDefaultTextSelection = TOleEnum;
const
  styleDefaultTextSelectionFalse = $00000000;
  styleDefaultTextSelectionTrue = $00000001;
  styleDefaultTextSelection_Max = $7FFFFFFF;

// Constants for enum _styleTextDecoration
type
  _styleTextDecoration = TOleEnum;
const
  styleTextDecorationNone = $00000000;
  styleTextDecorationUnderline = $00000001;
  styleTextDecorationOverline = $00000002;
  styleTextDecorationLineThrough = $00000003;
  styleTextDecorationBlink = $00000004;
  styleTextDecoration_Max = $7FFFFFFF;

// Constants for enum _textDecoration
type
  _textDecoration = TOleEnum;
const
  textDecorationNone = $00000000;
  textDecorationUnderline = $00000001;
  textDecorationOverline = $00000002;
  textDecorationLineThrough = $00000003;
  textDecorationBlink = $00000004;
  textDecoration_Max = $7FFFFFFF;

// Constants for enum _htmlListType
type
  _htmlListType = TOleEnum;
const
  htmlListTypeNotSet = $00000000;
  htmlListTypeLargeAlpha = $00000001;
  htmlListTypeSmallAlpha = $00000002;
  htmlListTypeLargeRoman = $00000003;
  htmlListTypeSmallRoman = $00000004;
  htmlListTypeNumbers = $00000005;
  htmlListTypeDisc = $00000006;
  htmlListTypeCircle = $00000007;
  htmlListTypeSquare = $00000008;
  htmlListType_Max = $7FFFFFFF;

// Constants for enum _htmlMethod
type
  _htmlMethod = TOleEnum;
const
  htmlMethodNotSet = $00000000;
  htmlMethodGet = $00000001;
  htmlMethodPost = $00000002;
  htmlMethod_Max = $7FFFFFFF;

// Constants for enum _htmlWrap
type
  _htmlWrap = TOleEnum;
const
  htmlWrapOff = $00000001;
  htmlWrapSoft = $00000002;
  htmlWrapHard = $00000003;
  htmlWrap_Max = $7FFFFFFF;

// Constants for enum _htmlDir
type
  _htmlDir = TOleEnum;
const
  htmlDirNotSet = $00000000;
  htmlDirLeftToRight = $00000001;
  htmlDirRightToLeft = $00000002;
  htmlDir_Max = $7FFFFFFF;

// Constants for enum _htmlEditable
type
  _htmlEditable = TOleEnum;
const
  htmlEditableInherit = $00000000;
  htmlEditableTrue = $00000001;
  htmlEditableFalse = $00000002;
  htmlEditable_Max = $7FFFFFFF;

// Constants for enum _htmlInput
type
  _htmlInput = TOleEnum;
const
  htmlInputNotSet = $00000000;
  htmlInputButton = $00000001;
  htmlInputCheckbox = $00000002;
  htmlInputFile = $00000003;
  htmlInputHidden = $00000004;
  htmlInputImage_ = $00000005;
  htmlInputPassword = $00000006;
  htmlInputRadio = $00000007;
  htmlInputReset = $00000008;
  htmlInputSelectOne = $00000009;
  htmlInputSelectMultiple = $0000000A;
  htmlInputSubmit = $0000000B;
  htmlInputText = $0000000C;
  htmlInputTextarea = $0000000D;
  htmlInputRichtext = $0000000E;
  htmlInputRange = $0000000F;
  htmlInputUrl = $00000010;
  htmlInputEmail = $00000011;
  htmlInputNumber = $00000012;
  htmlInputTel = $00000013;
  htmlInputSearch = $00000014;
  htmlInput_Max = $7FFFFFFF;

// Constants for enum _htmlSpellCheck
type
  _htmlSpellCheck = TOleEnum;
const
  htmlSpellCheckNotSet = $00000000;
  htmlSpellCheckTrue = $00000001;
  htmlSpellCheckFalse = $00000002;
  htmlSpellCheckDefault = $00000003;
  htmlSpellCheck_Max = $7FFFFFFF;

// Constants for enum _htmlEncoding
type
  _htmlEncoding = TOleEnum;
const
  htmlEncodingURL = $00000000;
  htmlEncodingMultipart = $00000001;
  htmlEncodingText = $00000002;
  htmlEncoding_Max = $7FFFFFFF;

// Constants for enum _htmlAdjacency
type
  _htmlAdjacency = TOleEnum;
const
  htmlAdjacencyBeforeBegin = $00000001;
  htmlAdjacencyAfterBegin = $00000002;
  htmlAdjacencyBeforeEnd = $00000003;
  htmlAdjacencyAfterEnd = $00000004;
  htmlAdjacency_Max = $7FFFFFFF;

// Constants for enum _htmlTabIndex
type
  _htmlTabIndex = TOleEnum;
const
  htmlTabIndexNotSet = $FFFF8000;
  htmlTabIndex_Max = $7FFFFFFF;

// Constants for enum _htmlComponent
type
  _htmlComponent = TOleEnum;
const
  htmlComponentClient = $00000000;
  htmlComponentSbLeft = $00000001;
  htmlComponentSbPageLeft = $00000002;
  htmlComponentSbHThumb = $00000003;
  htmlComponentSbPageRight = $00000004;
  htmlComponentSbRight = $00000005;
  htmlComponentSbUp = $00000006;
  htmlComponentSbPageUp = $00000007;
  htmlComponentSbVThumb = $00000008;
  htmlComponentSbPageDown = $00000009;
  htmlComponentSbDown = $0000000A;
  htmlComponentSbLeft2 = $0000000B;
  htmlComponentSbPageLeft2 = $0000000C;
  htmlComponentSbRight2 = $0000000D;
  htmlComponentSbPageRight2 = $0000000E;
  htmlComponentSbUp2 = $0000000F;
  htmlComponentSbPageUp2 = $00000010;
  htmlComponentSbDown2 = $00000011;
  htmlComponentSbPageDown2 = $00000012;
  htmlComponentSbTop = $00000013;
  htmlComponentSbBottom = $00000014;
  htmlComponentOutside = $00000015;
  htmlComponentGHTopLeft = $00000016;
  htmlComponentGHLeft = $00000017;
  htmlComponentGHTop = $00000018;
  htmlComponentGHBottomLeft = $00000019;
  htmlComponentGHTopRight = $0000001A;
  htmlComponentGHBottom = $0000001B;
  htmlComponentGHRight = $0000001C;
  htmlComponentGHBottomRight = $0000001D;
  htmlComponent_Max = $7FFFFFFF;

// Constants for enum _htmlApplyLocation
type
  _htmlApplyLocation = TOleEnum;
const
  htmlApplyLocationInside = $00000000;
  htmlApplyLocationOutside = $00000001;
  htmlApplyLocation_Max = $7FFFFFFF;

// Constants for enum _htmlGlyphMode
type
  _htmlGlyphMode = TOleEnum;
const
  htmlGlyphModeNone = $00000000;
  htmlGlyphModeBegin = $00000001;
  htmlGlyphModeEnd = $00000002;
  htmlGlyphModeBoth = $00000003;
  htmlGlyphMode_Max = $7FFFFFFF;

// Constants for enum _htmlDraggable
type
  _htmlDraggable = TOleEnum;
const
  htmlDraggableAuto = $00000000;
  htmlDraggableTrue = $00000001;
  htmlDraggableFalse = $00000002;
  htmlDraggable_Max = $7FFFFFFF;

// Constants for enum _htmlUnit
type
  _htmlUnit = TOleEnum;
const
  htmlUnitCharacter = $00000001;
  htmlUnitWord = $00000002;
  htmlUnitSentence = $00000003;
  htmlUnitTextEdit = $00000006;
  htmlUnit_Max = $7FFFFFFF;

// Constants for enum _htmlEndPoints
type
  _htmlEndPoints = TOleEnum;
const
  htmlEndPointsStartToStart = $00000001;
  htmlEndPointsStartToEnd = $00000002;
  htmlEndPointsEndToStart = $00000003;
  htmlEndPointsEndToEnd = $00000004;
  htmlEndPoints_Max = $7FFFFFFF;

// Constants for enum _htmlDirection
type
  _htmlDirection = TOleEnum;
const
  htmlDirectionForward = $0001869F;
  htmlDirectionBackward = $FFFE7961;
  htmlDirection_Max = $7FFFFFFF;

// Constants for enum _htmlStart
type
  _htmlStart = TOleEnum;
const
  htmlStartfileopen = $00000000;
  htmlStartmouseover = $00000001;
  htmlStart_Max = $7FFFFFFF;

// Constants for enum _bodyScroll
type
  _bodyScroll = TOleEnum;
const
  bodyScrollyes = $00000001;
  bodyScrollno = $00000002;
  bodyScrollauto = $00000004;
  bodyScrolldefault = $00000003;
  bodyScroll_Max = $7FFFFFFF;

// Constants for enum _htmlSelectType
type
  _htmlSelectType = TOleEnum;
const
  htmlSelectTypeSelectOne = $00000001;
  htmlSelectTypeSelectMultiple = $00000002;
  htmlSelectType_Max = $7FFFFFFF;

// Constants for enum _htmlSelectExFlag
type
  _htmlSelectExFlag = TOleEnum;
const
  htmlSelectExFlagNone = $00000000;
  htmlSelectExFlagHideSelectionInDesign = $00000001;
  htmlSelectExFlag_Max = $7FFFFFFF;

// Constants for enum _htmlSelection
type
  _htmlSelection = TOleEnum;
const
  htmlSelectionNone = $00000000;
  htmlSelectionText = $00000001;
  htmlSelectionControl = $00000002;
  htmlSelectionTable = $00000003;
  htmlSelection_Max = $7FFFFFFF;

// Constants for enum _htmlMarqueeBehavior
type
  _htmlMarqueeBehavior = TOleEnum;
const
  htmlMarqueeBehaviorscroll = $00000001;
  htmlMarqueeBehaviorslide = $00000002;
  htmlMarqueeBehavioralternate = $00000003;
  htmlMarqueeBehavior_Max = $7FFFFFFF;

// Constants for enum _htmlMarqueeDirection
type
  _htmlMarqueeDirection = TOleEnum;
const
  htmlMarqueeDirectionleft = $00000001;
  htmlMarqueeDirectionright = $00000003;
  htmlMarqueeDirectionup = $00000005;
  htmlMarqueeDirectiondown = $00000007;
  htmlMarqueeDirection_Max = $7FFFFFFF;

// Constants for enum _htmlPersistState
type
  _htmlPersistState = TOleEnum;
const
  htmlPersistStateNormal = $00000000;
  htmlPersistStateFavorite = $00000001;
  htmlPersistStateHistory = $00000002;
  htmlPersistStateSnapshot = $00000003;
  htmlPersistStateUserData = $00000004;
  htmlPersistState_Max = $7FFFFFFF;

// Constants for enum _htmlDropEffect
type
  _htmlDropEffect = TOleEnum;
const
  htmlDropEffectCopy = $00000000;
  htmlDropEffectLink = $00000001;
  htmlDropEffectMove = $00000002;
  htmlDropEffectNone = $00000003;
  htmlDropEffect_Max = $7FFFFFFF;

// Constants for enum _htmlEffectAllowed
type
  _htmlEffectAllowed = TOleEnum;
const
  htmlEffectAllowedCopy = $00000000;
  htmlEffectAllowedLink = $00000001;
  htmlEffectAllowedMove = $00000002;
  htmlEffectAllowedCopyLink = $00000003;
  htmlEffectAllowedCopyMove = $00000004;
  htmlEffectAllowedLinkMove = $00000005;
  htmlEffectAllowedAll = $00000006;
  htmlEffectAllowedNone = $00000007;
  htmlEffectAllowedUninitialized = $00000008;
  htmlEffectAllowed_Max = $7FFFFFFF;

// Constants for enum _htmlCompatMode
type
  _htmlCompatMode = TOleEnum;
const
  htmlCompatModeBackCompat = $00000000;
  htmlCompatModeCSS1Compat = $00000001;
  htmlCompatMode_Max = $7FFFFFFF;

// Constants for enum _BoolValue
type
  _BoolValue = TOleEnum;
const
  True_ = $00000001;
  False_ = $00000000;
  BoolValue_Max = $7FFFFFFF;

// Constants for enum _htmlCaptionAlign
type
  _htmlCaptionAlign = TOleEnum;
const
  htmlCaptionAlignNotSet = $00000000;
  htmlCaptionAlignLeft = $00000001;
  htmlCaptionAlignCenter = $00000002;
  htmlCaptionAlignRight = $00000003;
  htmlCaptionAlignJustify = $00000004;
  htmlCaptionAlignTop = $00000005;
  htmlCaptionAlignBottom = $00000006;
  htmlCaptionAlign_Max = $7FFFFFFF;

// Constants for enum _htmlCaptionVAlign
type
  _htmlCaptionVAlign = TOleEnum;
const
  htmlCaptionVAlignNotSet = $00000000;
  htmlCaptionVAlignTop = $00000001;
  htmlCaptionVAlignBottom = $00000002;
  htmlCaptionVAlign_Max = $7FFFFFFF;

// Constants for enum _htmlFrame
type
  _htmlFrame = TOleEnum;
const
  htmlFrameNotSet = $00000000;
  htmlFramevoid = $00000001;
  htmlFrameabove = $00000002;
  htmlFramebelow = $00000003;
  htmlFramehsides = $00000004;
  htmlFramelhs = $00000005;
  htmlFramerhs = $00000006;
  htmlFramevsides = $00000007;
  htmlFramebox = $00000008;
  htmlFrameborder = $00000009;
  htmlFrame_Max = $7FFFFFFF;

// Constants for enum _htmlRules
type
  _htmlRules = TOleEnum;
const
  htmlRulesNotSet = $00000000;
  htmlRulesnone = $00000001;
  htmlRulesgroups = $00000002;
  htmlRulesrows = $00000003;
  htmlRulescols = $00000004;
  htmlRulesall = $00000005;
  htmlRules_Max = $7FFFFFFF;

// Constants for enum _htmlCellAlign
type
  _htmlCellAlign = TOleEnum;
const
  htmlCellAlignNotSet = $00000000;
  htmlCellAlignLeft = $00000001;
  htmlCellAlignCenter = $00000002;
  htmlCellAlignRight = $00000003;
  htmlCellAlignMiddle = $00000002;
  htmlCellAlign_Max = $7FFFFFFF;

// Constants for enum _htmlCellVAlign
type
  _htmlCellVAlign = TOleEnum;
const
  htmlCellVAlignNotSet = $00000000;
  htmlCellVAlignTop = $00000001;
  htmlCellVAlignMiddle = $00000002;
  htmlCellVAlignBottom = $00000003;
  htmlCellVAlignBaseline = $00000004;
  htmlCellVAlignCenter = $00000002;
  htmlCellVAlign_Max = $7FFFFFFF;

// Constants for enum _frameScrolling
type
  _frameScrolling = TOleEnum;
const
  frameScrollingyes = $00000001;
  frameScrollingno = $00000002;
  frameScrollingauto = $00000004;
  frameScrolling_Max = $7FFFFFFF;

// Constants for enum _sandboxAllow
type
  _sandboxAllow = TOleEnum;
const
  sandboxAllowScripts = $00000000;
  sandboxAllowSameOrigin = $00000001;
  sandboxAllowTopNavigation = $00000002;
  sandboxAllowForms = $00000003;
  sandboxAllowPopups = $00000004;
  sandboxAllow_Max = $7FFFFFFF;

// Constants for enum _svgAngleType
type
  _svgAngleType = TOleEnum;
const
  SVG_ANGLETYPE_UNKNOWN = $00000000;
  SVG_ANGLETYPE_UNSPECIFIED = $00000001;
  SVG_ANGLETYPE_DEG = $00000002;
  SVG_ANGLETYPE_RAD = $00000003;
  SVG_ANGLETYPE_GRAD = $00000004;
  svgAngleType_Max = $7FFFFFFF;

// Constants for enum _svgExternalResourcesRequired
type
  _svgExternalResourcesRequired = TOleEnum;
const
  svgExternalResourcesRequiredFalse = $00000000;
  svgExternalResourcesRequiredTrue = $00000001;
  svgExternalResourcesRequired_Max = $7FFFFFFF;

// Constants for enum _svgFocusable
type
  _svgFocusable = TOleEnum;
const
  svgFocusableNotSet = $00000000;
  svgFocusableAuto = $00000001;
  svgFocusableTrue = $00000002;
  svgFocusableFalse = $00000003;
  svgFocusable_Max = $7FFFFFFF;

// Constants for enum _svgLengthType
type
  _svgLengthType = TOleEnum;
const
  SVG_LENGTHTYPE_UNKNOWN = $00000000;
  SVG_LENGTHTYPE_NUMBER = $00000001;
  SVG_LENGTHTYPE_PERCENTAGE = $00000002;
  SVG_LENGTHTYPE_EMS = $00000003;
  SVG_LENGTHTYPE_EXS = $00000004;
  SVG_LENGTHTYPE_PX = $00000005;
  SVG_LENGTHTYPE_CM = $00000006;
  SVG_LENGTHTYPE_MM = $00000007;
  SVG_LENGTHTYPE_IN = $00000008;
  SVG_LENGTHTYPE_PT = $00000009;
  SVG_LENGTHTYPE_PC = $0000000A;
  svgLengthType_Max = $7FFFFFFF;

// Constants for enum _svgPathSegType
type
  _svgPathSegType = TOleEnum;
const
  PATHSEG_UNKNOWN = $00000000;
  PATHSEG_CLOSEPATH = $00000001;
  PATHSEG_MOVETO_ABS = $00000002;
  PATHSEG_MOVETO_REL = $00000003;
  PATHSEG_LINETO_ABS = $00000004;
  PATHSEG_LINETO_REL = $00000005;
  PATHSEG_CURVETO_CUBIC_ABS = $00000006;
  PATHSEG_CURVETO_CUBIC_REL = $00000007;
  PATHSEG_CURVETO_QUADRATIC_ABS = $00000008;
  PATHSEG_CURVETO_QUADRATIC_REL = $00000009;
  PATHSEG_ARC_ABS = $0000000A;
  PATHSEG_ARC_REL = $0000000B;
  PATHSEG_LINETO_HORIZONTAL_ABS = $0000000C;
  PATHSEG_LINETO_HORIZONTAL_REL = $0000000D;
  PATHSEG_LINETO_VERTICAL_ABS = $0000000E;
  PATHSEG_LINETO_VERTICAL_REL = $0000000F;
  PATHSEG_CURVETO_CUBIC_SMOOTH_ABS = $00000010;
  PATHSEG_CURVETO_CUBIC_SMOOTH_REL = $00000011;
  PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS = $00000012;
  PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL = $00000013;
  svgPathSegType_Max = $7FFFFFFF;

// Constants for enum _svgTransformType
type
  _svgTransformType = TOleEnum;
const
  SVG_TRANSFORM_UNKNOWN = $00000000;
  SVG_TRANSFORM_MATRIX = $00000001;
  SVG_TRANSFORM_TRANSLATE = $00000002;
  SVG_TRANSFORM_SCALE = $00000003;
  SVG_TRANSFORM_ROTATE = $00000004;
  SVG_TRANSFORM_SKEWX = $00000005;
  SVG_TRANSFORM_SKEWY = $00000006;
  svgTransformType_Max = $7FFFFFFF;

// Constants for enum _svgPreserveAspectRatioAlignType
type
  _svgPreserveAspectRatioAlignType = TOleEnum;
const
  SVG_PRESERVEASPECTRATIO_UNKNOWN = $00000000;
  SVG_PRESERVEASPECTRATIO_NONE = $00000001;
  SVG_PRESERVEASPECTRATIO_XMINYMIN = $00000002;
  SVG_PRESERVEASPECTRATIO_XMIDYMIN = $00000003;
  SVG_PRESERVEASPECTRATIO_XMAXYMIN = $00000004;
  SVG_PRESERVEASPECTRATIO_XMINYMID = $00000005;
  SVG_PRESERVEASPECTRATIO_XMIDYMID = $00000006;
  SVG_PRESERVEASPECTRATIO_XMAXYMID = $00000007;
  SVG_PRESERVEASPECTRATIO_XMINYMAX = $00000008;
  SVG_PRESERVEASPECTRATIO_XMIDYMAX = $00000009;
  SVG_PRESERVEASPECTRATIO_XMAXYMAX = $0000000A;
  svgPreserveAspectRatioAlignType_Max = $7FFFFFFF;

// Constants for enum _svgPreserveAspectMeetOrSliceType
type
  _svgPreserveAspectMeetOrSliceType = TOleEnum;
const
  SVG_MEETORSLICE_UNKNOWN = $00000000;
  SVG_MEETORSLICE_MEET = $00000001;
  SVG_MEETORSLICE_SLICE = $00000002;
  svgPreserveAspectMeetOrSliceType_Max = $7FFFFFFF;

// Constants for enum _svgUnitTypes
type
  _svgUnitTypes = TOleEnum;
const
  SVG_UNITTYPE_UNKNOWN = $00000000;
  SVG_UNITTYPE_USERSPACEONUSE = $00000001;
  SVG_UNITTYPE_OBJECTBOUNDINGBOX = $00000002;
  svgUnitTypes_Max = $7FFFFFFF;

// Constants for enum _svgSpreadMethod
type
  _svgSpreadMethod = TOleEnum;
const
  SVG_SPREADMETHOD_UNKNOWN = $00000000;
  SVG_SPREADMETHOD_PAD = $00000001;
  SVG_SPREADMETHOD_REFLECT = $00000002;
  SVG_SPREADMETHOD_REPEAT = $00000003;
  svgSpreadMethod_Max = $7FFFFFFF;

// Constants for enum _svgFeblendMode
type
  _svgFeblendMode = TOleEnum;
const
  SVG_FEBLEND_MODE_UNKNOWN = $00000000;
  SVG_FEBLEND_MODE_NORMAL = $00000001;
  SVG_FEBLEND_MODE_MULTIPLY = $00000002;
  SVG_FEBLEND_MODE_SCREEN = $00000003;
  SVG_FEBLEND_MODE_DARKEN = $00000004;
  SVG_FEBLEND_MODE_LIGHTEN = $00000005;
  svgFeblendMode_Max = $7FFFFFFF;

// Constants for enum _svgFecolormatrixType
type
  _svgFecolormatrixType = TOleEnum;
const
  SVG_FECOLORMATRIX_TYPE_UNKNOWN = $00000000;
  SVG_FECOLORMATRIX_TYPE_MATRIX = $00000001;
  SVG_FECOLORMATRIX_TYPE_SATURATE = $00000002;
  SVG_FECOLORMATRIX_TYPE_HUEROTATE = $00000003;
  SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA = $00000004;
  svgFecolormatrixType_Max = $7FFFFFFF;

// Constants for enum _svgFecomponenttransferType
type
  _svgFecomponenttransferType = TOleEnum;
const
  SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN = $00000000;
  SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY = $00000001;
  SVG_FECOMPONENTTRANSFER_TYPE_TABLE = $00000002;
  SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE = $00000003;
  SVG_FECOMPONENTTRANSFER_TYPE_LINEAR = $00000004;
  SVG_FECOMPONENTTRANSFER_TYPE_GAMMA = $00000005;
  svgFecomponenttransferType_Max = $7FFFFFFF;

// Constants for enum _svgFecompositeOperator
type
  _svgFecompositeOperator = TOleEnum;
const
  SVG_FECOMPOSITE_OPERATOR_UNKNOWN = $00000000;
  SVG_FECOMPOSITE_OPERATOR_OVER = $00000001;
  SVG_FECOMPOSITE_OPERATOR_IN = $00000002;
  SVG_FECOMPOSITE_OPERATOR_OUT = $00000003;
  SVG_FECOMPOSITE_OPERATOR_ATOP = $00000004;
  SVG_FECOMPOSITE_OPERATOR_XOR = $00000005;
  SVG_FECOMPOSITE_OPERATOR_ARITHMETIC = $00000006;
  svgFecompositeOperator_Max = $7FFFFFFF;

// Constants for enum _svgEdgemode
type
  _svgEdgemode = TOleEnum;
const
  SVG_EDGEMODE_UNKNOWN = $00000000;
  SVG_EDGEMODE_DUPLICATE = $00000001;
  SVG_EDGEMODE_WRAP = $00000002;
  SVG_EDGEMODE_NONE = $00000003;
  svgEdgemode_Max = $7FFFFFFF;

// Constants for enum _svgPreserveAlpha
type
  _svgPreserveAlpha = TOleEnum;
const
  SVG_PRESERVEALPHA_FALSE = $00000000;
  SVG_PRESERVEALPHA_TRUE = $00000001;
  svgPreserveAlpha_Max = $7FFFFFFF;

// Constants for enum _svgChannel
type
  _svgChannel = TOleEnum;
const
  SVG_CHANNEL_UNKNOWN = $00000000;
  SVG_CHANNEL_R = $00000001;
  SVG_CHANNEL_G = $00000002;
  SVG_CHANNEL_B = $00000003;
  SVG_CHANNEL_A = $00000004;
  svgChannel_Max = $7FFFFFFF;

// Constants for enum _svgMorphologyOperator
type
  _svgMorphologyOperator = TOleEnum;
const
  SVG_MORPHOLOGY_OPERATOR_UNKNOWN = $00000000;
  SVG_MORPHOLOGY_OPERATOR_ERODE = $00000001;
  SVG_MORPHOLOGY_OPERATOR_DILATE = $00000002;
  svgMorphologyOperator_Max = $7FFFFFFF;

// Constants for enum _svgTurbulenceType
type
  _svgTurbulenceType = TOleEnum;
const
  SVG_TURBULENCE_TYPE_UNKNOWN = $00000000;
  SVG_TURBULENCE_TYPE_FACTALNOISE = $00000001;
  SVG_TURBULENCE_TYPE_TURBULENCE = $00000002;
  svgTurbulenceType_Max = $7FFFFFFF;

// Constants for enum _svgStitchtype
type
  _svgStitchtype = TOleEnum;
const
  SVG_STITCHTYPE_UNKNOWN = $00000000;
  SVG_STITCHTYPE_STITCH = $00000001;
  SVG_STITCHTYPE_NOSTITCH = $00000002;
  svgStitchtype_Max = $7FFFFFFF;

// Constants for enum _svgMarkerUnits
type
  _svgMarkerUnits = TOleEnum;
const
  SVG_MARKERUNITS_UNKNOWN = $00000000;
  SVG_MARKERUNITS_USERSPACEONUSE = $00000001;
  SVG_MARKERUNITS_STROKEWIDTH = $00000002;
  svgMarkerUnits_Max = $7FFFFFFF;

// Constants for enum _svgMarkerOrient
type
  _svgMarkerOrient = TOleEnum;
const
  SVG_MARKER_ORIENT_UNKNOWN = $00000000;
  SVG_MARKER_ORIENT_AUTO = $00000001;
  SVG_MARKER_ORIENT_ANGLE = $00000002;
  svgMarkerOrient_Max = $7FFFFFFF;

// Constants for enum _svgMarkerOrientAttribute
type
  _svgMarkerOrientAttribute = TOleEnum;
const
  svgMarkerOrientAttributeAuto = $00000000;
  svgMarkerOrientAttribute_Max = $7FFFFFFF;

// Constants for enum _htmlMediaNetworkState
type
  _htmlMediaNetworkState = TOleEnum;
const
  htmlMediaNetworkStateEmpty = $00000000;
  htmlMediaNetworkStateIdle = $00000001;
  htmlMediaNetworkStateLoading = $00000002;
  htmlMediaNetworkStateNoSource = $00000003;
  htmlMediaNetworkState_Max = $7FFFFFFF;

// Constants for enum _htmlMediaReadyState
type
  _htmlMediaReadyState = TOleEnum;
const
  htmlMediaReadyStateHaveNothing = $00000000;
  htmlMediaReadyStateHaveMetadata = $00000001;
  htmlMediaReadyStateHaveCurrentData = $00000002;
  htmlMediaReadyStateHaveFutureData = $00000003;
  htmlMediaReadyStateHaveEnoughData = $00000004;
  htmlMediaReadyState_Max = $7FFFFFFF;

// Constants for enum _htmlMediaErr
type
  _htmlMediaErr = TOleEnum;
const
  htmlMediaErrAborted = $00000000;
  htmlMediaErrNetwork = $00000001;
  htmlMediaErrDecode = $00000002;
  htmlMediaErrSrcNotSupported = $00000003;
  htmlMediaErr_Max = $7FFFFFFF;

// Constants for enum _lengthAdjust
type
  _lengthAdjust = TOleEnum;
const
  LENGTHADJUST_UNKNOWN = $00000000;
  LENGTHADJUST_SPACING = $00000001;
  LENGTHADJUST_SPACINGANDGLYPHS = $00000002;
  lengthAdjust_Max = $7FFFFFFF;

// Constants for enum _textpathMethodtype
type
  _textpathMethodtype = TOleEnum;
const
  TEXTPATH_METHODTYPE_UNKNOWN = $00000000;
  TEXTPATH_METHODTYPE_ALIGN = $00000001;
  TEXTPATH_METHODTYPE_STRETCH = $00000002;
  textpathMethodtype_Max = $7FFFFFFF;

// Constants for enum _textpathSpacingtype
type
  _textpathSpacingtype = TOleEnum;
const
  TEXTPATH_SPACINGTYPE_UNKNOWN = $00000000;
  TEXTPATH_SPACINGTYPE_AUTO = $00000001;
  TEXTPATH_SPACINGTYPE_EXACT = $00000002;
  textpathSpacingtype_Max = $7FFFFFFF;

// Constants for enum _ELEMENT_CORNER
type
  _ELEMENT_CORNER = TOleEnum;
const
  ELEMENT_CORNER_NONE = $00000000;
  ELEMENT_CORNER_TOP = $00000001;
  ELEMENT_CORNER_LEFT = $00000002;
  ELEMENT_CORNER_BOTTOM = $00000003;
  ELEMENT_CORNER_RIGHT = $00000004;
  ELEMENT_CORNER_TOPLEFT = $00000005;
  ELEMENT_CORNER_TOPRIGHT = $00000006;
  ELEMENT_CORNER_BOTTOMLEFT = $00000007;
  ELEMENT_CORNER_BOTTOMRIGHT = $00000008;
  ELEMENT_CORNER_Max = $7FFFFFFF;

// Constants for enum _SECUREURLHOSTVALIDATE_FLAGS
type
  _SECUREURLHOSTVALIDATE_FLAGS = TOleEnum;
const
  SUHV_PROMPTBEFORENO = $00000001;
  SUHV_SILENTYES = $00000002;
  SUHV_UNSECURESOURCE = $00000004;
  SECUREURLHOSTVALIDATE_FLAGS_Max = $7FFFFFFF;

// Constants for enum _POINTER_GRAVITY
type
  _POINTER_GRAVITY = TOleEnum;
const
  POINTER_GRAVITY_Left = $00000000;
  POINTER_GRAVITY_Right = $00000001;
  POINTER_GRAVITY_Max = $7FFFFFFF;

// Constants for enum _ELEMENT_ADJACENCY
type
  _ELEMENT_ADJACENCY = TOleEnum;
const
  ELEM_ADJ_BeforeBegin = $00000000;
  ELEM_ADJ_AfterBegin = $00000001;
  ELEM_ADJ_BeforeEnd = $00000002;
  ELEM_ADJ_AfterEnd = $00000003;
  ELEMENT_ADJACENCY_Max = $7FFFFFFF;

// Constants for enum _MARKUP_CONTEXT_TYPE
type
  _MARKUP_CONTEXT_TYPE = TOleEnum;
const
  CONTEXT_TYPE_None = $00000000;
  CONTEXT_TYPE_Text = $00000001;
  CONTEXT_TYPE_EnterScope = $00000002;
  CONTEXT_TYPE_ExitScope = $00000003;
  CONTEXT_TYPE_NoScope = $00000004;
  MARKUP_CONTEXT_TYPE_Max = $7FFFFFFF;

// Constants for enum _FINDTEXT_FLAGS
type
  _FINDTEXT_FLAGS = TOleEnum;
const
  FINDTEXT_BACKWARDS = $00000001;
  FINDTEXT_WHOLEWORD = $00000002;
  FINDTEXT_MATCHCASE = $00000004;
  FINDTEXT_RAW = $00020000;
  FINDTEXT_MATCHREPEATEDWHITESPACE = $00040000;
  FINDTEXT_MATCHDIAC = $20000000;
  FINDTEXT_MATCHKASHIDA = $40000000;
  FINDTEXT_MATCHALEFHAMZA = $80000000;
  FINDTEXT_FLAGS_Max = $7FFFFFFF;

// Constants for enum _MOVEUNIT_ACTION
type
  _MOVEUNIT_ACTION = TOleEnum;
const
  MOVEUNIT_PREVCHAR = $00000000;
  MOVEUNIT_NEXTCHAR = $00000001;
  MOVEUNIT_PREVCLUSTERBEGIN = $00000002;
  MOVEUNIT_NEXTCLUSTERBEGIN = $00000003;
  MOVEUNIT_PREVCLUSTEREND = $00000004;
  MOVEUNIT_NEXTCLUSTEREND = $00000005;
  MOVEUNIT_PREVWORDBEGIN = $00000006;
  MOVEUNIT_NEXTWORDBEGIN = $00000007;
  MOVEUNIT_PREVWORDEND = $00000008;
  MOVEUNIT_NEXTWORDEND = $00000009;
  MOVEUNIT_PREVPROOFWORD = $0000000A;
  MOVEUNIT_NEXTPROOFWORD = $0000000B;
  MOVEUNIT_NEXTURLBEGIN = $0000000C;
  MOVEUNIT_PREVURLBEGIN = $0000000D;
  MOVEUNIT_NEXTURLEND = $0000000E;
  MOVEUNIT_PREVURLEND = $0000000F;
  MOVEUNIT_PREVSENTENCE = $00000010;
  MOVEUNIT_NEXTSENTENCE = $00000011;
  MOVEUNIT_PREVBLOCK = $00000012;
  MOVEUNIT_NEXTBLOCK = $00000013;
  MOVEUNIT_ACTION_Max = $7FFFFFFF;

// Constants for enum _PARSE_FLAGS
type
  _PARSE_FLAGS = TOleEnum;
const
  PARSE_ABSOLUTIFYIE40URLS = $00000001;
  PARSE_DISABLEVML = $00000002;
  PARSE_FLAGS_Max = $7FFFFFFF;

// Constants for enum _ELEMENT_TAG_ID
type
  _ELEMENT_TAG_ID = TOleEnum;
const
  TAGID_NULL = $00000000;
  TAGID_UNKNOWN = $00000001;
  TAGID_A = $00000002;
  TAGID_ACRONYM = $00000003;
  TAGID_ADDRESS = $00000004;
  TAGID_APPLET = $00000005;
  TAGID_AREA = $00000006;
  TAGID_B = $00000007;
  TAGID_BASE = $00000008;
  TAGID_BASEFONT = $00000009;
  TAGID_BDO = $0000000A;
  TAGID_BGSOUND = $0000000B;
  TAGID_BIG = $0000000C;
  TAGID_BLINK = $0000000D;
  TAGID_BLOCKQUOTE = $0000000E;
  TAGID_BODY = $0000000F;
  TAGID_BR = $00000010;
  TAGID_BUTTON = $00000011;
  TAGID_CAPTION = $00000012;
  TAGID_CENTER = $00000013;
  TAGID_CITE = $00000014;
  TAGID_CODE = $00000015;
  TAGID_COL = $00000016;
  TAGID_COLGROUP = $00000017;
  TAGID_COMMENT = $00000018;
  TAGID_COMMENT_RAW = $00000019;
  TAGID_DD = $0000001A;
  TAGID_DEL = $0000001B;
  TAGID_DFN = $0000001C;
  TAGID_DIR = $0000001D;
  TAGID_DIV = $0000001E;
  TAGID_DL = $0000001F;
  TAGID_DT = $00000020;
  TAGID_EM = $00000021;
  TAGID_EMBED = $00000022;
  TAGID_FIELDSET = $00000023;
  TAGID_FONT = $00000024;
  TAGID_FORM = $00000025;
  TAGID_FRAME = $00000026;
  TAGID_FRAMESET = $00000027;
  TAGID_GENERIC = $00000028;
  TAGID_H1 = $00000029;
  TAGID_H2 = $0000002A;
  TAGID_H3 = $0000002B;
  TAGID_H4 = $0000002C;
  TAGID_H5 = $0000002D;
  TAGID_H6 = $0000002E;
  TAGID_HEAD = $0000002F;
  TAGID_HR = $00000030;
  TAGID_HTML = $00000031;
  TAGID_I = $00000032;
  TAGID_IFRAME = $00000033;
  TAGID_IMG = $00000034;
  TAGID_INPUT = $00000035;
  TAGID_INS = $00000036;
  TAGID_KBD = $00000037;
  TAGID_LABEL = $00000038;
  TAGID_LEGEND = $00000039;
  TAGID_LI = $0000003A;
  TAGID_LINK = $0000003B;
  TAGID_LISTING = $0000003C;
  TAGID_MAP = $0000003D;
  TAGID_MARQUEE = $0000003E;
  TAGID_MENU = $0000003F;
  TAGID_META = $00000040;
  TAGID_NEXTID = $00000041;
  TAGID_NOBR = $00000042;
  TAGID_NOEMBED = $00000043;
  TAGID_NOFRAMES = $00000044;
  TAGID_NOSCRIPT = $00000045;
  TAGID_OBJECT = $00000046;
  TAGID_OL = $00000047;
  TAGID_OPTION = $00000048;
  TAGID_P = $00000049;
  TAGID_PARAM = $0000004A;
  TAGID_PLAINTEXT = $0000004B;
  TAGID_PRE = $0000004C;
  TAGID_Q = $0000004D;
  TAGID_RP = $0000004E;
  TAGID_RT = $0000004F;
  TAGID_RUBY = $00000050;
  TAGID_S = $00000051;
  TAGID_SAMP = $00000052;
  TAGID_SCRIPT = $00000053;
  TAGID_SELECT = $00000054;
  TAGID_SMALL = $00000055;
  TAGID_SPAN = $00000056;
  TAGID_STRIKE = $00000057;
  TAGID_STRONG = $00000058;
  TAGID_STYLE = $00000059;
  TAGID_SUB = $0000005A;
  TAGID_SUP = $0000005B;
  TAGID_TABLE = $0000005C;
  TAGID_TBODY = $0000005D;
  TAGID_TC = $0000005E;
  TAGID_TD = $0000005F;
  TAGID_TEXTAREA = $00000060;
  TAGID_TFOOT = $00000061;
  TAGID_TH = $00000062;
  TAGID_THEAD = $00000063;
  TAGID_TITLE = $00000064;
  TAGID_TR = $00000065;
  TAGID_TT = $00000066;
  TAGID_U = $00000067;
  TAGID_UL = $00000068;
  TAGID_VAR = $00000069;
  TAGID_WBR = $0000006A;
  TAGID_XMP = $0000006B;
  TAGID_ROOT = $0000006C;
  TAGID_OPTGROUP = $0000006D;
  TAGID_ABBR = $0000006E;
  TAGID_SVG_A = $0000006F;
  TAGID_SVG_ALTGLYPH = $00000070;
  TAGID_SVG_ALTGLYPHDEF = $00000071;
  TAGID_SVG_ALTGLYPHITEM = $00000072;
  TAGID_SVG_ANIMATE = $00000073;
  TAGID_SVG_ANIMATECOLOR = $00000074;
  TAGID_SVG_ANIMATEMOTION = $00000075;
  TAGID_SVG_ANIMATETRANSFORM = $00000076;
  TAGID_SVG_CIRCLE = $00000077;
  TAGID_SVG_CLIPPATH = $00000078;
  TAGID_SVG_COLOR_PROFILE = $00000079;
  TAGID_SVG_CURSOR = $0000007A;
  TAGID_SVG_DEFINITION_SRC = $0000007B;
  TAGID_SVG_DEFS = $0000007C;
  TAGID_SVG_DESC = $0000007D;
  TAGID_SVG_ELLIPSE = $0000007E;
  TAGID_SVG_FEBLEND = $0000007F;
  TAGID_SVG_FECOLORMATRIX = $00000080;
  TAGID_SVG_FECOMPONENTTRANSFER = $00000081;
  TAGID_SVG_FECOMPOSITE = $00000082;
  TAGID_SVG_FECONVOLVEMATRIX = $00000083;
  TAGID_SVG_FEDIFFUSELIGHTING = $00000084;
  TAGID_SVG_FEDISPLACEMENTMAP = $00000085;
  TAGID_SVG_FEDISTANTLIGHT = $00000086;
  TAGID_SVG_FEFLOOD = $00000087;
  TAGID_SVG_FEFUNCA = $00000088;
  TAGID_SVG_FEFUNCB = $00000089;
  TAGID_SVG_FEFUNCG = $0000008A;
  TAGID_SVG_FEFUNCR = $0000008B;
  TAGID_SVG_FEGAUSSIANBLUR = $0000008C;
  TAGID_SVG_FEIMAGE = $0000008D;
  TAGID_SVG_FEMERGE = $0000008E;
  TAGID_SVG_FEMERGENODE = $0000008F;
  TAGID_SVG_FEMORPHOLOGY = $00000090;
  TAGID_SVG_FEOFFSET = $00000091;
  TAGID_SVG_FEPOINTLIGHT = $00000092;
  TAGID_SVG_FESPECULARLIGHTING = $00000093;
  TAGID_SVG_FESPOTLIGHT = $00000094;
  TAGID_SVG_FETILE = $00000095;
  TAGID_SVG_FETURBULENCE = $00000096;
  TAGID_SVG_FILTER = $00000097;
  TAGID_SVG_FONT = $00000098;
  TAGID_SVG_FONT_FACE = $00000099;
  TAGID_SVG_FONT_FACE_FORMAT = $0000009A;
  TAGID_SVG_FONT_FACE_NAME = $0000009B;
  TAGID_SVG_FONT_FACE_SRC = $0000009C;
  TAGID_SVG_FONT_FACE_URI = $0000009D;
  TAGID_SVG_FOREIGNOBJECT = $0000009E;
  TAGID_SVG_G = $0000009F;
  TAGID_SVG_GLYPH = $000000A0;
  TAGID_SVG_GLYPHREF = $000000A1;
  TAGID_SVG_HKERN = $000000A2;
  TAGID_SVG_IMAGE = $000000A3;
  TAGID_SVG_LINE = $000000A4;
  TAGID_SVG_LINEARGRADIENT = $000000A5;
  TAGID_SVG_MARKER = $000000A6;
  TAGID_SVG_MASK = $000000A7;
  TAGID_SVG_METADATA = $000000A8;
  TAGID_SVG_MISSING_GLYPH = $000000A9;
  TAGID_SVG_MPATH = $000000AA;
  TAGID_SVG_PATH = $000000AB;
  TAGID_SVG_PATTERN = $000000AC;
  TAGID_SVG_POLYGON = $000000AD;
  TAGID_SVG_POLYLINE = $000000AE;
  TAGID_SVG_RADIALGRADIENT = $000000AF;
  TAGID_SVG_RECT = $000000B0;
  TAGID_SVG_SCRIPT = $000000B1;
  TAGID_SVG_SET = $000000B2;
  TAGID_SVG_STOP = $000000B3;
  TAGID_SVG_STYLE = $000000B4;
  TAGID_SVG_SVG = $000000B5;
  TAGID_SVG_SWITCH = $000000B6;
  TAGID_SVG_SYMBOL = $000000B7;
  TAGID_SVG_TEXT = $000000B8;
  TAGID_SVG_TEXTPATH = $000000B9;
  TAGID_SVG_TITLE = $000000BA;
  TAGID_SVG_TREF = $000000BB;
  TAGID_SVG_TSPAN = $000000BC;
  TAGID_SVG_USE = $000000BD;
  TAGID_SVG_VIEW = $000000BE;
  TAGID_SVG_VKERN = $000000BF;
  TAGID_AUDIO = $000000C0;
  TAGID_SOURCE = $000000C1;
  TAGID_VIDEO = $000000C2;
  TAGID_CANVAS = $000000C3;
  TAGID_DOCTYPE = $000000C4;
  TAGID_KEYGEN = $000000C5;
  TAGID_PROCESSINGINSTRUCTION = $000000C6;
  TAGID_ARTICLE = $000000C7;
  TAGID_ASIDE = $000000C8;
  TAGID_FIGCAPTION = $000000C9;
  TAGID_FIGURE = $000000CA;
  TAGID_FOOTER = $000000CB;
  TAGID_HEADER = $000000CC;
  TAGID_HGROUP = $000000CD;
  TAGID_MARK = $000000CE;
  TAGID_NAV = $000000CF;
  TAGID_SECTION = $000000D0;
  TAGID_PROGRESS = $000000D1;
  TAGID_MATHML_ANNOTATION_XML = $000000D2;
  TAGID_MATHML_MATH = $000000D3;
  TAGID_MATHML_MI = $000000D4;
  TAGID_MATHML_MN = $000000D5;
  TAGID_MATHML_MO = $000000D6;
  TAGID_MATHML_MS = $000000D7;
  TAGID_MATHML_MTEXT = $000000D8;
  TAGID_DATALIST = $000000D9;
  TAGID_TRACK = $000000DA;
  TAGID_ISINDEX = $000000DB;
  TAGID_COMMAND = $000000DC;
  TAGID_DETAILS = $000000DD;
  TAGID_SUMMARY = $000000DE;
  TAGID_X_MS_WEBVIEW = $000000DF;
  TAGID_COUNT = $000000E0;
  TAGID_LAST_PREDEFINED = $00002710;
  ELEMENT_TAG_ID_Max = $7FFFFFFF;

// Constants for enum _SELECTION_TYPE
type
  _SELECTION_TYPE = TOleEnum;
const
  SELECTION_TYPE_None = $00000000;
  SELECTION_TYPE_Caret = $00000001;
  SELECTION_TYPE_Text = $00000002;
  SELECTION_TYPE_Control = $00000003;
  SELECTION_TYPE_Max = $7FFFFFFF;

// Constants for enum _SAVE_SEGMENTS_FLAGS
type
  _SAVE_SEGMENTS_FLAGS = TOleEnum;
const
  SAVE_SEGMENTS_NoIE4SelectionCompat = $00000001;
  SAVE_SEGMENTS_FLAGS_Max = $7FFFFFFF;

// Constants for enum _CARET_DIRECTION
type
  _CARET_DIRECTION = TOleEnum;
const
  CARET_DIRECTION_INDETERMINATE = $00000000;
  CARET_DIRECTION_SAME = $00000001;
  CARET_DIRECTION_BACKWARD = $00000002;
  CARET_DIRECTION_FORWARD = $00000003;
  CARET_DIRECTION_Max = $7FFFFFFF;

// Constants for enum _LINE_DIRECTION
type
  _LINE_DIRECTION = TOleEnum;
const
  LINE_DIRECTION_RightToLeft = $00000001;
  LINE_DIRECTION_LeftToRight = $00000002;
  LINE_DIRECTION_Max = $7FFFFFFF;

// Constants for enum _HT_OPTIONS
type
  _HT_OPTIONS = TOleEnum;
const
  HT_OPT_AllowAfterEOL = $00000001;
  HT_OPTIONS_Max = $7FFFFFFF;

// Constants for enum _HT_RESULTS
type
  _HT_RESULTS = TOleEnum;
const
  HT_RESULTS_Glyph = $00000001;
  HT_RESULTS_Max = $7FFFFFFF;

// Constants for enum _DISPLAY_MOVEUNIT
type
  _DISPLAY_MOVEUNIT = TOleEnum;
const
  DISPLAY_MOVEUNIT_PreviousLine = $00000001;
  DISPLAY_MOVEUNIT_NextLine = $00000002;
  DISPLAY_MOVEUNIT_CurrentLineStart = $00000003;
  DISPLAY_MOVEUNIT_CurrentLineEnd = $00000004;
  DISPLAY_MOVEUNIT_TopOfWindow = $00000005;
  DISPLAY_MOVEUNIT_BottomOfWindow = $00000006;
  DISPLAY_MOVEUNIT_Max = $7FFFFFFF;

// Constants for enum _DISPLAY_GRAVITY
type
  _DISPLAY_GRAVITY = TOleEnum;
const
  DISPLAY_GRAVITY_PreviousLine = $00000001;
  DISPLAY_GRAVITY_NextLine = $00000002;
  DISPLAY_GRAVITY_Max = $7FFFFFFF;

// Constants for enum _DISPLAY_BREAK
type
  _DISPLAY_BREAK = TOleEnum;
const
  DISPLAY_BREAK_None = $00000000;
  DISPLAY_BREAK_Block = $00000001;
  DISPLAY_BREAK_Break = $00000002;
  DISPLAY_BREAK_Max = $7FFFFFFF;

// Constants for enum _COORD_SYSTEM
type
  _COORD_SYSTEM = TOleEnum;
const
  COORD_SYSTEM_GLOBAL = $00000000;
  COORD_SYSTEM_PARENT = $00000001;
  COORD_SYSTEM_CONTAINER = $00000002;
  COORD_SYSTEM_CONTENT = $00000003;
  COORD_SYSTEM_FRAME = $00000004;
  COORD_SYSTEM_CLIENT = $00000005;
  COORD_SYSTEM_Max = $7FFFFFFF;

// Constants for enum _DEV_CONSOLE_MESSAGE_LEVEL
type
  _DEV_CONSOLE_MESSAGE_LEVEL = TOleEnum;
const
  DCML_INFORMATIONAL = $00000000;
  DCML_WARNING = $00000001;
  DCML_ERROR = $00000002;
  DEV_CONSOLE_MESSAGE_LEVEL_Max = $7FFFFFFF;

// Constants for enum _DOM_EVENT_PHASE
type
  _DOM_EVENT_PHASE = TOleEnum;
const
  DEP_CAPTURING_PHASE = $00000001;
  DEP_AT_TARGET = $00000002;
  DEP_BUBBLING_PHASE = $00000003;
  DOM_EVENT_PHASE_Max = $7FFFFFFF;

// Constants for enum _SCRIPT_TIMER_TYPE
type
  _SCRIPT_TIMER_TYPE = TOleEnum;
const
  STT_TIMEOUT = $00000000;
  STT_INTERVAL = $00000001;
  STT_IMMEDIATE = $00000002;
  STT_ANIMATION_FRAME = $00000003;
  SCRIPT_TIMER_TYPE_Max = $7FFFFFFF;

// Constants for enum _HTML_PAINTER
type
  _HTML_PAINTER = TOleEnum;
const
  HTMLPAINTER_OPAQUE = $00000001;
  HTMLPAINTER_TRANSPARENT = $00000002;
  HTMLPAINTER_ALPHA = $00000004;
  HTMLPAINTER_COMPLEX = $00000008;
  HTMLPAINTER_OVERLAY = $00000010;
  HTMLPAINTER_HITTEST = $00000020;
  HTMLPAINTER_SURFACE = $00000100;
  HTMLPAINTER_3DSURFACE = $00000200;
  HTMLPAINTER_NOBAND = $00000400;
  HTMLPAINTER_NODC = $00001000;
  HTMLPAINTER_NOPHYSICALCLIP = $00002000;
  HTMLPAINTER_NOSAVEDC = $00004000;
  HTMLPAINTER_SUPPORTS_XFORM = $00008000;
  HTMLPAINTER_EXPAND = $00010000;
  HTMLPAINTER_NOSCROLLBITS = $00020000;
  HTML_PAINTER_Max = $7FFFFFFF;

// Constants for enum _HTML_PAINT_ZORDER
type
  _HTML_PAINT_ZORDER = TOleEnum;
const
  HTMLPAINT_ZORDER_NONE = $00000000;
  HTMLPAINT_ZORDER_REPLACE_ALL = $00000001;
  HTMLPAINT_ZORDER_REPLACE_CONTENT = $00000002;
  HTMLPAINT_ZORDER_REPLACE_BACKGROUND = $00000003;
  HTMLPAINT_ZORDER_BELOW_CONTENT = $00000004;
  HTMLPAINT_ZORDER_BELOW_FLOW = $00000005;
  HTMLPAINT_ZORDER_ABOVE_FLOW = $00000006;
  HTMLPAINT_ZORDER_ABOVE_CONTENT = $00000007;
  HTMLPAINT_ZORDER_WINDOW_TOP = $00000008;
  HTML_PAINT_ZORDER_Max = $7FFFFFFF;

// Constants for enum _HTML_PAINT_DRAW_FLAGS
type
  _HTML_PAINT_DRAW_FLAGS = TOleEnum;
const
  HTMLPAINT_DRAW_UPDATEREGION = $00000001;
  HTMLPAINT_DRAW_USE_XFORM = $00000002;
  HTML_PAINT_DRAW_FLAGS_Max = $7FFFFFFF;

// Constants for enum _HTML_PAINT_EVENT_FLAGS
type
  _HTML_PAINT_EVENT_FLAGS = TOleEnum;
const
  HTMLPAINT_EVENT_TARGET = $00000001;
  HTMLPAINT_EVENT_SETCURSOR = $00000002;
  HTML_PAINT_EVENT_FLAGS_Max = $7FFFFFFF;

// Constants for enum _HTML_PAINT_DRAW_INFO_FLAGS
type
  _HTML_PAINT_DRAW_INFO_FLAGS = TOleEnum;
const
  HTMLPAINT_DRAWINFO_VIEWPORT = $00000001;
  HTMLPAINT_DRAWINFO_UPDATEREGION = $00000002;
  HTMLPAINT_DRAWINFO_XFORM = $00000004;
  HTML_PAINT_DRAW_INFO_FLAGS_Max = $7FFFFFFF;

// Constants for enum _HTMLDlgFlag
type
  _HTMLDlgFlag = TOleEnum;
const
  HTMLDlgFlagNo = $00000000;
  HTMLDlgFlagOff = $00000000;
  HTMLDlgFlag0 = $00000000;
  HTMLDlgFlagYes = $00000001;
  HTMLDlgFlagOn = $00000001;
  HTMLDlgFlag1 = $00000001;
  HTMLDlgFlagNotSet = $FFFFFFFF;
  HTMLDlgFlag_Max = $7FFFFFFF;

// Constants for enum _HTMLDlgBorder
type
  _HTMLDlgBorder = TOleEnum;
const
  HTMLDlgBorderThin = $00000000;
  HTMLDlgBorderThick = $00040000;
  HTMLDlgBorder_Max = $7FFFFFFF;

// Constants for enum _HTMLDlgEdge
type
  _HTMLDlgEdge = TOleEnum;
const
  HTMLDlgEdgeSunken = $00000000;
  HTMLDlgEdgeRaised = $00000010;
  HTMLDlgEdge_Max = $7FFFFFFF;

// Constants for enum _HTMLDlgCenter
type
  _HTMLDlgCenter = TOleEnum;
const
  HTMLDlgCenterNo = $00000000;
  HTMLDlgCenterOff = $00000000;
  HTMLDlgCenter0 = $00000000;
  HTMLDlgCenterYes = $00000001;
  HTMLDlgCenterOn = $00000001;
  HTMLDlgCenter1 = $00000001;
  HTMLDlgCenterParent = $00000001;
  HTMLDlgCenterDesktop = $00000002;
  HTMLDlgCenter_Max = $7FFFFFFF;

// Constants for enum _HTMLAppFlag
type
  _HTMLAppFlag = TOleEnum;
const
  HTMLAppFlagNo = $00000000;
  HTMLAppFlagOff = $00000000;
  HTMLAppFlag0 = $00000000;
  HTMLAppFlagYes = $00000001;
  HTMLAppFlagOn = $00000001;
  HTMLAppFlag1 = $00000001;
  HTMLAppFlag_Max = $7FFFFFFF;

// Constants for enum _HTMLMinimizeFlag
type
  _HTMLMinimizeFlag = TOleEnum;
const
  HTMLMinimizeFlagNo = $00000000;
  HTMLMinimizeFlagYes = $00020000;
  HTMLMinimizeFlag_Max = $7FFFFFFF;

// Constants for enum _HTMLMaximizeFlag
type
  _HTMLMaximizeFlag = TOleEnum;
const
  HTMLMaximizeFlagNo = $00000000;
  HTMLMaximizeFlagYes = $00010000;
  HTMLMaximizeFlag_Max = $7FFFFFFF;

// Constants for enum _HTMLCaptionFlag
type
  _HTMLCaptionFlag = TOleEnum;
const
  HTMLCaptionFlagNo = $00000000;
  HTMLCaptionFlagYes = $00C00000;
  HTMLCaptionFlag_Max = $7FFFFFFF;

// Constants for enum _HTMLSysMenuFlag
type
  _HTMLSysMenuFlag = TOleEnum;
const
  HTMLSysMenuFlagNo = $00000000;
  HTMLSysMenuFlagYes = $00080000;
  HTMLSysMenuFlag_Max = $7FFFFFFF;

// Constants for enum _HTMLBorder
type
  _HTMLBorder = TOleEnum;
const
  HTMLBorderNone = $00000000;
  HTMLBorderThick = $00040000;
  HTMLBorderDialog = $00400000;
  HTMLBorderThin = $00800000;
  HTMLBorder_Max = $7FFFFFFF;

// Constants for enum _HTMLBorderStyle
type
  _HTMLBorderStyle = TOleEnum;
const
  HTMLBorderStyleNormal = $00000000;
  HTMLBorderStyleRaised = $00000100;
  HTMLBorderStyleSunken = $00000200;
  HTMLBorderStylecombined = $00000300;
  HTMLBorderStyleStatic = $00020000;
  HTMLBorderStyle_Max = $7FFFFFFF;

// Constants for enum _HTMLWindowState
type
  _HTMLWindowState = TOleEnum;
const
  HTMLWindowStateNormal = $00000001;
  HTMLWindowStateMaximize = $00000003;
  HTMLWindowStateMinimize = $00000006;
  HTMLWindowState_Max = $7FFFFFFF;

// Constants for enum _BEHAVIOR_EVENT
type
  _BEHAVIOR_EVENT = TOleEnum;
const
  BEHAVIOREVENT_FIRST = $00000000;
  BEHAVIOREVENT_CONTENTREADY = $00000000;
  BEHAVIOREVENT_DOCUMENTREADY = $00000001;
  BEHAVIOREVENT_APPLYSTYLE = $00000002;
  BEHAVIOREVENT_DOCUMENTCONTEXTCHANGE = $00000003;
  BEHAVIOREVENT_CONTENTSAVE = $00000004;
  BEHAVIOREVENT_LAST = $00000004;
  BEHAVIOR_EVENT_Max = $7FFFFFFF;

// Constants for enum _BEHAVIOR_EVENT_FLAGS
type
  _BEHAVIOR_EVENT_FLAGS = TOleEnum;
const
  BEHAVIOREVENTFLAGS_BUBBLE = $00000001;
  BEHAVIOREVENTFLAGS_STANDARDADDITIVE = $00000002;
  BEHAVIOR_EVENT_FLAGS_Max = $7FFFFFFF;

// Constants for enum _BEHAVIOR_RENDER_INFO
type
  _BEHAVIOR_RENDER_INFO = TOleEnum;
const
  BEHAVIORRENDERINFO_BEFOREBACKGROUND = $00000001;
  BEHAVIORRENDERINFO_AFTERBACKGROUND = $00000002;
  BEHAVIORRENDERINFO_BEFORECONTENT = $00000004;
  BEHAVIORRENDERINFO_AFTERCONTENT = $00000008;
  BEHAVIORRENDERINFO_AFTERFOREGROUND = $00000020;
  BEHAVIORRENDERINFO_ABOVECONTENT = $00000028;
  BEHAVIORRENDERINFO_ALLLAYERS = $000000FF;
  BEHAVIORRENDERINFO_DISABLEBACKGROUND = $00000100;
  BEHAVIORRENDERINFO_DISABLENEGATIVEZ = $00000200;
  BEHAVIORRENDERINFO_DISABLECONTENT = $00000400;
  BEHAVIORRENDERINFO_DISABLEPOSITIVEZ = $00000800;
  BEHAVIORRENDERINFO_DISABLEALLLAYERS = $00000F00;
  BEHAVIORRENDERINFO_HITTESTING = $00001000;
  BEHAVIORRENDERINFO_SURFACE = $00100000;
  BEHAVIORRENDERINFO_3DSURFACE = $00200000;
  BEHAVIOR_RENDER_INFO_Max = $7FFFFFFF;

// Constants for enum _BEHAVIOR_RELATION
type
  _BEHAVIOR_RELATION = TOleEnum;
const
  BEHAVIOR_FIRSTRELATION = $00000000;
  BEHAVIOR_SAMEELEMENT = $00000000;
  BEHAVIOR_PARENT = $00000001;
  BEHAVIOR_CHILD = $00000002;
  BEHAVIOR_SIBLING = $00000003;
  BEHAVIOR_LASTRELATION = $00000003;
  BEHAVIOR_RELATION_Max = $7FFFFFFF;

// Constants for enum _BEHAVIOR_LAYOUT_INFO
type
  _BEHAVIOR_LAYOUT_INFO = TOleEnum;
const
  BEHAVIORLAYOUTINFO_FULLDELEGATION = $00000001;
  BEHAVIORLAYOUTINFO_MODIFYNATURAL = $00000002;
  BEHAVIORLAYOUTINFO_MAPSIZE = $00000004;
  BEHAVIOR_LAYOUT_INFO_Max = $7FFFFFFF;

// Constants for enum _BEHAVIOR_LAYOUT_MODE
type
  _BEHAVIOR_LAYOUT_MODE = TOleEnum;
const
  BEHAVIORLAYOUTMODE_NATURAL = $00000001;
  BEHAVIORLAYOUTMODE_MINWIDTH = $00000002;
  BEHAVIORLAYOUTMODE_MAXWIDTH = $00000004;
  BEHAVIORLAYOUTMODE_MEDIA_RESOLUTION = $00004000;
  BEHAVIORLAYOUTMODE_FINAL_PERCENT = $00008000;
  BEHAVIOR_LAYOUT_MODE_Max = $7FFFFFFF;

// Constants for enum _ELEMENTDESCRIPTOR_FLAGS
type
  _ELEMENTDESCRIPTOR_FLAGS = TOleEnum;
const
  ELEMENTDESCRIPTORFLAGS_LITERAL = $00000001;
  ELEMENTDESCRIPTORFLAGS_NESTED_LITERAL = $00000002;
  ELEMENTDESCRIPTOR_FLAGS_Max = $7FFFFFFF;

// Constants for enum _ELEMENTNAMESPACE_FLAGS
type
  _ELEMENTNAMESPACE_FLAGS = TOleEnum;
const
  ELEMENTNAMESPACEFLAGS_ALLOWANYTAG = $00000001;
  ELEMENTNAMESPACEFLAGS_QUERYFORUNKNOWNTAGS = $00000002;
  ELEMENTNAMESPACE_FLAGS_Max = $7FFFFFFF;

// Constants for enum _VIEW_OBJECT_ALPHA_MODE
type
  _VIEW_OBJECT_ALPHA_MODE = TOleEnum;
const
  VIEW_OBJECT_ALPHA_MODE_IGNORE = $00000000;
  VIEW_OBJECT_ALPHA_MODE_PREMULTIPLIED = $00000001;
  VIEW_OBJECT_ALPHA_MODE_Max = $7FFFFFFF;

// Constants for enum _VIEW_OBJECT_COMPOSITION_MODE
type
  _VIEW_OBJECT_COMPOSITION_MODE = TOleEnum;
const
  VIEW_OBJECT_COMPOSITION_MODE_LEGACY = $00000000;
  VIEW_OBJECT_COMPOSITION_MODE_SURFACEPRESENTER = $00000001;
  VIEW_OBJECT_COMPOSITION_MODE_Max = $7FFFFFFF;

// Constants for enum DXGI_FORMAT
type
  DXGI_FORMAT = TOleEnum;
const
  DXGI_FORMAT_UNKNOWN = $00000000;
  DXGI_FORMAT_R32G32B32A32_TYPELESS = $00000001;
  DXGI_FORMAT_R32G32B32A32_FLOAT = $00000002;
  DXGI_FORMAT_R32G32B32A32_UINT = $00000003;
  DXGI_FORMAT_R32G32B32A32_SINT = $00000004;
  DXGI_FORMAT_R32G32B32_TYPELESS = $00000005;
  DXGI_FORMAT_R32G32B32_FLOAT = $00000006;
  DXGI_FORMAT_R32G32B32_UINT = $00000007;
  DXGI_FORMAT_R32G32B32_SINT = $00000008;
  DXGI_FORMAT_R16G16B16A16_TYPELESS = $00000009;
  DXGI_FORMAT_R16G16B16A16_FLOAT = $0000000A;
  DXGI_FORMAT_R16G16B16A16_UNORM = $0000000B;
  DXGI_FORMAT_R16G16B16A16_UINT = $0000000C;
  DXGI_FORMAT_R16G16B16A16_SNORM = $0000000D;
  DXGI_FORMAT_R16G16B16A16_SINT = $0000000E;
  DXGI_FORMAT_R32G32_TYPELESS = $0000000F;
  DXGI_FORMAT_R32G32_FLOAT = $00000010;
  DXGI_FORMAT_R32G32_UINT = $00000011;
  DXGI_FORMAT_R32G32_SINT = $00000012;
  DXGI_FORMAT_R32G8X24_TYPELESS = $00000013;
  DXGI_FORMAT_D32_FLOAT_S8X24_UINT = $00000014;
  DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS = $00000015;
  DXGI_FORMAT_X32_TYPELESS_G8X24_UINT = $00000016;
  DXGI_FORMAT_R10G10B10A2_TYPELESS = $00000017;
  DXGI_FORMAT_R10G10B10A2_UNORM = $00000018;
  DXGI_FORMAT_R10G10B10A2_UINT = $00000019;
  DXGI_FORMAT_R11G11B10_FLOAT = $0000001A;
  DXGI_FORMAT_R8G8B8A8_TYPELESS = $0000001B;
  DXGI_FORMAT_R8G8B8A8_UNORM = $0000001C;
  DXGI_FORMAT_R8G8B8A8_UNORM_SRGB = $0000001D;
  DXGI_FORMAT_R8G8B8A8_UINT = $0000001E;
  DXGI_FORMAT_R8G8B8A8_SNORM = $0000001F;
  DXGI_FORMAT_R8G8B8A8_SINT = $00000020;
  DXGI_FORMAT_R16G16_TYPELESS = $00000021;
  DXGI_FORMAT_R16G16_FLOAT = $00000022;
  DXGI_FORMAT_R16G16_UNORM = $00000023;
  DXGI_FORMAT_R16G16_UINT = $00000024;
  DXGI_FORMAT_R16G16_SNORM = $00000025;
  DXGI_FORMAT_R16G16_SINT = $00000026;
  DXGI_FORMAT_R32_TYPELESS = $00000027;
  DXGI_FORMAT_D32_FLOAT = $00000028;
  DXGI_FORMAT_R32_FLOAT = $00000029;
  DXGI_FORMAT_R32_UINT = $0000002A;
  DXGI_FORMAT_R32_SINT = $0000002B;
  DXGI_FORMAT_R24G8_TYPELESS = $0000002C;
  DXGI_FORMAT_D24_UNORM_S8_UINT = $0000002D;
  DXGI_FORMAT_R24_UNORM_X8_TYPELESS = $0000002E;
  DXGI_FORMAT_X24_TYPELESS_G8_UINT = $0000002F;
  DXGI_FORMAT_R8G8_TYPELESS = $00000030;
  DXGI_FORMAT_R8G8_UNORM = $00000031;
  DXGI_FORMAT_R8G8_UINT = $00000032;
  DXGI_FORMAT_R8G8_SNORM = $00000033;
  DXGI_FORMAT_R8G8_SINT = $00000034;
  DXGI_FORMAT_R16_TYPELESS = $00000035;
  DXGI_FORMAT_R16_FLOAT = $00000036;
  DXGI_FORMAT_D16_UNORM = $00000037;
  DXGI_FORMAT_R16_UNORM = $00000038;
  DXGI_FORMAT_R16_UINT = $00000039;
  DXGI_FORMAT_R16_SNORM = $0000003A;
  DXGI_FORMAT_R16_SINT = $0000003B;
  DXGI_FORMAT_R8_TYPELESS = $0000003C;
  DXGI_FORMAT_R8_UNORM = $0000003D;
  DXGI_FORMAT_R8_UINT = $0000003E;
  DXGI_FORMAT_R8_SNORM = $0000003F;
  DXGI_FORMAT_R8_SINT = $00000040;
  DXGI_FORMAT_A8_UNORM = $00000041;
  DXGI_FORMAT_R1_UNORM = $00000042;
  DXGI_FORMAT_R9G9B9E5_SHAREDEXP = $00000043;
  DXGI_FORMAT_R8G8_B8G8_UNORM = $00000044;
  DXGI_FORMAT_G8R8_G8B8_UNORM = $00000045;
  DXGI_FORMAT_BC1_TYPELESS = $00000046;
  DXGI_FORMAT_BC1_UNORM = $00000047;
  DXGI_FORMAT_BC1_UNORM_SRGB = $00000048;
  DXGI_FORMAT_BC2_TYPELESS = $00000049;
  DXGI_FORMAT_BC2_UNORM = $0000004A;
  DXGI_FORMAT_BC2_UNORM_SRGB = $0000004B;
  DXGI_FORMAT_BC3_TYPELESS = $0000004C;
  DXGI_FORMAT_BC3_UNORM = $0000004D;
  DXGI_FORMAT_BC3_UNORM_SRGB = $0000004E;
  DXGI_FORMAT_BC4_TYPELESS = $0000004F;
  DXGI_FORMAT_BC4_UNORM = $00000050;
  DXGI_FORMAT_BC4_SNORM = $00000051;
  DXGI_FORMAT_BC5_TYPELESS = $00000052;
  DXGI_FORMAT_BC5_UNORM = $00000053;
  DXGI_FORMAT_BC5_SNORM = $00000054;
  DXGI_FORMAT_B5G6R5_UNORM = $00000055;
  DXGI_FORMAT_B5G5R5A1_UNORM = $00000056;
  DXGI_FORMAT_B8G8R8A8_UNORM = $00000057;
  DXGI_FORMAT_B8G8R8X8_UNORM = $00000058;
  DXGI_FORMAT_R10G10B10_XR_BIAS_A2_UNORM = $00000059;
  DXGI_FORMAT_B8G8R8A8_TYPELESS = $0000005A;
  DXGI_FORMAT_B8G8R8A8_UNORM_SRGB = $0000005B;
  DXGI_FORMAT_B8G8R8X8_TYPELESS = $0000005C;
  DXGI_FORMAT_B8G8R8X8_UNORM_SRGB = $0000005D;
  DXGI_FORMAT_BC6H_TYPELESS = $0000005E;
  DXGI_FORMAT_BC6H_UF16 = $0000005F;
  DXGI_FORMAT_BC6H_SF16 = $00000060;
  DXGI_FORMAT_BC7_TYPELESS = $00000061;
  DXGI_FORMAT_BC7_UNORM = $00000062;
  DXGI_FORMAT_BC7_UNORM_SRGB = $00000063;
  DXGI_FORMAT_AYUV = $00000064;
  DXGI_FORMAT_Y410 = $00000065;
  DXGI_FORMAT_Y416 = $00000066;
  DXGI_FORMAT_NV12 = $00000067;
  DXGI_FORMAT_P010 = $00000068;
  DXGI_FORMAT_P016 = $00000069;
  DXGI_FORMAT_420_OPAQUE = $0000006A;
  DXGI_FORMAT_YUY2 = $0000006B;
  DXGI_FORMAT_Y210 = $0000006C;
  DXGI_FORMAT_Y216 = $0000006D;
  DXGI_FORMAT_NV11 = $0000006E;
  DXGI_FORMAT_AI44 = $0000006F;
  DXGI_FORMAT_IA44 = $00000070;
  DXGI_FORMAT_P8 = $00000071;
  DXGI_FORMAT_A8P8 = $00000072;
  DXGI_FORMAT_B4G4R4A4_UNORM = $00000073;
  DXGI_FORMAT_FORCE_UINT = $FFFFFFFF;

type

// *********************************************************************//
// Forward declaration of types defined in TypeLibrary                    
// *********************************************************************//
  IHTMLEventObj = interface;
  IHTMLEventObjDisp = dispinterface;
  IHTMLElement = interface;
  IHTMLElementDisp = dispinterface;
  IHTMLStyle = interface;
  IHTMLStyleDisp = dispinterface;
  IHTMLFiltersCollection = interface;
  IHTMLFiltersCollectionDisp = dispinterface;
  IElementBehaviorSite = interface;
  IElementBehavior = interface;
  IElementBehaviorFactory = interface;
  IElementBehaviorSiteOM = interface;
  IElementBehaviorRender = interface;
  IElementBehaviorSiteRender = interface;
  IDOMEvent = interface;
  IDOMEventDisp = dispinterface;
  IEventTarget = interface;
  IEventTargetDisp = dispinterface;
  IHTMLDOMConstructor = interface;
  IHTMLDOMConstructorDisp = dispinterface;
  IHTMLStyleSheetRule = interface;
  IHTMLStyleSheetRuleDisp = dispinterface;
  IHTMLRuleStyle = interface;
  IHTMLRuleStyleDisp = dispinterface;
  IHTMLCSSStyleDeclaration = interface;
  IHTMLCSSStyleDeclarationDisp = dispinterface;
  IHTMLCSSStyleDeclaration2 = interface;
  IHTMLCSSStyleDeclaration2Disp = dispinterface;
  IHTMLCSSStyleDeclaration3 = interface;
  IHTMLCSSStyleDeclaration3Disp = dispinterface;
  IHTMLStyleEnabled = interface;
  IHTMLStyleEnabledDisp = dispinterface;
  DispHTMLCSSStyleDeclaration = dispinterface;
  IHTMLStyle2 = interface;
  IHTMLStyle2Disp = dispinterface;
  IHTMLStyle3 = interface;
  IHTMLStyle3Disp = dispinterface;
  IHTMLStyle4 = interface;
  IHTMLStyle4Disp = dispinterface;
  IHTMLStyle5 = interface;
  IHTMLStyle5Disp = dispinterface;
  IHTMLStyle6 = interface;
  IHTMLStyle6Disp = dispinterface;
  IHTMLRuleStyle2 = interface;
  IHTMLRuleStyle2Disp = dispinterface;
  IHTMLRuleStyle3 = interface;
  IHTMLRuleStyle3Disp = dispinterface;
  IHTMLRuleStyle4 = interface;
  IHTMLRuleStyle4Disp = dispinterface;
  IHTMLRuleStyle5 = interface;
  IHTMLRuleStyle5Disp = dispinterface;
  IHTMLRuleStyle6 = interface;
  IHTMLRuleStyle6Disp = dispinterface;
  DispHTMLStyle = dispinterface;
  DispHTMLRuleStyle = dispinterface;
  IHTMLStyleSheetRulesCollection = interface;
  IHTMLStyleSheetRulesCollectionDisp = dispinterface;
  IHTMLStyleSheet = interface;
  IHTMLStyleSheetDisp = dispinterface;
  IHTMLStyleSheetsCollection = interface;
  IHTMLStyleSheetsCollectionDisp = dispinterface;
  IHTMLCSSRule = interface;
  IHTMLCSSRuleDisp = dispinterface;
  IHTMLCSSImportRule = interface;
  IHTMLCSSImportRuleDisp = dispinterface;
  IHTMLCSSMediaRule = interface;
  IHTMLCSSMediaRuleDisp = dispinterface;
  IHTMLCSSMediaList = interface;
  IHTMLCSSMediaListDisp = dispinterface;
  IHTMLCSSNamespaceRule = interface;
  IHTMLCSSNamespaceRuleDisp = dispinterface;
  IHTMLMSCSSKeyframeRule = interface;
  IHTMLMSCSSKeyframeRuleDisp = dispinterface;
  IHTMLMSCSSKeyframesRule = interface;
  IHTMLMSCSSKeyframesRuleDisp = dispinterface;
  DispHTMLCSSRule = dispinterface;
  DispHTMLCSSImportRule = dispinterface;
  DispHTMLCSSMediaRule = dispinterface;
  DispHTMLCSSMediaList = dispinterface;
  DispHTMLCSSNamespaceRule = dispinterface;
  DispHTMLMSCSSKeyframeRule = dispinterface;
  DispHTMLMSCSSKeyframesRule = dispinterface;
  IHTMLRenderStyle = interface;
  IHTMLRenderStyleDisp = dispinterface;
  DispHTMLRenderStyle = dispinterface;
  IHTMLCurrentStyle = interface;
  IHTMLCurrentStyleDisp = dispinterface;
  IHTMLCurrentStyle2 = interface;
  IHTMLCurrentStyle2Disp = dispinterface;
  IHTMLCurrentStyle3 = interface;
  IHTMLCurrentStyle3Disp = dispinterface;
  IHTMLCurrentStyle4 = interface;
  IHTMLCurrentStyle4Disp = dispinterface;
  IHTMLCurrentStyle5 = interface;
  IHTMLCurrentStyle5Disp = dispinterface;
  DispHTMLCurrentStyle = dispinterface;
  IHTMLRect = interface;
  IHTMLRectDisp = dispinterface;
  IHTMLRect2 = interface;
  IHTMLRect2Disp = dispinterface;
  IHTMLRectCollection = interface;
  IHTMLRectCollectionDisp = dispinterface;
  IHTMLElementCollection = interface;
  IHTMLElementCollectionDisp = dispinterface;
  IHTMLElement2 = interface;
  IHTMLElement2Disp = dispinterface;
  IHTMLAttributeCollection3 = interface;
  IHTMLAttributeCollection3Disp = dispinterface;
  IHTMLDOMAttribute = interface;
  IHTMLDOMAttributeDisp = dispinterface;
  IDOMDocumentType = interface;
  IDOMDocumentTypeDisp = dispinterface;
  IHTMLDocument7 = interface;
  IHTMLDocument7Disp = dispinterface;
  IHTMLFramesCollection2 = interface;
  IHTMLFramesCollection2Disp = dispinterface;
  IHTMLWindow2 = interface;
  IHTMLWindow2Disp = dispinterface;
  IHTMLImageElementFactory = interface;
  IHTMLImageElementFactoryDisp = dispinterface;
  IHTMLImgElement = interface;
  IHTMLImgElementDisp = dispinterface;
  IHTMLLocation = interface;
  IHTMLLocationDisp = dispinterface;
  IOmHistory = interface;
  IOmHistoryDisp = dispinterface;
  IOmNavigator = interface;
  IOmNavigatorDisp = dispinterface;
  IHTMLMimeTypesCollection = interface;
  IHTMLMimeTypesCollectionDisp = dispinterface;
  IHTMLPluginsCollection = interface;
  IHTMLPluginsCollectionDisp = dispinterface;
  IHTMLOpsProfile = interface;
  IHTMLOpsProfileDisp = dispinterface;
  IHTMLDocument = interface;
  IHTMLDocumentDisp = dispinterface;
  IHTMLDocument2 = interface;
  IHTMLDocument2Disp = dispinterface;
  IHTMLSelectionObject = interface;
  IHTMLSelectionObjectDisp = dispinterface;
  IHTMLScreen = interface;
  IHTMLScreenDisp = dispinterface;
  IHTMLOptionElementFactory = interface;
  IHTMLOptionElementFactoryDisp = dispinterface;
  IHTMLOptionElement = interface;
  IHTMLOptionElementDisp = dispinterface;
  IHTMLFormElement = interface;
  IHTMLFormElementDisp = dispinterface;
  IHTMLDOMNode = interface;
  IHTMLDOMNodeDisp = dispinterface;
  IHTMLSelection = interface;
  IHTMLSelectionDisp = dispinterface;
  IHTMLDOMRange = interface;
  IHTMLDOMRangeDisp = dispinterface;
  IDOMProcessingInstruction = interface;
  IDOMProcessingInstructionDisp = dispinterface;
  IHTMLDOMNode3 = interface;
  IHTMLDOMNode3Disp = dispinterface;
  IHTMLDOMNode2 = interface;
  IHTMLDOMNode2Disp = dispinterface;
  IHTMLDOMAttribute2 = interface;
  IHTMLDOMAttribute2Disp = dispinterface;
  IHTMLDOMAttribute3 = interface;
  IHTMLDOMAttribute3Disp = dispinterface;
  IHTMLDOMAttribute4 = interface;
  IHTMLDOMAttribute4Disp = dispinterface;
  IHTMLDOMTextNode = interface;
  IHTMLDOMTextNodeDisp = dispinterface;
  IHTMLDOMTextNode2 = interface;
  IHTMLDOMTextNode2Disp = dispinterface;
  IHTMLDOMTextNode3 = interface;
  IHTMLDOMTextNode3Disp = dispinterface;
  IHTMLDOMImplementation = interface;
  IHTMLDOMImplementationDisp = dispinterface;
  IHTMLDOMImplementation2 = interface;
  IHTMLDOMImplementation2Disp = dispinterface;
  DispHTMLDOMAttribute = dispinterface;
  DispHTMLDOMTextNode = dispinterface;
  DispHTMLDOMImplementation = dispinterface;
  IHTMLAttributeCollection = interface;
  IHTMLAttributeCollectionDisp = dispinterface;
  IHTMLAttributeCollection2 = interface;
  IHTMLAttributeCollection2Disp = dispinterface;
  IHTMLAttributeCollection4 = interface;
  IHTMLAttributeCollection4Disp = dispinterface;
  IHTMLDOMChildrenCollection = interface;
  IHTMLDOMChildrenCollectionDisp = dispinterface;
  IHTMLDOMChildrenCollection2 = interface;
  IHTMLDOMChildrenCollection2Disp = dispinterface;
  DispHTMLAttributeCollection = dispinterface;
  DispStaticNodeList = dispinterface;
  DispDOMChildrenCollection = dispinterface;
  HTMLElementEvents4 = dispinterface;
  HTMLElementEvents3 = dispinterface;
  HTMLElementEvents2 = dispinterface;
  HTMLElementEvents = dispinterface;
  IRulesAppliedCollection = interface;
  IRulesAppliedCollectionDisp = dispinterface;
  IRulesApplied = interface;
  IRulesAppliedDisp = dispinterface;
  IHTMLStyleSheetRulesAppliedCollection = interface;
  IHTMLStyleSheetRulesAppliedCollectionDisp = dispinterface;
  IHTMLElement3 = interface;
  IHTMLElement3Disp = dispinterface;
  IHTMLElement4 = interface;
  IHTMLElement4Disp = dispinterface;
  IElementSelector = interface;
  IElementSelectorDisp = dispinterface;
  IHTMLElementRender = interface;
  IHTMLUniqueName = interface;
  IHTMLUniqueNameDisp = dispinterface;
  IHTMLElement5 = interface;
  IHTMLElement5Disp = dispinterface;
  IHTMLElement6 = interface;
  IHTMLElement6Disp = dispinterface;
  IHTMLElement7 = interface;
  IHTMLElement7Disp = dispinterface;
  IHTMLElementAppliedStyles = interface;
  IHTMLElementAppliedStylesDisp = dispinterface;
  IElementTraversal = interface;
  IElementTraversalDisp = dispinterface;
  IHTMLDatabinding = interface;
  IHTMLDatabindingDisp = dispinterface;
  IHTMLElementDefaults = interface;
  IHTMLElementDefaultsDisp = dispinterface;
  DispHTMLDefaults = dispinterface;
  IHTCDefaultDispatch = interface;
  IHTCDefaultDispatchDisp = dispinterface;
  IHTCPropertyBehavior = interface;
  IHTCPropertyBehaviorDisp = dispinterface;
  IHTCMethodBehavior = interface;
  IHTCMethodBehaviorDisp = dispinterface;
  IHTCEventBehavior = interface;
  IHTCEventBehaviorDisp = dispinterface;
  IHTCAttachBehavior = interface;
  IHTCAttachBehaviorDisp = dispinterface;
  IHTCAttachBehavior2 = interface;
  IHTCAttachBehavior2Disp = dispinterface;
  IHTCDescBehavior = interface;
  IHTCDescBehaviorDisp = dispinterface;
  DispHTCDefaultDispatch = dispinterface;
  DispHTCPropertyBehavior = dispinterface;
  DispHTCMethodBehavior = dispinterface;
  DispHTCEventBehavior = dispinterface;
  DispHTCAttachBehavior = dispinterface;
  DispHTCDescBehavior = dispinterface;
  IHTMLUrnCollection = interface;
  IHTMLUrnCollectionDisp = dispinterface;
  DispHTMLUrnCollection = dispinterface;
  IHTMLGenericElement = interface;
  IHTMLGenericElementDisp = dispinterface;
  DispHTMLGenericElement = dispinterface;
  IHTMLStyleSheetRuleApplied = interface;
  IHTMLStyleSheetRuleAppliedDisp = dispinterface;
  IHTMLStyleSheetRule2 = interface;
  IHTMLStyleSheetRule2Disp = dispinterface;
  IHTMLStyleSheetRulesCollection2 = interface;
  IHTMLStyleSheetRulesCollection2Disp = dispinterface;
  DispHTMLStyleSheetRule = dispinterface;
  DispHTMLStyleSheetRulesCollection = dispinterface;
  IHTMLStyleSheetPage = interface;
  IHTMLStyleSheetPageDisp = dispinterface;
  IHTMLStyleSheetPage2 = interface;
  IHTMLStyleSheetPage2Disp = dispinterface;
  IHTMLStyleSheetPagesCollection = interface;
  IHTMLStyleSheetPagesCollectionDisp = dispinterface;
  DispHTMLStyleSheetPage = dispinterface;
  DispHTMLStyleSheetPagesCollection = dispinterface;
  IHTMLStyleSheet2 = interface;
  IHTMLStyleSheet2Disp = dispinterface;
  IHTMLStyleSheet3 = interface;
  IHTMLStyleSheet3Disp = dispinterface;
  IHTMLStyleSheet4 = interface;
  IHTMLStyleSheet4Disp = dispinterface;
  DispHTMLStyleSheet = dispinterface;
  IHTMLStyleSheetsCollection2 = interface;
  IHTMLStyleSheetsCollection2Disp = dispinterface;
  DispHTMLStyleSheetsCollection = dispinterface;
  HTMLLinkElementEvents2 = dispinterface;
  HTMLLinkElementEvents = dispinterface;
  IHTMLLinkElement = interface;
  IHTMLLinkElementDisp = dispinterface;
  IHTMLLinkElement2 = interface;
  IHTMLLinkElement2Disp = dispinterface;
  IHTMLLinkElement3 = interface;
  IHTMLLinkElement3Disp = dispinterface;
  IHTMLLinkElement4 = interface;
  IHTMLLinkElement4Disp = dispinterface;
  IHTMLLinkElement5 = interface;
  IHTMLLinkElement5Disp = dispinterface;
  DispHTMLLinkElement = dispinterface;
  IHTMLTxtRange = interface;
  IHTMLTxtRangeDisp = dispinterface;
  IHTMLTextRangeMetrics = interface;
  IHTMLTextRangeMetricsDisp = dispinterface;
  IHTMLTextRangeMetrics2 = interface;
  IHTMLTextRangeMetrics2Disp = dispinterface;
  IHTMLTxtRangeCollection = interface;
  IHTMLTxtRangeCollectionDisp = dispinterface;
  DispHTMLDOMRange = dispinterface;
  HTMLFormElementEvents2 = dispinterface;
  HTMLFormElementEvents = dispinterface;
  IHTMLFormElement2 = interface;
  IHTMLFormElement2Disp = dispinterface;
  IHTMLFormElement3 = interface;
  IHTMLFormElement3Disp = dispinterface;
  IHTMLSubmitData = interface;
  IHTMLSubmitDataDisp = dispinterface;
  IHTMLFormElement4 = interface;
  IHTMLFormElement4Disp = dispinterface;
  DispHTMLFormElement = dispinterface;
  HTMLControlElementEvents2 = dispinterface;
  HTMLControlElementEvents = dispinterface;
  IHTMLControlElement = interface;
  IHTMLControlElementDisp = dispinterface;
  IHTMLTextElement = interface;
  IHTMLTextElementDisp = dispinterface;
  DispHTMLTextElement = dispinterface;
  HTMLTextContainerEvents2 = dispinterface;
  HTMLTextContainerEvents = dispinterface;
  IHTMLTextContainer = interface;
  IHTMLTextContainerDisp = dispinterface;
  IHTMLControlRange = interface;
  IHTMLControlRangeDisp = dispinterface;
  IHTMLControlRange2 = interface;
  IHTMLControlRange2Disp = dispinterface;
  HTMLImgEvents2 = dispinterface;
  HTMLImgEvents = dispinterface;
  IHTMLImgElement2 = interface;
  IHTMLImgElement2Disp = dispinterface;
  IHTMLImgElement3 = interface;
  IHTMLImgElement3Disp = dispinterface;
  IHTMLImgElement4 = interface;
  IHTMLImgElement4Disp = dispinterface;
  IHTMLMSImgElement = interface;
  IHTMLMSImgElementDisp = dispinterface;
  DispHTMLImg = dispinterface;
  IHTMLBodyElement = interface;
  IHTMLBodyElementDisp = dispinterface;
  IHTMLBodyElement2 = interface;
  IHTMLBodyElement2Disp = dispinterface;
  IHTMLBodyElement3 = interface;
  IHTMLBodyElement3Disp = dispinterface;
  IHTMLBodyElement4 = interface;
  IHTMLBodyElement4Disp = dispinterface;
  IHTMLBodyElement5 = interface;
  IHTMLBodyElement5Disp = dispinterface;
  DispHTMLBody = dispinterface;
  IHTMLFontElement = interface;
  IHTMLFontElementDisp = dispinterface;
  DispHTMLFontElement = dispinterface;
  HTMLAnchorEvents2 = dispinterface;
  HTMLAnchorEvents = dispinterface;
  IHTMLAnchorElement = interface;
  IHTMLAnchorElementDisp = dispinterface;
  IHTMLAnchorElement2 = interface;
  IHTMLAnchorElement2Disp = dispinterface;
  IHTMLAnchorElement3 = interface;
  IHTMLAnchorElement3Disp = dispinterface;
  DispHTMLAnchorElement = dispinterface;
  HTMLLabelEvents2 = dispinterface;
  HTMLLabelEvents = dispinterface;
  IHTMLLabelElement = interface;
  IHTMLLabelElementDisp = dispinterface;
  IHTMLLabelElement2 = interface;
  IHTMLLabelElement2Disp = dispinterface;
  DispHTMLLabelElement = dispinterface;
  IHTMLListElement = interface;
  IHTMLListElementDisp = dispinterface;
  IHTMLListElement2 = interface;
  IHTMLListElement2Disp = dispinterface;
  DispHTMLListElement = dispinterface;
  IHTMLUListElement = interface;
  IHTMLUListElementDisp = dispinterface;
  DispHTMLUListElement = dispinterface;
  IHTMLOListElement = interface;
  IHTMLOListElementDisp = dispinterface;
  DispHTMLOListElement = dispinterface;
  IHTMLLIElement = interface;
  IHTMLLIElementDisp = dispinterface;
  DispHTMLLIElement = dispinterface;
  IHTMLBlockElement = interface;
  IHTMLBlockElementDisp = dispinterface;
  IHTMLBlockElement2 = interface;
  IHTMLBlockElement2Disp = dispinterface;
  IHTMLBlockElement3 = interface;
  IHTMLBlockElement3Disp = dispinterface;
  DispHTMLBlockElement = dispinterface;
  IHTMLDivElement = interface;
  IHTMLDivElementDisp = dispinterface;
  DispHTMLDivElement = dispinterface;
  IHTMLDDElement = interface;
  IHTMLDDElementDisp = dispinterface;
  DispHTMLDDElement = dispinterface;
  IHTMLDTElement = interface;
  IHTMLDTElementDisp = dispinterface;
  DispHTMLDTElement = dispinterface;
  IHTMLBRElement = interface;
  IHTMLBRElementDisp = dispinterface;
  DispHTMLBRElement = dispinterface;
  IHTMLDListElement = interface;
  IHTMLDListElementDisp = dispinterface;
  DispHTMLDListElement = dispinterface;
  IHTMLHRElement = interface;
  IHTMLHRElementDisp = dispinterface;
  DispHTMLHRElement = dispinterface;
  IHTMLParaElement = interface;
  IHTMLParaElementDisp = dispinterface;
  DispHTMLParaElement = dispinterface;
  IHTMLElementCollection2 = interface;
  IHTMLElementCollection2Disp = dispinterface;
  IHTMLElementCollection3 = interface;
  IHTMLElementCollection3Disp = dispinterface;
  IHTMLElementCollection4 = interface;
  IHTMLElementCollection4Disp = dispinterface;
  DispHTMLElementCollection = dispinterface;
  IHTMLHeaderElement = interface;
  IHTMLHeaderElementDisp = dispinterface;
  DispHTMLHeaderElement = dispinterface;
  HTMLSelectElementEvents2 = dispinterface;
  HTMLSelectElementEvents = dispinterface;
  IHTMLSelectElementEx = interface;
  IHTMLSelectElement = interface;
  IHTMLSelectElementDisp = dispinterface;
  IHTMLSelectElement2 = interface;
  IHTMLSelectElement2Disp = dispinterface;
  IHTMLSelectElement4 = interface;
  IHTMLSelectElement4Disp = dispinterface;
  IHTMLSelectElement5 = interface;
  IHTMLSelectElement5Disp = dispinterface;
  IHTMLSelectElement6 = interface;
  IHTMLSelectElement6Disp = dispinterface;
  DispHTMLSelectElement = dispinterface;
  DispHTMLWndSelectElement = dispinterface;
  IHTMLSelectionObject2 = interface;
  IHTMLSelectionObject2Disp = dispinterface;
  IHTMLOptionElement3 = interface;
  IHTMLOptionElement3Disp = dispinterface;
  IHTMLOptionElement4 = interface;
  IHTMLOptionElement4Disp = dispinterface;
  DispHTMLOptionElement = dispinterface;
  DispHTMLWndOptionElement = dispinterface;
  HTMLButtonElementEvents2 = dispinterface;
  HTMLButtonElementEvents = dispinterface;
  HTMLInputTextElementEvents2 = dispinterface;
  HTMLOptionButtonElementEvents2 = dispinterface;
  HTMLInputFileElementEvents2 = dispinterface;
  HTMLInputImageEvents2 = dispinterface;
  HTMLInputTextElementEvents = dispinterface;
  HTMLOptionButtonElementEvents = dispinterface;
  HTMLInputFileElementEvents = dispinterface;
  HTMLInputImageEvents = dispinterface;
  IHTMLInputElement = interface;
  IHTMLInputElementDisp = dispinterface;
  IHTMLInputElement2 = interface;
  IHTMLInputElement2Disp = dispinterface;
  IHTMLInputElement3 = interface;
  IHTMLInputElement3Disp = dispinterface;
  IHTMLInputButtonElement = interface;
  IHTMLInputButtonElementDisp = dispinterface;
  IHTMLInputHiddenElement = interface;
  IHTMLInputHiddenElementDisp = dispinterface;
  IHTMLInputTextElement = interface;
  IHTMLInputTextElementDisp = dispinterface;
  IHTMLInputTextElement2 = interface;
  IHTMLInputTextElement2Disp = dispinterface;
  IHTMLInputFileElement = interface;
  IHTMLInputFileElementDisp = dispinterface;
  IHTMLOptionButtonElement = interface;
  IHTMLOptionButtonElementDisp = dispinterface;
  IHTMLInputImage = interface;
  IHTMLInputImageDisp = dispinterface;
  IHTMLInputRangeElement = interface;
  IHTMLInputRangeElementDisp = dispinterface;
  DispHTMLInputElement = dispinterface;
  IHTMLTextAreaElement = interface;
  IHTMLTextAreaElementDisp = dispinterface;
  IHTMLTextAreaElement2 = interface;
  IHTMLTextAreaElement2Disp = dispinterface;
  DispHTMLTextAreaElement = dispinterface;
  DispHTMLRichtextElement = dispinterface;
  IHTMLButtonElement = interface;
  IHTMLButtonElementDisp = dispinterface;
  IHTMLButtonElement2 = interface;
  IHTMLButtonElement2Disp = dispinterface;
  DispHTMLButtonElement = dispinterface;
  HTMLMarqueeElementEvents2 = dispinterface;
  HTMLMarqueeElementEvents = dispinterface;
  IHTMLMarqueeElement = interface;
  IHTMLMarqueeElementDisp = dispinterface;
  DispHTMLMarqueeElement = dispinterface;
  IHTMLHtmlElement = interface;
  IHTMLHtmlElementDisp = dispinterface;
  IHTMLHeadElement = interface;
  IHTMLHeadElementDisp = dispinterface;
  IHTMLHeadElement2 = interface;
  IHTMLHeadElement2Disp = dispinterface;
  IHTMLTitleElement = interface;
  IHTMLTitleElementDisp = dispinterface;
  IHTMLMetaElement = interface;
  IHTMLMetaElementDisp = dispinterface;
  IHTMLMetaElement2 = interface;
  IHTMLMetaElement2Disp = dispinterface;
  IHTMLMetaElement3 = interface;
  IHTMLMetaElement3Disp = dispinterface;
  IHTMLBaseElement = interface;
  IHTMLBaseElementDisp = dispinterface;
  IHTMLBaseElement2 = interface;
  IHTMLBaseElement2Disp = dispinterface;
  IHTMLIsIndexElement = interface;
  IHTMLIsIndexElementDisp = dispinterface;
  IHTMLIsIndexElement2 = interface;
  IHTMLIsIndexElement2Disp = dispinterface;
  IHTMLNextIdElement = interface;
  IHTMLNextIdElementDisp = dispinterface;
  DispHTMLHtmlElement = dispinterface;
  DispHTMLHeadElement = dispinterface;
  DispHTMLTitleElement = dispinterface;
  DispHTMLMetaElement = dispinterface;
  DispHTMLBaseElement = dispinterface;
  DispHTMLIsIndexElement = dispinterface;
  DispHTMLNextIdElement = dispinterface;
  IHTMLBaseFontElement = interface;
  IHTMLBaseFontElementDisp = dispinterface;
  DispHTMLBaseFontElement = dispinterface;
  IHTMLUnknownElement = interface;
  IHTMLUnknownElementDisp = dispinterface;
  DispHTMLUnknownElement = dispinterface;
  IWebGeolocation = interface;
  IWebGeolocationDisp = dispinterface;
  INavigatorGeolocation = interface;
  INavigatorGeolocationDisp = dispinterface;
  INavigatorDoNotTrack = interface;
  INavigatorDoNotTrackDisp = dispinterface;
  DispHTMLHistory = dispinterface;
  DispCPlugins = dispinterface;
  DispHTMLNavigator = dispinterface;
  DispHTMLLocation = dispinterface;
  IHTMLBookmarkCollection = interface;
  IHTMLBookmarkCollectionDisp = dispinterface;
  IHTMLDataTransfer = interface;
  IHTMLDataTransferDisp = dispinterface;
  IHTMLEventObj2 = interface;
  IHTMLEventObj2Disp = dispinterface;
  IHTMLEventObj3 = interface;
  IHTMLEventObj3Disp = dispinterface;
  IHTMLEventObj4 = interface;
  IHTMLEventObj4Disp = dispinterface;
  IHTMLEventObj5 = interface;
  IHTMLEventObj5Disp = dispinterface;
  IHTMLEventObj6 = interface;
  IHTMLEventObj6Disp = dispinterface;
  DispCEventObj = dispinterface;
  IHTMLStyleMedia = interface;
  IHTMLStyleMediaDisp = dispinterface;
  DispHTMLStyleMedia = dispinterface;
  HTMLWindowEvents3 = dispinterface;
  HTMLWindowEvents2 = dispinterface;
  HTMLWindowEvents = dispinterface;
  IHTMLWindow3 = interface;
  IHTMLWindow3Disp = dispinterface;
  IHTMLFrameBase = interface;
  IHTMLFrameBaseDisp = dispinterface;
  IHTMLStorage = interface;
  IHTMLStorageDisp = dispinterface;
  IHTMLPerformance = interface;
  IHTMLPerformanceDisp = dispinterface;
  IHTMLPerformanceNavigation = interface;
  IHTMLPerformanceNavigationDisp = dispinterface;
  IHTMLPerformanceTiming = interface;
  IHTMLPerformanceTimingDisp = dispinterface;
  IHTMLApplicationCache = interface;
  IHTMLApplicationCacheDisp = dispinterface;
  IHTMLScreen2 = interface;
  IHTMLScreen2Disp = dispinterface;
  IHTMLScreen3 = interface;
  IHTMLScreen3Disp = dispinterface;
  IHTMLScreen4 = interface;
  IHTMLScreen4Disp = dispinterface;
  IHTMLWindow4 = interface;
  IHTMLWindow4Disp = dispinterface;
  IHTMLWindow5 = interface;
  IHTMLWindow5Disp = dispinterface;
  IHTMLWindow6 = interface;
  IHTMLWindow6Disp = dispinterface;
  IHTMLWindow7 = interface;
  IHTMLWindow7Disp = dispinterface;
  IHTMLWindow8 = interface;
  IHTMLWindow8Disp = dispinterface;
  DispHTMLScreen = dispinterface;
  DispHTMLWindow2 = dispinterface;
  DispHTMLWindowProxy = dispinterface;
  IHTMLDocumentCompatibleInfo = interface;
  IHTMLDocumentCompatibleInfoDisp = dispinterface;
  IHTMLDocumentCompatibleInfoCollection = interface;
  IHTMLDocumentCompatibleInfoCollectionDisp = dispinterface;
  DispHTMLDocumentCompatibleInfo = dispinterface;
  DispHTMLDocumentCompatibleInfoCollection = dispinterface;
  HTMLDocumentEvents4 = dispinterface;
  HTMLDocumentEvents3 = dispinterface;
  HTMLDocumentEvents2 = dispinterface;
  HTMLDocumentEvents = dispinterface;
  ISVGSVGElement = interface;
  ISVGSVGElementDisp = dispinterface;
  ISVGAnimatedLength = interface;
  ISVGAnimatedLengthDisp = dispinterface;
  ISVGLength = interface;
  ISVGLengthDisp = dispinterface;
  ISVGRect = interface;
  ISVGRectDisp = dispinterface;
  ISVGViewSpec = interface;
  ISVGViewSpecDisp = dispinterface;
  ISVGPoint = interface;
  ISVGPointDisp = dispinterface;
  ISVGMatrix = interface;
  ISVGMatrixDisp = dispinterface;
  ISVGElement = interface;
  ISVGElementDisp = dispinterface;
  ISVGAnimatedEnumeration = interface;
  ISVGAnimatedEnumerationDisp = dispinterface;
  ISVGNumber = interface;
  ISVGNumberDisp = dispinterface;
  ISVGAngle = interface;
  ISVGAngleDisp = dispinterface;
  ISVGTransform = interface;
  ISVGTransformDisp = dispinterface;
  IDOMNodeIterator = interface;
  IDOMNodeIteratorDisp = dispinterface;
  IDOMTreeWalker = interface;
  IDOMTreeWalkerDisp = dispinterface;
  IHTMLDocument3 = interface;
  IHTMLDocument3Disp = dispinterface;
  IHTMLDocument4 = interface;
  IHTMLDocument4Disp = dispinterface;
  IHTMLDocument5 = interface;
  IHTMLDocument5Disp = dispinterface;
  IHTMLDocument6 = interface;
  IHTMLDocument6Disp = dispinterface;
  IHTMLDocument8 = interface;
  IHTMLDocument8Disp = dispinterface;
  IDocumentEvent = interface;
  IDocumentEventDisp = dispinterface;
  IDocumentRange = interface;
  IDocumentRangeDisp = dispinterface;
  IDocumentSelector = interface;
  IDocumentSelectorDisp = dispinterface;
  IDocumentTraversal = interface;
  IDocumentTraversalDisp = dispinterface;
  DispHTMLDocument = dispinterface;
  ISVGDocument = interface;
  ISVGDocumentDisp = dispinterface;
  DWebBridgeEvents = dispinterface;
  IWebBridge = interface;
  IWebBridgeDisp = dispinterface;
  IWBScriptControl = interface;
  IWBScriptControlDisp = dispinterface;
  IHTMLEmbedElement = interface;
  IHTMLEmbedElementDisp = dispinterface;
  IHTMLEmbedElement2 = interface;
  IHTMLEmbedElement2Disp = dispinterface;
  DispHTMLEmbed = dispinterface;
  IGetSVGDocument = interface;
  IGetSVGDocumentDisp = dispinterface;
  HTMLMapEvents2 = dispinterface;
  HTMLMapEvents = dispinterface;
  IHTMLAreasCollection = interface;
  IHTMLAreasCollectionDisp = dispinterface;
  IHTMLAreasCollection2 = interface;
  IHTMLAreasCollection2Disp = dispinterface;
  IHTMLAreasCollection3 = interface;
  IHTMLAreasCollection3Disp = dispinterface;
  IHTMLAreasCollection4 = interface;
  IHTMLAreasCollection4Disp = dispinterface;
  IHTMLMapElement = interface;
  IHTMLMapElementDisp = dispinterface;
  DispHTMLAreasCollection = dispinterface;
  DispHTMLMapElement = dispinterface;
  HTMLAreaEvents2 = dispinterface;
  HTMLAreaEvents = dispinterface;
  IHTMLAreaElement = interface;
  IHTMLAreaElementDisp = dispinterface;
  IHTMLAreaElement2 = interface;
  IHTMLAreaElement2Disp = dispinterface;
  DispHTMLAreaElement = dispinterface;
  IHTMLTableCaption = interface;
  IHTMLTableCaptionDisp = dispinterface;
  DispHTMLTableCaption = dispinterface;
  IHTMLCommentElement = interface;
  IHTMLCommentElementDisp = dispinterface;
  IHTMLCommentElement2 = interface;
  IHTMLCommentElement2Disp = dispinterface;
  IHTMLCommentElement3 = interface;
  IHTMLCommentElement3Disp = dispinterface;
  DispHTMLCommentElement = dispinterface;
  IHTMLPhraseElement = interface;
  IHTMLPhraseElementDisp = dispinterface;
  IHTMLPhraseElement2 = interface;
  IHTMLPhraseElement2Disp = dispinterface;
  IHTMLPhraseElement3 = interface;
  IHTMLPhraseElement3Disp = dispinterface;
  IHTMLSpanElement = interface;
  IHTMLSpanElementDisp = dispinterface;
  DispHTMLPhraseElement = dispinterface;
  DispHTMLSpanElement = dispinterface;
  HTMLTableEvents2 = dispinterface;
  HTMLTableEvents = dispinterface;
  IHTMLTableSection = interface;
  IHTMLTableSectionDisp = dispinterface;
  IHTMLTable = interface;
  IHTMLTableDisp = dispinterface;
  IHTMLTable2 = interface;
  IHTMLTable2Disp = dispinterface;
  IHTMLTable3 = interface;
  IHTMLTable3Disp = dispinterface;
  IHTMLTable4 = interface;
  IHTMLTable4Disp = dispinterface;
  IHTMLTableCol = interface;
  IHTMLTableColDisp = dispinterface;
  IHTMLTableCol2 = interface;
  IHTMLTableCol2Disp = dispinterface;
  IHTMLTableCol3 = interface;
  IHTMLTableCol3Disp = dispinterface;
  IHTMLTableSection2 = interface;
  IHTMLTableSection2Disp = dispinterface;
  IHTMLTableSection3 = interface;
  IHTMLTableSection3Disp = dispinterface;
  IHTMLTableSection4 = interface;
  IHTMLTableSection4Disp = dispinterface;
  IHTMLTableRow = interface;
  IHTMLTableRowDisp = dispinterface;
  IHTMLTableRow2 = interface;
  IHTMLTableRow2Disp = dispinterface;
  IHTMLTableRow3 = interface;
  IHTMLTableRow3Disp = dispinterface;
  IHTMLTableRow4 = interface;
  IHTMLTableRow4Disp = dispinterface;
  IHTMLTableRowMetrics = interface;
  IHTMLTableRowMetricsDisp = dispinterface;
  IHTMLTableCell = interface;
  IHTMLTableCellDisp = dispinterface;
  IHTMLTableCell2 = interface;
  IHTMLTableCell2Disp = dispinterface;
  IHTMLTableCell3 = interface;
  IHTMLTableCell3Disp = dispinterface;
  DispHTMLTable = dispinterface;
  DispHTMLTableCol = dispinterface;
  DispHTMLTableSection = dispinterface;
  DispHTMLTableRow = dispinterface;
  DispHTMLTableCell = dispinterface;
  HTMLScriptEvents2 = dispinterface;
  HTMLScriptEvents = dispinterface;
  IHTMLScriptElement = interface;
  IHTMLScriptElementDisp = dispinterface;
  IHTMLScriptElement2 = interface;
  IHTMLScriptElement2Disp = dispinterface;
  IHTMLScriptElement3 = interface;
  IHTMLScriptElement3Disp = dispinterface;
  IHTMLScriptElement4 = interface;
  IHTMLScriptElement4Disp = dispinterface;
  DispHTMLScriptElement = dispinterface;
  IHTMLNoShowElement = interface;
  IHTMLNoShowElementDisp = dispinterface;
  DispHTMLNoShowElement = dispinterface;
  HTMLObjectElementEvents2 = dispinterface;
  HTMLObjectElementEvents = dispinterface;
  IHTMLObjectElement = interface;
  IHTMLObjectElementDisp = dispinterface;
  IHTMLObjectElement2 = interface;
  IHTMLObjectElement2Disp = dispinterface;
  IHTMLObjectElement3 = interface;
  IHTMLObjectElement3Disp = dispinterface;
  IHTMLObjectElement4 = interface;
  IHTMLObjectElement4Disp = dispinterface;
  IHTMLObjectElement5 = interface;
  IHTMLObjectElement5Disp = dispinterface;
  IHTMLParamElement = interface;
  IHTMLParamElementDisp = dispinterface;
  IHTMLParamElement2 = interface;
  IHTMLParamElement2Disp = dispinterface;
  DispHTMLObjectElement = dispinterface;
  DispHTMLParamElement = dispinterface;
  HTMLFrameSiteEvents2 = dispinterface;
  HTMLFrameSiteEvents = dispinterface;
  IHTMLFrameBase2 = interface;
  IHTMLFrameBase2Disp = dispinterface;
  IHTMLFrameBase3 = interface;
  IHTMLFrameBase3Disp = dispinterface;
  DispHTMLFrameBase = dispinterface;
  IHTMLFrameElement = interface;
  IHTMLFrameElementDisp = dispinterface;
  IHTMLFrameElement2 = interface;
  IHTMLFrameElement2Disp = dispinterface;
  IHTMLFrameElement3 = interface;
  IHTMLFrameElement3Disp = dispinterface;
  DispHTMLFrameElement = dispinterface;
  IHTMLIFrameElement = interface;
  IHTMLIFrameElementDisp = dispinterface;
  IHTMLIFrameElement2 = interface;
  IHTMLIFrameElement2Disp = dispinterface;
  IHTMLIFrameElement3 = interface;
  IHTMLIFrameElement3Disp = dispinterface;
  DispHTMLIFrame = dispinterface;
  IHTMLDivPosition = interface;
  IHTMLDivPositionDisp = dispinterface;
  IHTMLFieldSetElement = interface;
  IHTMLFieldSetElementDisp = dispinterface;
  IHTMLFieldSetElement2 = interface;
  IHTMLFieldSetElement2Disp = dispinterface;
  IHTMLLegendElement = interface;
  IHTMLLegendElementDisp = dispinterface;
  IHTMLLegendElement2 = interface;
  IHTMLLegendElement2Disp = dispinterface;
  DispHTMLDivPosition = dispinterface;
  DispHTMLFieldSetElement = dispinterface;
  DispHTMLLegendElement = dispinterface;
  IHTMLSpanFlow = interface;
  IHTMLSpanFlowDisp = dispinterface;
  DispHTMLSpanFlow = dispinterface;
  IHTMLFrameSetElement = interface;
  IHTMLFrameSetElementDisp = dispinterface;
  IHTMLFrameSetElement2 = interface;
  IHTMLFrameSetElement2Disp = dispinterface;
  IHTMLFrameSetElement3 = interface;
  IHTMLFrameSetElement3Disp = dispinterface;
  DispHTMLFrameSetSite = dispinterface;
  IHTMLBGsound = interface;
  IHTMLBGsoundDisp = dispinterface;
  DispHTMLBGsound = dispinterface;
  IHTMLFontNamesCollection = interface;
  IHTMLFontNamesCollectionDisp = dispinterface;
  IHTMLFontSizesCollection = interface;
  IHTMLFontSizesCollectionDisp = dispinterface;
  IHTMLOptionsHolder = interface;
  IHTMLOptionsHolderDisp = dispinterface;
  HTMLStyleElementEvents2 = dispinterface;
  HTMLStyleElementEvents = dispinterface;
  IHTMLStyleElement = interface;
  IHTMLStyleElementDisp = dispinterface;
  IHTMLStyleElement2 = interface;
  IHTMLStyleElement2Disp = dispinterface;
  DispHTMLStyleElement = dispinterface;
  IHTMLStyleFontFace = interface;
  IHTMLStyleFontFaceDisp = dispinterface;
  IHTMLStyleFontFace2 = interface;
  IHTMLStyleFontFace2Disp = dispinterface;
  DispHTMLStyleFontFace = dispinterface;
  IHTMLXDomainRequest = interface;
  IHTMLXDomainRequestDisp = dispinterface;
  IHTMLXDomainRequestFactory = interface;
  IHTMLXDomainRequestFactoryDisp = dispinterface;
  DispXDomainRequest = dispinterface;
  IHTMLStorage2 = interface;
  IHTMLStorage2Disp = dispinterface;
  DispHTMLStorage = dispinterface;
  DispDOMEvent = dispinterface;
  IDOMUIEvent = interface;
  IDOMUIEventDisp = dispinterface;
  DispDOMUIEvent = dispinterface;
  IDOMMouseEvent = interface;
  IDOMMouseEventDisp = dispinterface;
  DispDOMMouseEvent = dispinterface;
  IDOMDragEvent = interface;
  IDOMDragEventDisp = dispinterface;
  DispDOMDragEvent = dispinterface;
  IDOMMouseWheelEvent = interface;
  IDOMMouseWheelEventDisp = dispinterface;
  DispDOMMouseWheelEvent = dispinterface;
  IDOMWheelEvent = interface;
  IDOMWheelEventDisp = dispinterface;
  DispDOMWheelEvent = dispinterface;
  IDOMTextEvent = interface;
  IDOMTextEventDisp = dispinterface;
  DispDOMTextEvent = dispinterface;
  IDOMKeyboardEvent = interface;
  IDOMKeyboardEventDisp = dispinterface;
  DispDOMKeyboardEvent = dispinterface;
  IDOMCompositionEvent = interface;
  IDOMCompositionEventDisp = dispinterface;
  DispDOMCompositionEvent = dispinterface;
  IDOMMutationEvent = interface;
  IDOMMutationEventDisp = dispinterface;
  DispDOMMutationEvent = dispinterface;
  IDOMBeforeUnloadEvent = interface;
  IDOMBeforeUnloadEventDisp = dispinterface;
  DispDOMBeforeUnloadEvent = dispinterface;
  IDOMFocusEvent = interface;
  IDOMFocusEventDisp = dispinterface;
  DispDOMFocusEvent = dispinterface;
  IDOMCustomEvent = interface;
  IDOMCustomEventDisp = dispinterface;
  DispDOMCustomEvent = dispinterface;
  ICanvasGradient = interface;
  ICanvasGradientDisp = dispinterface;
  ICanvasPattern = interface;
  ICanvasPatternDisp = dispinterface;
  ICanvasTextMetrics = interface;
  ICanvasTextMetricsDisp = dispinterface;
  ICanvasImageData = interface;
  ICanvasImageDataDisp = dispinterface;
  ICanvasPixelArray = interface;
  ICanvasPixelArrayDisp = dispinterface;
  IHTMLCanvasElement = interface;
  IHTMLCanvasElementDisp = dispinterface;
  ICanvasRenderingContext2D = interface;
  ICanvasRenderingContext2DDisp = dispinterface;
  DispCanvasGradient = dispinterface;
  DispCanvasPattern = dispinterface;
  DispCanvasTextMetrics = dispinterface;
  DispCanvasImageData = dispinterface;
  DispCanvasRenderingContext2D = dispinterface;
  DispHTMLCanvasElement = dispinterface;
  IDOMProgressEvent = interface;
  IDOMProgressEventDisp = dispinterface;
  DispDOMProgressEvent = dispinterface;
  IDOMMessageEvent = interface;
  IDOMMessageEventDisp = dispinterface;
  DispDOMMessageEvent = dispinterface;
  IDOMSiteModeEvent = interface;
  IDOMSiteModeEventDisp = dispinterface;
  DispDOMSiteModeEvent = dispinterface;
  IDOMStorageEvent = interface;
  IDOMStorageEventDisp = dispinterface;
  DispDOMStorageEvent = dispinterface;
  IXMLHttpRequestEventTarget = interface;
  IXMLHttpRequestEventTargetDisp = dispinterface;
  DispXMLHttpRequestEventTarget = dispinterface;
  HTMLXMLHttpRequestEvents = dispinterface;
  IHTMLXMLHttpRequest = interface;
  IHTMLXMLHttpRequestDisp = dispinterface;
  IHTMLXMLHttpRequest2 = interface;
  IHTMLXMLHttpRequest2Disp = dispinterface;
  IHTMLXMLHttpRequestFactory = interface;
  IHTMLXMLHttpRequestFactoryDisp = dispinterface;
  DispHTMLXMLHttpRequest = dispinterface;
  ISVGStringList = interface;
  ISVGStringListDisp = dispinterface;
  ISVGAnimatedRect = interface;
  ISVGAnimatedRectDisp = dispinterface;
  ISVGAnimatedString = interface;
  ISVGAnimatedStringDisp = dispinterface;
  ISVGAnimatedBoolean = interface;
  ISVGAnimatedBooleanDisp = dispinterface;
  ISVGAnimatedTransformList = interface;
  ISVGAnimatedTransformListDisp = dispinterface;
  ISVGTransformList = interface;
  ISVGTransformListDisp = dispinterface;
  ISVGAnimatedPreserveAspectRatio = interface;
  ISVGAnimatedPreserveAspectRatioDisp = dispinterface;
  ISVGPreserveAspectRatio = interface;
  ISVGPreserveAspectRatioDisp = dispinterface;
  ISVGStylable = interface;
  ISVGStylableDisp = dispinterface;
  ISVGLocatable = interface;
  ISVGLocatableDisp = dispinterface;
  ISVGTransformable = interface;
  ISVGTransformableDisp = dispinterface;
  ISVGTests = interface;
  ISVGTestsDisp = dispinterface;
  ISVGLangSpace = interface;
  ISVGLangSpaceDisp = dispinterface;
  ISVGExternalResourcesRequired = interface;
  ISVGExternalResourcesRequiredDisp = dispinterface;
  ISVGFitToViewBox = interface;
  ISVGFitToViewBoxDisp = dispinterface;
  ISVGZoomAndPan = interface;
  ISVGZoomAndPanDisp = dispinterface;
  ISVGURIReference = interface;
  ISVGURIReferenceDisp = dispinterface;
  ISVGAnimatedAngle = interface;
  ISVGAnimatedAngleDisp = dispinterface;
  ISVGAnimatedInteger = interface;
  ISVGAnimatedIntegerDisp = dispinterface;
  ISVGLengthList = interface;
  ISVGLengthListDisp = dispinterface;
  ISVGAnimatedLengthList = interface;
  ISVGAnimatedLengthListDisp = dispinterface;
  ISVGAnimatedNumber = interface;
  ISVGAnimatedNumberDisp = dispinterface;
  ISVGNumberList = interface;
  ISVGNumberListDisp = dispinterface;
  ISVGAnimatedNumberList = interface;
  ISVGAnimatedNumberListDisp = dispinterface;
  ISVGClipPathElement = interface;
  ISVGClipPathElementDisp = dispinterface;
  DispSVGClipPathElement = dispinterface;
  DispSVGElement = dispinterface;
  IICCSVGColor = interface;
  IICCSVGColorDisp = dispinterface;
  ISVGPaint = interface;
  ISVGPaintDisp = dispinterface;
  ISVGPatternElement = interface;
  ISVGPatternElementDisp = dispinterface;
  DispSVGPatternElement = dispinterface;
  ISVGPathSeg = interface;
  ISVGPathSegDisp = dispinterface;
  ISVGPathSegArcAbs = interface;
  ISVGPathSegArcAbsDisp = dispinterface;
  ISVGPathSegArcRel = interface;
  ISVGPathSegArcRelDisp = dispinterface;
  ISVGPathSegClosePath = interface;
  ISVGPathSegClosePathDisp = dispinterface;
  ISVGPathSegMovetoAbs = interface;
  ISVGPathSegMovetoAbsDisp = dispinterface;
  ISVGPathSegMovetoRel = interface;
  ISVGPathSegMovetoRelDisp = dispinterface;
  ISVGPathSegLinetoAbs = interface;
  ISVGPathSegLinetoAbsDisp = dispinterface;
  ISVGPathSegLinetoRel = interface;
  ISVGPathSegLinetoRelDisp = dispinterface;
  ISVGPathSegCurvetoCubicAbs = interface;
  ISVGPathSegCurvetoCubicAbsDisp = dispinterface;
  ISVGPathSegCurvetoCubicRel = interface;
  ISVGPathSegCurvetoCubicRelDisp = dispinterface;
  ISVGPathSegCurvetoCubicSmoothAbs = interface;
  ISVGPathSegCurvetoCubicSmoothAbsDisp = dispinterface;
  ISVGPathSegCurvetoCubicSmoothRel = interface;
  ISVGPathSegCurvetoCubicSmoothRelDisp = dispinterface;
  ISVGPathSegCurvetoQuadraticAbs = interface;
  ISVGPathSegCurvetoQuadraticAbsDisp = dispinterface;
  ISVGPathSegCurvetoQuadraticRel = interface;
  ISVGPathSegCurvetoQuadraticRelDisp = dispinterface;
  ISVGPathSegCurvetoQuadraticSmoothAbs = interface;
  ISVGPathSegCurvetoQuadraticSmoothAbsDisp = dispinterface;
  ISVGPathSegCurvetoQuadraticSmoothRel = interface;
  ISVGPathSegCurvetoQuadraticSmoothRelDisp = dispinterface;
  ISVGPathSegLinetoHorizontalAbs = interface;
  ISVGPathSegLinetoHorizontalAbsDisp = dispinterface;
  ISVGPathSegLinetoHorizontalRel = interface;
  ISVGPathSegLinetoHorizontalRelDisp = dispinterface;
  ISVGPathSegLinetoVerticalAbs = interface;
  ISVGPathSegLinetoVerticalAbsDisp = dispinterface;
  ISVGPathSegLinetoVerticalRel = interface;
  ISVGPathSegLinetoVerticalRelDisp = dispinterface;
  DispSVGPathSegArcAbs = dispinterface;
  DispSVGPathSegArcRel = dispinterface;
  DispSVGPathSegClosePath = dispinterface;
  DispSVGPathSegMovetoAbs = dispinterface;
  DispSVGPathSegMovetoRel = dispinterface;
  DispSVGPathSegLinetoAbs = dispinterface;
  DispSVGPathSegLinetoRel = dispinterface;
  DispSVGPathSegCurvetoCubicAbs = dispinterface;
  DispSVGPathSegCurvetoCubicRel = dispinterface;
  DispSVGPathSegCurvetoCubicSmoothAbs = dispinterface;
  DispSVGPathSegCurvetoCubicSmoothRel = dispinterface;
  DispSVGPathSegCurvetoQuadraticAbs = dispinterface;
  DispSVGPathSegCurvetoQuadraticRel = dispinterface;
  DispSVGPathSegCurvetoQuadraticSmoothAbs = dispinterface;
  DispSVGPathSegCurvetoQuadraticSmoothRel = dispinterface;
  DispSVGPathSegLinetoHorizontalAbs = dispinterface;
  DispSVGPathSegLinetoHorizontalRel = dispinterface;
  DispSVGPathSegLinetoVerticalAbs = dispinterface;
  DispSVGPathSegLinetoVerticalRel = dispinterface;
  ISVGPathSegList = interface;
  ISVGPathSegListDisp = dispinterface;
  ISVGPointList = interface;
  ISVGPointListDisp = dispinterface;
  DispSVGSVGElement = dispinterface;
  ISVGElementInstance = interface;
  ISVGElementInstanceDisp = dispinterface;
  ISVGUseElement = interface;
  ISVGUseElementDisp = dispinterface;
  ISVGElementInstanceList = interface;
  ISVGElementInstanceListDisp = dispinterface;
  DispSVGUseElement = dispinterface;
  DispHTMLStyleSheetRulesAppliedCollection = dispinterface;
  DispRulesApplied = dispinterface;
  DispRulesAppliedCollection = dispinterface;
  DispHTMLW3CComputedStyle = dispinterface;
  ISVGAnimatedPoints = interface;
  ISVGAnimatedPointsDisp = dispinterface;
  ISVGCircleElement = interface;
  ISVGCircleElementDisp = dispinterface;
  ISVGEllipseElement = interface;
  ISVGEllipseElementDisp = dispinterface;
  ISVGLineElement = interface;
  ISVGLineElementDisp = dispinterface;
  ISVGRectElement = interface;
  ISVGRectElementDisp = dispinterface;
  ISVGPolygonElement = interface;
  ISVGPolygonElementDisp = dispinterface;
  ISVGPolylineElement = interface;
  ISVGPolylineElementDisp = dispinterface;
  DispSVGCircleElement = dispinterface;
  DispSVGEllipseElement = dispinterface;
  DispSVGLineElement = dispinterface;
  DispSVGRectElement = dispinterface;
  DispSVGPolygonElement = dispinterface;
  DispSVGPolylineElement = dispinterface;
  ISVGGElement = interface;
  ISVGGElementDisp = dispinterface;
  DispSVGGElement = dispinterface;
  ISVGSymbolElement = interface;
  ISVGSymbolElementDisp = dispinterface;
  DispSVGSymbolElement = dispinterface;
  ISVGDefsElement = interface;
  ISVGDefsElementDisp = dispinterface;
  DispSVGDefsElement = dispinterface;
  ISVGAnimatedPathData = interface;
  ISVGAnimatedPathDataDisp = dispinterface;
  ISVGPathElement = interface;
  ISVGPathElementDisp = dispinterface;
  DispSVGPathElement = dispinterface;
  ISVGTextElement = interface;
  ISVGTextElementDisp = dispinterface;
  DispSVGTextElement = dispinterface;
  ISVGTextPositioningElement = interface;
  ISVGTextPositioningElementDisp = dispinterface;
  ISVGTextContentElement = interface;
  ISVGTextContentElementDisp = dispinterface;
  ISVGImageElement = interface;
  ISVGImageElementDisp = dispinterface;
  DispSVGImageElement = dispinterface;
  ISVGStopElement = interface;
  ISVGStopElementDisp = dispinterface;
  DispSVGStopElement = dispinterface;
  ISVGGradientElement = interface;
  ISVGGradientElementDisp = dispinterface;
  DispSVGGradientElement = dispinterface;
  ISVGLinearGradientElement = interface;
  ISVGLinearGradientElementDisp = dispinterface;
  DispSVGLinearGradientElement = dispinterface;
  ISVGRadialGradientElement = interface;
  ISVGRadialGradientElementDisp = dispinterface;
  DispSVGRadialGradientElement = dispinterface;
  ISVGMaskElement = interface;
  ISVGMaskElementDisp = dispinterface;
  DispSVGMaskElement = dispinterface;
  ISVGMarkerElement = interface;
  ISVGMarkerElementDisp = dispinterface;
  DispSVGMarkerElement = dispinterface;
  ISVGZoomEvent = interface;
  ISVGZoomEventDisp = dispinterface;
  DispSVGZoomEvent = dispinterface;
  ISVGAElement = interface;
  ISVGAElementDisp = dispinterface;
  DispSVGAElement = dispinterface;
  ISVGViewElement = interface;
  ISVGViewElementDisp = dispinterface;
  DispSVGViewElement = dispinterface;
  IHTMLMediaError = interface;
  IHTMLMediaErrorDisp = dispinterface;
  IHTMLTimeRanges = interface;
  IHTMLTimeRangesDisp = dispinterface;
  IHTMLTimeRanges2 = interface;
  IHTMLTimeRanges2Disp = dispinterface;
  IHTMLMediaElement = interface;
  IHTMLMediaElementDisp = dispinterface;
  IHTMLMediaElement2 = interface;
  IHTMLMediaElement2Disp = dispinterface;
  IHTMLMSMediaElement = interface;
  IHTMLMSMediaElementDisp = dispinterface;
  IHTMLSourceElement = interface;
  IHTMLSourceElementDisp = dispinterface;
  IHTMLAudioElement = interface;
  IHTMLAudioElementDisp = dispinterface;
  IHTMLVideoElement = interface;
  IHTMLVideoElementDisp = dispinterface;
  IHTMLAudioElementFactory = interface;
  IHTMLAudioElementFactoryDisp = dispinterface;
  DispHTMLMediaError = dispinterface;
  DispHTMLTimeRanges = dispinterface;
  DispHTMLMediaElement = dispinterface;
  DispHTMLSourceElement = dispinterface;
  DispHTMLAudioElement = dispinterface;
  DispHTMLVideoElement = dispinterface;
  ISVGSwitchElement = interface;
  ISVGSwitchElementDisp = dispinterface;
  DispSVGSwitchElement = dispinterface;
  ISVGDescElement = interface;
  ISVGDescElementDisp = dispinterface;
  DispSVGDescElement = dispinterface;
  ISVGTitleElement = interface;
  ISVGTitleElementDisp = dispinterface;
  DispSVGTitleElement = dispinterface;
  ISVGMetadataElement = interface;
  ISVGMetadataElementDisp = dispinterface;
  DispSVGMetadataElement = dispinterface;
  DispSVGElementInstance = dispinterface;
  DispSVGElementInstanceList = dispinterface;
  IDOMException = interface;
  IDOMExceptionDisp = dispinterface;
  IRangeException = interface;
  IRangeExceptionDisp = dispinterface;
  ISVGException = interface;
  ISVGExceptionDisp = dispinterface;
  IEventException = interface;
  IEventExceptionDisp = dispinterface;
  DispDOMException = dispinterface;
  DispRangeException = dispinterface;
  DispSVGException = dispinterface;
  DispEventException = dispinterface;
  ISVGScriptElement = interface;
  ISVGScriptElementDisp = dispinterface;
  DispSVGScriptElement = dispinterface;
  ISVGStyleElement = interface;
  ISVGStyleElementDisp = dispinterface;
  DispSVGStyleElement = dispinterface;
  DispSVGTextContentElement = dispinterface;
  DispSVGTextPositioningElement = dispinterface;
  DispDOMDocumentType = dispinterface;
  DispNodeIterator = dispinterface;
  DispTreeWalker = dispinterface;
  DispDOMProcessingInstruction = dispinterface;
  DispHTMLPerformance = dispinterface;
  DispHTMLPerformanceNavigation = dispinterface;
  DispHTMLPerformanceTiming = dispinterface;
  ISVGTSpanElement = interface;
  ISVGTSpanElementDisp = dispinterface;
  DispSVGTSpanElement = dispinterface;
  ITemplatePrinter = interface;
  ITemplatePrinterDisp = dispinterface;
  ITemplatePrinter2 = interface;
  ITemplatePrinter2Disp = dispinterface;
  ITemplatePrinter3 = interface;
  ITemplatePrinter3Disp = dispinterface;
  IPrintManagerTemplatePrinter = interface;
  IPrintManagerTemplatePrinterDisp = dispinterface;
  IPrintManagerTemplatePrinter2 = interface;
  IPrintManagerTemplatePrinter2Disp = dispinterface;
  DispCPrintManagerTemplatePrinter = dispinterface;
  ISVGTextPathElement = interface;
  ISVGTextPathElementDisp = dispinterface;
  DispSVGTextPathElement = dispinterface;
  IDOMXmlSerializer = interface;
  IDOMXmlSerializerDisp = dispinterface;
  IDOMXmlSerializerFactory = interface;
  IDOMXmlSerializerFactoryDisp = dispinterface;
  IDOMParser = interface;
  IDOMParserDisp = dispinterface;
  IDOMParserFactory = interface;
  IDOMParserFactoryDisp = dispinterface;
  DispXMLSerializer = dispinterface;
  DispDOMParser = dispinterface;
  DispHTMLSemanticElement = dispinterface;
  IHTMLProgressElement = interface;
  IHTMLProgressElementDisp = dispinterface;
  DispHTMLProgressElement = dispinterface;
  IDOMMSTransitionEvent = interface;
  IDOMMSTransitionEventDisp = dispinterface;
  DispDOMMSTransitionEvent = dispinterface;
  IDOMMSAnimationEvent = interface;
  IDOMMSAnimationEventDisp = dispinterface;
  DispDOMMSAnimationEvent = dispinterface;
  IWebGeocoordinates = interface;
  IWebGeocoordinatesDisp = dispinterface;
  IWebGeopositionError = interface;
  IWebGeopositionErrorDisp = dispinterface;
  IWebGeoposition = interface;
  IWebGeopositionDisp = dispinterface;
  DispWebGeolocation = dispinterface;
  DispWebGeocoordinates = dispinterface;
  DispWebGeopositionError = dispinterface;
  DispWebGeoposition = dispinterface;
  IClientCaps = interface;
  IClientCapsDisp = dispinterface;
  IDOMMSManipulationEvent = interface;
  IDOMMSManipulationEventDisp = dispinterface;
  DispDOMMSManipulationEvent = dispinterface;
  IDOMCloseEvent = interface;
  IDOMCloseEventDisp = dispinterface;
  DispDOMCloseEvent = dispinterface;
  DispApplicationCache = dispinterface;
  ICSSFilterSite = interface;
  IMarkupPointer = interface;
  IMarkupContainer = interface;
  IMarkupContainer2 = interface;
  IHTMLChangeSink = interface;
  IHTMLChangeLog = interface;
  IActiveIMMApp = interface;
  IEnumRegisterWordA = interface;
  IEnumRegisterWordW = interface;
  IEnumInputContext = interface;
  ISegmentList = interface;
  ISegmentListIterator = interface;
  ISegment = interface;
  IHTMLCaret = interface;
  IDisplayPointer = interface;
  ILineInfo = interface;
  IElementSegment = interface;
  IHighlightSegment = interface;
  IHighlightRenderingServices = interface;
  IDisplayServices = interface;
  IHTMLComputedStyle = interface;
  IHtmlDlgSafeHelper = interface;
  IBlockFormats = interface;
  IFontNames = interface;
  ICSSFilter = interface;
  ISecureUrlHost = interface;
  IMarkupServices = interface;
  IMarkupServices2 = interface;
  IHTMLChangePlayback = interface;
  IMarkupPointer2 = interface;
  IMarkupTextFrags = interface;
  IXMLGenericParse = interface;
  IHTMLEditHost = interface;
  IHTMLEditHost2 = interface;
  ISequenceNumber = interface;
  IIMEServices = interface;
  ISelectionServicesListener = interface;
  ISelectionServices = interface;
  IHTMLEditDesigner = interface;
  IHTMLEditServices = interface;
  IHTMLEditServices2 = interface;
  IDeveloperConsoleMessageReceiver = interface;
  IScriptEventHandler = interface;
  IDebugCallbackNotificationHandler = interface;
  IScriptEventHandlerSourceInfo = interface;
  IDOMEventRegistrationCallback = interface;
  IEventTarget2 = interface;
  HTMLNamespaceEvents = dispinterface;
  IHTMLNamespace = interface;
  IHTMLNamespaceDisp = dispinterface;
  IHTMLNamespaceCollection = interface;
  IHTMLNamespaceCollectionDisp = dispinterface;
  DispHTMLNamespace = dispinterface;
  DispHTMLNamespaceCollection = dispinterface;
  IHTMLPainter = interface;
  IHTMLPaintSite = interface;
  IHTMLPainterEventInfo = interface;
  IHTMLPainterOverlay = interface;
  IHTMLIPrintCollection = interface;
  IHTMLIPrintCollectionDisp = dispinterface;
  IEnumPrivacyRecords = interface;
  IWPCBlockedUrls = interface;
  IHTMLDOMConstructorCollection = interface;
  IHTMLDOMConstructorCollectionDisp = dispinterface;
  IHTMLDialog = interface;
  IHTMLDialogDisp = dispinterface;
  IHTMLDialog2 = interface;
  IHTMLDialog2Disp = dispinterface;
  IHTMLDialog3 = interface;
  IHTMLDialog3Disp = dispinterface;
  IHTMLModelessInit = interface;
  IHTMLModelessInitDisp = dispinterface;
  IHTMLPopup = interface;
  IHTMLPopupDisp = dispinterface;
  DispHTMLPopup = dispinterface;
  IHTMLAppBehavior = interface;
  IHTMLAppBehaviorDisp = dispinterface;
  IHTMLAppBehavior2 = interface;
  IHTMLAppBehavior2Disp = dispinterface;
  IHTMLAppBehavior3 = interface;
  IHTMLAppBehavior3Disp = dispinterface;
  DispHTMLAppBehavior = dispinterface;
  DispIHTMLInputButtonElement = dispinterface;
  DispIHTMLInputTextElement = dispinterface;
  DispIHTMLInputFileElement = dispinterface;
  DispIHTMLOptionButtonElement = dispinterface;
  DispIHTMLInputImage = dispinterface;
  IElementNamespace = interface;
  IElementNamespaceTable = interface;
  IElementNamespaceFactory = interface;
  IElementNamespaceFactory2 = interface;
  IElementNamespaceFactoryCallback = interface;
  IElementBehaviorSiteOM2 = interface;
  IElementBehaviorCategory = interface;
  IElementBehaviorSiteCategory = interface;
  IEnumUnknown = interface;
  IElementBehaviorSubmit = interface;
  IElementBehaviorFocus = interface;
  IElementBehaviorLayout = interface;
  IElementBehaviorLayout2 = interface;
  IElementBehaviorSiteLayout = interface;
  IElementBehaviorSiteLayout2 = interface;
  IHostBehaviorInit = interface;
  ISurfacePresenter = interface;
  IViewObjectPresentSite = interface;
  ICanvasPixelArrayData = interface;
  IViewObjectPrint = interface;
  IViewObjectPresentNotifySite = interface;
  IViewObjectPresentNotify = interface;
  ITrackingProtection = interface;
  IBFCacheable = interface;

// *********************************************************************//
// Declaration of CoClasses defined in Type Library                       
// (NOTE: Here we map each CoClass to its Default Interface)              
// *********************************************************************//
  HTMLCSSStyleDeclaration = DispHTMLCSSStyleDeclaration;
  HTMLStyle = DispHTMLStyle;
  HTMLRuleStyle = DispHTMLRuleStyle;
  HTMLCSSRule = DispHTMLCSSRule;
  HTMLCSSImportRule = DispHTMLCSSImportRule;
  HTMLCSSMediaRule = DispHTMLCSSMediaRule;
  HTMLCSSMediaList = DispHTMLCSSMediaList;
  HTMLCSSNamespaceRule = DispHTMLCSSNamespaceRule;
  HTMLMSCSSKeyframeRule = DispHTMLMSCSSKeyframeRule;
  HTMLMSCSSKeyframesRule = DispHTMLMSCSSKeyframesRule;
  HTMLRenderStyle = DispHTMLRenderStyle;
  HTMLCurrentStyle = DispHTMLCurrentStyle;
  HTMLDOMAttribute = DispHTMLDOMAttribute;
  HTMLDOMTextNode = DispHTMLDOMTextNode;
  HTMLDOMImplementation = DispHTMLDOMImplementation;
  HTMLAttributeCollection = DispHTMLAttributeCollection;
  StaticNodeList = DispStaticNodeList;
  DOMChildrenCollection = DispDOMChildrenCollection;
  HTMLDefaults = DispHTMLDefaults;
  HTCDefaultDispatch = DispHTCDefaultDispatch;
  HTCPropertyBehavior = DispHTCPropertyBehavior;
  HTCMethodBehavior = DispHTCMethodBehavior;
  HTCEventBehavior = DispHTCEventBehavior;
  HTCAttachBehavior = DispHTCAttachBehavior;
  HTCDescBehavior = DispHTCDescBehavior;
  HTMLUrnCollection = DispHTMLUrnCollection;
  HTMLGenericElement = DispHTMLGenericElement;
  HTMLStyleSheetRule = DispHTMLStyleSheetRule;
  HTMLStyleSheetRulesCollection = DispHTMLStyleSheetRulesCollection;
  HTMLStyleSheetPage = DispHTMLStyleSheetPage;
  HTMLStyleSheetPagesCollection = DispHTMLStyleSheetPagesCollection;
  HTMLStyleSheet = DispHTMLStyleSheet;
  HTMLStyleSheetsCollection = DispHTMLStyleSheetsCollection;
  HTMLLinkElement = DispHTMLLinkElement;
  HTMLDOMRange = DispHTMLDOMRange;
  HTMLFormElement = DispHTMLFormElement;
  HTMLTextElement = DispHTMLTextElement;
  HTMLImg = DispHTMLImg;
  HTMLImageElementFactory = IHTMLImageElementFactory;
  HTMLBody = DispHTMLBody;
  HTMLFontElement = DispHTMLFontElement;
  HTMLAnchorElement = DispHTMLAnchorElement;
  HTMLLabelElement = DispHTMLLabelElement;
  HTMLListElement = DispHTMLListElement;
  HTMLUListElement = DispHTMLUListElement;
  HTMLOListElement = DispHTMLOListElement;
  HTMLLIElement = DispHTMLLIElement;
  HTMLBlockElement = DispHTMLBlockElement;
  HTMLDivElement = DispHTMLDivElement;
  HTMLDDElement = DispHTMLDDElement;
  HTMLDTElement = DispHTMLDTElement;
  HTMLBRElement = DispHTMLBRElement;
  HTMLDListElement = DispHTMLDListElement;
  HTMLHRElement = DispHTMLHRElement;
  HTMLParaElement = DispHTMLParaElement;
  HTMLElementCollection = DispHTMLElementCollection;
  HTMLHeaderElement = DispHTMLHeaderElement;
  HTMLSelectElement = DispHTMLSelectElement;
  HTMLWndSelectElement = DispHTMLWndSelectElement;
  HTMLOptionElement = DispHTMLOptionElement;
  HTMLOptionElementFactory = IHTMLOptionElementFactory;
  HTMLWndOptionElement = DispHTMLWndOptionElement;
  HTMLInputElement = DispHTMLInputElement;
  HTMLTextAreaElement = DispHTMLTextAreaElement;
  HTMLRichtextElement = DispHTMLRichtextElement;
  HTMLButtonElement = DispHTMLButtonElement;
  HTMLMarqueeElement = DispHTMLMarqueeElement;
  HTMLHtmlElement = DispHTMLHtmlElement;
  HTMLHeadElement = DispHTMLHeadElement;
  HTMLTitleElement = DispHTMLTitleElement;
  HTMLMetaElement = DispHTMLMetaElement;
  HTMLBaseElement = DispHTMLBaseElement;
  HTMLIsIndexElement = DispHTMLIsIndexElement;
  HTMLNextIdElement = DispHTMLNextIdElement;
  HTMLBaseFontElement = DispHTMLBaseFontElement;
  HTMLUnknownElement = DispHTMLUnknownElement;
  HTMLHistory = DispHTMLHistory;
  CMimeTypes = IHTMLMimeTypesCollection;
  CPlugins = DispCPlugins;
  COpsProfile = IHTMLOpsProfile;
  HTMLNavigator = DispHTMLNavigator;
  HTMLLocation = DispHTMLLocation;
  CEventObj = DispCEventObj;
  HTMLStyleMedia = DispHTMLStyleMedia;
  FramesCollection = IHTMLFramesCollection2;
  HTMLScreen = DispHTMLScreen;
  HTMLWindow2 = DispHTMLWindow2;
  HTMLWindowProxy = DispHTMLWindowProxy;
  HTMLDocumentCompatibleInfo = DispHTMLDocumentCompatibleInfo;
  HTMLDocumentCompatibleInfoCollection = DispHTMLDocumentCompatibleInfoCollection;
  HTMLDocument = DispHTMLDocument;
  Scriptlet = IWebBridge;
  HTMLEmbed = DispHTMLEmbed;
  HTMLAreasCollection = DispHTMLAreasCollection;
  HTMLMapElement = DispHTMLMapElement;
  HTMLAreaElement = DispHTMLAreaElement;
  HTMLTableCaption = DispHTMLTableCaption;
  HTMLCommentElement = DispHTMLCommentElement;
  HTMLPhraseElement = DispHTMLPhraseElement;
  HTMLSpanElement = DispHTMLSpanElement;
  HTMLTable = DispHTMLTable;
  HTMLTableCol = DispHTMLTableCol;
  HTMLTableSection = DispHTMLTableSection;
  HTMLTableRow = DispHTMLTableRow;
  HTMLTableCell = DispHTMLTableCell;
  HTMLScriptElement = DispHTMLScriptElement;
  HTMLNoShowElement = DispHTMLNoShowElement;
  HTMLObjectElement = DispHTMLObjectElement;
  HTMLParamElement = DispHTMLParamElement;
  HTMLFrameBase = DispHTMLFrameBase;
  HTMLFrameElement = DispHTMLFrameElement;
  HTMLIFrame = DispHTMLIFrame;
  HTMLDivPosition = DispHTMLDivPosition;
  HTMLFieldSetElement = DispHTMLFieldSetElement;
  HTMLLegendElement = DispHTMLLegendElement;
  HTMLSpanFlow = DispHTMLSpanFlow;
  HTMLFrameSetSite = DispHTMLFrameSetSite;
  HTMLBGsound = DispHTMLBGsound;
  HTMLStyleElement = DispHTMLStyleElement;
  HTMLStyleFontFace = DispHTMLStyleFontFace;
  XDomainRequest = DispXDomainRequest;
  XDomainRequestFactory = IHTMLXDomainRequestFactory;
  HTMLStorage = DispHTMLStorage;
  DOMEvent = DispDOMEvent;
  DOMUIEvent = DispDOMUIEvent;
  DOMMouseEvent = DispDOMMouseEvent;
  DOMDragEvent = DispDOMDragEvent;
  DOMMouseWheelEvent = DispDOMMouseWheelEvent;
  DOMWheelEvent = DispDOMWheelEvent;
  DOMTextEvent = DispDOMTextEvent;
  DOMKeyboardEvent = DispDOMKeyboardEvent;
  DOMCompositionEvent = DispDOMCompositionEvent;
  DOMMutationEvent = DispDOMMutationEvent;
  DOMBeforeUnloadEvent = DispDOMBeforeUnloadEvent;
  DOMFocusEvent = DispDOMFocusEvent;
  DOMCustomEvent = DispDOMCustomEvent;
  CanvasGradient = DispCanvasGradient;
  CanvasPattern = DispCanvasPattern;
  CanvasTextMetrics = DispCanvasTextMetrics;
  CanvasImageData = DispCanvasImageData;
  CanvasRenderingContext2D = DispCanvasRenderingContext2D;
  HTMLCanvasElement = DispHTMLCanvasElement;
  DOMProgressEvent = DispDOMProgressEvent;
  DOMMessageEvent = DispDOMMessageEvent;
  DOMSiteModeEvent = DispDOMSiteModeEvent;
  DOMStorageEvent = DispDOMStorageEvent;
  XMLHttpRequestEventTarget = DispXMLHttpRequestEventTarget;
  HTMLXMLHttpRequest = DispHTMLXMLHttpRequest;
  HTMLXMLHttpRequestFactory = IHTMLXMLHttpRequestFactory;
  SVGAngle = ISVGAngle;
  SVGAnimatedAngle = ISVGAnimatedAngle;
  SVGAnimatedTransformList = ISVGAnimatedTransformList;
  SVGAnimatedBoolean = ISVGAnimatedBoolean;
  SVGAnimatedEnumeration = ISVGAnimatedEnumeration;
  SVGAnimatedInteger = ISVGAnimatedInteger;
  SVGAnimatedLength = ISVGAnimatedLength;
  SVGAnimatedLengthList = ISVGAnimatedLengthList;
  SVGAnimatedNumber = ISVGAnimatedNumber;
  SVGAnimatedNumberList = ISVGAnimatedNumberList;
  SVGAnimatedRect = ISVGAnimatedRect;
  SVGAnimatedString = ISVGAnimatedString;
  SVGClipPathElement = DispSVGClipPathElement;
  SVGElement = DispSVGElement;
  SVGLength = ISVGLength;
  SVGLengthList = ISVGLengthList;
  SVGMatrix = ISVGMatrix;
  SVGNumber = ISVGNumber;
  SVGNumberList = ISVGNumberList;
  SVGPatternElement = DispSVGPatternElement;
  SVGPathSeg = ISVGPathSeg;
  SVGPathSegArcAbs = DispSVGPathSegArcAbs;
  SVGPathSegArcRel = DispSVGPathSegArcRel;
  SVGPathSegClosePath = DispSVGPathSegClosePath;
  SVGPathSegMovetoAbs = DispSVGPathSegMovetoAbs;
  SVGPathSegMovetoRel = DispSVGPathSegMovetoRel;
  SVGPathSegLinetoAbs = DispSVGPathSegLinetoAbs;
  SVGPathSegLinetoRel = DispSVGPathSegLinetoRel;
  SVGPathSegCurvetoCubicAbs = DispSVGPathSegCurvetoCubicAbs;
  SVGPathSegCurvetoCubicRel = DispSVGPathSegCurvetoCubicRel;
  SVGPathSegCurvetoCubicSmoothAbs = DispSVGPathSegCurvetoCubicSmoothAbs;
  SVGPathSegCurvetoCubicSmoothRel = DispSVGPathSegCurvetoCubicSmoothRel;
  SVGPathSegCurvetoQuadraticAbs = DispSVGPathSegCurvetoQuadraticAbs;
  SVGPathSegCurvetoQuadraticRel = DispSVGPathSegCurvetoQuadraticRel;
  SVGPathSegCurvetoQuadraticSmoothAbs = DispSVGPathSegCurvetoQuadraticSmoothAbs;
  SVGPathSegCurvetoQuadraticSmoothRel = DispSVGPathSegCurvetoQuadraticSmoothRel;
  SVGPathSegLinetoHorizontalAbs = DispSVGPathSegLinetoHorizontalAbs;
  SVGPathSegLinetoHorizontalRel = DispSVGPathSegLinetoHorizontalRel;
  SVGPathSegLinetoVerticalAbs = DispSVGPathSegLinetoVerticalAbs;
  SVGPathSegLinetoVerticalRel = DispSVGPathSegLinetoVerticalRel;
  SVGPathSegList = ISVGPathSegList;
  SVGPoint = ISVGPoint;
  SVGPointList = ISVGPointList;
  SVGRect = ISVGRect;
  SVGStringList = ISVGStringList;
  SVGTransform = ISVGTransform;
  SVGSVGElement = DispSVGSVGElement;
  SVGUseElement = DispSVGUseElement;
  HTMLStyleSheetRulesAppliedCollection = DispHTMLStyleSheetRulesAppliedCollection;
  RulesApplied = DispRulesApplied;
  RulesAppliedCollection = DispRulesAppliedCollection;
  HTMLW3CComputedStyle = DispHTMLW3CComputedStyle;
  SVGTransformList = ISVGTransformList;
  SVGCircleElement = DispSVGCircleElement;
  SVGEllipseElement = DispSVGEllipseElement;
  SVGLineElement = DispSVGLineElement;
  SVGRectElement = DispSVGRectElement;
  SVGPolygonElement = DispSVGPolygonElement;
  SVGPolylineElement = DispSVGPolylineElement;
  SVGGElement = DispSVGGElement;
  SVGSymbolElement = DispSVGSymbolElement;
  SVGDefsElement = DispSVGDefsElement;
  SVGPathElement = DispSVGPathElement;
  SVGPreserveAspectRatio = ISVGPreserveAspectRatio;
  SVGTextElement = DispSVGTextElement;
  SVGAnimatedPreserveAspectRatio = ISVGAnimatedPreserveAspectRatio;
  SVGImageElement = DispSVGImageElement;
  SVGStopElement = DispSVGStopElement;
  SVGGradientElement = DispSVGGradientElement;
  SVGLinearGradientElement = DispSVGLinearGradientElement;
  SVGRadialGradientElement = DispSVGRadialGradientElement;
  SVGMaskElement = DispSVGMaskElement;
  SVGMarkerElement = DispSVGMarkerElement;
  SVGZoomEvent = DispSVGZoomEvent;
  SVGAElement = DispSVGAElement;
  SVGViewElement = DispSVGViewElement;
  HTMLMediaError = DispHTMLMediaError;
  HTMLTimeRanges = DispHTMLTimeRanges;
  HTMLMediaElement = DispHTMLMediaElement;
  HTMLSourceElement = DispHTMLSourceElement;
  HTMLAudioElement = DispHTMLAudioElement;
  HTMLAudioElementFactory = IHTMLAudioElementFactory;
  HTMLVideoElement = DispHTMLVideoElement;
  SVGSwitchElement = DispSVGSwitchElement;
  SVGDescElement = DispSVGDescElement;
  SVGTitleElement = DispSVGTitleElement;
  SVGMetadataElement = DispSVGMetadataElement;
  SVGElementInstance = DispSVGElementInstance;
  SVGElementInstanceList = DispSVGElementInstanceList;
  DOMException = DispDOMException;
  RangeException = DispRangeException;
  SVGException = DispSVGException;
  EventException = DispEventException;
  SVGScriptElement = DispSVGScriptElement;
  SVGStyleElement = DispSVGStyleElement;
  SVGTextContentElement = DispSVGTextContentElement;
  SVGTextPositioningElement = DispSVGTextPositioningElement;
  DOMDocumentType = DispDOMDocumentType;
  NodeIterator = DispNodeIterator;
  TreeWalker = DispTreeWalker;
  DOMProcessingInstruction = DispDOMProcessingInstruction;
  HTMLPerformance = DispHTMLPerformance;
  HTMLPerformanceNavigation = DispHTMLPerformanceNavigation;
  HTMLPerformanceTiming = DispHTMLPerformanceTiming;
  SVGTSpanElement = DispSVGTSpanElement;
  CTemplatePrinter = ITemplatePrinter3;
  CPrintManagerTemplatePrinter = DispCPrintManagerTemplatePrinter;
  SVGTextPathElement = DispSVGTextPathElement;
  XMLSerializer = DispXMLSerializer;
  HTMLDOMXmlSerializerFactory = IDOMXmlSerializerFactory;
  DOMParser = DispDOMParser;
  DOMParserFactory = IDOMParserFactory;
  HTMLSemanticElement = DispHTMLSemanticElement;
  HTMLProgressElement = DispHTMLProgressElement;
  DOMMSTransitionEvent = DispDOMMSTransitionEvent;
  DOMMSAnimationEvent = DispDOMMSAnimationEvent;
  WebGeolocation = DispWebGeolocation;
  WebGeocoordinates = DispWebGeocoordinates;
  WebGeopositionError = DispWebGeopositionError;
  WebGeoposition = DispWebGeoposition;
  CClientCaps = IClientCaps;
  DOMMSManipulationEvent = DispDOMMSManipulationEvent;
  DOMCloseEvent = DispDOMCloseEvent;
  applicationCache = IHTMLApplicationCache;
  HtmlDlgSafeHelper = IHtmlDlgSafeHelper;
  BlockFormats = IBlockFormats;
  FontNames = IFontNames;
  HTMLNamespace = DispHTMLNamespace;
  HTMLNamespaceCollection = DispHTMLNamespaceCollection;
  ThreadDialogProcParam = IHTMLModelessInit;
  HTMLDialog = IHTMLDialog;
  HTMLPopup = DispHTMLPopup;
  HTMLAppBehavior = DispHTMLAppBehavior;
  OldHTMLDocument = DispHTMLDocument;
  OldHTMLFormElement = DispHTMLFormElement;
  HTMLInputButtonElement = DispIHTMLInputButtonElement;
  HTMLInputTextElement = DispIHTMLInputTextElement;
  HTMLInputFileElement = DispIHTMLInputFileElement;
  HTMLOptionButtonElement = DispIHTMLOptionButtonElement;
  htmlInputImage = DispIHTMLInputImage;


// *********************************************************************//
// Declaration of structures, unions and aliases.                         
// *********************************************************************//
  wireHDC = ^_RemotableHandle; 
  wireHWND = ^_RemotableHandle; 
  wireHBITMAP = ^_userHBITMAP; 
  wireHGLOBAL = ^_userHGLOBAL; 
  wireHRGN = ^_RemotableHandle; 
  POleVariant1 = ^OleVariant; {*}
  PUserType1 = ^tagRECT; {*}
  PUserType2 = ^tagPOINT; {*}
  PInteger1 = ^Integer; {*}
  PByte1 = ^Byte; {*}
  PUserType3 = ^__MIDL___MIDL_itf_mshtml_0001_0042_0001; {*}
  PUserType4 = ^__MIDL___MIDL_itf_mshtml_0001_0042_0002; {*}
  PUserType5 = ^__MIDL___MIDL_itf_mshtml_0001_0042_0005; {*}
  PUserType6 = ^__MIDL___MIDL_itf_mshtml_0001_0042_0003; {*}
  PUserType7 = ^__MIDL___MIDL_itf_mshtml_0001_0042_0004; {*}
  PUserType8 = ^__MIDL___MIDL_itf_mshtml_0001_0042_0006; {*}
  PWord1 = ^Word; {*}
  PUserType9 = ^__MIDL___MIDL_itf_mshtml_0001_0042_0010; {*}
  PUserType10 = ^__MIDL___MIDL_itf_mshtml_0001_0042_0011; {*}
  PUserType11 = ^tagSAFEARRAY; {*}
  PPUserType1 = ^IHTMLElement; {*}
  PUserType12 = ^tagSIZE; {*}
  PUserType13 = ^TGUID; {*}
// !!ADD
  PtagSize = ^tagSIZE; {*}


  __MIDL_IWinTypes_0009 = record
    case Integer of
      0: (hInproc: Integer);
      1: (hRemote: Integer);
  end;

  _RemotableHandle = record
    fContext: Integer;
    u: __MIDL_IWinTypes_0009;
  end;

// !!MOD
  PtagRECT = ^tagRECT;
  tagRECT = TRect;

// !!MOD
  PtagPOINT = ^tagPOINT;
  tagPOINT = TPoint;

  LONG_PTR = Integer; 

  __MIDL___MIDL_itf_mshtml_0001_0042_0001 = record
    lpReading: PAnsiChar;
    lpWord: PAnsiChar;
  end;

  __MIDL___MIDL_itf_mshtml_0001_0042_0002 = record
    lpReading: PWideChar;
    lpWord: PWideChar;
  end;

  __MIDL___MIDL_itf_mshtml_0001_0042_0007 = record
    dwSize: LongWord;
    dwStyle: LongWord;
    dwCount: LongWord;
    dwSelection: LongWord;
    dwPageStart: LongWord;
    dwPageSize: LongWord;
    dwOffset: array[0..0] of LongWord;
  end;

  __MIDL___MIDL_itf_mshtml_0001_0042_0005 = record
    dwIndex: LongWord;
    dwStyle: LongWord;
    ptCurrentPos: tagPOINT;
    rcArea: tagRECT;
  end;

  __MIDL___MIDL_itf_mshtml_0001_0042_0003 = record
    lfHeight: Integer;
    lfWidth: Integer;
    lfEscapement: Integer;
    lfOrientation: Integer;
    lfWeight: Integer;
    lfItalic: Byte;
    lfUnderline: Byte;
    lfStrikeOut: Byte;
    lfCharSet: Byte;
    lfOutPrecision: Byte;
    lfClipPrecision: Byte;
    lfQuality: Byte;
    lfPitchAndFamily: Byte;
    lfFaceName: array[0..31] of Byte;
  end;

  __MIDL___MIDL_itf_mshtml_0001_0042_0004 = record
    lfHeight: Integer;
    lfWidth: Integer;
    lfEscapement: Integer;
    lfOrientation: Integer;
    lfWeight: Integer;
    lfItalic: Byte;
    lfUnderline: Byte;
    lfStrikeOut: Byte;
    lfCharSet: Byte;
    lfOutPrecision: Byte;
    lfClipPrecision: Byte;
    lfQuality: Byte;
    lfPitchAndFamily: Byte;
    lfFaceName: array[0..31] of Word;
  end;

  __MIDL___MIDL_itf_mshtml_0001_0042_0006 = record
    dwStyle: LongWord;
    ptCurrentPos: tagPOINT;
    rcArea: tagRECT;
  end;

  __MIDL___MIDL_itf_mshtml_0001_0042_0008 = record
    dwStyle: LongWord;
    szDescription: array[0..31] of Byte;
  end;

  __MIDL___MIDL_itf_mshtml_0001_0042_0009 = record
    dwStyle: LongWord;
    szDescription: array[0..31] of Word;
  end;

  UINT_PTR = LongWord; 

  __MIDL___MIDL_itf_mshtml_0001_0042_0010 = record
    cbSize: SYSUINT;
    fType: SYSUINT;
    fState: SYSUINT;
    wID: SYSUINT;
    hbmpChecked: wireHBITMAP;
    hbmpUnchecked: wireHBITMAP;
    dwItemData: LongWord;
    szString: array[0..79] of Byte;
    hbmpItem: wireHBITMAP;
  end;

  _userBITMAP = record
    bmType: Integer;
    bmWidth: Integer;
    bmHeight: Integer;
    bmWidthBytes: Integer;
    bmPlanes: Word;
    bmBitsPixel: Word;
    cbSize: LongWord;
    pBuffer: ^Byte;
  end;

{$ALIGN 8}
  __MIDL_IWinTypes_0007 = record
    case Integer of
      0: (hInproc: Integer);
      1: (hRemote: ^_userBITMAP);
      2: (hInproc64: Int64);
  end;

  _userHBITMAP = record
    fContext: Integer;
    u: __MIDL_IWinTypes_0007;
  end;

{$ALIGN 4}
  __MIDL___MIDL_itf_mshtml_0001_0042_0011 = record
    cbSize: SYSUINT;
    fType: SYSUINT;
    fState: SYSUINT;
    wID: SYSUINT;
    hbmpChecked: wireHBITMAP;
    hbmpUnchecked: wireHBITMAP;
    dwItemData: LongWord;
    szString: array[0..79] of Word;
    hbmpItem: wireHBITMAP;
  end;


  _FLAGGED_BYTE_BLOB = record
    fFlags: LongWord;
    clSize: LongWord;
    abData: ^Byte;
  end;

{$ALIGN 8}
  __MIDL_IWinTypes_0003 = record
    case Integer of
      0: (hInproc: Integer);
      1: (hRemote: ^_FLAGGED_BYTE_BLOB);
      2: (hInproc64: Int64);
  end;

  _userHGLOBAL = record
    fContext: Integer;
    u: __MIDL_IWinTypes_0003;
  end;

{$ALIGN 4}
  tagSAFEARRAYBOUND = record
    cElements: LongWord;
    lLbound: Integer;
  end;

  tagSAFEARRAY = record
    cDims: Word;
    fFeatures: Word;
    cbElements: LongWord;
    cLocks: LongWord;
    pvData: Pointer;
    rgsabound: ^tagSAFEARRAYBOUND;
  end;

  _HTML_PAINTER_INFO = record
    lFlags: Integer;
    lZOrder: Integer;
    iidDrawObject: TGUID;
    rcExpand: tagRECT;
  end;

  _HTML_PAINT_XFORM = record
    eM11: Single;
    eM12: Single;
    eM21: Single;
    eM22: Single;
    eDx: Single;
    eDy: Single;
  end;


  _HTML_PAINT_DRAW_INFO = record
    rcViewport: tagRECT;
    hrgnUpdate: wireHRGN;
    xform: _HTML_PAINT_XFORM;
  end;

  tagSIZE = record
    cx: Integer;
    cy: Integer;
  end;

  tagLOGFONTW = record
    lfHeight: Integer;
    lfWidth: Integer;
    lfEscapement: Integer;
    lfOrientation: Integer;
    lfWeight: Integer;
    lfItalic: Byte;
    lfUnderline: Byte;
    lfStrikeOut: Byte;
    lfCharSet: Byte;
    lfOutPrecision: Byte;
    lfClipPrecision: Byte;
    lfQuality: Byte;
    lfPitchAndFamily: Byte;
    lfFaceName: array[0..31] of Word;
  end;


// *********************************************************************//
// Interface: IHTMLEventObj
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F32D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEventObj = interface(IDispatch)
    ['{3050F32D-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_srcElement: IHTMLElement; safecall;
    function Get_altKey: WordBool; safecall;
    function Get_ctrlKey: WordBool; safecall;
    function Get_shiftKey: WordBool; safecall;
    procedure Set_returnValue(p: OleVariant); safecall;
    function Get_returnValue: OleVariant; safecall;
    procedure Set_cancelBubble(p: WordBool); safecall;
    function Get_cancelBubble: WordBool; safecall;
    function Get_fromElement: IHTMLElement; safecall;
    function Get_toElement: IHTMLElement; safecall;
    procedure Set_keyCode(p: Integer); safecall;
    function Get_keyCode: Integer; safecall;
    function Get_button: Integer; safecall;
    function Get_type_: WideString; safecall;
    function Get_qualifier: WideString; safecall;
    function Get_reason: Integer; safecall;
    function Get_x: Integer; safecall;
    function Get_y: Integer; safecall;
    function Get_clientX: Integer; safecall;
    function Get_clientY: Integer; safecall;
    function Get_offsetX: Integer; safecall;
    function Get_offsetY: Integer; safecall;
    function Get_screenX: Integer; safecall;
    function Get_screenY: Integer; safecall;
    function Get_srcFilter: IDispatch; safecall;
    property srcElement: IHTMLElement read Get_srcElement;
    property altKey: WordBool read Get_altKey;
    property ctrlKey: WordBool read Get_ctrlKey;
    property shiftKey: WordBool read Get_shiftKey;
    property returnValue: OleVariant read Get_returnValue write Set_returnValue;
    property cancelBubble: WordBool read Get_cancelBubble write Set_cancelBubble;
    property fromElement: IHTMLElement read Get_fromElement;
    property toElement: IHTMLElement read Get_toElement;
    property keyCode: Integer read Get_keyCode write Set_keyCode;
    property button: Integer read Get_button;
    property type_: WideString read Get_type_;
    property qualifier: WideString read Get_qualifier;
    property reason: Integer read Get_reason;
    property x: Integer read Get_x;
    property y: Integer read Get_y;
    property clientX: Integer read Get_clientX;
    property clientY: Integer read Get_clientY;
    property offsetX: Integer read Get_offsetX;
    property offsetY: Integer read Get_offsetY;
    property screenX: Integer read Get_screenX;
    property screenY: Integer read Get_screenY;
    property srcFilter: IDispatch read Get_srcFilter;
  end;

// *********************************************************************//
// DispIntf:  IHTMLEventObjDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F32D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEventObjDisp = dispinterface
    ['{3050F32D-98B5-11CF-BB82-00AA00BDCE0B}']
    property srcElement: IHTMLElement readonly dispid 1001;
    property altKey: WordBool readonly dispid 1002;
    property ctrlKey: WordBool readonly dispid 1003;
    property shiftKey: WordBool readonly dispid 1004;
    property returnValue: OleVariant dispid 1007;
    property cancelBubble: WordBool dispid 1008;
    property fromElement: IHTMLElement readonly dispid 1009;
    property toElement: IHTMLElement readonly dispid 1010;
    property keyCode: Integer dispid 1011;
    property button: Integer readonly dispid 1012;
    property type_: WideString readonly dispid 1013;
    property qualifier: WideString readonly dispid 1014;
    property reason: Integer readonly dispid 1015;
    property x: Integer readonly dispid 1005;
    property y: Integer readonly dispid 1006;
    property clientX: Integer readonly dispid 1020;
    property clientY: Integer readonly dispid 1021;
    property offsetX: Integer readonly dispid 1022;
    property offsetY: Integer readonly dispid 1023;
    property screenX: Integer readonly dispid 1024;
    property screenY: Integer readonly dispid 1025;
    property srcFilter: IDispatch readonly dispid 1026;
  end;

// *********************************************************************//
// Interface: IHTMLElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1FF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElement = interface(IDispatch)
    ['{3050F1FF-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); safecall;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; safecall;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; safecall;
    procedure Set__className(const p: WideString); safecall;
    function Get__className: WideString; safecall;
    procedure Set_id(const p: WideString); safecall;
    function Get_id: WideString; safecall;
    function Get_tagName: WideString; safecall;
    function Get_parentElement: IHTMLElement; safecall;
    function Get_style: IHTMLStyle; safecall;
    procedure Set_onhelp(p: OleVariant); safecall;
    function Get_onhelp: OleVariant; safecall;
    procedure Set_onclick(p: OleVariant); safecall;
    function Get_onclick: OleVariant; safecall;
    procedure Set_ondblclick(p: OleVariant); safecall;
    function Get_ondblclick: OleVariant; safecall;
    procedure Set_onkeydown(p: OleVariant); safecall;
    function Get_onkeydown: OleVariant; safecall;
    procedure Set_onkeyup(p: OleVariant); safecall;
    function Get_onkeyup: OleVariant; safecall;
    procedure Set_onkeypress(p: OleVariant); safecall;
    function Get_onkeypress: OleVariant; safecall;
    procedure Set_onmouseout(p: OleVariant); safecall;
    function Get_onmouseout: OleVariant; safecall;
    procedure Set_onmouseover(p: OleVariant); safecall;
    function Get_onmouseover: OleVariant; safecall;
    procedure Set_onmousemove(p: OleVariant); safecall;
    function Get_onmousemove: OleVariant; safecall;
    procedure Set_onmousedown(p: OleVariant); safecall;
    function Get_onmousedown: OleVariant; safecall;
    procedure Set_onmouseup(p: OleVariant); safecall;
    function Get_onmouseup: OleVariant; safecall;
    function Get_document: IDispatch; safecall;
    procedure Set_title(const p: WideString); safecall;
    function Get_title: WideString; safecall;
    procedure Set_language(const p: WideString); safecall;
    function Get_language: WideString; safecall;
    procedure Set_onselectstart(p: OleVariant); safecall;
    function Get_onselectstart: OleVariant; safecall;
    procedure scrollIntoView(varargStart: OleVariant); safecall;
    function contains(const pChild: IHTMLElement): WordBool; safecall;
    function Get_sourceIndex: Integer; safecall;
    function Get_recordNumber: OleVariant; safecall;
    procedure Set_lang(const p: WideString); safecall;
    function Get_lang: WideString; safecall;
    function Get_offsetLeft: Integer; safecall;
    function Get_offsetTop: Integer; safecall;
    function Get_offsetWidth: Integer; safecall;
    function Get_offsetHeight: Integer; safecall;
    function Get_offsetParent: IHTMLElement; safecall;
    procedure Set_innerHTML(const p: WideString); safecall;
    function Get_innerHTML: WideString; safecall;
    procedure Set_innerText(const p: WideString); safecall;
    function Get_innerText: WideString; safecall;
    procedure Set_outerHTML(const p: WideString); safecall;
    function Get_outerHTML: WideString; safecall;
    procedure Set_outerText(const p: WideString); safecall;
    function Get_outerText: WideString; safecall;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); safecall;
    procedure insertAdjacentText(const where: WideString; const text: WideString); safecall;
    function Get_parentTextEdit: IHTMLElement; safecall;
    function Get_isTextEdit: WordBool; safecall;
    procedure click; safecall;
    function Get_filters: IHTMLFiltersCollection; safecall;
    procedure Set_ondragstart(p: OleVariant); safecall;
    function Get_ondragstart: OleVariant; safecall;
    function toString: WideString; safecall;
    procedure Set_onbeforeupdate(p: OleVariant); safecall;
    function Get_onbeforeupdate: OleVariant; safecall;
    procedure Set_onafterupdate(p: OleVariant); safecall;
    function Get_onafterupdate: OleVariant; safecall;
    procedure Set_onerrorupdate(p: OleVariant); safecall;
    function Get_onerrorupdate: OleVariant; safecall;
    procedure Set_onrowexit(p: OleVariant); safecall;
    function Get_onrowexit: OleVariant; safecall;
    procedure Set_onrowenter(p: OleVariant); safecall;
    function Get_onrowenter: OleVariant; safecall;
    procedure Set_ondatasetchanged(p: OleVariant); safecall;
    function Get_ondatasetchanged: OleVariant; safecall;
    procedure Set_ondataavailable(p: OleVariant); safecall;
    function Get_ondataavailable: OleVariant; safecall;
    procedure Set_ondatasetcomplete(p: OleVariant); safecall;
    function Get_ondatasetcomplete: OleVariant; safecall;
    procedure Set_onfilterchange(p: OleVariant); safecall;
    function Get_onfilterchange: OleVariant; safecall;
    function Get_children: IDispatch; safecall;
    function Get_all: IDispatch; safecall;
    property _className: WideString read Get__className write Set__className;
    property id: WideString read Get_id write Set_id;
    property tagName: WideString read Get_tagName;
    property parentElement: IHTMLElement read Get_parentElement;
    property style: IHTMLStyle read Get_style;
    property onhelp: OleVariant read Get_onhelp write Set_onhelp;
    property onclick: OleVariant read Get_onclick write Set_onclick;
    property ondblclick: OleVariant read Get_ondblclick write Set_ondblclick;
    property onkeydown: OleVariant read Get_onkeydown write Set_onkeydown;
    property onkeyup: OleVariant read Get_onkeyup write Set_onkeyup;
    property onkeypress: OleVariant read Get_onkeypress write Set_onkeypress;
    property onmouseout: OleVariant read Get_onmouseout write Set_onmouseout;
    property onmouseover: OleVariant read Get_onmouseover write Set_onmouseover;
    property onmousemove: OleVariant read Get_onmousemove write Set_onmousemove;
    property onmousedown: OleVariant read Get_onmousedown write Set_onmousedown;
    property onmouseup: OleVariant read Get_onmouseup write Set_onmouseup;
    property document: IDispatch read Get_document;
    property title: WideString read Get_title write Set_title;
    property language: WideString read Get_language write Set_language;
    property onselectstart: OleVariant read Get_onselectstart write Set_onselectstart;
    property sourceIndex: Integer read Get_sourceIndex;
    property recordNumber: OleVariant read Get_recordNumber;
    property lang: WideString read Get_lang write Set_lang;
    property offsetLeft: Integer read Get_offsetLeft;
    property offsetTop: Integer read Get_offsetTop;
    property offsetWidth: Integer read Get_offsetWidth;
    property offsetHeight: Integer read Get_offsetHeight;
    property offsetParent: IHTMLElement read Get_offsetParent;
    property innerHTML: WideString read Get_innerHTML write Set_innerHTML;
    property innerText: WideString read Get_innerText write Set_innerText;
    property outerHTML: WideString read Get_outerHTML write Set_outerHTML;
    property outerText: WideString read Get_outerText write Set_outerText;
    property parentTextEdit: IHTMLElement read Get_parentTextEdit;
    property isTextEdit: WordBool read Get_isTextEdit;
    property filters: IHTMLFiltersCollection read Get_filters;
    property ondragstart: OleVariant read Get_ondragstart write Set_ondragstart;
    property onbeforeupdate: OleVariant read Get_onbeforeupdate write Set_onbeforeupdate;
    property onafterupdate: OleVariant read Get_onafterupdate write Set_onafterupdate;
    property onerrorupdate: OleVariant read Get_onerrorupdate write Set_onerrorupdate;
    property onrowexit: OleVariant read Get_onrowexit write Set_onrowexit;
    property onrowenter: OleVariant read Get_onrowenter write Set_onrowenter;
    property ondatasetchanged: OleVariant read Get_ondatasetchanged write Set_ondatasetchanged;
    property ondataavailable: OleVariant read Get_ondataavailable write Set_ondataavailable;
    property ondatasetcomplete: OleVariant read Get_ondatasetcomplete write Set_ondatasetcomplete;
    property onfilterchange: OleVariant read Get_onfilterchange write Set_onfilterchange;
    property children: IDispatch read Get_children;
    property all: IDispatch read Get_all;
  end;

// *********************************************************************//
// DispIntf:  IHTMLElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1FF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElementDisp = dispinterface
    ['{3050F1FF-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
  end;

// *********************************************************************//
// Interface: IHTMLStyle
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F25E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyle = interface(IDispatch)
    ['{3050F25E-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_fontFamily(const p: WideString); safecall;
    function Get_fontFamily: WideString; safecall;
    procedure Set_fontStyle(const p: WideString); safecall;
    function Get_fontStyle: WideString; safecall;
    procedure Set_fontVariant(const p: WideString); safecall;
    function Get_fontVariant: WideString; safecall;
    procedure Set_fontWeight(const p: WideString); safecall;
    function Get_fontWeight: WideString; safecall;
    procedure Set_fontSize(p: OleVariant); safecall;
    function Get_fontSize: OleVariant; safecall;
    procedure Set_font(const p: WideString); safecall;
    function Get_font: WideString; safecall;
    procedure Set_color(p: OleVariant); safecall;
    function Get_color: OleVariant; safecall;
    procedure Set_background(const p: WideString); safecall;
    function Get_background: WideString; safecall;
    procedure Set_backgroundColor(p: OleVariant); safecall;
    function Get_backgroundColor: OleVariant; safecall;
    procedure Set_backgroundImage(const p: WideString); safecall;
    function Get_backgroundImage: WideString; safecall;
    procedure Set_backgroundRepeat(const p: WideString); safecall;
    function Get_backgroundRepeat: WideString; safecall;
    procedure Set_backgroundAttachment(const p: WideString); safecall;
    function Get_backgroundAttachment: WideString; safecall;
    procedure Set_backgroundPosition(const p: WideString); safecall;
    function Get_backgroundPosition: WideString; safecall;
    procedure Set_backgroundPositionX(p: OleVariant); safecall;
    function Get_backgroundPositionX: OleVariant; safecall;
    procedure Set_backgroundPositionY(p: OleVariant); safecall;
    function Get_backgroundPositionY: OleVariant; safecall;
    procedure Set_wordSpacing(p: OleVariant); safecall;
    function Get_wordSpacing: OleVariant; safecall;
    procedure Set_letterSpacing(p: OleVariant); safecall;
    function Get_letterSpacing: OleVariant; safecall;
    procedure Set_textDecoration(const p: WideString); safecall;
    function Get_textDecoration: WideString; safecall;
    procedure Set_textDecorationNone(p: WordBool); safecall;
    function Get_textDecorationNone: WordBool; safecall;
    procedure Set_textDecorationUnderline(p: WordBool); safecall;
    function Get_textDecorationUnderline: WordBool; safecall;
    procedure Set_textDecorationOverline(p: WordBool); safecall;
    function Get_textDecorationOverline: WordBool; safecall;
    procedure Set_textDecorationLineThrough(p: WordBool); safecall;
    function Get_textDecorationLineThrough: WordBool; safecall;
    procedure Set_textDecorationBlink(p: WordBool); safecall;
    function Get_textDecorationBlink: WordBool; safecall;
    procedure Set_verticalAlign(p: OleVariant); safecall;
    function Get_verticalAlign: OleVariant; safecall;
    procedure Set_textTransform(const p: WideString); safecall;
    function Get_textTransform: WideString; safecall;
    procedure Set_textAlign(const p: WideString); safecall;
    function Get_textAlign: WideString; safecall;
    procedure Set_textIndent(p: OleVariant); safecall;
    function Get_textIndent: OleVariant; safecall;
    procedure Set_lineHeight(p: OleVariant); safecall;
    function Get_lineHeight: OleVariant; safecall;
    procedure Set_marginTop(p: OleVariant); safecall;
    function Get_marginTop: OleVariant; safecall;
    procedure Set_marginRight(p: OleVariant); safecall;
    function Get_marginRight: OleVariant; safecall;
    procedure Set_marginBottom(p: OleVariant); safecall;
    function Get_marginBottom: OleVariant; safecall;
    procedure Set_marginLeft(p: OleVariant); safecall;
    function Get_marginLeft: OleVariant; safecall;
    procedure Set_margin(const p: WideString); safecall;
    function Get_margin: WideString; safecall;
    procedure Set_paddingTop(p: OleVariant); safecall;
    function Get_paddingTop: OleVariant; safecall;
    procedure Set_paddingRight(p: OleVariant); safecall;
    function Get_paddingRight: OleVariant; safecall;
    procedure Set_paddingBottom(p: OleVariant); safecall;
    function Get_paddingBottom: OleVariant; safecall;
    procedure Set_paddingLeft(p: OleVariant); safecall;
    function Get_paddingLeft: OleVariant; safecall;
    procedure Set_padding(const p: WideString); safecall;
    function Get_padding: WideString; safecall;
    procedure Set_border(const p: WideString); safecall;
    function Get_border: WideString; safecall;
    procedure Set_borderTop(const p: WideString); safecall;
    function Get_borderTop: WideString; safecall;
    procedure Set_borderRight(const p: WideString); safecall;
    function Get_borderRight: WideString; safecall;
    procedure Set_borderBottom(const p: WideString); safecall;
    function Get_borderBottom: WideString; safecall;
    procedure Set_borderLeft(const p: WideString); safecall;
    function Get_borderLeft: WideString; safecall;
    procedure Set_borderColor(const p: WideString); safecall;
    function Get_borderColor: WideString; safecall;
    procedure Set_borderTopColor(p: OleVariant); safecall;
    function Get_borderTopColor: OleVariant; safecall;
    procedure Set_borderRightColor(p: OleVariant); safecall;
    function Get_borderRightColor: OleVariant; safecall;
    procedure Set_borderBottomColor(p: OleVariant); safecall;
    function Get_borderBottomColor: OleVariant; safecall;
    procedure Set_borderLeftColor(p: OleVariant); safecall;
    function Get_borderLeftColor: OleVariant; safecall;
    procedure Set_borderWidth(const p: WideString); safecall;
    function Get_borderWidth: WideString; safecall;
    procedure Set_borderTopWidth(p: OleVariant); safecall;
    function Get_borderTopWidth: OleVariant; safecall;
    procedure Set_borderRightWidth(p: OleVariant); safecall;
    function Get_borderRightWidth: OleVariant; safecall;
    procedure Set_borderBottomWidth(p: OleVariant); safecall;
    function Get_borderBottomWidth: OleVariant; safecall;
    procedure Set_borderLeftWidth(p: OleVariant); safecall;
    function Get_borderLeftWidth: OleVariant; safecall;
    procedure Set_borderStyle(const p: WideString); safecall;
    function Get_borderStyle: WideString; safecall;
    procedure Set_borderTopStyle(const p: WideString); safecall;
    function Get_borderTopStyle: WideString; safecall;
    procedure Set_borderRightStyle(const p: WideString); safecall;
    function Get_borderRightStyle: WideString; safecall;
    procedure Set_borderBottomStyle(const p: WideString); safecall;
    function Get_borderBottomStyle: WideString; safecall;
    procedure Set_borderLeftStyle(const p: WideString); safecall;
    function Get_borderLeftStyle: WideString; safecall;
    procedure Set_width(p: OleVariant); safecall;
    function Get_width: OleVariant; safecall;
    procedure Set_height(p: OleVariant); safecall;
    function Get_height: OleVariant; safecall;
    procedure Set_styleFloat(const p: WideString); safecall;
    function Get_styleFloat: WideString; safecall;
    procedure Set_clear(const p: WideString); safecall;
    function Get_clear: WideString; safecall;
    procedure Set_display(const p: WideString); safecall;
    function Get_display: WideString; safecall;
    procedure Set_visibility(const p: WideString); safecall;
    function Get_visibility: WideString; safecall;
    procedure Set_listStyleType(const p: WideString); safecall;
    function Get_listStyleType: WideString; safecall;
    procedure Set_listStylePosition(const p: WideString); safecall;
    function Get_listStylePosition: WideString; safecall;
    procedure Set_listStyleImage(const p: WideString); safecall;
    function Get_listStyleImage: WideString; safecall;
    procedure Set_listStyle(const p: WideString); safecall;
    function Get_listStyle: WideString; safecall;
    procedure Set_whiteSpace(const p: WideString); safecall;
    function Get_whiteSpace: WideString; safecall;
    procedure Set_top(p: OleVariant); safecall;
    function Get_top: OleVariant; safecall;
    procedure Set_left(p: OleVariant); safecall;
    function Get_left: OleVariant; safecall;
    function Get_position: WideString; safecall;
    procedure Set_zIndex(p: OleVariant); safecall;
    function Get_zIndex: OleVariant; safecall;
    procedure Set_overflow(const p: WideString); safecall;
    function Get_overflow: WideString; safecall;
    procedure Set_pageBreakBefore(const p: WideString); safecall;
    function Get_pageBreakBefore: WideString; safecall;
    procedure Set_pageBreakAfter(const p: WideString); safecall;
    function Get_pageBreakAfter: WideString; safecall;
    procedure Set_cssText(const p: WideString); safecall;
    function Get_cssText: WideString; safecall;
    procedure Set_pixelTop(p: Integer); safecall;
    function Get_pixelTop: Integer; safecall;
    procedure Set_pixelLeft(p: Integer); safecall;
    function Get_pixelLeft: Integer; safecall;
    procedure Set_pixelWidth(p: Integer); safecall;
    function Get_pixelWidth: Integer; safecall;
    procedure Set_pixelHeight(p: Integer); safecall;
    function Get_pixelHeight: Integer; safecall;
    procedure Set_posTop(p: Single); safecall;
    function Get_posTop: Single; safecall;
    procedure Set_posLeft(p: Single); safecall;
    function Get_posLeft: Single; safecall;
    procedure Set_posWidth(p: Single); safecall;
    function Get_posWidth: Single; safecall;
    procedure Set_posHeight(p: Single); safecall;
    function Get_posHeight: Single; safecall;
    procedure Set_cursor(const p: WideString); safecall;
    function Get_cursor: WideString; safecall;
    procedure Set_clip(const p: WideString); safecall;
    function Get_clip: WideString; safecall;
    procedure Set_filter(const p: WideString); safecall;
    function Get_filter: WideString; safecall;
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); safecall;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; safecall;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; safecall;
    function toString: WideString; safecall;
    property fontFamily: WideString read Get_fontFamily write Set_fontFamily;
    property fontStyle: WideString read Get_fontStyle write Set_fontStyle;
    property fontVariant: WideString read Get_fontVariant write Set_fontVariant;
    property fontWeight: WideString read Get_fontWeight write Set_fontWeight;
    property fontSize: OleVariant read Get_fontSize write Set_fontSize;
    property font: WideString read Get_font write Set_font;
    property color: OleVariant read Get_color write Set_color;
    property background: WideString read Get_background write Set_background;
    property backgroundColor: OleVariant read Get_backgroundColor write Set_backgroundColor;
    property backgroundImage: WideString read Get_backgroundImage write Set_backgroundImage;
    property backgroundRepeat: WideString read Get_backgroundRepeat write Set_backgroundRepeat;
    property backgroundAttachment: WideString read Get_backgroundAttachment write Set_backgroundAttachment;
    property backgroundPosition: WideString read Get_backgroundPosition write Set_backgroundPosition;
    property backgroundPositionX: OleVariant read Get_backgroundPositionX write Set_backgroundPositionX;
    property backgroundPositionY: OleVariant read Get_backgroundPositionY write Set_backgroundPositionY;
    property wordSpacing: OleVariant read Get_wordSpacing write Set_wordSpacing;
    property letterSpacing: OleVariant read Get_letterSpacing write Set_letterSpacing;
    property textDecoration: WideString read Get_textDecoration write Set_textDecoration;
    property textDecorationNone: WordBool read Get_textDecorationNone write Set_textDecorationNone;
    property textDecorationUnderline: WordBool read Get_textDecorationUnderline write Set_textDecorationUnderline;
    property textDecorationOverline: WordBool read Get_textDecorationOverline write Set_textDecorationOverline;
    property textDecorationLineThrough: WordBool read Get_textDecorationLineThrough write Set_textDecorationLineThrough;
    property textDecorationBlink: WordBool read Get_textDecorationBlink write Set_textDecorationBlink;
    property verticalAlign: OleVariant read Get_verticalAlign write Set_verticalAlign;
    property textTransform: WideString read Get_textTransform write Set_textTransform;
    property textAlign: WideString read Get_textAlign write Set_textAlign;
    property textIndent: OleVariant read Get_textIndent write Set_textIndent;
    property lineHeight: OleVariant read Get_lineHeight write Set_lineHeight;
    property marginTop: OleVariant read Get_marginTop write Set_marginTop;
    property marginRight: OleVariant read Get_marginRight write Set_marginRight;
    property marginBottom: OleVariant read Get_marginBottom write Set_marginBottom;
    property marginLeft: OleVariant read Get_marginLeft write Set_marginLeft;
    property margin: WideString read Get_margin write Set_margin;
    property paddingTop: OleVariant read Get_paddingTop write Set_paddingTop;
    property paddingRight: OleVariant read Get_paddingRight write Set_paddingRight;
    property paddingBottom: OleVariant read Get_paddingBottom write Set_paddingBottom;
    property paddingLeft: OleVariant read Get_paddingLeft write Set_paddingLeft;
    property padding: WideString read Get_padding write Set_padding;
    property border: WideString read Get_border write Set_border;
    property borderTop: WideString read Get_borderTop write Set_borderTop;
    property borderRight: WideString read Get_borderRight write Set_borderRight;
    property borderBottom: WideString read Get_borderBottom write Set_borderBottom;
    property borderLeft: WideString read Get_borderLeft write Set_borderLeft;
    property borderColor: WideString read Get_borderColor write Set_borderColor;
    property borderTopColor: OleVariant read Get_borderTopColor write Set_borderTopColor;
    property borderRightColor: OleVariant read Get_borderRightColor write Set_borderRightColor;
    property borderBottomColor: OleVariant read Get_borderBottomColor write Set_borderBottomColor;
    property borderLeftColor: OleVariant read Get_borderLeftColor write Set_borderLeftColor;
    property borderWidth: WideString read Get_borderWidth write Set_borderWidth;
    property borderTopWidth: OleVariant read Get_borderTopWidth write Set_borderTopWidth;
    property borderRightWidth: OleVariant read Get_borderRightWidth write Set_borderRightWidth;
    property borderBottomWidth: OleVariant read Get_borderBottomWidth write Set_borderBottomWidth;
    property borderLeftWidth: OleVariant read Get_borderLeftWidth write Set_borderLeftWidth;
    property borderStyle: WideString read Get_borderStyle write Set_borderStyle;
    property borderTopStyle: WideString read Get_borderTopStyle write Set_borderTopStyle;
    property borderRightStyle: WideString read Get_borderRightStyle write Set_borderRightStyle;
    property borderBottomStyle: WideString read Get_borderBottomStyle write Set_borderBottomStyle;
    property borderLeftStyle: WideString read Get_borderLeftStyle write Set_borderLeftStyle;
    property width: OleVariant read Get_width write Set_width;
    property height: OleVariant read Get_height write Set_height;
    property styleFloat: WideString read Get_styleFloat write Set_styleFloat;
    property clear: WideString read Get_clear write Set_clear;
    property display: WideString read Get_display write Set_display;
    property visibility: WideString read Get_visibility write Set_visibility;
    property listStyleType: WideString read Get_listStyleType write Set_listStyleType;
    property listStylePosition: WideString read Get_listStylePosition write Set_listStylePosition;
    property listStyleImage: WideString read Get_listStyleImage write Set_listStyleImage;
    property listStyle: WideString read Get_listStyle write Set_listStyle;
    property whiteSpace: WideString read Get_whiteSpace write Set_whiteSpace;
    property top: OleVariant read Get_top write Set_top;
    property left: OleVariant read Get_left write Set_left;
    property position: WideString read Get_position;
    property zIndex: OleVariant read Get_zIndex write Set_zIndex;
    property overflow: WideString read Get_overflow write Set_overflow;
    property pageBreakBefore: WideString read Get_pageBreakBefore write Set_pageBreakBefore;
    property pageBreakAfter: WideString read Get_pageBreakAfter write Set_pageBreakAfter;
    property cssText: WideString read Get_cssText write Set_cssText;
    property pixelTop: Integer read Get_pixelTop write Set_pixelTop;
    property pixelLeft: Integer read Get_pixelLeft write Set_pixelLeft;
    property pixelWidth: Integer read Get_pixelWidth write Set_pixelWidth;
    property pixelHeight: Integer read Get_pixelHeight write Set_pixelHeight;
    property posTop: Single read Get_posTop write Set_posTop;
    property posLeft: Single read Get_posLeft write Set_posLeft;
    property posWidth: Single read Get_posWidth write Set_posWidth;
    property posHeight: Single read Get_posHeight write Set_posHeight;
    property cursor: WideString read Get_cursor write Set_cursor;
    property clip: WideString read Get_clip write Set_clip;
    property filter: WideString read Get_filter write Set_filter;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F25E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleDisp = dispinterface
    ['{3050F25E-98B5-11CF-BB82-00AA00BDCE0B}']
    property fontFamily: WideString dispid -2147413094;
    property fontStyle: WideString dispid -2147413088;
    property fontVariant: WideString dispid -2147413087;
    property fontWeight: WideString dispid -2147413085;
    property fontSize: OleVariant dispid -2147413093;
    property font: WideString dispid -2147413071;
    property color: OleVariant dispid -2147413110;
    property background: WideString dispid -2147413080;
    property backgroundColor: OleVariant dispid -501;
    property backgroundImage: WideString dispid -2147413111;
    property backgroundRepeat: WideString dispid -2147413068;
    property backgroundAttachment: WideString dispid -2147413067;
    property backgroundPosition: WideString dispid -2147413066;
    property backgroundPositionX: OleVariant dispid -2147413079;
    property backgroundPositionY: OleVariant dispid -2147413078;
    property wordSpacing: OleVariant dispid -2147413065;
    property letterSpacing: OleVariant dispid -2147413104;
    property textDecoration: WideString dispid -2147413077;
    property textDecorationNone: WordBool dispid -2147413089;
    property textDecorationUnderline: WordBool dispid -2147413091;
    property textDecorationOverline: WordBool dispid -2147413043;
    property textDecorationLineThrough: WordBool dispid -2147413092;
    property textDecorationBlink: WordBool dispid -2147413090;
    property verticalAlign: OleVariant dispid -2147413064;
    property textTransform: WideString dispid -2147413108;
    property textAlign: WideString dispid -2147418040;
    property textIndent: OleVariant dispid -2147413105;
    property lineHeight: OleVariant dispid -2147413106;
    property marginTop: OleVariant dispid -2147413075;
    property marginRight: OleVariant dispid -2147413074;
    property marginBottom: OleVariant dispid -2147413073;
    property marginLeft: OleVariant dispid -2147413072;
    property margin: WideString dispid -2147413076;
    property paddingTop: OleVariant dispid -2147413100;
    property paddingRight: OleVariant dispid -2147413099;
    property paddingBottom: OleVariant dispid -2147413098;
    property paddingLeft: OleVariant dispid -2147413097;
    property padding: WideString dispid -2147413101;
    property border: WideString dispid -2147413063;
    property borderTop: WideString dispid -2147413062;
    property borderRight: WideString dispid -2147413061;
    property borderBottom: WideString dispid -2147413060;
    property borderLeft: WideString dispid -2147413059;
    property borderColor: WideString dispid -2147413058;
    property borderTopColor: OleVariant dispid -2147413057;
    property borderRightColor: OleVariant dispid -2147413056;
    property borderBottomColor: OleVariant dispid -2147413055;
    property borderLeftColor: OleVariant dispid -2147413054;
    property borderWidth: WideString dispid -2147413053;
    property borderTopWidth: OleVariant dispid -2147413052;
    property borderRightWidth: OleVariant dispid -2147413051;
    property borderBottomWidth: OleVariant dispid -2147413050;
    property borderLeftWidth: OleVariant dispid -2147413049;
    property borderStyle: WideString dispid -2147413048;
    property borderTopStyle: WideString dispid -2147413047;
    property borderRightStyle: WideString dispid -2147413046;
    property borderBottomStyle: WideString dispid -2147413045;
    property borderLeftStyle: WideString dispid -2147413044;
    property width: OleVariant dispid -2147418107;
    property height: OleVariant dispid -2147418106;
    property styleFloat: WideString dispid -2147413042;
    property clear: WideString dispid -2147413096;
    property display: WideString dispid -2147413041;
    property visibility: WideString dispid -2147413032;
    property listStyleType: WideString dispid -2147413040;
    property listStylePosition: WideString dispid -2147413039;
    property listStyleImage: WideString dispid -2147413038;
    property listStyle: WideString dispid -2147413037;
    property whiteSpace: WideString dispid -2147413036;
    property top: OleVariant dispid -2147418108;
    property left: OleVariant dispid -2147418109;
    property position: WideString readonly dispid -2147413022;
    property zIndex: OleVariant dispid -2147413021;
    property overflow: WideString dispid -2147413102;
    property pageBreakBefore: WideString dispid -2147413035;
    property pageBreakAfter: WideString dispid -2147413034;
    property cssText: WideString dispid -2147413013;
    property pixelTop: Integer dispid -2147414112;
    property pixelLeft: Integer dispid -2147414111;
    property pixelWidth: Integer dispid -2147414110;
    property pixelHeight: Integer dispid -2147414109;
    property posTop: Single dispid -2147414108;
    property posLeft: Single dispid -2147414107;
    property posWidth: Single dispid -2147414106;
    property posHeight: Single dispid -2147414105;
    property cursor: WideString dispid -2147413010;
    property clip: WideString dispid -2147413020;
    property filter: WideString dispid -2147413030;
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    function toString: WideString; dispid -2147414104;
  end;

// *********************************************************************//
// Interface: IHTMLFiltersCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3EE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFiltersCollection = interface(IDispatch)
    ['{3050F3EE-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    function Get__newEnum: IUnknown; safecall;
    function item(const pvarIndex: OleVariant): OleVariant; safecall;
    property length: Integer read Get_length;
    property _newEnum: IUnknown read Get__newEnum;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFiltersCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3EE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFiltersCollectionDisp = dispinterface
    ['{3050F3EE-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1001;
    property _newEnum: IUnknown readonly dispid -4;
    function item(const pvarIndex: OleVariant): OleVariant; dispid 0;
  end;

// *********************************************************************//
// Interface: IElementBehaviorSite
// Flags:     (0)
// GUID:      {3050F427-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementBehaviorSite = interface(IUnknown)
    ['{3050F427-98B5-11CF-BB82-00AA00BDCE0B}']
    function GetElement(out ppElement: IHTMLElement): HResult; stdcall;
    function RegisterNotification(lEvent: Integer): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IElementBehavior
// Flags:     (0)
// GUID:      {3050F425-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementBehavior = interface(IUnknown)
    ['{3050F425-98B5-11CF-BB82-00AA00BDCE0B}']
    function Init(const pBehaviorSite: IElementBehaviorSite): HResult; stdcall;
    function Notify(lEvent: Integer; var pVar: OleVariant): HResult; stdcall;
    function Detach: HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IElementBehaviorFactory
// Flags:     (0)
// GUID:      {3050F429-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementBehaviorFactory = interface(IUnknown)
    ['{3050F429-98B5-11CF-BB82-00AA00BDCE0B}']
    function FindBehavior(const bstrBehavior: WideString; const bstrBehaviorUrl: WideString; 
                          const pSite: IElementBehaviorSite; out ppBehavior: IElementBehavior): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IElementBehaviorSiteOM
// Flags:     (0)
// GUID:      {3050F489-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementBehaviorSiteOM = interface(IUnknown)
    ['{3050F489-98B5-11CF-BB82-00AA00BDCE0B}']
    function RegisterEvent(pchEvent: PWideChar; lFlags: Integer; out plCookie: Integer): HResult; stdcall;
    function GetEventCookie(pchEvent: PWideChar; out plCookie: Integer): HResult; stdcall;
    function FireEvent(lCookie: Integer; const pEventObject: IHTMLEventObj): HResult; stdcall;
    function CreateEventObject(out ppEventObject: IHTMLEventObj): HResult; stdcall;
    function RegisterName(pchName: PWideChar): HResult; stdcall;
    function RegisterUrn(pchUrn: PWideChar): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IElementBehaviorRender
// Flags:     (0)
// GUID:      {3050F4AA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementBehaviorRender = interface(IUnknown)
    ['{3050F4AA-98B5-11CF-BB82-00AA00BDCE0B}']
    // !! API fix decl
    function Draw(hdc: HDC; lLayer: Integer; var pRect: tagRECT; 
                  const pReserved: IUnknown): HResult; stdcall;
    function GetRenderInfo(out plRenderInfo: Integer): HResult; stdcall;
    function HitTestPoint(var pPoint: tagPOINT; const pReserved: IUnknown; out pbHit: Integer): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IElementBehaviorSiteRender
// Flags:     (0)
// GUID:      {3050F4A7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementBehaviorSiteRender = interface(IUnknown)
    ['{3050F4A7-98B5-11CF-BB82-00AA00BDCE0B}']
    function Invalidate(var pRect: tagRECT): HResult; stdcall;
    function InvalidateRenderInfo: HResult; stdcall;
    function InvalidateStyle: HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IDOMEvent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104BA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMEvent = interface(IDispatch)
    ['{305104BA-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_bubbles: WordBool; safecall;
    function Get_cancelable: WordBool; safecall;
    function Get_currentTarget: IEventTarget; safecall;
    function Get_defaultPrevented: WordBool; safecall;
    function Get_eventPhase: Word; safecall;
    function Get_target: IEventTarget; safecall;
    function Get_timeStamp: Largeuint; safecall;
    function Get_type_: WideString; safecall;
    procedure initEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool); safecall;
    procedure preventDefault; safecall;
    procedure stopPropagation; safecall;
    procedure stopImmediatePropagation; safecall;
    function Get_isTrusted: WordBool; safecall;
    procedure Set_cancelBubble(p: WordBool); safecall;
    function Get_cancelBubble: WordBool; safecall;
    function Get_srcElement: IHTMLElement; safecall;
    property bubbles: WordBool read Get_bubbles;
    property cancelable: WordBool read Get_cancelable;
    property currentTarget: IEventTarget read Get_currentTarget;
    property defaultPrevented: WordBool read Get_defaultPrevented;
    property eventPhase: Word read Get_eventPhase;
    property target: IEventTarget read Get_target;
    property timeStamp: Largeuint read Get_timeStamp;
    property type_: WideString read Get_type_;
    property isTrusted: WordBool read Get_isTrusted;
    property cancelBubble: WordBool read Get_cancelBubble write Set_cancelBubble;
    property srcElement: IHTMLElement read Get_srcElement;
  end;

// *********************************************************************//
// DispIntf:  IDOMEventDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104BA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMEventDisp = dispinterface
    ['{305104BA-98B5-11CF-BB82-00AA00BDCE0B}']
    property bubbles: WordBool readonly dispid 1001;
    property cancelable: WordBool readonly dispid 1002;
    property currentTarget: IEventTarget readonly dispid 1003;
    property defaultPrevented: WordBool readonly dispid 1004;
    property eventPhase: Word readonly dispid 1005;
    property target: IEventTarget readonly dispid 1006;
    property timeStamp: Largeuint readonly dispid 1007;
    property type_: WideString readonly dispid 1008;
    procedure initEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool); dispid 1009;
    procedure preventDefault; dispid 1010;
    procedure stopPropagation; dispid 1011;
    procedure stopImmediatePropagation; dispid 1012;
    property isTrusted: WordBool readonly dispid 1013;
    property cancelBubble: WordBool dispid 1014;
    property srcElement: IHTMLElement readonly dispid 1015;
  end;

// *********************************************************************//
// Interface: IEventTarget
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104B9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IEventTarget = interface(IDispatch)
    ['{305104B9-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure addEventListener(const type_: WideString; const listener: IDispatch; 
                               useCapture: WordBool); safecall;
    procedure removeEventListener(const type_: WideString; const listener: IDispatch; 
                                  useCapture: WordBool); safecall;
    function dispatchEvent(const evt: IDOMEvent): WordBool; safecall;
  end;

// *********************************************************************//
// DispIntf:  IEventTargetDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104B9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IEventTargetDisp = dispinterface
    ['{305104B9-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure addEventListener(const type_: WideString; const listener: IDispatch; 
                               useCapture: WordBool); dispid -2147417602;
    procedure removeEventListener(const type_: WideString; const listener: IDispatch; 
                                  useCapture: WordBool); dispid -2147417601;
    function dispatchEvent(const evt: IDOMEvent): WordBool; dispid -2147417600;
  end;

// *********************************************************************//
// Interface: IHTMLDOMConstructor
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051049B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMConstructor = interface(IDispatch)
    ['{3051049B-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_constructor_: IDispatch; safecall;
    function LookupGetter(const propname: WideString): OleVariant; safecall;
    function LookupSetter(const propname: WideString): OleVariant; safecall;
    procedure DefineGetter(const propname: WideString; const pdispHandler: OleVariant); safecall;
    procedure DefineSetter(const propname: WideString; const pdispHandler: OleVariant); safecall;
    property constructor_: IDispatch read Get_constructor_;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDOMConstructorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051049B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMConstructorDisp = dispinterface
    ['{3051049B-98B5-11CF-BB82-00AA00BDCE0B}']
    property constructor_: IDispatch readonly dispid -2147417603;
    function LookupGetter(const propname: WideString): OleVariant; dispid 1610743809;
    function LookupSetter(const propname: WideString): OleVariant; dispid 1610743810;
    procedure DefineGetter(const propname: WideString; const pdispHandler: OleVariant); dispid 1610743811;
    procedure DefineSetter(const propname: WideString; const pdispHandler: OleVariant); dispid 1610743812;
  end;

// *********************************************************************//
// Interface: IHTMLStyleSheetRule
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F357-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetRule = interface(IDispatch)
    ['{3050F357-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_selectorText(const p: WideString); safecall;
    function Get_selectorText: WideString; safecall;
    function Get_style: IHTMLRuleStyle; safecall;
    function Get_readOnly: WordBool; safecall;
    property selectorText: WideString read Get_selectorText write Set_selectorText;
    property style: IHTMLRuleStyle read Get_style;
    property readOnly: WordBool read Get_readOnly;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleSheetRuleDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F357-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetRuleDisp = dispinterface
    ['{3050F357-98B5-11CF-BB82-00AA00BDCE0B}']
    property selectorText: WideString dispid 1001;
    property style: IHTMLRuleStyle readonly dispid -2147418038;
    property readOnly: WordBool readonly dispid 1002;
  end;

// *********************************************************************//
// Interface: IHTMLRuleStyle
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3CF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRuleStyle = interface(IDispatch)
    ['{3050F3CF-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_fontFamily(const p: WideString); safecall;
    function Get_fontFamily: WideString; safecall;
    procedure Set_fontStyle(const p: WideString); safecall;
    function Get_fontStyle: WideString; safecall;
    procedure Set_fontVariant(const p: WideString); safecall;
    function Get_fontVariant: WideString; safecall;
    procedure Set_fontWeight(const p: WideString); safecall;
    function Get_fontWeight: WideString; safecall;
    procedure Set_fontSize(p: OleVariant); safecall;
    function Get_fontSize: OleVariant; safecall;
    procedure Set_font(const p: WideString); safecall;
    function Get_font: WideString; safecall;
    procedure Set_color(p: OleVariant); safecall;
    function Get_color: OleVariant; safecall;
    procedure Set_background(const p: WideString); safecall;
    function Get_background: WideString; safecall;
    procedure Set_backgroundColor(p: OleVariant); safecall;
    function Get_backgroundColor: OleVariant; safecall;
    procedure Set_backgroundImage(const p: WideString); safecall;
    function Get_backgroundImage: WideString; safecall;
    procedure Set_backgroundRepeat(const p: WideString); safecall;
    function Get_backgroundRepeat: WideString; safecall;
    procedure Set_backgroundAttachment(const p: WideString); safecall;
    function Get_backgroundAttachment: WideString; safecall;
    procedure Set_backgroundPosition(const p: WideString); safecall;
    function Get_backgroundPosition: WideString; safecall;
    procedure Set_backgroundPositionX(p: OleVariant); safecall;
    function Get_backgroundPositionX: OleVariant; safecall;
    procedure Set_backgroundPositionY(p: OleVariant); safecall;
    function Get_backgroundPositionY: OleVariant; safecall;
    procedure Set_wordSpacing(p: OleVariant); safecall;
    function Get_wordSpacing: OleVariant; safecall;
    procedure Set_letterSpacing(p: OleVariant); safecall;
    function Get_letterSpacing: OleVariant; safecall;
    procedure Set_textDecoration(const p: WideString); safecall;
    function Get_textDecoration: WideString; safecall;
    procedure Set_textDecorationNone(p: WordBool); safecall;
    function Get_textDecorationNone: WordBool; safecall;
    procedure Set_textDecorationUnderline(p: WordBool); safecall;
    function Get_textDecorationUnderline: WordBool; safecall;
    procedure Set_textDecorationOverline(p: WordBool); safecall;
    function Get_textDecorationOverline: WordBool; safecall;
    procedure Set_textDecorationLineThrough(p: WordBool); safecall;
    function Get_textDecorationLineThrough: WordBool; safecall;
    procedure Set_textDecorationBlink(p: WordBool); safecall;
    function Get_textDecorationBlink: WordBool; safecall;
    procedure Set_verticalAlign(p: OleVariant); safecall;
    function Get_verticalAlign: OleVariant; safecall;
    procedure Set_textTransform(const p: WideString); safecall;
    function Get_textTransform: WideString; safecall;
    procedure Set_textAlign(const p: WideString); safecall;
    function Get_textAlign: WideString; safecall;
    procedure Set_textIndent(p: OleVariant); safecall;
    function Get_textIndent: OleVariant; safecall;
    procedure Set_lineHeight(p: OleVariant); safecall;
    function Get_lineHeight: OleVariant; safecall;
    procedure Set_marginTop(p: OleVariant); safecall;
    function Get_marginTop: OleVariant; safecall;
    procedure Set_marginRight(p: OleVariant); safecall;
    function Get_marginRight: OleVariant; safecall;
    procedure Set_marginBottom(p: OleVariant); safecall;
    function Get_marginBottom: OleVariant; safecall;
    procedure Set_marginLeft(p: OleVariant); safecall;
    function Get_marginLeft: OleVariant; safecall;
    procedure Set_margin(const p: WideString); safecall;
    function Get_margin: WideString; safecall;
    procedure Set_paddingTop(p: OleVariant); safecall;
    function Get_paddingTop: OleVariant; safecall;
    procedure Set_paddingRight(p: OleVariant); safecall;
    function Get_paddingRight: OleVariant; safecall;
    procedure Set_paddingBottom(p: OleVariant); safecall;
    function Get_paddingBottom: OleVariant; safecall;
    procedure Set_paddingLeft(p: OleVariant); safecall;
    function Get_paddingLeft: OleVariant; safecall;
    procedure Set_padding(const p: WideString); safecall;
    function Get_padding: WideString; safecall;
    procedure Set_border(const p: WideString); safecall;
    function Get_border: WideString; safecall;
    procedure Set_borderTop(const p: WideString); safecall;
    function Get_borderTop: WideString; safecall;
    procedure Set_borderRight(const p: WideString); safecall;
    function Get_borderRight: WideString; safecall;
    procedure Set_borderBottom(const p: WideString); safecall;
    function Get_borderBottom: WideString; safecall;
    procedure Set_borderLeft(const p: WideString); safecall;
    function Get_borderLeft: WideString; safecall;
    procedure Set_borderColor(const p: WideString); safecall;
    function Get_borderColor: WideString; safecall;
    procedure Set_borderTopColor(p: OleVariant); safecall;
    function Get_borderTopColor: OleVariant; safecall;
    procedure Set_borderRightColor(p: OleVariant); safecall;
    function Get_borderRightColor: OleVariant; safecall;
    procedure Set_borderBottomColor(p: OleVariant); safecall;
    function Get_borderBottomColor: OleVariant; safecall;
    procedure Set_borderLeftColor(p: OleVariant); safecall;
    function Get_borderLeftColor: OleVariant; safecall;
    procedure Set_borderWidth(const p: WideString); safecall;
    function Get_borderWidth: WideString; safecall;
    procedure Set_borderTopWidth(p: OleVariant); safecall;
    function Get_borderTopWidth: OleVariant; safecall;
    procedure Set_borderRightWidth(p: OleVariant); safecall;
    function Get_borderRightWidth: OleVariant; safecall;
    procedure Set_borderBottomWidth(p: OleVariant); safecall;
    function Get_borderBottomWidth: OleVariant; safecall;
    procedure Set_borderLeftWidth(p: OleVariant); safecall;
    function Get_borderLeftWidth: OleVariant; safecall;
    procedure Set_borderStyle(const p: WideString); safecall;
    function Get_borderStyle: WideString; safecall;
    procedure Set_borderTopStyle(const p: WideString); safecall;
    function Get_borderTopStyle: WideString; safecall;
    procedure Set_borderRightStyle(const p: WideString); safecall;
    function Get_borderRightStyle: WideString; safecall;
    procedure Set_borderBottomStyle(const p: WideString); safecall;
    function Get_borderBottomStyle: WideString; safecall;
    procedure Set_borderLeftStyle(const p: WideString); safecall;
    function Get_borderLeftStyle: WideString; safecall;
    procedure Set_width(p: OleVariant); safecall;
    function Get_width: OleVariant; safecall;
    procedure Set_height(p: OleVariant); safecall;
    function Get_height: OleVariant; safecall;
    procedure Set_styleFloat(const p: WideString); safecall;
    function Get_styleFloat: WideString; safecall;
    procedure Set_clear(const p: WideString); safecall;
    function Get_clear: WideString; safecall;
    procedure Set_display(const p: WideString); safecall;
    function Get_display: WideString; safecall;
    procedure Set_visibility(const p: WideString); safecall;
    function Get_visibility: WideString; safecall;
    procedure Set_listStyleType(const p: WideString); safecall;
    function Get_listStyleType: WideString; safecall;
    procedure Set_listStylePosition(const p: WideString); safecall;
    function Get_listStylePosition: WideString; safecall;
    procedure Set_listStyleImage(const p: WideString); safecall;
    function Get_listStyleImage: WideString; safecall;
    procedure Set_listStyle(const p: WideString); safecall;
    function Get_listStyle: WideString; safecall;
    procedure Set_whiteSpace(const p: WideString); safecall;
    function Get_whiteSpace: WideString; safecall;
    procedure Set_top(p: OleVariant); safecall;
    function Get_top: OleVariant; safecall;
    procedure Set_left(p: OleVariant); safecall;
    function Get_left: OleVariant; safecall;
    function Get_position: WideString; safecall;
    procedure Set_zIndex(p: OleVariant); safecall;
    function Get_zIndex: OleVariant; safecall;
    procedure Set_overflow(const p: WideString); safecall;
    function Get_overflow: WideString; safecall;
    procedure Set_pageBreakBefore(const p: WideString); safecall;
    function Get_pageBreakBefore: WideString; safecall;
    procedure Set_pageBreakAfter(const p: WideString); safecall;
    function Get_pageBreakAfter: WideString; safecall;
    procedure Set_cssText(const p: WideString); safecall;
    function Get_cssText: WideString; safecall;
    procedure Set_cursor(const p: WideString); safecall;
    function Get_cursor: WideString; safecall;
    procedure Set_clip(const p: WideString); safecall;
    function Get_clip: WideString; safecall;
    procedure Set_filter(const p: WideString); safecall;
    function Get_filter: WideString; safecall;
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); safecall;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; safecall;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; safecall;
    property fontFamily: WideString read Get_fontFamily write Set_fontFamily;
    property fontStyle: WideString read Get_fontStyle write Set_fontStyle;
    property fontVariant: WideString read Get_fontVariant write Set_fontVariant;
    property fontWeight: WideString read Get_fontWeight write Set_fontWeight;
    property fontSize: OleVariant read Get_fontSize write Set_fontSize;
    property font: WideString read Get_font write Set_font;
    property color: OleVariant read Get_color write Set_color;
    property background: WideString read Get_background write Set_background;
    property backgroundColor: OleVariant read Get_backgroundColor write Set_backgroundColor;
    property backgroundImage: WideString read Get_backgroundImage write Set_backgroundImage;
    property backgroundRepeat: WideString read Get_backgroundRepeat write Set_backgroundRepeat;
    property backgroundAttachment: WideString read Get_backgroundAttachment write Set_backgroundAttachment;
    property backgroundPosition: WideString read Get_backgroundPosition write Set_backgroundPosition;
    property backgroundPositionX: OleVariant read Get_backgroundPositionX write Set_backgroundPositionX;
    property backgroundPositionY: OleVariant read Get_backgroundPositionY write Set_backgroundPositionY;
    property wordSpacing: OleVariant read Get_wordSpacing write Set_wordSpacing;
    property letterSpacing: OleVariant read Get_letterSpacing write Set_letterSpacing;
    property textDecoration: WideString read Get_textDecoration write Set_textDecoration;
    property textDecorationNone: WordBool read Get_textDecorationNone write Set_textDecorationNone;
    property textDecorationUnderline: WordBool read Get_textDecorationUnderline write Set_textDecorationUnderline;
    property textDecorationOverline: WordBool read Get_textDecorationOverline write Set_textDecorationOverline;
    property textDecorationLineThrough: WordBool read Get_textDecorationLineThrough write Set_textDecorationLineThrough;
    property textDecorationBlink: WordBool read Get_textDecorationBlink write Set_textDecorationBlink;
    property verticalAlign: OleVariant read Get_verticalAlign write Set_verticalAlign;
    property textTransform: WideString read Get_textTransform write Set_textTransform;
    property textAlign: WideString read Get_textAlign write Set_textAlign;
    property textIndent: OleVariant read Get_textIndent write Set_textIndent;
    property lineHeight: OleVariant read Get_lineHeight write Set_lineHeight;
    property marginTop: OleVariant read Get_marginTop write Set_marginTop;
    property marginRight: OleVariant read Get_marginRight write Set_marginRight;
    property marginBottom: OleVariant read Get_marginBottom write Set_marginBottom;
    property marginLeft: OleVariant read Get_marginLeft write Set_marginLeft;
    property margin: WideString read Get_margin write Set_margin;
    property paddingTop: OleVariant read Get_paddingTop write Set_paddingTop;
    property paddingRight: OleVariant read Get_paddingRight write Set_paddingRight;
    property paddingBottom: OleVariant read Get_paddingBottom write Set_paddingBottom;
    property paddingLeft: OleVariant read Get_paddingLeft write Set_paddingLeft;
    property padding: WideString read Get_padding write Set_padding;
    property border: WideString read Get_border write Set_border;
    property borderTop: WideString read Get_borderTop write Set_borderTop;
    property borderRight: WideString read Get_borderRight write Set_borderRight;
    property borderBottom: WideString read Get_borderBottom write Set_borderBottom;
    property borderLeft: WideString read Get_borderLeft write Set_borderLeft;
    property borderColor: WideString read Get_borderColor write Set_borderColor;
    property borderTopColor: OleVariant read Get_borderTopColor write Set_borderTopColor;
    property borderRightColor: OleVariant read Get_borderRightColor write Set_borderRightColor;
    property borderBottomColor: OleVariant read Get_borderBottomColor write Set_borderBottomColor;
    property borderLeftColor: OleVariant read Get_borderLeftColor write Set_borderLeftColor;
    property borderWidth: WideString read Get_borderWidth write Set_borderWidth;
    property borderTopWidth: OleVariant read Get_borderTopWidth write Set_borderTopWidth;
    property borderRightWidth: OleVariant read Get_borderRightWidth write Set_borderRightWidth;
    property borderBottomWidth: OleVariant read Get_borderBottomWidth write Set_borderBottomWidth;
    property borderLeftWidth: OleVariant read Get_borderLeftWidth write Set_borderLeftWidth;
    property borderStyle: WideString read Get_borderStyle write Set_borderStyle;
    property borderTopStyle: WideString read Get_borderTopStyle write Set_borderTopStyle;
    property borderRightStyle: WideString read Get_borderRightStyle write Set_borderRightStyle;
    property borderBottomStyle: WideString read Get_borderBottomStyle write Set_borderBottomStyle;
    property borderLeftStyle: WideString read Get_borderLeftStyle write Set_borderLeftStyle;
    property width: OleVariant read Get_width write Set_width;
    property height: OleVariant read Get_height write Set_height;
    property styleFloat: WideString read Get_styleFloat write Set_styleFloat;
    property clear: WideString read Get_clear write Set_clear;
    property display: WideString read Get_display write Set_display;
    property visibility: WideString read Get_visibility write Set_visibility;
    property listStyleType: WideString read Get_listStyleType write Set_listStyleType;
    property listStylePosition: WideString read Get_listStylePosition write Set_listStylePosition;
    property listStyleImage: WideString read Get_listStyleImage write Set_listStyleImage;
    property listStyle: WideString read Get_listStyle write Set_listStyle;
    property whiteSpace: WideString read Get_whiteSpace write Set_whiteSpace;
    property top: OleVariant read Get_top write Set_top;
    property left: OleVariant read Get_left write Set_left;
    property position: WideString read Get_position;
    property zIndex: OleVariant read Get_zIndex write Set_zIndex;
    property overflow: WideString read Get_overflow write Set_overflow;
    property pageBreakBefore: WideString read Get_pageBreakBefore write Set_pageBreakBefore;
    property pageBreakAfter: WideString read Get_pageBreakAfter write Set_pageBreakAfter;
    property cssText: WideString read Get_cssText write Set_cssText;
    property cursor: WideString read Get_cursor write Set_cursor;
    property clip: WideString read Get_clip write Set_clip;
    property filter: WideString read Get_filter write Set_filter;
  end;

// *********************************************************************//
// DispIntf:  IHTMLRuleStyleDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3CF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRuleStyleDisp = dispinterface
    ['{3050F3CF-98B5-11CF-BB82-00AA00BDCE0B}']
    property fontFamily: WideString dispid -2147413094;
    property fontStyle: WideString dispid -2147413088;
    property fontVariant: WideString dispid -2147413087;
    property fontWeight: WideString dispid -2147413085;
    property fontSize: OleVariant dispid -2147413093;
    property font: WideString dispid -2147413071;
    property color: OleVariant dispid -2147413110;
    property background: WideString dispid -2147413080;
    property backgroundColor: OleVariant dispid -501;
    property backgroundImage: WideString dispid -2147413111;
    property backgroundRepeat: WideString dispid -2147413068;
    property backgroundAttachment: WideString dispid -2147413067;
    property backgroundPosition: WideString dispid -2147413066;
    property backgroundPositionX: OleVariant dispid -2147413079;
    property backgroundPositionY: OleVariant dispid -2147413078;
    property wordSpacing: OleVariant dispid -2147413065;
    property letterSpacing: OleVariant dispid -2147413104;
    property textDecoration: WideString dispid -2147413077;
    property textDecorationNone: WordBool dispid -2147413089;
    property textDecorationUnderline: WordBool dispid -2147413091;
    property textDecorationOverline: WordBool dispid -2147413043;
    property textDecorationLineThrough: WordBool dispid -2147413092;
    property textDecorationBlink: WordBool dispid -2147413090;
    property verticalAlign: OleVariant dispid -2147413064;
    property textTransform: WideString dispid -2147413108;
    property textAlign: WideString dispid -2147418040;
    property textIndent: OleVariant dispid -2147413105;
    property lineHeight: OleVariant dispid -2147413106;
    property marginTop: OleVariant dispid -2147413075;
    property marginRight: OleVariant dispid -2147413074;
    property marginBottom: OleVariant dispid -2147413073;
    property marginLeft: OleVariant dispid -2147413072;
    property margin: WideString dispid -2147413076;
    property paddingTop: OleVariant dispid -2147413100;
    property paddingRight: OleVariant dispid -2147413099;
    property paddingBottom: OleVariant dispid -2147413098;
    property paddingLeft: OleVariant dispid -2147413097;
    property padding: WideString dispid -2147413101;
    property border: WideString dispid -2147413063;
    property borderTop: WideString dispid -2147413062;
    property borderRight: WideString dispid -2147413061;
    property borderBottom: WideString dispid -2147413060;
    property borderLeft: WideString dispid -2147413059;
    property borderColor: WideString dispid -2147413058;
    property borderTopColor: OleVariant dispid -2147413057;
    property borderRightColor: OleVariant dispid -2147413056;
    property borderBottomColor: OleVariant dispid -2147413055;
    property borderLeftColor: OleVariant dispid -2147413054;
    property borderWidth: WideString dispid -2147413053;
    property borderTopWidth: OleVariant dispid -2147413052;
    property borderRightWidth: OleVariant dispid -2147413051;
    property borderBottomWidth: OleVariant dispid -2147413050;
    property borderLeftWidth: OleVariant dispid -2147413049;
    property borderStyle: WideString dispid -2147413048;
    property borderTopStyle: WideString dispid -2147413047;
    property borderRightStyle: WideString dispid -2147413046;
    property borderBottomStyle: WideString dispid -2147413045;
    property borderLeftStyle: WideString dispid -2147413044;
    property width: OleVariant dispid -2147418107;
    property height: OleVariant dispid -2147418106;
    property styleFloat: WideString dispid -2147413042;
    property clear: WideString dispid -2147413096;
    property display: WideString dispid -2147413041;
    property visibility: WideString dispid -2147413032;
    property listStyleType: WideString dispid -2147413040;
    property listStylePosition: WideString dispid -2147413039;
    property listStyleImage: WideString dispid -2147413038;
    property listStyle: WideString dispid -2147413037;
    property whiteSpace: WideString dispid -2147413036;
    property top: OleVariant dispid -2147418108;
    property left: OleVariant dispid -2147418109;
    property position: WideString readonly dispid -2147413022;
    property zIndex: OleVariant dispid -2147413021;
    property overflow: WideString dispid -2147413102;
    property pageBreakBefore: WideString dispid -2147413035;
    property pageBreakAfter: WideString dispid -2147413034;
    property cssText: WideString dispid -2147413013;
    property cursor: WideString dispid -2147413010;
    property clip: WideString dispid -2147413020;
    property filter: WideString dispid -2147413030;
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
  end;

// *********************************************************************//
// Interface: IHTMLCSSStyleDeclaration
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510740-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCSSStyleDeclaration = interface(IDispatch)
    ['{30510740-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    function Get_parentRule: OleVariant; safecall;
    function getPropertyValue(const bstrPropertyName: WideString): WideString; safecall;
    function getPropertyPriority(const bstrPropertyName: WideString): WideString; safecall;
    function removeProperty(const bstrPropertyName: WideString): WideString; safecall;
    procedure setProperty(const bstrPropertyName: WideString; const pvarPropertyValue: OleVariant; 
                          const pvarPropertyPriority: OleVariant); safecall;
    function item(index: Integer): WideString; safecall;
    procedure Set_fontFamily(const p: WideString); safecall;
    function Get_fontFamily: WideString; safecall;
    procedure Set_fontStyle(const p: WideString); safecall;
    function Get_fontStyle: WideString; safecall;
    procedure Set_fontVariant(const p: WideString); safecall;
    function Get_fontVariant: WideString; safecall;
    procedure Set_fontWeight(const p: WideString); safecall;
    function Get_fontWeight: WideString; safecall;
    procedure Set_fontSize(p: OleVariant); safecall;
    function Get_fontSize: OleVariant; safecall;
    procedure Set_font(const p: WideString); safecall;
    function Get_font: WideString; safecall;
    procedure Set_color(p: OleVariant); safecall;
    function Get_color: OleVariant; safecall;
    procedure Set_background(const p: WideString); safecall;
    function Get_background: WideString; safecall;
    procedure Set_backgroundColor(p: OleVariant); safecall;
    function Get_backgroundColor: OleVariant; safecall;
    procedure Set_backgroundImage(const p: WideString); safecall;
    function Get_backgroundImage: WideString; safecall;
    procedure Set_backgroundRepeat(const p: WideString); safecall;
    function Get_backgroundRepeat: WideString; safecall;
    procedure Set_backgroundAttachment(const p: WideString); safecall;
    function Get_backgroundAttachment: WideString; safecall;
    procedure Set_backgroundPosition(const p: WideString); safecall;
    function Get_backgroundPosition: WideString; safecall;
    procedure Set_backgroundPositionX(p: OleVariant); safecall;
    function Get_backgroundPositionX: OleVariant; safecall;
    procedure Set_backgroundPositionY(p: OleVariant); safecall;
    function Get_backgroundPositionY: OleVariant; safecall;
    procedure Set_wordSpacing(p: OleVariant); safecall;
    function Get_wordSpacing: OleVariant; safecall;
    procedure Set_letterSpacing(p: OleVariant); safecall;
    function Get_letterSpacing: OleVariant; safecall;
    procedure Set_textDecoration(const p: WideString); safecall;
    function Get_textDecoration: WideString; safecall;
    procedure Set_verticalAlign(p: OleVariant); safecall;
    function Get_verticalAlign: OleVariant; safecall;
    procedure Set_textTransform(const p: WideString); safecall;
    function Get_textTransform: WideString; safecall;
    procedure Set_textAlign(const p: WideString); safecall;
    function Get_textAlign: WideString; safecall;
    procedure Set_textIndent(p: OleVariant); safecall;
    function Get_textIndent: OleVariant; safecall;
    procedure Set_lineHeight(p: OleVariant); safecall;
    function Get_lineHeight: OleVariant; safecall;
    procedure Set_marginTop(p: OleVariant); safecall;
    function Get_marginTop: OleVariant; safecall;
    procedure Set_marginRight(p: OleVariant); safecall;
    function Get_marginRight: OleVariant; safecall;
    procedure Set_marginBottom(p: OleVariant); safecall;
    function Get_marginBottom: OleVariant; safecall;
    procedure Set_marginLeft(p: OleVariant); safecall;
    function Get_marginLeft: OleVariant; safecall;
    procedure Set_margin(const p: WideString); safecall;
    function Get_margin: WideString; safecall;
    procedure Set_paddingTop(p: OleVariant); safecall;
    function Get_paddingTop: OleVariant; safecall;
    procedure Set_paddingRight(p: OleVariant); safecall;
    function Get_paddingRight: OleVariant; safecall;
    procedure Set_paddingBottom(p: OleVariant); safecall;
    function Get_paddingBottom: OleVariant; safecall;
    procedure Set_paddingLeft(p: OleVariant); safecall;
    function Get_paddingLeft: OleVariant; safecall;
    procedure Set_padding(const p: WideString); safecall;
    function Get_padding: WideString; safecall;
    procedure Set_border(const p: WideString); safecall;
    function Get_border: WideString; safecall;
    procedure Set_borderTop(const p: WideString); safecall;
    function Get_borderTop: WideString; safecall;
    procedure Set_borderRight(const p: WideString); safecall;
    function Get_borderRight: WideString; safecall;
    procedure Set_borderBottom(const p: WideString); safecall;
    function Get_borderBottom: WideString; safecall;
    procedure Set_borderLeft(const p: WideString); safecall;
    function Get_borderLeft: WideString; safecall;
    procedure Set_borderColor(const p: WideString); safecall;
    function Get_borderColor: WideString; safecall;
    procedure Set_borderTopColor(p: OleVariant); safecall;
    function Get_borderTopColor: OleVariant; safecall;
    procedure Set_borderRightColor(p: OleVariant); safecall;
    function Get_borderRightColor: OleVariant; safecall;
    procedure Set_borderBottomColor(p: OleVariant); safecall;
    function Get_borderBottomColor: OleVariant; safecall;
    procedure Set_borderLeftColor(p: OleVariant); safecall;
    function Get_borderLeftColor: OleVariant; safecall;
    procedure Set_borderWidth(const p: WideString); safecall;
    function Get_borderWidth: WideString; safecall;
    procedure Set_borderTopWidth(p: OleVariant); safecall;
    function Get_borderTopWidth: OleVariant; safecall;
    procedure Set_borderRightWidth(p: OleVariant); safecall;
    function Get_borderRightWidth: OleVariant; safecall;
    procedure Set_borderBottomWidth(p: OleVariant); safecall;
    function Get_borderBottomWidth: OleVariant; safecall;
    procedure Set_borderLeftWidth(p: OleVariant); safecall;
    function Get_borderLeftWidth: OleVariant; safecall;
    procedure Set_borderStyle(const p: WideString); safecall;
    function Get_borderStyle: WideString; safecall;
    procedure Set_borderTopStyle(const p: WideString); safecall;
    function Get_borderTopStyle: WideString; safecall;
    procedure Set_borderRightStyle(const p: WideString); safecall;
    function Get_borderRightStyle: WideString; safecall;
    procedure Set_borderBottomStyle(const p: WideString); safecall;
    function Get_borderBottomStyle: WideString; safecall;
    procedure Set_borderLeftStyle(const p: WideString); safecall;
    function Get_borderLeftStyle: WideString; safecall;
    procedure Set_width(p: OleVariant); safecall;
    function Get_width: OleVariant; safecall;
    procedure Set_height(p: OleVariant); safecall;
    function Get_height: OleVariant; safecall;
    procedure Set_styleFloat(const p: WideString); safecall;
    function Get_styleFloat: WideString; safecall;
    procedure Set_clear(const p: WideString); safecall;
    function Get_clear: WideString; safecall;
    procedure Set_display(const p: WideString); safecall;
    function Get_display: WideString; safecall;
    procedure Set_visibility(const p: WideString); safecall;
    function Get_visibility: WideString; safecall;
    procedure Set_listStyleType(const p: WideString); safecall;
    function Get_listStyleType: WideString; safecall;
    procedure Set_listStylePosition(const p: WideString); safecall;
    function Get_listStylePosition: WideString; safecall;
    procedure Set_listStyleImage(const p: WideString); safecall;
    function Get_listStyleImage: WideString; safecall;
    procedure Set_listStyle(const p: WideString); safecall;
    function Get_listStyle: WideString; safecall;
    procedure Set_whiteSpace(const p: WideString); safecall;
    function Get_whiteSpace: WideString; safecall;
    procedure Set_top(p: OleVariant); safecall;
    function Get_top: OleVariant; safecall;
    procedure Set_left(p: OleVariant); safecall;
    function Get_left: OleVariant; safecall;
    procedure Set_zIndex(p: OleVariant); safecall;
    function Get_zIndex: OleVariant; safecall;
    procedure Set_overflow(const p: WideString); safecall;
    function Get_overflow: WideString; safecall;
    procedure Set_pageBreakBefore(const p: WideString); safecall;
    function Get_pageBreakBefore: WideString; safecall;
    procedure Set_pageBreakAfter(const p: WideString); safecall;
    function Get_pageBreakAfter: WideString; safecall;
    procedure Set_cssText(const p: WideString); safecall;
    function Get_cssText: WideString; safecall;
    procedure Set_cursor(const p: WideString); safecall;
    function Get_cursor: WideString; safecall;
    procedure Set_clip(const p: WideString); safecall;
    function Get_clip: WideString; safecall;
    procedure Set_filter(const p: WideString); safecall;
    function Get_filter: WideString; safecall;
    procedure Set_tableLayout(const p: WideString); safecall;
    function Get_tableLayout: WideString; safecall;
    procedure Set_borderCollapse(const p: WideString); safecall;
    function Get_borderCollapse: WideString; safecall;
    procedure Set_direction(const p: WideString); safecall;
    function Get_direction: WideString; safecall;
    procedure Set_behavior(const p: WideString); safecall;
    function Get_behavior: WideString; safecall;
    procedure Set_position(const p: WideString); safecall;
    function Get_position: WideString; safecall;
    procedure Set_unicodeBidi(const p: WideString); safecall;
    function Get_unicodeBidi: WideString; safecall;
    procedure Set_bottom(p: OleVariant); safecall;
    function Get_bottom: OleVariant; safecall;
    procedure Set_right(p: OleVariant); safecall;
    function Get_right: OleVariant; safecall;
    procedure Set_imeMode(const p: WideString); safecall;
    function Get_imeMode: WideString; safecall;
    procedure Set_rubyAlign(const p: WideString); safecall;
    function Get_rubyAlign: WideString; safecall;
    procedure Set_rubyPosition(const p: WideString); safecall;
    function Get_rubyPosition: WideString; safecall;
    procedure Set_rubyOverhang(const p: WideString); safecall;
    function Get_rubyOverhang: WideString; safecall;
    procedure Set_layoutGridChar(p: OleVariant); safecall;
    function Get_layoutGridChar: OleVariant; safecall;
    procedure Set_layoutGridLine(p: OleVariant); safecall;
    function Get_layoutGridLine: OleVariant; safecall;
    procedure Set_layoutGridMode(const p: WideString); safecall;
    function Get_layoutGridMode: WideString; safecall;
    procedure Set_layoutGridType(const p: WideString); safecall;
    function Get_layoutGridType: WideString; safecall;
    procedure Set_layoutGrid(const p: WideString); safecall;
    function Get_layoutGrid: WideString; safecall;
    procedure Set_textAutospace(const p: WideString); safecall;
    function Get_textAutospace: WideString; safecall;
    procedure Set_wordBreak(const p: WideString); safecall;
    function Get_wordBreak: WideString; safecall;
    procedure Set_lineBreak(const p: WideString); safecall;
    function Get_lineBreak: WideString; safecall;
    procedure Set_textJustify(const p: WideString); safecall;
    function Get_textJustify: WideString; safecall;
    procedure Set_textJustifyTrim(const p: WideString); safecall;
    function Get_textJustifyTrim: WideString; safecall;
    procedure Set_textKashida(p: OleVariant); safecall;
    function Get_textKashida: OleVariant; safecall;
    procedure Set_overflowX(const p: WideString); safecall;
    function Get_overflowX: WideString; safecall;
    procedure Set_overflowY(const p: WideString); safecall;
    function Get_overflowY: WideString; safecall;
    procedure Set_accelerator(const p: WideString); safecall;
    function Get_accelerator: WideString; safecall;
    procedure Set_layoutFlow(const p: WideString); safecall;
    function Get_layoutFlow: WideString; safecall;
    procedure Set_zoom(p: OleVariant); safecall;
    function Get_zoom: OleVariant; safecall;
    procedure Set_wordWrap(const p: WideString); safecall;
    function Get_wordWrap: WideString; safecall;
    procedure Set_textUnderlinePosition(const p: WideString); safecall;
    function Get_textUnderlinePosition: WideString; safecall;
    procedure Set_scrollbarBaseColor(p: OleVariant); safecall;
    function Get_scrollbarBaseColor: OleVariant; safecall;
    procedure Set_scrollbarFaceColor(p: OleVariant); safecall;
    function Get_scrollbarFaceColor: OleVariant; safecall;
    procedure Set_scrollbar3dLightColor(p: OleVariant); safecall;
    function Get_scrollbar3dLightColor: OleVariant; safecall;
    procedure Set_scrollbarShadowColor(p: OleVariant); safecall;
    function Get_scrollbarShadowColor: OleVariant; safecall;
    procedure Set_scrollbarHighlightColor(p: OleVariant); safecall;
    function Get_scrollbarHighlightColor: OleVariant; safecall;
    procedure Set_scrollbarDarkShadowColor(p: OleVariant); safecall;
    function Get_scrollbarDarkShadowColor: OleVariant; safecall;
    procedure Set_scrollbarArrowColor(p: OleVariant); safecall;
    function Get_scrollbarArrowColor: OleVariant; safecall;
    procedure Set_scrollbarTrackColor(p: OleVariant); safecall;
    function Get_scrollbarTrackColor: OleVariant; safecall;
    procedure Set_writingMode(const p: WideString); safecall;
    function Get_writingMode: WideString; safecall;
    procedure Set_textAlignLast(const p: WideString); safecall;
    function Get_textAlignLast: WideString; safecall;
    procedure Set_textKashidaSpace(p: OleVariant); safecall;
    function Get_textKashidaSpace: OleVariant; safecall;
    procedure Set_textOverflow(const p: WideString); safecall;
    function Get_textOverflow: WideString; safecall;
    procedure Set_minHeight(p: OleVariant); safecall;
    function Get_minHeight: OleVariant; safecall;
    procedure Set_msInterpolationMode(const p: WideString); safecall;
    function Get_msInterpolationMode: WideString; safecall;
    procedure Set_maxHeight(p: OleVariant); safecall;
    function Get_maxHeight: OleVariant; safecall;
    procedure Set_minWidth(p: OleVariant); safecall;
    function Get_minWidth: OleVariant; safecall;
    procedure Set_maxWidth(p: OleVariant); safecall;
    function Get_maxWidth: OleVariant; safecall;
    procedure Set_content(const p: WideString); safecall;
    function Get_content: WideString; safecall;
    procedure Set_captionSide(const p: WideString); safecall;
    function Get_captionSide: WideString; safecall;
    procedure Set_counterIncrement(const p: WideString); safecall;
    function Get_counterIncrement: WideString; safecall;
    procedure Set_counterReset(const p: WideString); safecall;
    function Get_counterReset: WideString; safecall;
    procedure Set_outline(const p: WideString); safecall;
    function Get_outline: WideString; safecall;
    procedure Set_outlineWidth(p: OleVariant); safecall;
    function Get_outlineWidth: OleVariant; safecall;
    procedure Set_outlineStyle(const p: WideString); safecall;
    function Get_outlineStyle: WideString; safecall;
    procedure Set_outlineColor(p: OleVariant); safecall;
    function Get_outlineColor: OleVariant; safecall;
    procedure Set_boxSizing(const p: WideString); safecall;
    function Get_boxSizing: WideString; safecall;
    procedure Set_borderSpacing(const p: WideString); safecall;
    function Get_borderSpacing: WideString; safecall;
    procedure Set_orphans(p: OleVariant); safecall;
    function Get_orphans: OleVariant; safecall;
    procedure Set_widows(p: OleVariant); safecall;
    function Get_widows: OleVariant; safecall;
    procedure Set_pageBreakInside(const p: WideString); safecall;
    function Get_pageBreakInside: WideString; safecall;
    procedure Set_emptyCells(const p: WideString); safecall;
    function Get_emptyCells: WideString; safecall;
    procedure Set_msBlockProgression(const p: WideString); safecall;
    function Get_msBlockProgression: WideString; safecall;
    procedure Set_quotes(const p: WideString); safecall;
    function Get_quotes: WideString; safecall;
    procedure Set_alignmentBaseline(const p: WideString); safecall;
    function Get_alignmentBaseline: WideString; safecall;
    procedure Set_baselineShift(p: OleVariant); safecall;
    function Get_baselineShift: OleVariant; safecall;
    procedure Set_dominantBaseline(const p: WideString); safecall;
    function Get_dominantBaseline: WideString; safecall;
    procedure Set_fontSizeAdjust(p: OleVariant); safecall;
    function Get_fontSizeAdjust: OleVariant; safecall;
    procedure Set_fontStretch(const p: WideString); safecall;
    function Get_fontStretch: WideString; safecall;
    procedure Set_opacity(p: OleVariant); safecall;
    function Get_opacity: OleVariant; safecall;
    procedure Set_clipPath(const p: WideString); safecall;
    function Get_clipPath: WideString; safecall;
    procedure Set_clipRule(const p: WideString); safecall;
    function Get_clipRule: WideString; safecall;
    procedure Set_fill(const p: WideString); safecall;
    function Get_fill: WideString; safecall;
    procedure Set_fillOpacity(p: OleVariant); safecall;
    function Get_fillOpacity: OleVariant; safecall;
    procedure Set_fillRule(const p: WideString); safecall;
    function Get_fillRule: WideString; safecall;
    procedure Set_kerning(p: OleVariant); safecall;
    function Get_kerning: OleVariant; safecall;
    procedure Set_marker(const p: WideString); safecall;
    function Get_marker: WideString; safecall;
    procedure Set_markerEnd(const p: WideString); safecall;
    function Get_markerEnd: WideString; safecall;
    procedure Set_markerMid(const p: WideString); safecall;
    function Get_markerMid: WideString; safecall;
    procedure Set_markerStart(const p: WideString); safecall;
    function Get_markerStart: WideString; safecall;
    procedure Set_mask(const p: WideString); safecall;
    function Get_mask: WideString; safecall;
    procedure Set_pointerEvents(const p: WideString); safecall;
    function Get_pointerEvents: WideString; safecall;
    procedure Set_stopColor(p: OleVariant); safecall;
    function Get_stopColor: OleVariant; safecall;
    procedure Set_stopOpacity(p: OleVariant); safecall;
    function Get_stopOpacity: OleVariant; safecall;
    procedure Set_stroke(const p: WideString); safecall;
    function Get_stroke: WideString; safecall;
    procedure Set_strokeDasharray(const p: WideString); safecall;
    function Get_strokeDasharray: WideString; safecall;
    procedure Set_strokeDashoffset(p: OleVariant); safecall;
    function Get_strokeDashoffset: OleVariant; safecall;
    procedure Set_strokeLinecap(const p: WideString); safecall;
    function Get_strokeLinecap: WideString; safecall;
    procedure Set_strokeLinejoin(const p: WideString); safecall;
    function Get_strokeLinejoin: WideString; safecall;
    procedure Set_strokeMiterlimit(p: OleVariant); safecall;
    function Get_strokeMiterlimit: OleVariant; safecall;
    procedure Set_strokeOpacity(p: OleVariant); safecall;
    function Get_strokeOpacity: OleVariant; safecall;
    procedure Set_strokeWidth(p: OleVariant); safecall;
    function Get_strokeWidth: OleVariant; safecall;
    procedure Set_textAnchor(const p: WideString); safecall;
    function Get_textAnchor: WideString; safecall;
    procedure Set_glyphOrientationHorizontal(p: OleVariant); safecall;
    function Get_glyphOrientationHorizontal: OleVariant; safecall;
    procedure Set_glyphOrientationVertical(p: OleVariant); safecall;
    function Get_glyphOrientationVertical: OleVariant; safecall;
    procedure Set_borderRadius(const p: WideString); safecall;
    function Get_borderRadius: WideString; safecall;
    procedure Set_borderTopLeftRadius(const p: WideString); safecall;
    function Get_borderTopLeftRadius: WideString; safecall;
    procedure Set_borderTopRightRadius(const p: WideString); safecall;
    function Get_borderTopRightRadius: WideString; safecall;
    procedure Set_borderBottomRightRadius(const p: WideString); safecall;
    function Get_borderBottomRightRadius: WideString; safecall;
    procedure Set_borderBottomLeftRadius(const p: WideString); safecall;
    function Get_borderBottomLeftRadius: WideString; safecall;
    procedure Set_clipTop(p: OleVariant); safecall;
    function Get_clipTop: OleVariant; safecall;
    procedure Set_clipRight(p: OleVariant); safecall;
    function Get_clipRight: OleVariant; safecall;
    function Get_clipBottom: OleVariant; safecall;
    procedure Set_clipLeft(p: OleVariant); safecall;
    function Get_clipLeft: OleVariant; safecall;
    procedure Set_cssFloat(const p: WideString); safecall;
    function Get_cssFloat: WideString; safecall;
    procedure Set_backgroundClip(const p: WideString); safecall;
    function Get_backgroundClip: WideString; safecall;
    procedure Set_backgroundOrigin(const p: WideString); safecall;
    function Get_backgroundOrigin: WideString; safecall;
    procedure Set_backgroundSize(const p: WideString); safecall;
    function Get_backgroundSize: WideString; safecall;
    procedure Set_boxShadow(const p: WideString); safecall;
    function Get_boxShadow: WideString; safecall;
    procedure Set_msTransform(const p: WideString); safecall;
    function Get_msTransform: WideString; safecall;
    procedure Set_msTransformOrigin(const p: WideString); safecall;
    function Get_msTransformOrigin: WideString; safecall;
    property length: Integer read Get_length;
    property parentRule: OleVariant read Get_parentRule;
    property fontFamily: WideString read Get_fontFamily write Set_fontFamily;
    property fontStyle: WideString read Get_fontStyle write Set_fontStyle;
    property fontVariant: WideString read Get_fontVariant write Set_fontVariant;
    property fontWeight: WideString read Get_fontWeight write Set_fontWeight;
    property fontSize: OleVariant read Get_fontSize write Set_fontSize;
    property font: WideString read Get_font write Set_font;
    property color: OleVariant read Get_color write Set_color;
    property background: WideString read Get_background write Set_background;
    property backgroundColor: OleVariant read Get_backgroundColor write Set_backgroundColor;
    property backgroundImage: WideString read Get_backgroundImage write Set_backgroundImage;
    property backgroundRepeat: WideString read Get_backgroundRepeat write Set_backgroundRepeat;
    property backgroundAttachment: WideString read Get_backgroundAttachment write Set_backgroundAttachment;
    property backgroundPosition: WideString read Get_backgroundPosition write Set_backgroundPosition;
    property backgroundPositionX: OleVariant read Get_backgroundPositionX write Set_backgroundPositionX;
    property backgroundPositionY: OleVariant read Get_backgroundPositionY write Set_backgroundPositionY;
    property wordSpacing: OleVariant read Get_wordSpacing write Set_wordSpacing;
    property letterSpacing: OleVariant read Get_letterSpacing write Set_letterSpacing;
    property textDecoration: WideString read Get_textDecoration write Set_textDecoration;
    property verticalAlign: OleVariant read Get_verticalAlign write Set_verticalAlign;
    property textTransform: WideString read Get_textTransform write Set_textTransform;
    property textAlign: WideString read Get_textAlign write Set_textAlign;
    property textIndent: OleVariant read Get_textIndent write Set_textIndent;
    property lineHeight: OleVariant read Get_lineHeight write Set_lineHeight;
    property marginTop: OleVariant read Get_marginTop write Set_marginTop;
    property marginRight: OleVariant read Get_marginRight write Set_marginRight;
    property marginBottom: OleVariant read Get_marginBottom write Set_marginBottom;
    property marginLeft: OleVariant read Get_marginLeft write Set_marginLeft;
    property margin: WideString read Get_margin write Set_margin;
    property paddingTop: OleVariant read Get_paddingTop write Set_paddingTop;
    property paddingRight: OleVariant read Get_paddingRight write Set_paddingRight;
    property paddingBottom: OleVariant read Get_paddingBottom write Set_paddingBottom;
    property paddingLeft: OleVariant read Get_paddingLeft write Set_paddingLeft;
    property padding: WideString read Get_padding write Set_padding;
    property border: WideString read Get_border write Set_border;
    property borderTop: WideString read Get_borderTop write Set_borderTop;
    property borderRight: WideString read Get_borderRight write Set_borderRight;
    property borderBottom: WideString read Get_borderBottom write Set_borderBottom;
    property borderLeft: WideString read Get_borderLeft write Set_borderLeft;
    property borderColor: WideString read Get_borderColor write Set_borderColor;
    property borderTopColor: OleVariant read Get_borderTopColor write Set_borderTopColor;
    property borderRightColor: OleVariant read Get_borderRightColor write Set_borderRightColor;
    property borderBottomColor: OleVariant read Get_borderBottomColor write Set_borderBottomColor;
    property borderLeftColor: OleVariant read Get_borderLeftColor write Set_borderLeftColor;
    property borderWidth: WideString read Get_borderWidth write Set_borderWidth;
    property borderTopWidth: OleVariant read Get_borderTopWidth write Set_borderTopWidth;
    property borderRightWidth: OleVariant read Get_borderRightWidth write Set_borderRightWidth;
    property borderBottomWidth: OleVariant read Get_borderBottomWidth write Set_borderBottomWidth;
    property borderLeftWidth: OleVariant read Get_borderLeftWidth write Set_borderLeftWidth;
    property borderStyle: WideString read Get_borderStyle write Set_borderStyle;
    property borderTopStyle: WideString read Get_borderTopStyle write Set_borderTopStyle;
    property borderRightStyle: WideString read Get_borderRightStyle write Set_borderRightStyle;
    property borderBottomStyle: WideString read Get_borderBottomStyle write Set_borderBottomStyle;
    property borderLeftStyle: WideString read Get_borderLeftStyle write Set_borderLeftStyle;
    property width: OleVariant read Get_width write Set_width;
    property height: OleVariant read Get_height write Set_height;
    property styleFloat: WideString read Get_styleFloat write Set_styleFloat;
    property clear: WideString read Get_clear write Set_clear;
    property display: WideString read Get_display write Set_display;
    property visibility: WideString read Get_visibility write Set_visibility;
    property listStyleType: WideString read Get_listStyleType write Set_listStyleType;
    property listStylePosition: WideString read Get_listStylePosition write Set_listStylePosition;
    property listStyleImage: WideString read Get_listStyleImage write Set_listStyleImage;
    property listStyle: WideString read Get_listStyle write Set_listStyle;
    property whiteSpace: WideString read Get_whiteSpace write Set_whiteSpace;
    property top: OleVariant read Get_top write Set_top;
    property left: OleVariant read Get_left write Set_left;
    property zIndex: OleVariant read Get_zIndex write Set_zIndex;
    property overflow: WideString read Get_overflow write Set_overflow;
    property pageBreakBefore: WideString read Get_pageBreakBefore write Set_pageBreakBefore;
    property pageBreakAfter: WideString read Get_pageBreakAfter write Set_pageBreakAfter;
    property cssText: WideString read Get_cssText write Set_cssText;
    property cursor: WideString read Get_cursor write Set_cursor;
    property clip: WideString read Get_clip write Set_clip;
    property filter: WideString read Get_filter write Set_filter;
    property tableLayout: WideString read Get_tableLayout write Set_tableLayout;
    property borderCollapse: WideString read Get_borderCollapse write Set_borderCollapse;
    property direction: WideString read Get_direction write Set_direction;
    property behavior: WideString read Get_behavior write Set_behavior;
    property position: WideString read Get_position write Set_position;
    property unicodeBidi: WideString read Get_unicodeBidi write Set_unicodeBidi;
    property bottom: OleVariant read Get_bottom write Set_bottom;
    property right: OleVariant read Get_right write Set_right;
    property imeMode: WideString read Get_imeMode write Set_imeMode;
    property rubyAlign: WideString read Get_rubyAlign write Set_rubyAlign;
    property rubyPosition: WideString read Get_rubyPosition write Set_rubyPosition;
    property rubyOverhang: WideString read Get_rubyOverhang write Set_rubyOverhang;
    property layoutGridChar: OleVariant read Get_layoutGridChar write Set_layoutGridChar;
    property layoutGridLine: OleVariant read Get_layoutGridLine write Set_layoutGridLine;
    property layoutGridMode: WideString read Get_layoutGridMode write Set_layoutGridMode;
    property layoutGridType: WideString read Get_layoutGridType write Set_layoutGridType;
    property layoutGrid: WideString read Get_layoutGrid write Set_layoutGrid;
    property textAutospace: WideString read Get_textAutospace write Set_textAutospace;
    property wordBreak: WideString read Get_wordBreak write Set_wordBreak;
    property lineBreak: WideString read Get_lineBreak write Set_lineBreak;
    property textJustify: WideString read Get_textJustify write Set_textJustify;
    property textJustifyTrim: WideString read Get_textJustifyTrim write Set_textJustifyTrim;
    property textKashida: OleVariant read Get_textKashida write Set_textKashida;
    property overflowX: WideString read Get_overflowX write Set_overflowX;
    property overflowY: WideString read Get_overflowY write Set_overflowY;
    property accelerator: WideString read Get_accelerator write Set_accelerator;
    property layoutFlow: WideString read Get_layoutFlow write Set_layoutFlow;
    property zoom: OleVariant read Get_zoom write Set_zoom;
    property wordWrap: WideString read Get_wordWrap write Set_wordWrap;
    property textUnderlinePosition: WideString read Get_textUnderlinePosition write Set_textUnderlinePosition;
    property scrollbarBaseColor: OleVariant read Get_scrollbarBaseColor write Set_scrollbarBaseColor;
    property scrollbarFaceColor: OleVariant read Get_scrollbarFaceColor write Set_scrollbarFaceColor;
    property scrollbar3dLightColor: OleVariant read Get_scrollbar3dLightColor write Set_scrollbar3dLightColor;
    property scrollbarShadowColor: OleVariant read Get_scrollbarShadowColor write Set_scrollbarShadowColor;
    property scrollbarHighlightColor: OleVariant read Get_scrollbarHighlightColor write Set_scrollbarHighlightColor;
    property scrollbarDarkShadowColor: OleVariant read Get_scrollbarDarkShadowColor write Set_scrollbarDarkShadowColor;
    property scrollbarArrowColor: OleVariant read Get_scrollbarArrowColor write Set_scrollbarArrowColor;
    property scrollbarTrackColor: OleVariant read Get_scrollbarTrackColor write Set_scrollbarTrackColor;
    property writingMode: WideString read Get_writingMode write Set_writingMode;
    property textAlignLast: WideString read Get_textAlignLast write Set_textAlignLast;
    property textKashidaSpace: OleVariant read Get_textKashidaSpace write Set_textKashidaSpace;
    property textOverflow: WideString read Get_textOverflow write Set_textOverflow;
    property minHeight: OleVariant read Get_minHeight write Set_minHeight;
    property msInterpolationMode: WideString read Get_msInterpolationMode write Set_msInterpolationMode;
    property maxHeight: OleVariant read Get_maxHeight write Set_maxHeight;
    property minWidth: OleVariant read Get_minWidth write Set_minWidth;
    property maxWidth: OleVariant read Get_maxWidth write Set_maxWidth;
    property content: WideString read Get_content write Set_content;
    property captionSide: WideString read Get_captionSide write Set_captionSide;
    property counterIncrement: WideString read Get_counterIncrement write Set_counterIncrement;
    property counterReset: WideString read Get_counterReset write Set_counterReset;
    property outline: WideString read Get_outline write Set_outline;
    property outlineWidth: OleVariant read Get_outlineWidth write Set_outlineWidth;
    property outlineStyle: WideString read Get_outlineStyle write Set_outlineStyle;
    property outlineColor: OleVariant read Get_outlineColor write Set_outlineColor;
    property boxSizing: WideString read Get_boxSizing write Set_boxSizing;
    property borderSpacing: WideString read Get_borderSpacing write Set_borderSpacing;
    property orphans: OleVariant read Get_orphans write Set_orphans;
    property widows: OleVariant read Get_widows write Set_widows;
    property pageBreakInside: WideString read Get_pageBreakInside write Set_pageBreakInside;
    property emptyCells: WideString read Get_emptyCells write Set_emptyCells;
    property msBlockProgression: WideString read Get_msBlockProgression write Set_msBlockProgression;
    property quotes: WideString read Get_quotes write Set_quotes;
    property alignmentBaseline: WideString read Get_alignmentBaseline write Set_alignmentBaseline;
    property baselineShift: OleVariant read Get_baselineShift write Set_baselineShift;
    property dominantBaseline: WideString read Get_dominantBaseline write Set_dominantBaseline;
    property fontSizeAdjust: OleVariant read Get_fontSizeAdjust write Set_fontSizeAdjust;
    property fontStretch: WideString read Get_fontStretch write Set_fontStretch;
    property opacity: OleVariant read Get_opacity write Set_opacity;
    property clipPath: WideString read Get_clipPath write Set_clipPath;
    property clipRule: WideString read Get_clipRule write Set_clipRule;
    property fill: WideString read Get_fill write Set_fill;
    property fillOpacity: OleVariant read Get_fillOpacity write Set_fillOpacity;
    property fillRule: WideString read Get_fillRule write Set_fillRule;
    property kerning: OleVariant read Get_kerning write Set_kerning;
    property marker: WideString read Get_marker write Set_marker;
    property markerEnd: WideString read Get_markerEnd write Set_markerEnd;
    property markerMid: WideString read Get_markerMid write Set_markerMid;
    property markerStart: WideString read Get_markerStart write Set_markerStart;
    property mask: WideString read Get_mask write Set_mask;
    property pointerEvents: WideString read Get_pointerEvents write Set_pointerEvents;
    property stopColor: OleVariant read Get_stopColor write Set_stopColor;
    property stopOpacity: OleVariant read Get_stopOpacity write Set_stopOpacity;
    property stroke: WideString read Get_stroke write Set_stroke;
    property strokeDasharray: WideString read Get_strokeDasharray write Set_strokeDasharray;
    property strokeDashoffset: OleVariant read Get_strokeDashoffset write Set_strokeDashoffset;
    property strokeLinecap: WideString read Get_strokeLinecap write Set_strokeLinecap;
    property strokeLinejoin: WideString read Get_strokeLinejoin write Set_strokeLinejoin;
    property strokeMiterlimit: OleVariant read Get_strokeMiterlimit write Set_strokeMiterlimit;
    property strokeOpacity: OleVariant read Get_strokeOpacity write Set_strokeOpacity;
    property strokeWidth: OleVariant read Get_strokeWidth write Set_strokeWidth;
    property textAnchor: WideString read Get_textAnchor write Set_textAnchor;
    property glyphOrientationHorizontal: OleVariant read Get_glyphOrientationHorizontal write Set_glyphOrientationHorizontal;
    property glyphOrientationVertical: OleVariant read Get_glyphOrientationVertical write Set_glyphOrientationVertical;
    property borderRadius: WideString read Get_borderRadius write Set_borderRadius;
    property borderTopLeftRadius: WideString read Get_borderTopLeftRadius write Set_borderTopLeftRadius;
    property borderTopRightRadius: WideString read Get_borderTopRightRadius write Set_borderTopRightRadius;
    property borderBottomRightRadius: WideString read Get_borderBottomRightRadius write Set_borderBottomRightRadius;
    property borderBottomLeftRadius: WideString read Get_borderBottomLeftRadius write Set_borderBottomLeftRadius;
    property clipTop: OleVariant read Get_clipTop write Set_clipTop;
    property clipRight: OleVariant read Get_clipRight write Set_clipRight;
    property clipBottom: OleVariant read Get_clipBottom;
    property clipLeft: OleVariant read Get_clipLeft write Set_clipLeft;
    property cssFloat: WideString read Get_cssFloat write Set_cssFloat;
    property backgroundClip: WideString read Get_backgroundClip write Set_backgroundClip;
    property backgroundOrigin: WideString read Get_backgroundOrigin write Set_backgroundOrigin;
    property backgroundSize: WideString read Get_backgroundSize write Set_backgroundSize;
    property boxShadow: WideString read Get_boxShadow write Set_boxShadow;
    property msTransform: WideString read Get_msTransform write Set_msTransform;
    property msTransformOrigin: WideString read Get_msTransformOrigin write Set_msTransformOrigin;
  end;

// *********************************************************************//
// DispIntf:  IHTMLCSSStyleDeclarationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510740-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCSSStyleDeclarationDisp = dispinterface
    ['{30510740-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid -2147413611;
    property parentRule: OleVariant readonly dispid -2147413610;
    function getPropertyValue(const bstrPropertyName: WideString): WideString; dispid -2147413609;
    function getPropertyPriority(const bstrPropertyName: WideString): WideString; dispid -2147413608;
    function removeProperty(const bstrPropertyName: WideString): WideString; dispid -2147413607;
    procedure setProperty(const bstrPropertyName: WideString; const pvarPropertyValue: OleVariant; 
                          const pvarPropertyPriority: OleVariant); dispid -2147413606;
    function item(index: Integer): WideString; dispid 0;
    property fontFamily: WideString dispid -2147413094;
    property fontStyle: WideString dispid -2147413088;
    property fontVariant: WideString dispid -2147413087;
    property fontWeight: WideString dispid -2147413085;
    property fontSize: OleVariant dispid -2147413093;
    property font: WideString dispid -2147413071;
    property color: OleVariant dispid -2147413110;
    property background: WideString dispid -2147413080;
    property backgroundColor: OleVariant dispid -501;
    property backgroundImage: WideString dispid -2147413111;
    property backgroundRepeat: WideString dispid -2147413068;
    property backgroundAttachment: WideString dispid -2147413067;
    property backgroundPosition: WideString dispid -2147413066;
    property backgroundPositionX: OleVariant dispid -2147413079;
    property backgroundPositionY: OleVariant dispid -2147413078;
    property wordSpacing: OleVariant dispid -2147413065;
    property letterSpacing: OleVariant dispid -2147413104;
    property textDecoration: WideString dispid -2147413077;
    property verticalAlign: OleVariant dispid -2147413064;
    property textTransform: WideString dispid -2147413108;
    property textAlign: WideString dispid -2147418040;
    property textIndent: OleVariant dispid -2147413105;
    property lineHeight: OleVariant dispid -2147413106;
    property marginTop: OleVariant dispid -2147413075;
    property marginRight: OleVariant dispid -2147413074;
    property marginBottom: OleVariant dispid -2147413073;
    property marginLeft: OleVariant dispid -2147413072;
    property margin: WideString dispid -2147413076;
    property paddingTop: OleVariant dispid -2147413100;
    property paddingRight: OleVariant dispid -2147413099;
    property paddingBottom: OleVariant dispid -2147413098;
    property paddingLeft: OleVariant dispid -2147413097;
    property padding: WideString dispid -2147413101;
    property border: WideString dispid -2147413063;
    property borderTop: WideString dispid -2147413062;
    property borderRight: WideString dispid -2147413061;
    property borderBottom: WideString dispid -2147413060;
    property borderLeft: WideString dispid -2147413059;
    property borderColor: WideString dispid -2147413058;
    property borderTopColor: OleVariant dispid -2147413057;
    property borderRightColor: OleVariant dispid -2147413056;
    property borderBottomColor: OleVariant dispid -2147413055;
    property borderLeftColor: OleVariant dispid -2147413054;
    property borderWidth: WideString dispid -2147413053;
    property borderTopWidth: OleVariant dispid -2147413052;
    property borderRightWidth: OleVariant dispid -2147413051;
    property borderBottomWidth: OleVariant dispid -2147413050;
    property borderLeftWidth: OleVariant dispid -2147413049;
    property borderStyle: WideString dispid -2147413048;
    property borderTopStyle: WideString dispid -2147413047;
    property borderRightStyle: WideString dispid -2147413046;
    property borderBottomStyle: WideString dispid -2147413045;
    property borderLeftStyle: WideString dispid -2147413044;
    property width: OleVariant dispid -2147418107;
    property height: OleVariant dispid -2147418106;
    property styleFloat: WideString dispid -2147413042;
    property clear: WideString dispid -2147413096;
    property display: WideString dispid -2147413041;
    property visibility: WideString dispid -2147413032;
    property listStyleType: WideString dispid -2147413040;
    property listStylePosition: WideString dispid -2147413039;
    property listStyleImage: WideString dispid -2147413038;
    property listStyle: WideString dispid -2147413037;
    property whiteSpace: WideString dispid -2147413036;
    property top: OleVariant dispid -2147418108;
    property left: OleVariant dispid -2147418109;
    property zIndex: OleVariant dispid -2147413021;
    property overflow: WideString dispid -2147413102;
    property pageBreakBefore: WideString dispid -2147413035;
    property pageBreakAfter: WideString dispid -2147413034;
    property cssText: WideString dispid -2147413013;
    property cursor: WideString dispid -2147413010;
    property clip: WideString dispid -2147413020;
    property filter: WideString dispid -2147413030;
    property tableLayout: WideString dispid -2147413014;
    property borderCollapse: WideString dispid -2147413028;
    property direction: WideString dispid -2147412993;
    property behavior: WideString dispid -2147412997;
    property position: WideString dispid -2147413022;
    property unicodeBidi: WideString dispid -2147412994;
    property bottom: OleVariant dispid -2147418034;
    property right: OleVariant dispid -2147418035;
    property imeMode: WideString dispid -2147412992;
    property rubyAlign: WideString dispid -2147412991;
    property rubyPosition: WideString dispid -2147412990;
    property rubyOverhang: WideString dispid -2147412989;
    property layoutGridChar: OleVariant dispid -2147412985;
    property layoutGridLine: OleVariant dispid -2147412984;
    property layoutGridMode: WideString dispid -2147412983;
    property layoutGridType: WideString dispid -2147412982;
    property layoutGrid: WideString dispid -2147412981;
    property textAutospace: WideString dispid -2147412980;
    property wordBreak: WideString dispid -2147412978;
    property lineBreak: WideString dispid -2147412979;
    property textJustify: WideString dispid -2147412977;
    property textJustifyTrim: WideString dispid -2147412976;
    property textKashida: OleVariant dispid -2147412975;
    property overflowX: WideString dispid -2147412973;
    property overflowY: WideString dispid -2147412972;
    property accelerator: WideString dispid -2147412965;
    property layoutFlow: WideString dispid -2147412957;
    property zoom: OleVariant dispid -2147412959;
    property wordWrap: WideString dispid -2147412954;
    property textUnderlinePosition: WideString dispid -2147412953;
    property scrollbarBaseColor: OleVariant dispid -2147412932;
    property scrollbarFaceColor: OleVariant dispid -2147412931;
    property scrollbar3dLightColor: OleVariant dispid -2147412930;
    property scrollbarShadowColor: OleVariant dispid -2147412929;
    property scrollbarHighlightColor: OleVariant dispid -2147412928;
    property scrollbarDarkShadowColor: OleVariant dispid -2147412927;
    property scrollbarArrowColor: OleVariant dispid -2147412926;
    property scrollbarTrackColor: OleVariant dispid -2147412916;
    property writingMode: WideString dispid -2147412920;
    property textAlignLast: WideString dispid -2147412909;
    property textKashidaSpace: OleVariant dispid -2147412908;
    property textOverflow: WideString dispid -2147412903;
    property minHeight: OleVariant dispid -2147412901;
    property msInterpolationMode: WideString dispid -2147412899;
    property maxHeight: OleVariant dispid -2147412898;
    property minWidth: OleVariant dispid -2147412897;
    property maxWidth: OleVariant dispid -2147412896;
    property content: WideString dispid -2147412894;
    property captionSide: WideString dispid -2147412893;
    property counterIncrement: WideString dispid -2147412892;
    property counterReset: WideString dispid -2147412891;
    property outline: WideString dispid -2147412890;
    property outlineWidth: OleVariant dispid -2147412889;
    property outlineStyle: WideString dispid -2147412888;
    property outlineColor: OleVariant dispid -2147412887;
    property boxSizing: WideString dispid -2147412886;
    property borderSpacing: WideString dispid -2147412885;
    property orphans: OleVariant dispid -2147412884;
    property widows: OleVariant dispid -2147412883;
    property pageBreakInside: WideString dispid -2147412882;
    property emptyCells: WideString dispid -2147412862;
    property msBlockProgression: WideString dispid -2147412861;
    property quotes: WideString dispid -2147412860;
    property alignmentBaseline: WideString dispid -2147412834;
    property baselineShift: OleVariant dispid -2147412833;
    property dominantBaseline: WideString dispid -2147412832;
    property fontSizeAdjust: OleVariant dispid -2147412831;
    property fontStretch: WideString dispid -2147412830;
    property opacity: OleVariant dispid -2147412829;
    property clipPath: WideString dispid -2147412828;
    property clipRule: WideString dispid -2147412827;
    property fill: WideString dispid -2147412826;
    property fillOpacity: OleVariant dispid -2147412825;
    property fillRule: WideString dispid -2147412824;
    property kerning: OleVariant dispid -2147412823;
    property marker: WideString dispid -2147412822;
    property markerEnd: WideString dispid -2147412821;
    property markerMid: WideString dispid -2147412820;
    property markerStart: WideString dispid -2147412819;
    property mask: WideString dispid -2147412818;
    property pointerEvents: WideString dispid -2147412817;
    property stopColor: OleVariant dispid -2147412816;
    property stopOpacity: OleVariant dispid -2147412815;
    property stroke: WideString dispid -2147412814;
    property strokeDasharray: WideString dispid -2147412813;
    property strokeDashoffset: OleVariant dispid -2147412812;
    property strokeLinecap: WideString dispid -2147412811;
    property strokeLinejoin: WideString dispid -2147412810;
    property strokeMiterlimit: OleVariant dispid -2147412809;
    property strokeOpacity: OleVariant dispid -2147412808;
    property strokeWidth: OleVariant dispid -2147412807;
    property textAnchor: WideString dispid -2147412806;
    property glyphOrientationHorizontal: OleVariant dispid -2147412805;
    property glyphOrientationVertical: OleVariant dispid -2147412804;
    property borderRadius: WideString dispid -2147412802;
    property borderTopLeftRadius: WideString dispid -2147412801;
    property borderTopRightRadius: WideString dispid -2147412800;
    property borderBottomRightRadius: WideString dispid -2147412799;
    property borderBottomLeftRadius: WideString dispid -2147412798;
    property clipTop: OleVariant dispid -2147413019;
    property clipRight: OleVariant dispid -2147413018;
    property clipBottom: OleVariant readonly dispid -2147413017;
    property clipLeft: OleVariant dispid -2147413016;
    property cssFloat: WideString dispid -2147412803;
    property backgroundClip: WideString dispid -2147412796;
    property backgroundOrigin: WideString dispid -2147412795;
    property backgroundSize: WideString dispid -2147412794;
    property boxShadow: WideString dispid -2147412793;
    property msTransform: WideString dispid -2147412797;
    property msTransformOrigin: WideString dispid -2147412787;
  end;

// *********************************************************************//
// Interface: IHTMLCSSStyleDeclaration2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305107D1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCSSStyleDeclaration2 = interface(IDispatch)
    ['{305107D1-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_msScrollChaining(const p: WideString); safecall;
    function Get_msScrollChaining: WideString; safecall;
    procedure Set_msContentZooming(const p: WideString); safecall;
    function Get_msContentZooming: WideString; safecall;
    procedure Set_msContentZoomSnapType(const p: WideString); safecall;
    function Get_msContentZoomSnapType: WideString; safecall;
    procedure Set_msScrollRails(const p: WideString); safecall;
    function Get_msScrollRails: WideString; safecall;
    procedure Set_msContentZoomChaining(const p: WideString); safecall;
    function Get_msContentZoomChaining: WideString; safecall;
    procedure Set_msScrollSnapType(const p: WideString); safecall;
    function Get_msScrollSnapType: WideString; safecall;
    procedure Set_msContentZoomLimit(const p: WideString); safecall;
    function Get_msContentZoomLimit: WideString; safecall;
    procedure Set_msContentZoomSnap(const p: WideString); safecall;
    function Get_msContentZoomSnap: WideString; safecall;
    procedure Set_msContentZoomSnapPoints(const p: WideString); safecall;
    function Get_msContentZoomSnapPoints: WideString; safecall;
    procedure Set_msContentZoomLimitMin(p: OleVariant); safecall;
    function Get_msContentZoomLimitMin: OleVariant; safecall;
    procedure Set_msContentZoomLimitMax(p: OleVariant); safecall;
    function Get_msContentZoomLimitMax: OleVariant; safecall;
    procedure Set_msScrollSnapX(const p: WideString); safecall;
    function Get_msScrollSnapX: WideString; safecall;
    procedure Set_msScrollSnapY(const p: WideString); safecall;
    function Get_msScrollSnapY: WideString; safecall;
    procedure Set_msScrollSnapPointsX(const p: WideString); safecall;
    function Get_msScrollSnapPointsX: WideString; safecall;
    procedure Set_msScrollSnapPointsY(const p: WideString); safecall;
    function Get_msScrollSnapPointsY: WideString; safecall;
    procedure Set_msGridColumn(p: OleVariant); safecall;
    function Get_msGridColumn: OleVariant; safecall;
    procedure Set_msGridColumnAlign(const p: WideString); safecall;
    function Get_msGridColumnAlign: WideString; safecall;
    procedure Set_msGridColumns(const p: WideString); safecall;
    function Get_msGridColumns: WideString; safecall;
    procedure Set_msGridColumnSpan(p: OleVariant); safecall;
    function Get_msGridColumnSpan: OleVariant; safecall;
    procedure Set_msGridRow(p: OleVariant); safecall;
    function Get_msGridRow: OleVariant; safecall;
    procedure Set_msGridRowAlign(const p: WideString); safecall;
    function Get_msGridRowAlign: WideString; safecall;
    procedure Set_msGridRows(const p: WideString); safecall;
    function Get_msGridRows: WideString; safecall;
    procedure Set_msGridRowSpan(p: OleVariant); safecall;
    function Get_msGridRowSpan: OleVariant; safecall;
    procedure Set_msWrapThrough(const p: WideString); safecall;
    function Get_msWrapThrough: WideString; safecall;
    procedure Set_msWrapMargin(p: OleVariant); safecall;
    function Get_msWrapMargin: OleVariant; safecall;
    procedure Set_msWrapFlow(const p: WideString); safecall;
    function Get_msWrapFlow: WideString; safecall;
    procedure Set_msAnimationName(const p: WideString); safecall;
    function Get_msAnimationName: WideString; safecall;
    procedure Set_msAnimationDuration(const p: WideString); safecall;
    function Get_msAnimationDuration: WideString; safecall;
    procedure Set_msAnimationTimingFunction(const p: WideString); safecall;
    function Get_msAnimationTimingFunction: WideString; safecall;
    procedure Set_msAnimationDelay(const p: WideString); safecall;
    function Get_msAnimationDelay: WideString; safecall;
    procedure Set_msAnimationDirection(const p: WideString); safecall;
    function Get_msAnimationDirection: WideString; safecall;
    procedure Set_msAnimationPlayState(const p: WideString); safecall;
    function Get_msAnimationPlayState: WideString; safecall;
    procedure Set_msAnimationIterationCount(const p: WideString); safecall;
    function Get_msAnimationIterationCount: WideString; safecall;
    procedure Set_msAnimation(const p: WideString); safecall;
    function Get_msAnimation: WideString; safecall;
    procedure Set_msAnimationFillMode(const p: WideString); safecall;
    function Get_msAnimationFillMode: WideString; safecall;
    procedure Set_colorInterpolationFilters(const p: WideString); safecall;
    function Get_colorInterpolationFilters: WideString; safecall;
    procedure Set_columnCount(p: OleVariant); safecall;
    function Get_columnCount: OleVariant; safecall;
    procedure Set_columnWidth(p: OleVariant); safecall;
    function Get_columnWidth: OleVariant; safecall;
    procedure Set_columnGap(p: OleVariant); safecall;
    function Get_columnGap: OleVariant; safecall;
    procedure Set_columnFill(const p: WideString); safecall;
    function Get_columnFill: WideString; safecall;
    procedure Set_columnSpan(const p: WideString); safecall;
    function Get_columnSpan: WideString; safecall;
    procedure Set_columns(const p: WideString); safecall;
    function Get_columns: WideString; safecall;
    procedure Set_columnRule(const p: WideString); safecall;
    function Get_columnRule: WideString; safecall;
    procedure Set_columnRuleColor(p: OleVariant); safecall;
    function Get_columnRuleColor: OleVariant; safecall;
    procedure Set_columnRuleStyle(const p: WideString); safecall;
    function Get_columnRuleStyle: WideString; safecall;
    procedure Set_columnRuleWidth(p: OleVariant); safecall;
    function Get_columnRuleWidth: OleVariant; safecall;
    procedure Set_breakBefore(const p: WideString); safecall;
    function Get_breakBefore: WideString; safecall;
    procedure Set_breakAfter(const p: WideString); safecall;
    function Get_breakAfter: WideString; safecall;
    procedure Set_breakInside(const p: WideString); safecall;
    function Get_breakInside: WideString; safecall;
    procedure Set_floodColor(p: OleVariant); safecall;
    function Get_floodColor: OleVariant; safecall;
    procedure Set_floodOpacity(p: OleVariant); safecall;
    function Get_floodOpacity: OleVariant; safecall;
    procedure Set_lightingColor(p: OleVariant); safecall;
    function Get_lightingColor: OleVariant; safecall;
    procedure Set_msScrollLimitXMin(p: OleVariant); safecall;
    function Get_msScrollLimitXMin: OleVariant; safecall;
    procedure Set_msScrollLimitYMin(p: OleVariant); safecall;
    function Get_msScrollLimitYMin: OleVariant; safecall;
    procedure Set_msScrollLimitXMax(p: OleVariant); safecall;
    function Get_msScrollLimitXMax: OleVariant; safecall;
    procedure Set_msScrollLimitYMax(p: OleVariant); safecall;
    function Get_msScrollLimitYMax: OleVariant; safecall;
    procedure Set_msScrollLimit(const p: WideString); safecall;
    function Get_msScrollLimit: WideString; safecall;
    procedure Set_textShadow(const p: WideString); safecall;
    function Get_textShadow: WideString; safecall;
    procedure Set_msFlowFrom(const p: WideString); safecall;
    function Get_msFlowFrom: WideString; safecall;
    procedure Set_msFlowInto(const p: WideString); safecall;
    function Get_msFlowInto: WideString; safecall;
    procedure Set_msHyphens(const p: WideString); safecall;
    function Get_msHyphens: WideString; safecall;
    procedure Set_msHyphenateLimitZone(p: OleVariant); safecall;
    function Get_msHyphenateLimitZone: OleVariant; safecall;
    procedure Set_msHyphenateLimitChars(const p: WideString); safecall;
    function Get_msHyphenateLimitChars: WideString; safecall;
    procedure Set_msHyphenateLimitLines(p: OleVariant); safecall;
    function Get_msHyphenateLimitLines: OleVariant; safecall;
    procedure Set_msHighContrastAdjust(const p: WideString); safecall;
    function Get_msHighContrastAdjust: WideString; safecall;
    procedure Set_enableBackground(const p: WideString); safecall;
    function Get_enableBackground: WideString; safecall;
    procedure Set_msFontFeatureSettings(const p: WideString); safecall;
    function Get_msFontFeatureSettings: WideString; safecall;
    procedure Set_msUserSelect(const p: WideString); safecall;
    function Get_msUserSelect: WideString; safecall;
    procedure Set_msOverflowStyle(const p: WideString); safecall;
    function Get_msOverflowStyle: WideString; safecall;
    procedure Set_msTransformStyle(const p: WideString); safecall;
    function Get_msTransformStyle: WideString; safecall;
    procedure Set_msBackfaceVisibility(const p: WideString); safecall;
    function Get_msBackfaceVisibility: WideString; safecall;
    procedure Set_msPerspective(p: OleVariant); safecall;
    function Get_msPerspective: OleVariant; safecall;
    procedure Set_msPerspectiveOrigin(const p: WideString); safecall;
    function Get_msPerspectiveOrigin: WideString; safecall;
    procedure Set_msTransitionProperty(const p: WideString); safecall;
    function Get_msTransitionProperty: WideString; safecall;
    procedure Set_msTransitionDuration(const p: WideString); safecall;
    function Get_msTransitionDuration: WideString; safecall;
    procedure Set_msTransitionTimingFunction(const p: WideString); safecall;
    function Get_msTransitionTimingFunction: WideString; safecall;
    procedure Set_msTransitionDelay(const p: WideString); safecall;
    function Get_msTransitionDelay: WideString; safecall;
    procedure Set_msTransition(const p: WideString); safecall;
    function Get_msTransition: WideString; safecall;
    procedure Set_msTouchAction(const p: WideString); safecall;
    function Get_msTouchAction: WideString; safecall;
    procedure Set_msScrollTranslation(const p: WideString); safecall;
    function Get_msScrollTranslation: WideString; safecall;
    procedure Set_msFlex(const p: WideString); safecall;
    function Get_msFlex: WideString; safecall;
    procedure Set_msFlexPositive(p: OleVariant); safecall;
    function Get_msFlexPositive: OleVariant; safecall;
    procedure Set_msFlexNegative(p: OleVariant); safecall;
    function Get_msFlexNegative: OleVariant; safecall;
    procedure Set_msFlexPreferredSize(p: OleVariant); safecall;
    function Get_msFlexPreferredSize: OleVariant; safecall;
    procedure Set_msFlexFlow(const p: WideString); safecall;
    function Get_msFlexFlow: WideString; safecall;
    procedure Set_msFlexDirection(const p: WideString); safecall;
    function Get_msFlexDirection: WideString; safecall;
    procedure Set_msFlexWrap(const p: WideString); safecall;
    function Get_msFlexWrap: WideString; safecall;
    procedure Set_msFlexAlign(const p: WideString); safecall;
    function Get_msFlexAlign: WideString; safecall;
    procedure Set_msFlexItemAlign(const p: WideString); safecall;
    function Get_msFlexItemAlign: WideString; safecall;
    procedure Set_msFlexPack(const p: WideString); safecall;
    function Get_msFlexPack: WideString; safecall;
    procedure Set_msFlexLinePack(const p: WideString); safecall;
    function Get_msFlexLinePack: WideString; safecall;
    procedure Set_msFlexOrder(p: OleVariant); safecall;
    function Get_msFlexOrder: OleVariant; safecall;
    procedure Set_msTouchSelect(const p: WideString); safecall;
    function Get_msTouchSelect: WideString; safecall;
    procedure Set_transform(const p: WideString); safecall;
    function Get_transform: WideString; safecall;
    procedure Set_transformOrigin(const p: WideString); safecall;
    function Get_transformOrigin: WideString; safecall;
    procedure Set_transformStyle(const p: WideString); safecall;
    function Get_transformStyle: WideString; safecall;
    procedure Set_backfaceVisibility(const p: WideString); safecall;
    function Get_backfaceVisibility: WideString; safecall;
    procedure Set_perspective(p: OleVariant); safecall;
    function Get_perspective: OleVariant; safecall;
    procedure Set_perspectiveOrigin(const p: WideString); safecall;
    function Get_perspectiveOrigin: WideString; safecall;
    procedure Set_transitionProperty(const p: WideString); safecall;
    function Get_transitionProperty: WideString; safecall;
    procedure Set_transitionDuration(const p: WideString); safecall;
    function Get_transitionDuration: WideString; safecall;
    procedure Set_transitionTimingFunction(const p: WideString); safecall;
    function Get_transitionTimingFunction: WideString; safecall;
    procedure Set_transitionDelay(const p: WideString); safecall;
    function Get_transitionDelay: WideString; safecall;
    procedure Set_transition(const p: WideString); safecall;
    function Get_transition: WideString; safecall;
    procedure Set_fontFeatureSettings(const p: WideString); safecall;
    function Get_fontFeatureSettings: WideString; safecall;
    procedure Set_animationName(const p: WideString); safecall;
    function Get_animationName: WideString; safecall;
    procedure Set_animationDuration(const p: WideString); safecall;
    function Get_animationDuration: WideString; safecall;
    procedure Set_animationTimingFunction(const p: WideString); safecall;
    function Get_animationTimingFunction: WideString; safecall;
    procedure Set_animationDelay(const p: WideString); safecall;
    function Get_animationDelay: WideString; safecall;
    procedure Set_animationDirection(const p: WideString); safecall;
    function Get_animationDirection: WideString; safecall;
    procedure Set_animationPlayState(const p: WideString); safecall;
    function Get_animationPlayState: WideString; safecall;
    procedure Set_animationIterationCount(const p: WideString); safecall;
    function Get_animationIterationCount: WideString; safecall;
    procedure Set_animation(const p: WideString); safecall;
    function Get_animation: WideString; safecall;
    procedure Set_animationFillMode(const p: WideString); safecall;
    function Get_animationFillMode: WideString; safecall;
    property msScrollChaining: WideString read Get_msScrollChaining write Set_msScrollChaining;
    property msContentZooming: WideString read Get_msContentZooming write Set_msContentZooming;
    property msContentZoomSnapType: WideString read Get_msContentZoomSnapType write Set_msContentZoomSnapType;
    property msScrollRails: WideString read Get_msScrollRails write Set_msScrollRails;
    property msContentZoomChaining: WideString read Get_msContentZoomChaining write Set_msContentZoomChaining;
    property msScrollSnapType: WideString read Get_msScrollSnapType write Set_msScrollSnapType;
    property msContentZoomLimit: WideString read Get_msContentZoomLimit write Set_msContentZoomLimit;
    property msContentZoomSnap: WideString read Get_msContentZoomSnap write Set_msContentZoomSnap;
    property msContentZoomSnapPoints: WideString read Get_msContentZoomSnapPoints write Set_msContentZoomSnapPoints;
    property msContentZoomLimitMin: OleVariant read Get_msContentZoomLimitMin write Set_msContentZoomLimitMin;
    property msContentZoomLimitMax: OleVariant read Get_msContentZoomLimitMax write Set_msContentZoomLimitMax;
    property msScrollSnapX: WideString read Get_msScrollSnapX write Set_msScrollSnapX;
    property msScrollSnapY: WideString read Get_msScrollSnapY write Set_msScrollSnapY;
    property msScrollSnapPointsX: WideString read Get_msScrollSnapPointsX write Set_msScrollSnapPointsX;
    property msScrollSnapPointsY: WideString read Get_msScrollSnapPointsY write Set_msScrollSnapPointsY;
    property msGridColumn: OleVariant read Get_msGridColumn write Set_msGridColumn;
    property msGridColumnAlign: WideString read Get_msGridColumnAlign write Set_msGridColumnAlign;
    property msGridColumns: WideString read Get_msGridColumns write Set_msGridColumns;
    property msGridColumnSpan: OleVariant read Get_msGridColumnSpan write Set_msGridColumnSpan;
    property msGridRow: OleVariant read Get_msGridRow write Set_msGridRow;
    property msGridRowAlign: WideString read Get_msGridRowAlign write Set_msGridRowAlign;
    property msGridRows: WideString read Get_msGridRows write Set_msGridRows;
    property msGridRowSpan: OleVariant read Get_msGridRowSpan write Set_msGridRowSpan;
    property msWrapThrough: WideString read Get_msWrapThrough write Set_msWrapThrough;
    property msWrapMargin: OleVariant read Get_msWrapMargin write Set_msWrapMargin;
    property msWrapFlow: WideString read Get_msWrapFlow write Set_msWrapFlow;
    property msAnimationName: WideString read Get_msAnimationName write Set_msAnimationName;
    property msAnimationDuration: WideString read Get_msAnimationDuration write Set_msAnimationDuration;
    property msAnimationTimingFunction: WideString read Get_msAnimationTimingFunction write Set_msAnimationTimingFunction;
    property msAnimationDelay: WideString read Get_msAnimationDelay write Set_msAnimationDelay;
    property msAnimationDirection: WideString read Get_msAnimationDirection write Set_msAnimationDirection;
    property msAnimationPlayState: WideString read Get_msAnimationPlayState write Set_msAnimationPlayState;
    property msAnimationIterationCount: WideString read Get_msAnimationIterationCount write Set_msAnimationIterationCount;
    property msAnimation: WideString read Get_msAnimation write Set_msAnimation;
    property msAnimationFillMode: WideString read Get_msAnimationFillMode write Set_msAnimationFillMode;
    property colorInterpolationFilters: WideString read Get_colorInterpolationFilters write Set_colorInterpolationFilters;
    property columnCount: OleVariant read Get_columnCount write Set_columnCount;
    property columnWidth: OleVariant read Get_columnWidth write Set_columnWidth;
    property columnGap: OleVariant read Get_columnGap write Set_columnGap;
    property columnFill: WideString read Get_columnFill write Set_columnFill;
    property columnSpan: WideString read Get_columnSpan write Set_columnSpan;
    property columns: WideString read Get_columns write Set_columns;
    property columnRule: WideString read Get_columnRule write Set_columnRule;
    property columnRuleColor: OleVariant read Get_columnRuleColor write Set_columnRuleColor;
    property columnRuleStyle: WideString read Get_columnRuleStyle write Set_columnRuleStyle;
    property columnRuleWidth: OleVariant read Get_columnRuleWidth write Set_columnRuleWidth;
    property breakBefore: WideString read Get_breakBefore write Set_breakBefore;
    property breakAfter: WideString read Get_breakAfter write Set_breakAfter;
    property breakInside: WideString read Get_breakInside write Set_breakInside;
    property floodColor: OleVariant read Get_floodColor write Set_floodColor;
    property floodOpacity: OleVariant read Get_floodOpacity write Set_floodOpacity;
    property lightingColor: OleVariant read Get_lightingColor write Set_lightingColor;
    property msScrollLimitXMin: OleVariant read Get_msScrollLimitXMin write Set_msScrollLimitXMin;
    property msScrollLimitYMin: OleVariant read Get_msScrollLimitYMin write Set_msScrollLimitYMin;
    property msScrollLimitXMax: OleVariant read Get_msScrollLimitXMax write Set_msScrollLimitXMax;
    property msScrollLimitYMax: OleVariant read Get_msScrollLimitYMax write Set_msScrollLimitYMax;
    property msScrollLimit: WideString read Get_msScrollLimit write Set_msScrollLimit;
    property textShadow: WideString read Get_textShadow write Set_textShadow;
    property msFlowFrom: WideString read Get_msFlowFrom write Set_msFlowFrom;
    property msFlowInto: WideString read Get_msFlowInto write Set_msFlowInto;
    property msHyphens: WideString read Get_msHyphens write Set_msHyphens;
    property msHyphenateLimitZone: OleVariant read Get_msHyphenateLimitZone write Set_msHyphenateLimitZone;
    property msHyphenateLimitChars: WideString read Get_msHyphenateLimitChars write Set_msHyphenateLimitChars;
    property msHyphenateLimitLines: OleVariant read Get_msHyphenateLimitLines write Set_msHyphenateLimitLines;
    property msHighContrastAdjust: WideString read Get_msHighContrastAdjust write Set_msHighContrastAdjust;
    property enableBackground: WideString read Get_enableBackground write Set_enableBackground;
    property msFontFeatureSettings: WideString read Get_msFontFeatureSettings write Set_msFontFeatureSettings;
    property msUserSelect: WideString read Get_msUserSelect write Set_msUserSelect;
    property msOverflowStyle: WideString read Get_msOverflowStyle write Set_msOverflowStyle;
    property msTransformStyle: WideString read Get_msTransformStyle write Set_msTransformStyle;
    property msBackfaceVisibility: WideString read Get_msBackfaceVisibility write Set_msBackfaceVisibility;
    property msPerspective: OleVariant read Get_msPerspective write Set_msPerspective;
    property msPerspectiveOrigin: WideString read Get_msPerspectiveOrigin write Set_msPerspectiveOrigin;
    property msTransitionProperty: WideString read Get_msTransitionProperty write Set_msTransitionProperty;
    property msTransitionDuration: WideString read Get_msTransitionDuration write Set_msTransitionDuration;
    property msTransitionTimingFunction: WideString read Get_msTransitionTimingFunction write Set_msTransitionTimingFunction;
    property msTransitionDelay: WideString read Get_msTransitionDelay write Set_msTransitionDelay;
    property msTransition: WideString read Get_msTransition write Set_msTransition;
    property msTouchAction: WideString read Get_msTouchAction write Set_msTouchAction;
    property msScrollTranslation: WideString read Get_msScrollTranslation write Set_msScrollTranslation;
    property msFlex: WideString read Get_msFlex write Set_msFlex;
    property msFlexPositive: OleVariant read Get_msFlexPositive write Set_msFlexPositive;
    property msFlexNegative: OleVariant read Get_msFlexNegative write Set_msFlexNegative;
    property msFlexPreferredSize: OleVariant read Get_msFlexPreferredSize write Set_msFlexPreferredSize;
    property msFlexFlow: WideString read Get_msFlexFlow write Set_msFlexFlow;
    property msFlexDirection: WideString read Get_msFlexDirection write Set_msFlexDirection;
    property msFlexWrap: WideString read Get_msFlexWrap write Set_msFlexWrap;
    property msFlexAlign: WideString read Get_msFlexAlign write Set_msFlexAlign;
    property msFlexItemAlign: WideString read Get_msFlexItemAlign write Set_msFlexItemAlign;
    property msFlexPack: WideString read Get_msFlexPack write Set_msFlexPack;
    property msFlexLinePack: WideString read Get_msFlexLinePack write Set_msFlexLinePack;
    property msFlexOrder: OleVariant read Get_msFlexOrder write Set_msFlexOrder;
    property msTouchSelect: WideString read Get_msTouchSelect write Set_msTouchSelect;
    property transform: WideString read Get_transform write Set_transform;
    property transformOrigin: WideString read Get_transformOrigin write Set_transformOrigin;
    property transformStyle: WideString read Get_transformStyle write Set_transformStyle;
    property backfaceVisibility: WideString read Get_backfaceVisibility write Set_backfaceVisibility;
    property perspective: OleVariant read Get_perspective write Set_perspective;
    property perspectiveOrigin: WideString read Get_perspectiveOrigin write Set_perspectiveOrigin;
    property transitionProperty: WideString read Get_transitionProperty write Set_transitionProperty;
    property transitionDuration: WideString read Get_transitionDuration write Set_transitionDuration;
    property transitionTimingFunction: WideString read Get_transitionTimingFunction write Set_transitionTimingFunction;
    property transitionDelay: WideString read Get_transitionDelay write Set_transitionDelay;
    property transition: WideString read Get_transition write Set_transition;
    property fontFeatureSettings: WideString read Get_fontFeatureSettings write Set_fontFeatureSettings;
    property animationName: WideString read Get_animationName write Set_animationName;
    property animationDuration: WideString read Get_animationDuration write Set_animationDuration;
    property animationTimingFunction: WideString read Get_animationTimingFunction write Set_animationTimingFunction;
    property animationDelay: WideString read Get_animationDelay write Set_animationDelay;
    property animationDirection: WideString read Get_animationDirection write Set_animationDirection;
    property animationPlayState: WideString read Get_animationPlayState write Set_animationPlayState;
    property animationIterationCount: WideString read Get_animationIterationCount write Set_animationIterationCount;
    property animation: WideString read Get_animation write Set_animation;
    property animationFillMode: WideString read Get_animationFillMode write Set_animationFillMode;
  end;

// *********************************************************************//
// DispIntf:  IHTMLCSSStyleDeclaration2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305107D1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCSSStyleDeclaration2Disp = dispinterface
    ['{305107D1-98B5-11CF-BB82-00AA00BDCE0B}']
    property msScrollChaining: WideString dispid -2147412757;
    property msContentZooming: WideString dispid -2147412756;
    property msContentZoomSnapType: WideString dispid -2147412755;
    property msScrollRails: WideString dispid -2147412754;
    property msContentZoomChaining: WideString dispid -2147412753;
    property msScrollSnapType: WideString dispid -2147412752;
    property msContentZoomLimit: WideString dispid -2147412751;
    property msContentZoomSnap: WideString dispid -2147412750;
    property msContentZoomSnapPoints: WideString dispid -2147412749;
    property msContentZoomLimitMin: OleVariant dispid -2147412747;
    property msContentZoomLimitMax: OleVariant dispid -2147412746;
    property msScrollSnapX: WideString dispid -2147412745;
    property msScrollSnapY: WideString dispid -2147412744;
    property msScrollSnapPointsX: WideString dispid -2147412743;
    property msScrollSnapPointsY: WideString dispid -2147412742;
    property msGridColumn: OleVariant dispid -2147412740;
    property msGridColumnAlign: WideString dispid -2147412739;
    property msGridColumns: WideString dispid -2147412738;
    property msGridColumnSpan: OleVariant dispid -2147412737;
    property msGridRow: OleVariant dispid -2147412735;
    property msGridRowAlign: WideString dispid -2147412734;
    property msGridRows: WideString dispid -2147412733;
    property msGridRowSpan: OleVariant dispid -2147412732;
    property msWrapThrough: WideString dispid -2147412711;
    property msWrapMargin: OleVariant dispid -2147412701;
    property msWrapFlow: WideString dispid -2147412699;
    property msAnimationName: WideString dispid -2147412731;
    property msAnimationDuration: WideString dispid -2147412730;
    property msAnimationTimingFunction: WideString dispid -2147412729;
    property msAnimationDelay: WideString dispid -2147412728;
    property msAnimationDirection: WideString dispid -2147412727;
    property msAnimationPlayState: WideString dispid -2147412726;
    property msAnimationIterationCount: WideString dispid -2147412725;
    property msAnimation: WideString dispid -2147412724;
    property msAnimationFillMode: WideString dispid -2147412723;
    property colorInterpolationFilters: WideString dispid -2147412720;
    property columnCount: OleVariant dispid -2147412776;
    property columnWidth: OleVariant dispid -2147412775;
    property columnGap: OleVariant dispid -2147412774;
    property columnFill: WideString dispid -2147412773;
    property columnSpan: WideString dispid -2147412772;
    property columns: WideString dispid -2147412777;
    property columnRule: WideString dispid -2147412771;
    property columnRuleColor: OleVariant dispid -2147412768;
    property columnRuleStyle: WideString dispid -2147412770;
    property columnRuleWidth: OleVariant dispid -2147412769;
    property breakBefore: WideString dispid -2147412767;
    property breakAfter: WideString dispid -2147412766;
    property breakInside: WideString dispid -2147412765;
    property floodColor: OleVariant dispid -2147412722;
    property floodOpacity: OleVariant dispid -2147412721;
    property lightingColor: OleVariant dispid -2147412719;
    property msScrollLimitXMin: OleVariant dispid -2147412718;
    property msScrollLimitYMin: OleVariant dispid -2147412717;
    property msScrollLimitXMax: OleVariant dispid -2147412716;
    property msScrollLimitYMax: OleVariant dispid -2147412715;
    property msScrollLimit: WideString dispid -2147412714;
    property textShadow: WideString dispid -2147412712;
    property msFlowFrom: WideString dispid -2147412710;
    property msFlowInto: WideString dispid -2147412709;
    property msHyphens: WideString dispid -2147412708;
    property msHyphenateLimitZone: OleVariant dispid -2147412707;
    property msHyphenateLimitChars: WideString dispid -2147412706;
    property msHyphenateLimitLines: OleVariant dispid -2147412705;
    property msHighContrastAdjust: WideString dispid -2147412703;
    property enableBackground: WideString dispid -2147412702;
    property msFontFeatureSettings: WideString dispid -2147412698;
    property msUserSelect: WideString dispid -2147412697;
    property msOverflowStyle: WideString dispid -2147412713;
    property msTransformStyle: WideString dispid -2147412759;
    property msBackfaceVisibility: WideString dispid -2147412758;
    property msPerspective: OleVariant dispid -2147412763;
    property msPerspectiveOrigin: WideString dispid -2147412762;
    property msTransitionProperty: WideString dispid -2147412782;
    property msTransitionDuration: WideString dispid -2147412781;
    property msTransitionTimingFunction: WideString dispid -2147412780;
    property msTransitionDelay: WideString dispid -2147412779;
    property msTransition: WideString dispid -2147412778;
    property msTouchAction: WideString dispid -2147412696;
    property msScrollTranslation: WideString dispid -2147412694;
    property msFlex: WideString dispid -2147412693;
    property msFlexPositive: OleVariant dispid -2147412692;
    property msFlexNegative: OleVariant dispid -2147412691;
    property msFlexPreferredSize: OleVariant dispid -2147412690;
    property msFlexFlow: WideString dispid -2147412689;
    property msFlexDirection: WideString dispid -2147412688;
    property msFlexWrap: WideString dispid -2147412687;
    property msFlexAlign: WideString dispid -2147412686;
    property msFlexItemAlign: WideString dispid -2147412685;
    property msFlexPack: WideString dispid -2147412684;
    property msFlexLinePack: WideString dispid -2147412683;
    property msFlexOrder: OleVariant dispid -2147412682;
    property msTouchSelect: WideString dispid -2147412654;
    property transform: WideString dispid -2147412681;
    property transformOrigin: WideString dispid -2147412680;
    property transformStyle: WideString dispid -2147412672;
    property backfaceVisibility: WideString dispid -2147412671;
    property perspective: OleVariant dispid -2147412674;
    property perspectiveOrigin: WideString dispid -2147412673;
    property transitionProperty: WideString dispid -2147412679;
    property transitionDuration: WideString dispid -2147412678;
    property transitionTimingFunction: WideString dispid -2147412677;
    property transitionDelay: WideString dispid -2147412676;
    property transition: WideString dispid -2147412675;
    property fontFeatureSettings: WideString dispid -2147412661;
    property animationName: WideString dispid -2147412670;
    property animationDuration: WideString dispid -2147412669;
    property animationTimingFunction: WideString dispid -2147412668;
    property animationDelay: WideString dispid -2147412667;
    property animationDirection: WideString dispid -2147412666;
    property animationPlayState: WideString dispid -2147412665;
    property animationIterationCount: WideString dispid -2147412664;
    property animation: WideString dispid -2147412663;
    property animationFillMode: WideString dispid -2147412662;
  end;

// *********************************************************************//
// Interface: IHTMLCSSStyleDeclaration3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051085C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCSSStyleDeclaration3 = interface(IDispatch)
    ['{3051085C-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_flex(const p: WideString); safecall;
    function Get_flex: WideString; safecall;
    procedure Set_flexDirection(const p: WideString); safecall;
    function Get_flexDirection: WideString; safecall;
    procedure Set_flexWrap(const p: WideString); safecall;
    function Get_flexWrap: WideString; safecall;
    procedure Set_flexFlow(const p: WideString); safecall;
    function Get_flexFlow: WideString; safecall;
    procedure Set_flexGrow(p: OleVariant); safecall;
    function Get_flexGrow: OleVariant; safecall;
    procedure Set_flexShrink(p: OleVariant); safecall;
    function Get_flexShrink: OleVariant; safecall;
    procedure Set_flexBasis(p: OleVariant); safecall;
    function Get_flexBasis: OleVariant; safecall;
    procedure Set_justifyContent(const p: WideString); safecall;
    function Get_justifyContent: WideString; safecall;
    procedure Set_alignItems(const p: WideString); safecall;
    function Get_alignItems: WideString; safecall;
    procedure Set_alignSelf(const p: WideString); safecall;
    function Get_alignSelf: WideString; safecall;
    procedure Set_alignContent(const p: WideString); safecall;
    function Get_alignContent: WideString; safecall;
    procedure Set_borderImage(const p: WideString); safecall;
    function Get_borderImage: WideString; safecall;
    procedure Set_borderImageSource(const p: WideString); safecall;
    function Get_borderImageSource: WideString; safecall;
    procedure Set_borderImageSlice(const p: WideString); safecall;
    function Get_borderImageSlice: WideString; safecall;
    procedure Set_borderImageWidth(const p: WideString); safecall;
    function Get_borderImageWidth: WideString; safecall;
    procedure Set_borderImageOutset(const p: WideString); safecall;
    function Get_borderImageOutset: WideString; safecall;
    procedure Set_borderImageRepeat(const p: WideString); safecall;
    function Get_borderImageRepeat: WideString; safecall;
    procedure Set_msImeAlign(const p: WideString); safecall;
    function Get_msImeAlign: WideString; safecall;
    procedure Set_msTextCombineHorizontal(const p: WideString); safecall;
    function Get_msTextCombineHorizontal: WideString; safecall;
    procedure Set_touchAction(const p: WideString); safecall;
    function Get_touchAction: WideString; safecall;
    property flex: WideString read Get_flex write Set_flex;
    property flexDirection: WideString read Get_flexDirection write Set_flexDirection;
    property flexWrap: WideString read Get_flexWrap write Set_flexWrap;
    property flexFlow: WideString read Get_flexFlow write Set_flexFlow;
    property flexGrow: OleVariant read Get_flexGrow write Set_flexGrow;
    property flexShrink: OleVariant read Get_flexShrink write Set_flexShrink;
    property flexBasis: OleVariant read Get_flexBasis write Set_flexBasis;
    property justifyContent: WideString read Get_justifyContent write Set_justifyContent;
    property alignItems: WideString read Get_alignItems write Set_alignItems;
    property alignSelf: WideString read Get_alignSelf write Set_alignSelf;
    property alignContent: WideString read Get_alignContent write Set_alignContent;
    property borderImage: WideString read Get_borderImage write Set_borderImage;
    property borderImageSource: WideString read Get_borderImageSource write Set_borderImageSource;
    property borderImageSlice: WideString read Get_borderImageSlice write Set_borderImageSlice;
    property borderImageWidth: WideString read Get_borderImageWidth write Set_borderImageWidth;
    property borderImageOutset: WideString read Get_borderImageOutset write Set_borderImageOutset;
    property borderImageRepeat: WideString read Get_borderImageRepeat write Set_borderImageRepeat;
    property msImeAlign: WideString read Get_msImeAlign write Set_msImeAlign;
    property msTextCombineHorizontal: WideString read Get_msTextCombineHorizontal write Set_msTextCombineHorizontal;
    property touchAction: WideString read Get_touchAction write Set_touchAction;
  end;

// *********************************************************************//
// DispIntf:  IHTMLCSSStyleDeclaration3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051085C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCSSStyleDeclaration3Disp = dispinterface
    ['{3051085C-98B5-11CF-BB82-00AA00BDCE0B}']
    property flex: WideString dispid -2147412646;
    property flexDirection: WideString dispid -2147412650;
    property flexWrap: WideString dispid -2147412649;
    property flexFlow: WideString dispid -2147412648;
    property flexGrow: OleVariant dispid -2147412645;
    property flexShrink: OleVariant dispid -2147412644;
    property flexBasis: OleVariant dispid -2147412643;
    property justifyContent: WideString dispid -2147412642;
    property alignItems: WideString dispid -2147412641;
    property alignSelf: WideString dispid -2147412640;
    property alignContent: WideString dispid -2147412639;
    property borderImage: WideString dispid -2147412638;
    property borderImageSource: WideString dispid -2147412637;
    property borderImageSlice: WideString dispid -2147412636;
    property borderImageWidth: WideString dispid -2147412635;
    property borderImageOutset: WideString dispid -2147412634;
    property borderImageRepeat: WideString dispid -2147412633;
    property msImeAlign: WideString dispid -2147412631;
    property msTextCombineHorizontal: WideString dispid -2147412630;
    property touchAction: WideString dispid -2147412629;
  end;

// *********************************************************************//
// Interface: IHTMLStyleEnabled
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104C2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleEnabled = interface(IDispatch)
    ['{305104C2-98B5-11CF-BB82-00AA00BDCE0B}']
    function msGetPropertyEnabled(const name: WideString): WordBool; safecall;
    procedure msPutPropertyEnabled(const name: WideString; b: WordBool); safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleEnabledDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104C2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleEnabledDisp = dispinterface
    ['{305104C2-98B5-11CF-BB82-00AA00BDCE0B}']
    function msGetPropertyEnabled(const name: WideString): WordBool; dispid -2147413605;
    procedure msPutPropertyEnabled(const name: WideString; b: WordBool); dispid -2147413604;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLCSSStyleDeclaration
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059009A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLCSSStyleDeclaration = dispinterface
    ['{3059009A-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid -2147413611;
    property parentRule: OleVariant readonly dispid -2147413610;
    function getPropertyValue(const bstrPropertyName: WideString): WideString; dispid -2147413609;
    function getPropertyPriority(const bstrPropertyName: WideString): WideString; dispid -2147413608;
    function removeProperty(const bstrPropertyName: WideString): WideString; dispid -2147413607;
    procedure setProperty(const bstrPropertyName: WideString; const pvarPropertyValue: OleVariant; 
                          const pvarPropertyPriority: OleVariant); dispid -2147413606;
    function item(index: Integer): WideString; dispid 0;
    property fontFamily: WideString dispid -2147413094;
    property fontStyle: WideString dispid -2147413088;
    property fontVariant: WideString dispid -2147413087;
    property fontWeight: WideString dispid -2147413085;
    property fontSize: OleVariant dispid -2147413093;
    property font: WideString dispid -2147413071;
    property color: OleVariant dispid -2147413110;
    property background: WideString dispid -2147413080;
    property backgroundColor: OleVariant dispid -501;
    property backgroundImage: WideString dispid -2147413111;
    property backgroundRepeat: WideString dispid -2147413068;
    property backgroundAttachment: WideString dispid -2147413067;
    property backgroundPosition: WideString dispid -2147413066;
    property backgroundPositionX: OleVariant dispid -2147413079;
    property backgroundPositionY: OleVariant dispid -2147413078;
    property wordSpacing: OleVariant dispid -2147413065;
    property letterSpacing: OleVariant dispid -2147413104;
    property textDecoration: WideString dispid -2147413077;
    property verticalAlign: OleVariant dispid -2147413064;
    property textTransform: WideString dispid -2147413108;
    property textAlign: WideString dispid -2147418040;
    property textIndent: OleVariant dispid -2147413105;
    property lineHeight: OleVariant dispid -2147413106;
    property marginTop: OleVariant dispid -2147413075;
    property marginRight: OleVariant dispid -2147413074;
    property marginBottom: OleVariant dispid -2147413073;
    property marginLeft: OleVariant dispid -2147413072;
    property margin: WideString dispid -2147413076;
    property paddingTop: OleVariant dispid -2147413100;
    property paddingRight: OleVariant dispid -2147413099;
    property paddingBottom: OleVariant dispid -2147413098;
    property paddingLeft: OleVariant dispid -2147413097;
    property padding: WideString dispid -2147413101;
    property border: WideString dispid -2147413063;
    property borderTop: WideString dispid -2147413062;
    property borderRight: WideString dispid -2147413061;
    property borderBottom: WideString dispid -2147413060;
    property borderLeft: WideString dispid -2147413059;
    property borderColor: WideString dispid -2147413058;
    property borderTopColor: OleVariant dispid -2147413057;
    property borderRightColor: OleVariant dispid -2147413056;
    property borderBottomColor: OleVariant dispid -2147413055;
    property borderLeftColor: OleVariant dispid -2147413054;
    property borderWidth: WideString dispid -2147413053;
    property borderTopWidth: OleVariant dispid -2147413052;
    property borderRightWidth: OleVariant dispid -2147413051;
    property borderBottomWidth: OleVariant dispid -2147413050;
    property borderLeftWidth: OleVariant dispid -2147413049;
    property borderStyle: WideString dispid -2147413048;
    property borderTopStyle: WideString dispid -2147413047;
    property borderRightStyle: WideString dispid -2147413046;
    property borderBottomStyle: WideString dispid -2147413045;
    property borderLeftStyle: WideString dispid -2147413044;
    property width: OleVariant dispid -2147418107;
    property height: OleVariant dispid -2147418106;
    property styleFloat: WideString dispid -2147413042;
    property clear: WideString dispid -2147413096;
    property display: WideString dispid -2147413041;
    property visibility: WideString dispid -2147413032;
    property listStyleType: WideString dispid -2147413040;
    property listStylePosition: WideString dispid -2147413039;
    property listStyleImage: WideString dispid -2147413038;
    property listStyle: WideString dispid -2147413037;
    property whiteSpace: WideString dispid -2147413036;
    property top: OleVariant dispid -2147418108;
    property left: OleVariant dispid -2147418109;
    property zIndex: OleVariant dispid -2147413021;
    property overflow: WideString dispid -2147413102;
    property pageBreakBefore: WideString dispid -2147413035;
    property pageBreakAfter: WideString dispid -2147413034;
    property cssText: WideString dispid -2147413013;
    property cursor: WideString dispid -2147413010;
    property clip: WideString dispid -2147413020;
    property filter: WideString dispid -2147413030;
    property tableLayout: WideString dispid -2147413014;
    property borderCollapse: WideString dispid -2147413028;
    property direction: WideString dispid -2147412993;
    property behavior: WideString dispid -2147412997;
    property position: WideString dispid -2147413022;
    property unicodeBidi: WideString dispid -2147412994;
    property bottom: OleVariant dispid -2147418034;
    property right: OleVariant dispid -2147418035;
    property imeMode: WideString dispid -2147412992;
    property rubyAlign: WideString dispid -2147412991;
    property rubyPosition: WideString dispid -2147412990;
    property rubyOverhang: WideString dispid -2147412989;
    property layoutGridChar: OleVariant dispid -2147412985;
    property layoutGridLine: OleVariant dispid -2147412984;
    property layoutGridMode: WideString dispid -2147412983;
    property layoutGridType: WideString dispid -2147412982;
    property layoutGrid: WideString dispid -2147412981;
    property textAutospace: WideString dispid -2147412980;
    property wordBreak: WideString dispid -2147412978;
    property lineBreak: WideString dispid -2147412979;
    property textJustify: WideString dispid -2147412977;
    property textJustifyTrim: WideString dispid -2147412976;
    property textKashida: OleVariant dispid -2147412975;
    property overflowX: WideString dispid -2147412973;
    property overflowY: WideString dispid -2147412972;
    property accelerator: WideString dispid -2147412965;
    property layoutFlow: WideString dispid -2147412957;
    property zoom: OleVariant dispid -2147412959;
    property wordWrap: WideString dispid -2147412954;
    property textUnderlinePosition: WideString dispid -2147412953;
    property scrollbarBaseColor: OleVariant dispid -2147412932;
    property scrollbarFaceColor: OleVariant dispid -2147412931;
    property scrollbar3dLightColor: OleVariant dispid -2147412930;
    property scrollbarShadowColor: OleVariant dispid -2147412929;
    property scrollbarHighlightColor: OleVariant dispid -2147412928;
    property scrollbarDarkShadowColor: OleVariant dispid -2147412927;
    property scrollbarArrowColor: OleVariant dispid -2147412926;
    property scrollbarTrackColor: OleVariant dispid -2147412916;
    property writingMode: WideString dispid -2147412920;
    property textAlignLast: WideString dispid -2147412909;
    property textKashidaSpace: OleVariant dispid -2147412908;
    property textOverflow: WideString dispid -2147412903;
    property minHeight: OleVariant dispid -2147412901;
    property msInterpolationMode: WideString dispid -2147412899;
    property maxHeight: OleVariant dispid -2147412898;
    property minWidth: OleVariant dispid -2147412897;
    property maxWidth: OleVariant dispid -2147412896;
    property content: WideString dispid -2147412894;
    property captionSide: WideString dispid -2147412893;
    property counterIncrement: WideString dispid -2147412892;
    property counterReset: WideString dispid -2147412891;
    property outline: WideString dispid -2147412890;
    property outlineWidth: OleVariant dispid -2147412889;
    property outlineStyle: WideString dispid -2147412888;
    property outlineColor: OleVariant dispid -2147412887;
    property boxSizing: WideString dispid -2147412886;
    property borderSpacing: WideString dispid -2147412885;
    property orphans: OleVariant dispid -2147412884;
    property widows: OleVariant dispid -2147412883;
    property pageBreakInside: WideString dispid -2147412882;
    property emptyCells: WideString dispid -2147412862;
    property msBlockProgression: WideString dispid -2147412861;
    property quotes: WideString dispid -2147412860;
    property alignmentBaseline: WideString dispid -2147412834;
    property baselineShift: OleVariant dispid -2147412833;
    property dominantBaseline: WideString dispid -2147412832;
    property fontSizeAdjust: OleVariant dispid -2147412831;
    property fontStretch: WideString dispid -2147412830;
    property opacity: OleVariant dispid -2147412829;
    property clipPath: WideString dispid -2147412828;
    property clipRule: WideString dispid -2147412827;
    property fill: WideString dispid -2147412826;
    property fillOpacity: OleVariant dispid -2147412825;
    property fillRule: WideString dispid -2147412824;
    property kerning: OleVariant dispid -2147412823;
    property marker: WideString dispid -2147412822;
    property markerEnd: WideString dispid -2147412821;
    property markerMid: WideString dispid -2147412820;
    property markerStart: WideString dispid -2147412819;
    property mask: WideString dispid -2147412818;
    property pointerEvents: WideString dispid -2147412817;
    property stopColor: OleVariant dispid -2147412816;
    property stopOpacity: OleVariant dispid -2147412815;
    property stroke: WideString dispid -2147412814;
    property strokeDasharray: WideString dispid -2147412813;
    property strokeDashoffset: OleVariant dispid -2147412812;
    property strokeLinecap: WideString dispid -2147412811;
    property strokeLinejoin: WideString dispid -2147412810;
    property strokeMiterlimit: OleVariant dispid -2147412809;
    property strokeOpacity: OleVariant dispid -2147412808;
    property strokeWidth: OleVariant dispid -2147412807;
    property textAnchor: WideString dispid -2147412806;
    property glyphOrientationHorizontal: OleVariant dispid -2147412805;
    property glyphOrientationVertical: OleVariant dispid -2147412804;
    property borderRadius: WideString dispid -2147412802;
    property borderTopLeftRadius: WideString dispid -2147412801;
    property borderTopRightRadius: WideString dispid -2147412800;
    property borderBottomRightRadius: WideString dispid -2147412799;
    property borderBottomLeftRadius: WideString dispid -2147412798;
    property clipTop: OleVariant dispid -2147413019;
    property clipRight: OleVariant dispid -2147413018;
    property clipBottom: OleVariant readonly dispid -2147413017;
    property clipLeft: OleVariant dispid -2147413016;
    property cssFloat: WideString dispid -2147412803;
    property backgroundClip: WideString dispid -2147412796;
    property backgroundOrigin: WideString dispid -2147412795;
    property backgroundSize: WideString dispid -2147412794;
    property boxShadow: WideString dispid -2147412793;
    property msTransform: WideString dispid -2147412797;
    property msTransformOrigin: WideString dispid -2147412787;
    property msScrollChaining: WideString dispid -2147412757;
    property msContentZooming: WideString dispid -2147412756;
    property msContentZoomSnapType: WideString dispid -2147412755;
    property msScrollRails: WideString dispid -2147412754;
    property msContentZoomChaining: WideString dispid -2147412753;
    property msScrollSnapType: WideString dispid -2147412752;
    property msContentZoomLimit: WideString dispid -2147412751;
    property msContentZoomSnap: WideString dispid -2147412750;
    property msContentZoomSnapPoints: WideString dispid -2147412749;
    property msContentZoomLimitMin: OleVariant dispid -2147412747;
    property msContentZoomLimitMax: OleVariant dispid -2147412746;
    property msScrollSnapX: WideString dispid -2147412745;
    property msScrollSnapY: WideString dispid -2147412744;
    property msScrollSnapPointsX: WideString dispid -2147412743;
    property msScrollSnapPointsY: WideString dispid -2147412742;
    property msGridColumn: OleVariant dispid -2147412740;
    property msGridColumnAlign: WideString dispid -2147412739;
    property msGridColumns: WideString dispid -2147412738;
    property msGridColumnSpan: OleVariant dispid -2147412737;
    property msGridRow: OleVariant dispid -2147412735;
    property msGridRowAlign: WideString dispid -2147412734;
    property msGridRows: WideString dispid -2147412733;
    property msGridRowSpan: OleVariant dispid -2147412732;
    property msWrapThrough: WideString dispid -2147412711;
    property msWrapMargin: OleVariant dispid -2147412701;
    property msWrapFlow: WideString dispid -2147412699;
    property msAnimationName: WideString dispid -2147412731;
    property msAnimationDuration: WideString dispid -2147412730;
    property msAnimationTimingFunction: WideString dispid -2147412729;
    property msAnimationDelay: WideString dispid -2147412728;
    property msAnimationDirection: WideString dispid -2147412727;
    property msAnimationPlayState: WideString dispid -2147412726;
    property msAnimationIterationCount: WideString dispid -2147412725;
    property msAnimation: WideString dispid -2147412724;
    property msAnimationFillMode: WideString dispid -2147412723;
    property colorInterpolationFilters: WideString dispid -2147412720;
    property columnCount: OleVariant dispid -2147412776;
    property columnWidth: OleVariant dispid -2147412775;
    property columnGap: OleVariant dispid -2147412774;
    property columnFill: WideString dispid -2147412773;
    property columnSpan: WideString dispid -2147412772;
    property columns: WideString dispid -2147412777;
    property columnRule: WideString dispid -2147412771;
    property columnRuleColor: OleVariant dispid -2147412768;
    property columnRuleStyle: WideString dispid -2147412770;
    property columnRuleWidth: OleVariant dispid -2147412769;
    property breakBefore: WideString dispid -2147412767;
    property breakAfter: WideString dispid -2147412766;
    property breakInside: WideString dispid -2147412765;
    property floodColor: OleVariant dispid -2147412722;
    property floodOpacity: OleVariant dispid -2147412721;
    property lightingColor: OleVariant dispid -2147412719;
    property msScrollLimitXMin: OleVariant dispid -2147412718;
    property msScrollLimitYMin: OleVariant dispid -2147412717;
    property msScrollLimitXMax: OleVariant dispid -2147412716;
    property msScrollLimitYMax: OleVariant dispid -2147412715;
    property msScrollLimit: WideString dispid -2147412714;
    property textShadow: WideString dispid -2147412712;
    property msFlowFrom: WideString dispid -2147412710;
    property msFlowInto: WideString dispid -2147412709;
    property msHyphens: WideString dispid -2147412708;
    property msHyphenateLimitZone: OleVariant dispid -2147412707;
    property msHyphenateLimitChars: WideString dispid -2147412706;
    property msHyphenateLimitLines: OleVariant dispid -2147412705;
    property msHighContrastAdjust: WideString dispid -2147412703;
    property enableBackground: WideString dispid -2147412702;
    property msFontFeatureSettings: WideString dispid -2147412698;
    property msUserSelect: WideString dispid -2147412697;
    property msOverflowStyle: WideString dispid -2147412713;
    property msTransformStyle: WideString dispid -2147412759;
    property msBackfaceVisibility: WideString dispid -2147412758;
    property msPerspective: OleVariant dispid -2147412763;
    property msPerspectiveOrigin: WideString dispid -2147412762;
    property msTransitionProperty: WideString dispid -2147412782;
    property msTransitionDuration: WideString dispid -2147412781;
    property msTransitionTimingFunction: WideString dispid -2147412780;
    property msTransitionDelay: WideString dispid -2147412779;
    property msTransition: WideString dispid -2147412778;
    property msTouchAction: WideString dispid -2147412696;
    property msScrollTranslation: WideString dispid -2147412694;
    property msFlex: WideString dispid -2147412693;
    property msFlexPositive: OleVariant dispid -2147412692;
    property msFlexNegative: OleVariant dispid -2147412691;
    property msFlexPreferredSize: OleVariant dispid -2147412690;
    property msFlexFlow: WideString dispid -2147412689;
    property msFlexDirection: WideString dispid -2147412688;
    property msFlexWrap: WideString dispid -2147412687;
    property msFlexAlign: WideString dispid -2147412686;
    property msFlexItemAlign: WideString dispid -2147412685;
    property msFlexPack: WideString dispid -2147412684;
    property msFlexLinePack: WideString dispid -2147412683;
    property msFlexOrder: OleVariant dispid -2147412682;
    property msTouchSelect: WideString dispid -2147412654;
    property transform: WideString dispid -2147412681;
    property transformOrigin: WideString dispid -2147412680;
    property transformStyle: WideString dispid -2147412672;
    property backfaceVisibility: WideString dispid -2147412671;
    property perspective: OleVariant dispid -2147412674;
    property perspectiveOrigin: WideString dispid -2147412673;
    property transitionProperty: WideString dispid -2147412679;
    property transitionDuration: WideString dispid -2147412678;
    property transitionTimingFunction: WideString dispid -2147412677;
    property transitionDelay: WideString dispid -2147412676;
    property transition: WideString dispid -2147412675;
    property fontFeatureSettings: WideString dispid -2147412661;
    property animationName: WideString dispid -2147412670;
    property animationDuration: WideString dispid -2147412669;
    property animationTimingFunction: WideString dispid -2147412668;
    property animationDelay: WideString dispid -2147412667;
    property animationDirection: WideString dispid -2147412666;
    property animationPlayState: WideString dispid -2147412665;
    property animationIterationCount: WideString dispid -2147412664;
    property animation: WideString dispid -2147412663;
    property animationFillMode: WideString dispid -2147412662;
    property flex: WideString dispid -2147412646;
    property flexDirection: WideString dispid -2147412650;
    property flexWrap: WideString dispid -2147412649;
    property flexFlow: WideString dispid -2147412648;
    property flexGrow: OleVariant dispid -2147412645;
    property flexShrink: OleVariant dispid -2147412644;
    property flexBasis: OleVariant dispid -2147412643;
    property justifyContent: WideString dispid -2147412642;
    property alignItems: WideString dispid -2147412641;
    property alignSelf: WideString dispid -2147412640;
    property alignContent: WideString dispid -2147412639;
    property borderImage: WideString dispid -2147412638;
    property borderImageSource: WideString dispid -2147412637;
    property borderImageSlice: WideString dispid -2147412636;
    property borderImageWidth: WideString dispid -2147412635;
    property borderImageOutset: WideString dispid -2147412634;
    property borderImageRepeat: WideString dispid -2147412633;
    property msImeAlign: WideString dispid -2147412631;
    property msTextCombineHorizontal: WideString dispid -2147412630;
    property touchAction: WideString dispid -2147412629;
    function msGetPropertyEnabled(const name: WideString): WordBool; dispid -2147413605;
    procedure msPutPropertyEnabled(const name: WideString; b: WordBool); dispid -2147413604;
  end;

// *********************************************************************//
// Interface: IHTMLStyle2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4A2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyle2 = interface(IDispatch)
    ['{3050F4A2-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_tableLayout(const p: WideString); safecall;
    function Get_tableLayout: WideString; safecall;
    procedure Set_borderCollapse(const p: WideString); safecall;
    function Get_borderCollapse: WideString; safecall;
    procedure Set_direction(const p: WideString); safecall;
    function Get_direction: WideString; safecall;
    procedure Set_behavior(const p: WideString); safecall;
    function Get_behavior: WideString; safecall;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); safecall;
    function getExpression(const propname: WideString): OleVariant; safecall;
    function removeExpression(const propname: WideString): WordBool; safecall;
    procedure Set_position(const p: WideString); safecall;
    function Get_position: WideString; safecall;
    procedure Set_unicodeBidi(const p: WideString); safecall;
    function Get_unicodeBidi: WideString; safecall;
    procedure Set_bottom(p: OleVariant); safecall;
    function Get_bottom: OleVariant; safecall;
    procedure Set_right(p: OleVariant); safecall;
    function Get_right: OleVariant; safecall;
    procedure Set_pixelBottom(p: Integer); safecall;
    function Get_pixelBottom: Integer; safecall;
    procedure Set_pixelRight(p: Integer); safecall;
    function Get_pixelRight: Integer; safecall;
    procedure Set_posBottom(p: Single); safecall;
    function Get_posBottom: Single; safecall;
    procedure Set_posRight(p: Single); safecall;
    function Get_posRight: Single; safecall;
    procedure Set_imeMode(const p: WideString); safecall;
    function Get_imeMode: WideString; safecall;
    procedure Set_rubyAlign(const p: WideString); safecall;
    function Get_rubyAlign: WideString; safecall;
    procedure Set_rubyPosition(const p: WideString); safecall;
    function Get_rubyPosition: WideString; safecall;
    procedure Set_rubyOverhang(const p: WideString); safecall;
    function Get_rubyOverhang: WideString; safecall;
    procedure Set_layoutGridChar(p: OleVariant); safecall;
    function Get_layoutGridChar: OleVariant; safecall;
    procedure Set_layoutGridLine(p: OleVariant); safecall;
    function Get_layoutGridLine: OleVariant; safecall;
    procedure Set_layoutGridMode(const p: WideString); safecall;
    function Get_layoutGridMode: WideString; safecall;
    procedure Set_layoutGridType(const p: WideString); safecall;
    function Get_layoutGridType: WideString; safecall;
    procedure Set_layoutGrid(const p: WideString); safecall;
    function Get_layoutGrid: WideString; safecall;
    procedure Set_wordBreak(const p: WideString); safecall;
    function Get_wordBreak: WideString; safecall;
    procedure Set_lineBreak(const p: WideString); safecall;
    function Get_lineBreak: WideString; safecall;
    procedure Set_textJustify(const p: WideString); safecall;
    function Get_textJustify: WideString; safecall;
    procedure Set_textJustifyTrim(const p: WideString); safecall;
    function Get_textJustifyTrim: WideString; safecall;
    procedure Set_textKashida(p: OleVariant); safecall;
    function Get_textKashida: OleVariant; safecall;
    procedure Set_textAutospace(const p: WideString); safecall;
    function Get_textAutospace: WideString; safecall;
    procedure Set_overflowX(const p: WideString); safecall;
    function Get_overflowX: WideString; safecall;
    procedure Set_overflowY(const p: WideString); safecall;
    function Get_overflowY: WideString; safecall;
    procedure Set_accelerator(const p: WideString); safecall;
    function Get_accelerator: WideString; safecall;
    property tableLayout: WideString read Get_tableLayout write Set_tableLayout;
    property borderCollapse: WideString read Get_borderCollapse write Set_borderCollapse;
    property direction: WideString read Get_direction write Set_direction;
    property behavior: WideString read Get_behavior write Set_behavior;
    property position: WideString read Get_position write Set_position;
    property unicodeBidi: WideString read Get_unicodeBidi write Set_unicodeBidi;
    property bottom: OleVariant read Get_bottom write Set_bottom;
    property right: OleVariant read Get_right write Set_right;
    property pixelBottom: Integer read Get_pixelBottom write Set_pixelBottom;
    property pixelRight: Integer read Get_pixelRight write Set_pixelRight;
    property posBottom: Single read Get_posBottom write Set_posBottom;
    property posRight: Single read Get_posRight write Set_posRight;
    property imeMode: WideString read Get_imeMode write Set_imeMode;
    property rubyAlign: WideString read Get_rubyAlign write Set_rubyAlign;
    property rubyPosition: WideString read Get_rubyPosition write Set_rubyPosition;
    property rubyOverhang: WideString read Get_rubyOverhang write Set_rubyOverhang;
    property layoutGridChar: OleVariant read Get_layoutGridChar write Set_layoutGridChar;
    property layoutGridLine: OleVariant read Get_layoutGridLine write Set_layoutGridLine;
    property layoutGridMode: WideString read Get_layoutGridMode write Set_layoutGridMode;
    property layoutGridType: WideString read Get_layoutGridType write Set_layoutGridType;
    property layoutGrid: WideString read Get_layoutGrid write Set_layoutGrid;
    property wordBreak: WideString read Get_wordBreak write Set_wordBreak;
    property lineBreak: WideString read Get_lineBreak write Set_lineBreak;
    property textJustify: WideString read Get_textJustify write Set_textJustify;
    property textJustifyTrim: WideString read Get_textJustifyTrim write Set_textJustifyTrim;
    property textKashida: OleVariant read Get_textKashida write Set_textKashida;
    property textAutospace: WideString read Get_textAutospace write Set_textAutospace;
    property overflowX: WideString read Get_overflowX write Set_overflowX;
    property overflowY: WideString read Get_overflowY write Set_overflowY;
    property accelerator: WideString read Get_accelerator write Set_accelerator;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyle2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4A2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyle2Disp = dispinterface
    ['{3050F4A2-98B5-11CF-BB82-00AA00BDCE0B}']
    property tableLayout: WideString dispid -2147413014;
    property borderCollapse: WideString dispid -2147413028;
    property direction: WideString dispid -2147412993;
    property behavior: WideString dispid -2147412997;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property position: WideString dispid -2147413022;
    property unicodeBidi: WideString dispid -2147412994;
    property bottom: OleVariant dispid -2147418034;
    property right: OleVariant dispid -2147418035;
    property pixelBottom: Integer dispid -2147414103;
    property pixelRight: Integer dispid -2147414102;
    property posBottom: Single dispid -2147414101;
    property posRight: Single dispid -2147414100;
    property imeMode: WideString dispid -2147412992;
    property rubyAlign: WideString dispid -2147412991;
    property rubyPosition: WideString dispid -2147412990;
    property rubyOverhang: WideString dispid -2147412989;
    property layoutGridChar: OleVariant dispid -2147412985;
    property layoutGridLine: OleVariant dispid -2147412984;
    property layoutGridMode: WideString dispid -2147412983;
    property layoutGridType: WideString dispid -2147412982;
    property layoutGrid: WideString dispid -2147412981;
    property wordBreak: WideString dispid -2147412978;
    property lineBreak: WideString dispid -2147412979;
    property textJustify: WideString dispid -2147412977;
    property textJustifyTrim: WideString dispid -2147412976;
    property textKashida: OleVariant dispid -2147412975;
    property textAutospace: WideString dispid -2147412980;
    property overflowX: WideString dispid -2147412973;
    property overflowY: WideString dispid -2147412972;
    property accelerator: WideString dispid -2147412965;
  end;

// *********************************************************************//
// Interface: IHTMLStyle3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F656-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyle3 = interface(IDispatch)
    ['{3050F656-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_layoutFlow(const p: WideString); safecall;
    function Get_layoutFlow: WideString; safecall;
    procedure Set_zoom(p: OleVariant); safecall;
    function Get_zoom: OleVariant; safecall;
    procedure Set_wordWrap(const p: WideString); safecall;
    function Get_wordWrap: WideString; safecall;
    procedure Set_textUnderlinePosition(const p: WideString); safecall;
    function Get_textUnderlinePosition: WideString; safecall;
    procedure Set_scrollbarBaseColor(p: OleVariant); safecall;
    function Get_scrollbarBaseColor: OleVariant; safecall;
    procedure Set_scrollbarFaceColor(p: OleVariant); safecall;
    function Get_scrollbarFaceColor: OleVariant; safecall;
    procedure Set_scrollbar3dLightColor(p: OleVariant); safecall;
    function Get_scrollbar3dLightColor: OleVariant; safecall;
    procedure Set_scrollbarShadowColor(p: OleVariant); safecall;
    function Get_scrollbarShadowColor: OleVariant; safecall;
    procedure Set_scrollbarHighlightColor(p: OleVariant); safecall;
    function Get_scrollbarHighlightColor: OleVariant; safecall;
    procedure Set_scrollbarDarkShadowColor(p: OleVariant); safecall;
    function Get_scrollbarDarkShadowColor: OleVariant; safecall;
    procedure Set_scrollbarArrowColor(p: OleVariant); safecall;
    function Get_scrollbarArrowColor: OleVariant; safecall;
    procedure Set_scrollbarTrackColor(p: OleVariant); safecall;
    function Get_scrollbarTrackColor: OleVariant; safecall;
    procedure Set_writingMode(const p: WideString); safecall;
    function Get_writingMode: WideString; safecall;
    procedure Set_textAlignLast(const p: WideString); safecall;
    function Get_textAlignLast: WideString; safecall;
    procedure Set_textKashidaSpace(p: OleVariant); safecall;
    function Get_textKashidaSpace: OleVariant; safecall;
    property layoutFlow: WideString read Get_layoutFlow write Set_layoutFlow;
    property zoom: OleVariant read Get_zoom write Set_zoom;
    property wordWrap: WideString read Get_wordWrap write Set_wordWrap;
    property textUnderlinePosition: WideString read Get_textUnderlinePosition write Set_textUnderlinePosition;
    property scrollbarBaseColor: OleVariant read Get_scrollbarBaseColor write Set_scrollbarBaseColor;
    property scrollbarFaceColor: OleVariant read Get_scrollbarFaceColor write Set_scrollbarFaceColor;
    property scrollbar3dLightColor: OleVariant read Get_scrollbar3dLightColor write Set_scrollbar3dLightColor;
    property scrollbarShadowColor: OleVariant read Get_scrollbarShadowColor write Set_scrollbarShadowColor;
    property scrollbarHighlightColor: OleVariant read Get_scrollbarHighlightColor write Set_scrollbarHighlightColor;
    property scrollbarDarkShadowColor: OleVariant read Get_scrollbarDarkShadowColor write Set_scrollbarDarkShadowColor;
    property scrollbarArrowColor: OleVariant read Get_scrollbarArrowColor write Set_scrollbarArrowColor;
    property scrollbarTrackColor: OleVariant read Get_scrollbarTrackColor write Set_scrollbarTrackColor;
    property writingMode: WideString read Get_writingMode write Set_writingMode;
    property textAlignLast: WideString read Get_textAlignLast write Set_textAlignLast;
    property textKashidaSpace: OleVariant read Get_textKashidaSpace write Set_textKashidaSpace;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyle3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F656-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyle3Disp = dispinterface
    ['{3050F656-98B5-11CF-BB82-00AA00BDCE0B}']
    property layoutFlow: WideString dispid -2147412957;
    property zoom: OleVariant dispid -2147412959;
    property wordWrap: WideString dispid -2147412954;
    property textUnderlinePosition: WideString dispid -2147412953;
    property scrollbarBaseColor: OleVariant dispid -2147412932;
    property scrollbarFaceColor: OleVariant dispid -2147412931;
    property scrollbar3dLightColor: OleVariant dispid -2147412930;
    property scrollbarShadowColor: OleVariant dispid -2147412929;
    property scrollbarHighlightColor: OleVariant dispid -2147412928;
    property scrollbarDarkShadowColor: OleVariant dispid -2147412927;
    property scrollbarArrowColor: OleVariant dispid -2147412926;
    property scrollbarTrackColor: OleVariant dispid -2147412916;
    property writingMode: WideString dispid -2147412920;
    property textAlignLast: WideString dispid -2147412909;
    property textKashidaSpace: OleVariant dispid -2147412908;
  end;

// *********************************************************************//
// Interface: IHTMLStyle4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F816-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyle4 = interface(IDispatch)
    ['{3050F816-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_textOverflow(const p: WideString); safecall;
    function Get_textOverflow: WideString; safecall;
    procedure Set_minHeight(p: OleVariant); safecall;
    function Get_minHeight: OleVariant; safecall;
    property textOverflow: WideString read Get_textOverflow write Set_textOverflow;
    property minHeight: OleVariant read Get_minHeight write Set_minHeight;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyle4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F816-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyle4Disp = dispinterface
    ['{3050F816-98B5-11CF-BB82-00AA00BDCE0B}']
    property textOverflow: WideString dispid -2147412903;
    property minHeight: OleVariant dispid -2147412901;
  end;

// *********************************************************************//
// Interface: IHTMLStyle5
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F33A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyle5 = interface(IDispatch)
    ['{3050F33A-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_msInterpolationMode(const p: WideString); safecall;
    function Get_msInterpolationMode: WideString; safecall;
    procedure Set_maxHeight(p: OleVariant); safecall;
    function Get_maxHeight: OleVariant; safecall;
    procedure Set_minWidth(p: OleVariant); safecall;
    function Get_minWidth: OleVariant; safecall;
    procedure Set_maxWidth(p: OleVariant); safecall;
    function Get_maxWidth: OleVariant; safecall;
    property msInterpolationMode: WideString read Get_msInterpolationMode write Set_msInterpolationMode;
    property maxHeight: OleVariant read Get_maxHeight write Set_maxHeight;
    property minWidth: OleVariant read Get_minWidth write Set_minWidth;
    property maxWidth: OleVariant read Get_maxWidth write Set_maxWidth;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyle5Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F33A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyle5Disp = dispinterface
    ['{3050F33A-98B5-11CF-BB82-00AA00BDCE0B}']
    property msInterpolationMode: WideString dispid -2147412899;
    property maxHeight: OleVariant dispid -2147412898;
    property minWidth: OleVariant dispid -2147412897;
    property maxWidth: OleVariant dispid -2147412896;
  end;

// *********************************************************************//
// Interface: IHTMLStyle6
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510480-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyle6 = interface(IDispatch)
    ['{30510480-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_content(const p: WideString); safecall;
    function Get_content: WideString; safecall;
    procedure Set_captionSide(const p: WideString); safecall;
    function Get_captionSide: WideString; safecall;
    procedure Set_counterIncrement(const p: WideString); safecall;
    function Get_counterIncrement: WideString; safecall;
    procedure Set_counterReset(const p: WideString); safecall;
    function Get_counterReset: WideString; safecall;
    procedure Set_outline(const p: WideString); safecall;
    function Get_outline: WideString; safecall;
    procedure Set_outlineWidth(p: OleVariant); safecall;
    function Get_outlineWidth: OleVariant; safecall;
    procedure Set_outlineStyle(const p: WideString); safecall;
    function Get_outlineStyle: WideString; safecall;
    procedure Set_outlineColor(p: OleVariant); safecall;
    function Get_outlineColor: OleVariant; safecall;
    procedure Set_boxSizing(const p: WideString); safecall;
    function Get_boxSizing: WideString; safecall;
    procedure Set_borderSpacing(const p: WideString); safecall;
    function Get_borderSpacing: WideString; safecall;
    procedure Set_orphans(p: OleVariant); safecall;
    function Get_orphans: OleVariant; safecall;
    procedure Set_widows(p: OleVariant); safecall;
    function Get_widows: OleVariant; safecall;
    procedure Set_pageBreakInside(const p: WideString); safecall;
    function Get_pageBreakInside: WideString; safecall;
    procedure Set_emptyCells(const p: WideString); safecall;
    function Get_emptyCells: WideString; safecall;
    procedure Set_msBlockProgression(const p: WideString); safecall;
    function Get_msBlockProgression: WideString; safecall;
    procedure Set_quotes(const p: WideString); safecall;
    function Get_quotes: WideString; safecall;
    property content: WideString read Get_content write Set_content;
    property captionSide: WideString read Get_captionSide write Set_captionSide;
    property counterIncrement: WideString read Get_counterIncrement write Set_counterIncrement;
    property counterReset: WideString read Get_counterReset write Set_counterReset;
    property outline: WideString read Get_outline write Set_outline;
    property outlineWidth: OleVariant read Get_outlineWidth write Set_outlineWidth;
    property outlineStyle: WideString read Get_outlineStyle write Set_outlineStyle;
    property outlineColor: OleVariant read Get_outlineColor write Set_outlineColor;
    property boxSizing: WideString read Get_boxSizing write Set_boxSizing;
    property borderSpacing: WideString read Get_borderSpacing write Set_borderSpacing;
    property orphans: OleVariant read Get_orphans write Set_orphans;
    property widows: OleVariant read Get_widows write Set_widows;
    property pageBreakInside: WideString read Get_pageBreakInside write Set_pageBreakInside;
    property emptyCells: WideString read Get_emptyCells write Set_emptyCells;
    property msBlockProgression: WideString read Get_msBlockProgression write Set_msBlockProgression;
    property quotes: WideString read Get_quotes write Set_quotes;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyle6Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510480-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyle6Disp = dispinterface
    ['{30510480-98B5-11CF-BB82-00AA00BDCE0B}']
    property content: WideString dispid -2147412894;
    property captionSide: WideString dispid -2147412893;
    property counterIncrement: WideString dispid -2147412892;
    property counterReset: WideString dispid -2147412891;
    property outline: WideString dispid -2147412890;
    property outlineWidth: OleVariant dispid -2147412889;
    property outlineStyle: WideString dispid -2147412888;
    property outlineColor: OleVariant dispid -2147412887;
    property boxSizing: WideString dispid -2147412886;
    property borderSpacing: WideString dispid -2147412885;
    property orphans: OleVariant dispid -2147412884;
    property widows: OleVariant dispid -2147412883;
    property pageBreakInside: WideString dispid -2147412882;
    property emptyCells: WideString dispid -2147412862;
    property msBlockProgression: WideString dispid -2147412861;
    property quotes: WideString dispid -2147412860;
  end;

// *********************************************************************//
// Interface: IHTMLRuleStyle2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4AC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRuleStyle2 = interface(IDispatch)
    ['{3050F4AC-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_tableLayout(const p: WideString); safecall;
    function Get_tableLayout: WideString; safecall;
    procedure Set_borderCollapse(const p: WideString); safecall;
    function Get_borderCollapse: WideString; safecall;
    procedure Set_direction(const p: WideString); safecall;
    function Get_direction: WideString; safecall;
    procedure Set_behavior(const p: WideString); safecall;
    function Get_behavior: WideString; safecall;
    procedure Set_position(const p: WideString); safecall;
    function Get_position: WideString; safecall;
    procedure Set_unicodeBidi(const p: WideString); safecall;
    function Get_unicodeBidi: WideString; safecall;
    procedure Set_bottom(p: OleVariant); safecall;
    function Get_bottom: OleVariant; safecall;
    procedure Set_right(p: OleVariant); safecall;
    function Get_right: OleVariant; safecall;
    procedure Set_pixelBottom(p: Integer); safecall;
    function Get_pixelBottom: Integer; safecall;
    procedure Set_pixelRight(p: Integer); safecall;
    function Get_pixelRight: Integer; safecall;
    procedure Set_posBottom(p: Single); safecall;
    function Get_posBottom: Single; safecall;
    procedure Set_posRight(p: Single); safecall;
    function Get_posRight: Single; safecall;
    procedure Set_imeMode(const p: WideString); safecall;
    function Get_imeMode: WideString; safecall;
    procedure Set_rubyAlign(const p: WideString); safecall;
    function Get_rubyAlign: WideString; safecall;
    procedure Set_rubyPosition(const p: WideString); safecall;
    function Get_rubyPosition: WideString; safecall;
    procedure Set_rubyOverhang(const p: WideString); safecall;
    function Get_rubyOverhang: WideString; safecall;
    procedure Set_layoutGridChar(p: OleVariant); safecall;
    function Get_layoutGridChar: OleVariant; safecall;
    procedure Set_layoutGridLine(p: OleVariant); safecall;
    function Get_layoutGridLine: OleVariant; safecall;
    procedure Set_layoutGridMode(const p: WideString); safecall;
    function Get_layoutGridMode: WideString; safecall;
    procedure Set_layoutGridType(const p: WideString); safecall;
    function Get_layoutGridType: WideString; safecall;
    procedure Set_layoutGrid(const p: WideString); safecall;
    function Get_layoutGrid: WideString; safecall;
    procedure Set_textAutospace(const p: WideString); safecall;
    function Get_textAutospace: WideString; safecall;
    procedure Set_wordBreak(const p: WideString); safecall;
    function Get_wordBreak: WideString; safecall;
    procedure Set_lineBreak(const p: WideString); safecall;
    function Get_lineBreak: WideString; safecall;
    procedure Set_textJustify(const p: WideString); safecall;
    function Get_textJustify: WideString; safecall;
    procedure Set_textJustifyTrim(const p: WideString); safecall;
    function Get_textJustifyTrim: WideString; safecall;
    procedure Set_textKashida(p: OleVariant); safecall;
    function Get_textKashida: OleVariant; safecall;
    procedure Set_overflowX(const p: WideString); safecall;
    function Get_overflowX: WideString; safecall;
    procedure Set_overflowY(const p: WideString); safecall;
    function Get_overflowY: WideString; safecall;
    procedure Set_accelerator(const p: WideString); safecall;
    function Get_accelerator: WideString; safecall;
    property tableLayout: WideString read Get_tableLayout write Set_tableLayout;
    property borderCollapse: WideString read Get_borderCollapse write Set_borderCollapse;
    property direction: WideString read Get_direction write Set_direction;
    property behavior: WideString read Get_behavior write Set_behavior;
    property position: WideString read Get_position write Set_position;
    property unicodeBidi: WideString read Get_unicodeBidi write Set_unicodeBidi;
    property bottom: OleVariant read Get_bottom write Set_bottom;
    property right: OleVariant read Get_right write Set_right;
    property pixelBottom: Integer read Get_pixelBottom write Set_pixelBottom;
    property pixelRight: Integer read Get_pixelRight write Set_pixelRight;
    property posBottom: Single read Get_posBottom write Set_posBottom;
    property posRight: Single read Get_posRight write Set_posRight;
    property imeMode: WideString read Get_imeMode write Set_imeMode;
    property rubyAlign: WideString read Get_rubyAlign write Set_rubyAlign;
    property rubyPosition: WideString read Get_rubyPosition write Set_rubyPosition;
    property rubyOverhang: WideString read Get_rubyOverhang write Set_rubyOverhang;
    property layoutGridChar: OleVariant read Get_layoutGridChar write Set_layoutGridChar;
    property layoutGridLine: OleVariant read Get_layoutGridLine write Set_layoutGridLine;
    property layoutGridMode: WideString read Get_layoutGridMode write Set_layoutGridMode;
    property layoutGridType: WideString read Get_layoutGridType write Set_layoutGridType;
    property layoutGrid: WideString read Get_layoutGrid write Set_layoutGrid;
    property textAutospace: WideString read Get_textAutospace write Set_textAutospace;
    property wordBreak: WideString read Get_wordBreak write Set_wordBreak;
    property lineBreak: WideString read Get_lineBreak write Set_lineBreak;
    property textJustify: WideString read Get_textJustify write Set_textJustify;
    property textJustifyTrim: WideString read Get_textJustifyTrim write Set_textJustifyTrim;
    property textKashida: OleVariant read Get_textKashida write Set_textKashida;
    property overflowX: WideString read Get_overflowX write Set_overflowX;
    property overflowY: WideString read Get_overflowY write Set_overflowY;
    property accelerator: WideString read Get_accelerator write Set_accelerator;
  end;

// *********************************************************************//
// DispIntf:  IHTMLRuleStyle2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4AC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRuleStyle2Disp = dispinterface
    ['{3050F4AC-98B5-11CF-BB82-00AA00BDCE0B}']
    property tableLayout: WideString dispid -2147413014;
    property borderCollapse: WideString dispid -2147413028;
    property direction: WideString dispid -2147412993;
    property behavior: WideString dispid -2147412997;
    property position: WideString dispid -2147413022;
    property unicodeBidi: WideString dispid -2147412994;
    property bottom: OleVariant dispid -2147418034;
    property right: OleVariant dispid -2147418035;
    property pixelBottom: Integer dispid -2147414103;
    property pixelRight: Integer dispid -2147414102;
    property posBottom: Single dispid -2147414101;
    property posRight: Single dispid -2147414100;
    property imeMode: WideString dispid -2147412992;
    property rubyAlign: WideString dispid -2147412991;
    property rubyPosition: WideString dispid -2147412990;
    property rubyOverhang: WideString dispid -2147412989;
    property layoutGridChar: OleVariant dispid -2147412985;
    property layoutGridLine: OleVariant dispid -2147412984;
    property layoutGridMode: WideString dispid -2147412983;
    property layoutGridType: WideString dispid -2147412982;
    property layoutGrid: WideString dispid -2147412981;
    property textAutospace: WideString dispid -2147412980;
    property wordBreak: WideString dispid -2147412978;
    property lineBreak: WideString dispid -2147412979;
    property textJustify: WideString dispid -2147412977;
    property textJustifyTrim: WideString dispid -2147412976;
    property textKashida: OleVariant dispid -2147412975;
    property overflowX: WideString dispid -2147412973;
    property overflowY: WideString dispid -2147412972;
    property accelerator: WideString dispid -2147412965;
  end;

// *********************************************************************//
// Interface: IHTMLRuleStyle3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F657-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRuleStyle3 = interface(IDispatch)
    ['{3050F657-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_layoutFlow(const p: WideString); safecall;
    function Get_layoutFlow: WideString; safecall;
    procedure Set_zoom(p: OleVariant); safecall;
    function Get_zoom: OleVariant; safecall;
    procedure Set_wordWrap(const p: WideString); safecall;
    function Get_wordWrap: WideString; safecall;
    procedure Set_textUnderlinePosition(const p: WideString); safecall;
    function Get_textUnderlinePosition: WideString; safecall;
    procedure Set_scrollbarBaseColor(p: OleVariant); safecall;
    function Get_scrollbarBaseColor: OleVariant; safecall;
    procedure Set_scrollbarFaceColor(p: OleVariant); safecall;
    function Get_scrollbarFaceColor: OleVariant; safecall;
    procedure Set_scrollbar3dLightColor(p: OleVariant); safecall;
    function Get_scrollbar3dLightColor: OleVariant; safecall;
    procedure Set_scrollbarShadowColor(p: OleVariant); safecall;
    function Get_scrollbarShadowColor: OleVariant; safecall;
    procedure Set_scrollbarHighlightColor(p: OleVariant); safecall;
    function Get_scrollbarHighlightColor: OleVariant; safecall;
    procedure Set_scrollbarDarkShadowColor(p: OleVariant); safecall;
    function Get_scrollbarDarkShadowColor: OleVariant; safecall;
    procedure Set_scrollbarArrowColor(p: OleVariant); safecall;
    function Get_scrollbarArrowColor: OleVariant; safecall;
    procedure Set_scrollbarTrackColor(p: OleVariant); safecall;
    function Get_scrollbarTrackColor: OleVariant; safecall;
    procedure Set_writingMode(const p: WideString); safecall;
    function Get_writingMode: WideString; safecall;
    procedure Set_textAlignLast(const p: WideString); safecall;
    function Get_textAlignLast: WideString; safecall;
    procedure Set_textKashidaSpace(p: OleVariant); safecall;
    function Get_textKashidaSpace: OleVariant; safecall;
    property layoutFlow: WideString read Get_layoutFlow write Set_layoutFlow;
    property zoom: OleVariant read Get_zoom write Set_zoom;
    property wordWrap: WideString read Get_wordWrap write Set_wordWrap;
    property textUnderlinePosition: WideString read Get_textUnderlinePosition write Set_textUnderlinePosition;
    property scrollbarBaseColor: OleVariant read Get_scrollbarBaseColor write Set_scrollbarBaseColor;
    property scrollbarFaceColor: OleVariant read Get_scrollbarFaceColor write Set_scrollbarFaceColor;
    property scrollbar3dLightColor: OleVariant read Get_scrollbar3dLightColor write Set_scrollbar3dLightColor;
    property scrollbarShadowColor: OleVariant read Get_scrollbarShadowColor write Set_scrollbarShadowColor;
    property scrollbarHighlightColor: OleVariant read Get_scrollbarHighlightColor write Set_scrollbarHighlightColor;
    property scrollbarDarkShadowColor: OleVariant read Get_scrollbarDarkShadowColor write Set_scrollbarDarkShadowColor;
    property scrollbarArrowColor: OleVariant read Get_scrollbarArrowColor write Set_scrollbarArrowColor;
    property scrollbarTrackColor: OleVariant read Get_scrollbarTrackColor write Set_scrollbarTrackColor;
    property writingMode: WideString read Get_writingMode write Set_writingMode;
    property textAlignLast: WideString read Get_textAlignLast write Set_textAlignLast;
    property textKashidaSpace: OleVariant read Get_textKashidaSpace write Set_textKashidaSpace;
  end;

// *********************************************************************//
// DispIntf:  IHTMLRuleStyle3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F657-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRuleStyle3Disp = dispinterface
    ['{3050F657-98B5-11CF-BB82-00AA00BDCE0B}']
    property layoutFlow: WideString dispid -2147412957;
    property zoom: OleVariant dispid -2147412959;
    property wordWrap: WideString dispid -2147412954;
    property textUnderlinePosition: WideString dispid -2147412953;
    property scrollbarBaseColor: OleVariant dispid -2147412932;
    property scrollbarFaceColor: OleVariant dispid -2147412931;
    property scrollbar3dLightColor: OleVariant dispid -2147412930;
    property scrollbarShadowColor: OleVariant dispid -2147412929;
    property scrollbarHighlightColor: OleVariant dispid -2147412928;
    property scrollbarDarkShadowColor: OleVariant dispid -2147412927;
    property scrollbarArrowColor: OleVariant dispid -2147412926;
    property scrollbarTrackColor: OleVariant dispid -2147412916;
    property writingMode: WideString dispid -2147412920;
    property textAlignLast: WideString dispid -2147412909;
    property textKashidaSpace: OleVariant dispid -2147412908;
  end;

// *********************************************************************//
// Interface: IHTMLRuleStyle4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F817-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRuleStyle4 = interface(IDispatch)
    ['{3050F817-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_textOverflow(const p: WideString); safecall;
    function Get_textOverflow: WideString; safecall;
    procedure Set_minHeight(p: OleVariant); safecall;
    function Get_minHeight: OleVariant; safecall;
    property textOverflow: WideString read Get_textOverflow write Set_textOverflow;
    property minHeight: OleVariant read Get_minHeight write Set_minHeight;
  end;

// *********************************************************************//
// DispIntf:  IHTMLRuleStyle4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F817-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRuleStyle4Disp = dispinterface
    ['{3050F817-98B5-11CF-BB82-00AA00BDCE0B}']
    property textOverflow: WideString dispid -2147412903;
    property minHeight: OleVariant dispid -2147412901;
  end;

// *********************************************************************//
// Interface: IHTMLRuleStyle5
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F335-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRuleStyle5 = interface(IDispatch)
    ['{3050F335-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_msInterpolationMode(const p: WideString); safecall;
    function Get_msInterpolationMode: WideString; safecall;
    procedure Set_maxHeight(p: OleVariant); safecall;
    function Get_maxHeight: OleVariant; safecall;
    procedure Set_minWidth(p: OleVariant); safecall;
    function Get_minWidth: OleVariant; safecall;
    procedure Set_maxWidth(p: OleVariant); safecall;
    function Get_maxWidth: OleVariant; safecall;
    property msInterpolationMode: WideString read Get_msInterpolationMode write Set_msInterpolationMode;
    property maxHeight: OleVariant read Get_maxHeight write Set_maxHeight;
    property minWidth: OleVariant read Get_minWidth write Set_minWidth;
    property maxWidth: OleVariant read Get_maxWidth write Set_maxWidth;
  end;

// *********************************************************************//
// DispIntf:  IHTMLRuleStyle5Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F335-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRuleStyle5Disp = dispinterface
    ['{3050F335-98B5-11CF-BB82-00AA00BDCE0B}']
    property msInterpolationMode: WideString dispid -2147412899;
    property maxHeight: OleVariant dispid -2147412898;
    property minWidth: OleVariant dispid -2147412897;
    property maxWidth: OleVariant dispid -2147412896;
  end;

// *********************************************************************//
// Interface: IHTMLRuleStyle6
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510471-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRuleStyle6 = interface(IDispatch)
    ['{30510471-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_content(const p: WideString); safecall;
    function Get_content: WideString; safecall;
    procedure Set_captionSide(const p: WideString); safecall;
    function Get_captionSide: WideString; safecall;
    procedure Set_counterIncrement(const p: WideString); safecall;
    function Get_counterIncrement: WideString; safecall;
    procedure Set_counterReset(const p: WideString); safecall;
    function Get_counterReset: WideString; safecall;
    procedure Set_outline(const p: WideString); safecall;
    function Get_outline: WideString; safecall;
    procedure Set_outlineWidth(p: OleVariant); safecall;
    function Get_outlineWidth: OleVariant; safecall;
    procedure Set_outlineStyle(const p: WideString); safecall;
    function Get_outlineStyle: WideString; safecall;
    procedure Set_outlineColor(p: OleVariant); safecall;
    function Get_outlineColor: OleVariant; safecall;
    procedure Set_boxSizing(const p: WideString); safecall;
    function Get_boxSizing: WideString; safecall;
    procedure Set_borderSpacing(const p: WideString); safecall;
    function Get_borderSpacing: WideString; safecall;
    procedure Set_orphans(p: OleVariant); safecall;
    function Get_orphans: OleVariant; safecall;
    procedure Set_widows(p: OleVariant); safecall;
    function Get_widows: OleVariant; safecall;
    procedure Set_pageBreakInside(const p: WideString); safecall;
    function Get_pageBreakInside: WideString; safecall;
    procedure Set_emptyCells(const p: WideString); safecall;
    function Get_emptyCells: WideString; safecall;
    procedure Set_msBlockProgression(const p: WideString); safecall;
    function Get_msBlockProgression: WideString; safecall;
    procedure Set_quotes(const p: WideString); safecall;
    function Get_quotes: WideString; safecall;
    property content: WideString read Get_content write Set_content;
    property captionSide: WideString read Get_captionSide write Set_captionSide;
    property counterIncrement: WideString read Get_counterIncrement write Set_counterIncrement;
    property counterReset: WideString read Get_counterReset write Set_counterReset;
    property outline: WideString read Get_outline write Set_outline;
    property outlineWidth: OleVariant read Get_outlineWidth write Set_outlineWidth;
    property outlineStyle: WideString read Get_outlineStyle write Set_outlineStyle;
    property outlineColor: OleVariant read Get_outlineColor write Set_outlineColor;
    property boxSizing: WideString read Get_boxSizing write Set_boxSizing;
    property borderSpacing: WideString read Get_borderSpacing write Set_borderSpacing;
    property orphans: OleVariant read Get_orphans write Set_orphans;
    property widows: OleVariant read Get_widows write Set_widows;
    property pageBreakInside: WideString read Get_pageBreakInside write Set_pageBreakInside;
    property emptyCells: WideString read Get_emptyCells write Set_emptyCells;
    property msBlockProgression: WideString read Get_msBlockProgression write Set_msBlockProgression;
    property quotes: WideString read Get_quotes write Set_quotes;
  end;

// *********************************************************************//
// DispIntf:  IHTMLRuleStyle6Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510471-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRuleStyle6Disp = dispinterface
    ['{30510471-98B5-11CF-BB82-00AA00BDCE0B}']
    property content: WideString dispid -2147412894;
    property captionSide: WideString dispid -2147412893;
    property counterIncrement: WideString dispid -2147412892;
    property counterReset: WideString dispid -2147412891;
    property outline: WideString dispid -2147412890;
    property outlineWidth: OleVariant dispid -2147412889;
    property outlineStyle: WideString dispid -2147412888;
    property outlineColor: OleVariant dispid -2147412887;
    property boxSizing: WideString dispid -2147412886;
    property borderSpacing: WideString dispid -2147412885;
    property orphans: OleVariant dispid -2147412884;
    property widows: OleVariant dispid -2147412883;
    property pageBreakInside: WideString dispid -2147412882;
    property emptyCells: WideString dispid -2147412862;
    property msBlockProgression: WideString dispid -2147412861;
    property quotes: WideString dispid -2147412860;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLStyle
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F55A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLStyle = dispinterface
    ['{3050F55A-98B5-11CF-BB82-00AA00BDCE0B}']
    property fontFamily: WideString dispid -2147413094;
    property fontStyle: WideString dispid -2147413088;
    property fontVariant: WideString dispid -2147413087;
    property fontWeight: WideString dispid -2147413085;
    property fontSize: OleVariant dispid -2147413093;
    property font: WideString dispid -2147413071;
    property color: OleVariant dispid -2147413110;
    property background: WideString dispid -2147413080;
    property backgroundColor: OleVariant dispid -501;
    property backgroundImage: WideString dispid -2147413111;
    property backgroundRepeat: WideString dispid -2147413068;
    property backgroundAttachment: WideString dispid -2147413067;
    property backgroundPosition: WideString dispid -2147413066;
    property backgroundPositionX: OleVariant dispid -2147413079;
    property backgroundPositionY: OleVariant dispid -2147413078;
    property wordSpacing: OleVariant dispid -2147413065;
    property letterSpacing: OleVariant dispid -2147413104;
    property textDecoration: WideString dispid -2147413077;
    property textDecorationNone: WordBool dispid -2147413089;
    property textDecorationUnderline: WordBool dispid -2147413091;
    property textDecorationOverline: WordBool dispid -2147413043;
    property textDecorationLineThrough: WordBool dispid -2147413092;
    property textDecorationBlink: WordBool dispid -2147413090;
    property verticalAlign: OleVariant dispid -2147413064;
    property textTransform: WideString dispid -2147413108;
    property textAlign: WideString dispid -2147418040;
    property textIndent: OleVariant dispid -2147413105;
    property lineHeight: OleVariant dispid -2147413106;
    property marginTop: OleVariant dispid -2147413075;
    property marginRight: OleVariant dispid -2147413074;
    property marginBottom: OleVariant dispid -2147413073;
    property marginLeft: OleVariant dispid -2147413072;
    property margin: WideString dispid -2147413076;
    property paddingTop: OleVariant dispid -2147413100;
    property paddingRight: OleVariant dispid -2147413099;
    property paddingBottom: OleVariant dispid -2147413098;
    property paddingLeft: OleVariant dispid -2147413097;
    property padding: WideString dispid -2147413101;
    property border: WideString dispid -2147413063;
    property borderTop: WideString dispid -2147413062;
    property borderRight: WideString dispid -2147413061;
    property borderBottom: WideString dispid -2147413060;
    property borderLeft: WideString dispid -2147413059;
    property borderColor: WideString dispid -2147413058;
    property borderTopColor: OleVariant dispid -2147413057;
    property borderRightColor: OleVariant dispid -2147413056;
    property borderBottomColor: OleVariant dispid -2147413055;
    property borderLeftColor: OleVariant dispid -2147413054;
    property borderWidth: WideString dispid -2147413053;
    property borderTopWidth: OleVariant dispid -2147413052;
    property borderRightWidth: OleVariant dispid -2147413051;
    property borderBottomWidth: OleVariant dispid -2147413050;
    property borderLeftWidth: OleVariant dispid -2147413049;
    property borderStyle: WideString dispid -2147413048;
    property borderTopStyle: WideString dispid -2147413047;
    property borderRightStyle: WideString dispid -2147413046;
    property borderBottomStyle: WideString dispid -2147413045;
    property borderLeftStyle: WideString dispid -2147413044;
    property width: OleVariant dispid -2147418107;
    property height: OleVariant dispid -2147418106;
    property styleFloat: WideString dispid -2147413042;
    property clear: WideString dispid -2147413096;
    property display: WideString dispid -2147413041;
    property visibility: WideString dispid -2147413032;
    property listStyleType: WideString dispid -2147413040;
    property listStylePosition: WideString dispid -2147413039;
    property listStyleImage: WideString dispid -2147413038;
    property listStyle: WideString dispid -2147413037;
    property whiteSpace: WideString dispid -2147413036;
    property top: OleVariant dispid -2147418108;
    property left: OleVariant dispid -2147418109;
    property zIndex: OleVariant dispid -2147413021;
    property overflow: WideString dispid -2147413102;
    property pageBreakBefore: WideString dispid -2147413035;
    property pageBreakAfter: WideString dispid -2147413034;
    property cssText: WideString dispid -2147413013;
    property pixelTop: Integer dispid -2147414112;
    property pixelLeft: Integer dispid -2147414111;
    property pixelWidth: Integer dispid -2147414110;
    property pixelHeight: Integer dispid -2147414109;
    property posTop: Single dispid -2147414108;
    property posLeft: Single dispid -2147414107;
    property posWidth: Single dispid -2147414106;
    property posHeight: Single dispid -2147414105;
    property cursor: WideString dispid -2147413010;
    property clip: WideString dispid -2147413020;
    property filter: WideString dispid -2147413030;
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    function toString: WideString; dispid -2147414104;
    property tableLayout: WideString dispid -2147413014;
    property borderCollapse: WideString dispid -2147413028;
    property direction: WideString dispid -2147412993;
    property behavior: WideString dispid -2147412997;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property position: WideString dispid -2147413022;
    property unicodeBidi: WideString dispid -2147412994;
    property bottom: OleVariant dispid -2147418034;
    property right: OleVariant dispid -2147418035;
    property pixelBottom: Integer dispid -2147414103;
    property pixelRight: Integer dispid -2147414102;
    property posBottom: Single dispid -2147414101;
    property posRight: Single dispid -2147414100;
    property imeMode: WideString dispid -2147412992;
    property rubyAlign: WideString dispid -2147412991;
    property rubyPosition: WideString dispid -2147412990;
    property rubyOverhang: WideString dispid -2147412989;
    property layoutGridChar: OleVariant dispid -2147412985;
    property layoutGridLine: OleVariant dispid -2147412984;
    property layoutGridMode: WideString dispid -2147412983;
    property layoutGridType: WideString dispid -2147412982;
    property layoutGrid: WideString dispid -2147412981;
    property wordBreak: WideString dispid -2147412978;
    property lineBreak: WideString dispid -2147412979;
    property textJustify: WideString dispid -2147412977;
    property textJustifyTrim: WideString dispid -2147412976;
    property textKashida: OleVariant dispid -2147412975;
    property textAutospace: WideString dispid -2147412980;
    property overflowX: WideString dispid -2147412973;
    property overflowY: WideString dispid -2147412972;
    property accelerator: WideString dispid -2147412965;
    property layoutFlow: WideString dispid -2147412957;
    property zoom: OleVariant dispid -2147412959;
    property wordWrap: WideString dispid -2147412954;
    property textUnderlinePosition: WideString dispid -2147412953;
    property scrollbarBaseColor: OleVariant dispid -2147412932;
    property scrollbarFaceColor: OleVariant dispid -2147412931;
    property scrollbar3dLightColor: OleVariant dispid -2147412930;
    property scrollbarShadowColor: OleVariant dispid -2147412929;
    property scrollbarHighlightColor: OleVariant dispid -2147412928;
    property scrollbarDarkShadowColor: OleVariant dispid -2147412927;
    property scrollbarArrowColor: OleVariant dispid -2147412926;
    property scrollbarTrackColor: OleVariant dispid -2147412916;
    property writingMode: WideString dispid -2147412920;
    property textAlignLast: WideString dispid -2147412909;
    property textKashidaSpace: OleVariant dispid -2147412908;
    property textOverflow: WideString dispid -2147412903;
    property minHeight: OleVariant dispid -2147412901;
    property msInterpolationMode: WideString dispid -2147412899;
    property maxHeight: OleVariant dispid -2147412898;
    property minWidth: OleVariant dispid -2147412897;
    property maxWidth: OleVariant dispid -2147412896;
    property content: WideString dispid -2147412894;
    property captionSide: WideString dispid -2147412893;
    property counterIncrement: WideString dispid -2147412892;
    property counterReset: WideString dispid -2147412891;
    property outline: WideString dispid -2147412890;
    property outlineWidth: OleVariant dispid -2147412889;
    property outlineStyle: WideString dispid -2147412888;
    property outlineColor: OleVariant dispid -2147412887;
    property boxSizing: WideString dispid -2147412886;
    property borderSpacing: WideString dispid -2147412885;
    property orphans: OleVariant dispid -2147412884;
    property widows: OleVariant dispid -2147412883;
    property pageBreakInside: WideString dispid -2147412882;
    property emptyCells: WideString dispid -2147412862;
    property msBlockProgression: WideString dispid -2147412861;
    property quotes: WideString dispid -2147412860;
    property length: Integer readonly dispid -2147413611;
    property parentRule: OleVariant readonly dispid -2147413610;
    function getPropertyValue(const bstrPropertyName: WideString): WideString; dispid -2147413609;
    function getPropertyPriority(const bstrPropertyName: WideString): WideString; dispid -2147413608;
    function removeProperty(const bstrPropertyName: WideString): WideString; dispid -2147413607;
    procedure setProperty(const bstrPropertyName: WideString; const pvarPropertyValue: OleVariant; 
                          const pvarPropertyPriority: OleVariant); dispid -2147413606;
    function item(index: Integer): WideString; dispid 0;
    property msScrollChaining: WideString dispid -2147412757;
    property msContentZooming: WideString dispid -2147412756;
    property msContentZoomSnapType: WideString dispid -2147412755;
    property msScrollRails: WideString dispid -2147412754;
    property msContentZoomChaining: WideString dispid -2147412753;
    property msScrollSnapType: WideString dispid -2147412752;
    property msContentZoomLimit: WideString dispid -2147412751;
    property msContentZoomSnap: WideString dispid -2147412750;
    property msContentZoomSnapPoints: WideString dispid -2147412749;
    property msContentZoomLimitMin: OleVariant dispid -2147412747;
    property msContentZoomLimitMax: OleVariant dispid -2147412746;
    property msScrollSnapX: WideString dispid -2147412745;
    property msScrollSnapY: WideString dispid -2147412744;
    property msScrollSnapPointsX: WideString dispid -2147412743;
    property msScrollSnapPointsY: WideString dispid -2147412742;
    property msGridColumn: OleVariant dispid -2147412740;
    property msGridColumnAlign: WideString dispid -2147412739;
    property msGridColumns: WideString dispid -2147412738;
    property msGridColumnSpan: OleVariant dispid -2147412737;
    property msGridRow: OleVariant dispid -2147412735;
    property msGridRowAlign: WideString dispid -2147412734;
    property msGridRows: WideString dispid -2147412733;
    property msGridRowSpan: OleVariant dispid -2147412732;
    property msWrapThrough: WideString dispid -2147412711;
    property msWrapMargin: OleVariant dispid -2147412701;
    property msWrapFlow: WideString dispid -2147412699;
    property msAnimationName: WideString dispid -2147412731;
    property msAnimationDuration: WideString dispid -2147412730;
    property msAnimationTimingFunction: WideString dispid -2147412729;
    property msAnimationDelay: WideString dispid -2147412728;
    property msAnimationDirection: WideString dispid -2147412727;
    property msAnimationPlayState: WideString dispid -2147412726;
    property msAnimationIterationCount: WideString dispid -2147412725;
    property msAnimation: WideString dispid -2147412724;
    property msAnimationFillMode: WideString dispid -2147412723;
    property colorInterpolationFilters: WideString dispid -2147412720;
    property columnCount: OleVariant dispid -2147412776;
    property columnWidth: OleVariant dispid -2147412775;
    property columnGap: OleVariant dispid -2147412774;
    property columnFill: WideString dispid -2147412773;
    property columnSpan: WideString dispid -2147412772;
    property columns: WideString dispid -2147412777;
    property columnRule: WideString dispid -2147412771;
    property columnRuleColor: OleVariant dispid -2147412768;
    property columnRuleStyle: WideString dispid -2147412770;
    property columnRuleWidth: OleVariant dispid -2147412769;
    property breakBefore: WideString dispid -2147412767;
    property breakAfter: WideString dispid -2147412766;
    property breakInside: WideString dispid -2147412765;
    property floodColor: OleVariant dispid -2147412722;
    property floodOpacity: OleVariant dispid -2147412721;
    property lightingColor: OleVariant dispid -2147412719;
    property msScrollLimitXMin: OleVariant dispid -2147412718;
    property msScrollLimitYMin: OleVariant dispid -2147412717;
    property msScrollLimitXMax: OleVariant dispid -2147412716;
    property msScrollLimitYMax: OleVariant dispid -2147412715;
    property msScrollLimit: WideString dispid -2147412714;
    property textShadow: WideString dispid -2147412712;
    property msFlowFrom: WideString dispid -2147412710;
    property msFlowInto: WideString dispid -2147412709;
    property msHyphens: WideString dispid -2147412708;
    property msHyphenateLimitZone: OleVariant dispid -2147412707;
    property msHyphenateLimitChars: WideString dispid -2147412706;
    property msHyphenateLimitLines: OleVariant dispid -2147412705;
    property msHighContrastAdjust: WideString dispid -2147412703;
    property enableBackground: WideString dispid -2147412702;
    property msFontFeatureSettings: WideString dispid -2147412698;
    property msUserSelect: WideString dispid -2147412697;
    property msOverflowStyle: WideString dispid -2147412713;
    property msTransformStyle: WideString dispid -2147412759;
    property msBackfaceVisibility: WideString dispid -2147412758;
    property msPerspective: OleVariant dispid -2147412763;
    property msPerspectiveOrigin: WideString dispid -2147412762;
    property msTransitionProperty: WideString dispid -2147412782;
    property msTransitionDuration: WideString dispid -2147412781;
    property msTransitionTimingFunction: WideString dispid -2147412780;
    property msTransitionDelay: WideString dispid -2147412779;
    property msTransition: WideString dispid -2147412778;
    property msTouchAction: WideString dispid -2147412696;
    property msScrollTranslation: WideString dispid -2147412694;
    property msFlex: WideString dispid -2147412693;
    property msFlexPositive: OleVariant dispid -2147412692;
    property msFlexNegative: OleVariant dispid -2147412691;
    property msFlexPreferredSize: OleVariant dispid -2147412690;
    property msFlexFlow: WideString dispid -2147412689;
    property msFlexDirection: WideString dispid -2147412688;
    property msFlexWrap: WideString dispid -2147412687;
    property msFlexAlign: WideString dispid -2147412686;
    property msFlexItemAlign: WideString dispid -2147412685;
    property msFlexPack: WideString dispid -2147412684;
    property msFlexLinePack: WideString dispid -2147412683;
    property msFlexOrder: OleVariant dispid -2147412682;
    property msTouchSelect: WideString dispid -2147412654;
    property transform: WideString dispid -2147412681;
    property transformOrigin: WideString dispid -2147412680;
    property transformStyle: WideString dispid -2147412672;
    property backfaceVisibility: WideString dispid -2147412671;
    property perspective: OleVariant dispid -2147412674;
    property perspectiveOrigin: WideString dispid -2147412673;
    property transitionProperty: WideString dispid -2147412679;
    property transitionDuration: WideString dispid -2147412678;
    property transitionTimingFunction: WideString dispid -2147412677;
    property transitionDelay: WideString dispid -2147412676;
    property transition: WideString dispid -2147412675;
    property fontFeatureSettings: WideString dispid -2147412661;
    property animationName: WideString dispid -2147412670;
    property animationDuration: WideString dispid -2147412669;
    property animationTimingFunction: WideString dispid -2147412668;
    property animationDelay: WideString dispid -2147412667;
    property animationDirection: WideString dispid -2147412666;
    property animationPlayState: WideString dispid -2147412665;
    property animationIterationCount: WideString dispid -2147412664;
    property animation: WideString dispid -2147412663;
    property animationFillMode: WideString dispid -2147412662;
    property flex: WideString dispid -2147412646;
    property flexDirection: WideString dispid -2147412650;
    property flexWrap: WideString dispid -2147412649;
    property flexFlow: WideString dispid -2147412648;
    property flexGrow: OleVariant dispid -2147412645;
    property flexShrink: OleVariant dispid -2147412644;
    property flexBasis: OleVariant dispid -2147412643;
    property justifyContent: WideString dispid -2147412642;
    property alignItems: WideString dispid -2147412641;
    property alignSelf: WideString dispid -2147412640;
    property alignContent: WideString dispid -2147412639;
    property borderImage: WideString dispid -2147412638;
    property borderImageSource: WideString dispid -2147412637;
    property borderImageSlice: WideString dispid -2147412636;
    property borderImageWidth: WideString dispid -2147412635;
    property borderImageOutset: WideString dispid -2147412634;
    property borderImageRepeat: WideString dispid -2147412633;
    property msImeAlign: WideString dispid -2147412631;
    property msTextCombineHorizontal: WideString dispid -2147412630;
    property touchAction: WideString dispid -2147412629;
    function msGetPropertyEnabled(const name: WideString): WordBool; dispid -2147413605;
    procedure msPutPropertyEnabled(const name: WideString; b: WordBool); dispid -2147413604;
    property constructor_: IDispatch readonly dispid -2147417603;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLRuleStyle
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F55C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLRuleStyle = dispinterface
    ['{3050F55C-98B5-11CF-BB82-00AA00BDCE0B}']
    property fontFamily: WideString dispid -2147413094;
    property fontStyle: WideString dispid -2147413088;
    property fontVariant: WideString dispid -2147413087;
    property fontWeight: WideString dispid -2147413085;
    property fontSize: OleVariant dispid -2147413093;
    property font: WideString dispid -2147413071;
    property color: OleVariant dispid -2147413110;
    property background: WideString dispid -2147413080;
    property backgroundColor: OleVariant dispid -501;
    property backgroundImage: WideString dispid -2147413111;
    property backgroundRepeat: WideString dispid -2147413068;
    property backgroundAttachment: WideString dispid -2147413067;
    property backgroundPosition: WideString dispid -2147413066;
    property backgroundPositionX: OleVariant dispid -2147413079;
    property backgroundPositionY: OleVariant dispid -2147413078;
    property wordSpacing: OleVariant dispid -2147413065;
    property letterSpacing: OleVariant dispid -2147413104;
    property textDecoration: WideString dispid -2147413077;
    property textDecorationNone: WordBool dispid -2147413089;
    property textDecorationUnderline: WordBool dispid -2147413091;
    property textDecorationOverline: WordBool dispid -2147413043;
    property textDecorationLineThrough: WordBool dispid -2147413092;
    property textDecorationBlink: WordBool dispid -2147413090;
    property verticalAlign: OleVariant dispid -2147413064;
    property textTransform: WideString dispid -2147413108;
    property textAlign: WideString dispid -2147418040;
    property textIndent: OleVariant dispid -2147413105;
    property lineHeight: OleVariant dispid -2147413106;
    property marginTop: OleVariant dispid -2147413075;
    property marginRight: OleVariant dispid -2147413074;
    property marginBottom: OleVariant dispid -2147413073;
    property marginLeft: OleVariant dispid -2147413072;
    property margin: WideString dispid -2147413076;
    property paddingTop: OleVariant dispid -2147413100;
    property paddingRight: OleVariant dispid -2147413099;
    property paddingBottom: OleVariant dispid -2147413098;
    property paddingLeft: OleVariant dispid -2147413097;
    property padding: WideString dispid -2147413101;
    property border: WideString dispid -2147413063;
    property borderTop: WideString dispid -2147413062;
    property borderRight: WideString dispid -2147413061;
    property borderBottom: WideString dispid -2147413060;
    property borderLeft: WideString dispid -2147413059;
    property borderColor: WideString dispid -2147413058;
    property borderTopColor: OleVariant dispid -2147413057;
    property borderRightColor: OleVariant dispid -2147413056;
    property borderBottomColor: OleVariant dispid -2147413055;
    property borderLeftColor: OleVariant dispid -2147413054;
    property borderWidth: WideString dispid -2147413053;
    property borderTopWidth: OleVariant dispid -2147413052;
    property borderRightWidth: OleVariant dispid -2147413051;
    property borderBottomWidth: OleVariant dispid -2147413050;
    property borderLeftWidth: OleVariant dispid -2147413049;
    property borderStyle: WideString dispid -2147413048;
    property borderTopStyle: WideString dispid -2147413047;
    property borderRightStyle: WideString dispid -2147413046;
    property borderBottomStyle: WideString dispid -2147413045;
    property borderLeftStyle: WideString dispid -2147413044;
    property width: OleVariant dispid -2147418107;
    property height: OleVariant dispid -2147418106;
    property styleFloat: WideString dispid -2147413042;
    property clear: WideString dispid -2147413096;
    property display: WideString dispid -2147413041;
    property visibility: WideString dispid -2147413032;
    property listStyleType: WideString dispid -2147413040;
    property listStylePosition: WideString dispid -2147413039;
    property listStyleImage: WideString dispid -2147413038;
    property listStyle: WideString dispid -2147413037;
    property whiteSpace: WideString dispid -2147413036;
    property top: OleVariant dispid -2147418108;
    property left: OleVariant dispid -2147418109;
    property zIndex: OleVariant dispid -2147413021;
    property overflow: WideString dispid -2147413102;
    property pageBreakBefore: WideString dispid -2147413035;
    property pageBreakAfter: WideString dispid -2147413034;
    property cssText: WideString dispid -2147413013;
    property cursor: WideString dispid -2147413010;
    property clip: WideString dispid -2147413020;
    property filter: WideString dispid -2147413030;
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property tableLayout: WideString dispid -2147413014;
    property borderCollapse: WideString dispid -2147413028;
    property direction: WideString dispid -2147412993;
    property behavior: WideString dispid -2147412997;
    property position: WideString dispid -2147413022;
    property unicodeBidi: WideString dispid -2147412994;
    property bottom: OleVariant dispid -2147418034;
    property right: OleVariant dispid -2147418035;
    property pixelBottom: Integer dispid -2147414103;
    property pixelRight: Integer dispid -2147414102;
    property posBottom: Single dispid -2147414101;
    property posRight: Single dispid -2147414100;
    property imeMode: WideString dispid -2147412992;
    property rubyAlign: WideString dispid -2147412991;
    property rubyPosition: WideString dispid -2147412990;
    property rubyOverhang: WideString dispid -2147412989;
    property layoutGridChar: OleVariant dispid -2147412985;
    property layoutGridLine: OleVariant dispid -2147412984;
    property layoutGridMode: WideString dispid -2147412983;
    property layoutGridType: WideString dispid -2147412982;
    property layoutGrid: WideString dispid -2147412981;
    property textAutospace: WideString dispid -2147412980;
    property wordBreak: WideString dispid -2147412978;
    property lineBreak: WideString dispid -2147412979;
    property textJustify: WideString dispid -2147412977;
    property textJustifyTrim: WideString dispid -2147412976;
    property textKashida: OleVariant dispid -2147412975;
    property overflowX: WideString dispid -2147412973;
    property overflowY: WideString dispid -2147412972;
    property accelerator: WideString dispid -2147412965;
    property layoutFlow: WideString dispid -2147412957;
    property zoom: OleVariant dispid -2147412959;
    property wordWrap: WideString dispid -2147412954;
    property textUnderlinePosition: WideString dispid -2147412953;
    property scrollbarBaseColor: OleVariant dispid -2147412932;
    property scrollbarFaceColor: OleVariant dispid -2147412931;
    property scrollbar3dLightColor: OleVariant dispid -2147412930;
    property scrollbarShadowColor: OleVariant dispid -2147412929;
    property scrollbarHighlightColor: OleVariant dispid -2147412928;
    property scrollbarDarkShadowColor: OleVariant dispid -2147412927;
    property scrollbarArrowColor: OleVariant dispid -2147412926;
    property scrollbarTrackColor: OleVariant dispid -2147412916;
    property writingMode: WideString dispid -2147412920;
    property textAlignLast: WideString dispid -2147412909;
    property textKashidaSpace: OleVariant dispid -2147412908;
    property textOverflow: WideString dispid -2147412903;
    property minHeight: OleVariant dispid -2147412901;
    property msInterpolationMode: WideString dispid -2147412899;
    property maxHeight: OleVariant dispid -2147412898;
    property minWidth: OleVariant dispid -2147412897;
    property maxWidth: OleVariant dispid -2147412896;
    property content: WideString dispid -2147412894;
    property captionSide: WideString dispid -2147412893;
    property counterIncrement: WideString dispid -2147412892;
    property counterReset: WideString dispid -2147412891;
    property outline: WideString dispid -2147412890;
    property outlineWidth: OleVariant dispid -2147412889;
    property outlineStyle: WideString dispid -2147412888;
    property outlineColor: OleVariant dispid -2147412887;
    property boxSizing: WideString dispid -2147412886;
    property borderSpacing: WideString dispid -2147412885;
    property orphans: OleVariant dispid -2147412884;
    property widows: OleVariant dispid -2147412883;
    property pageBreakInside: WideString dispid -2147412882;
    property emptyCells: WideString dispid -2147412862;
    property msBlockProgression: WideString dispid -2147412861;
    property quotes: WideString dispid -2147412860;
    property length: Integer readonly dispid -2147413611;
    property parentRule: OleVariant readonly dispid -2147413610;
    function getPropertyValue(const bstrPropertyName: WideString): WideString; dispid -2147413609;
    function getPropertyPriority(const bstrPropertyName: WideString): WideString; dispid -2147413608;
    function removeProperty(const bstrPropertyName: WideString): WideString; dispid -2147413607;
    procedure setProperty(const bstrPropertyName: WideString; const pvarPropertyValue: OleVariant; 
                          const pvarPropertyPriority: OleVariant); dispid -2147413606;
    function item(index: Integer): WideString; dispid 0;
    property msScrollChaining: WideString dispid -2147412757;
    property msContentZooming: WideString dispid -2147412756;
    property msContentZoomSnapType: WideString dispid -2147412755;
    property msScrollRails: WideString dispid -2147412754;
    property msContentZoomChaining: WideString dispid -2147412753;
    property msScrollSnapType: WideString dispid -2147412752;
    property msContentZoomLimit: WideString dispid -2147412751;
    property msContentZoomSnap: WideString dispid -2147412750;
    property msContentZoomSnapPoints: WideString dispid -2147412749;
    property msContentZoomLimitMin: OleVariant dispid -2147412747;
    property msContentZoomLimitMax: OleVariant dispid -2147412746;
    property msScrollSnapX: WideString dispid -2147412745;
    property msScrollSnapY: WideString dispid -2147412744;
    property msScrollSnapPointsX: WideString dispid -2147412743;
    property msScrollSnapPointsY: WideString dispid -2147412742;
    property msGridColumn: OleVariant dispid -2147412740;
    property msGridColumnAlign: WideString dispid -2147412739;
    property msGridColumns: WideString dispid -2147412738;
    property msGridColumnSpan: OleVariant dispid -2147412737;
    property msGridRow: OleVariant dispid -2147412735;
    property msGridRowAlign: WideString dispid -2147412734;
    property msGridRows: WideString dispid -2147412733;
    property msGridRowSpan: OleVariant dispid -2147412732;
    property msWrapThrough: WideString dispid -2147412711;
    property msWrapMargin: OleVariant dispid -2147412701;
    property msWrapFlow: WideString dispid -2147412699;
    property msAnimationName: WideString dispid -2147412731;
    property msAnimationDuration: WideString dispid -2147412730;
    property msAnimationTimingFunction: WideString dispid -2147412729;
    property msAnimationDelay: WideString dispid -2147412728;
    property msAnimationDirection: WideString dispid -2147412727;
    property msAnimationPlayState: WideString dispid -2147412726;
    property msAnimationIterationCount: WideString dispid -2147412725;
    property msAnimation: WideString dispid -2147412724;
    property msAnimationFillMode: WideString dispid -2147412723;
    property colorInterpolationFilters: WideString dispid -2147412720;
    property columnCount: OleVariant dispid -2147412776;
    property columnWidth: OleVariant dispid -2147412775;
    property columnGap: OleVariant dispid -2147412774;
    property columnFill: WideString dispid -2147412773;
    property columnSpan: WideString dispid -2147412772;
    property columns: WideString dispid -2147412777;
    property columnRule: WideString dispid -2147412771;
    property columnRuleColor: OleVariant dispid -2147412768;
    property columnRuleStyle: WideString dispid -2147412770;
    property columnRuleWidth: OleVariant dispid -2147412769;
    property breakBefore: WideString dispid -2147412767;
    property breakAfter: WideString dispid -2147412766;
    property breakInside: WideString dispid -2147412765;
    property floodColor: OleVariant dispid -2147412722;
    property floodOpacity: OleVariant dispid -2147412721;
    property lightingColor: OleVariant dispid -2147412719;
    property msScrollLimitXMin: OleVariant dispid -2147412718;
    property msScrollLimitYMin: OleVariant dispid -2147412717;
    property msScrollLimitXMax: OleVariant dispid -2147412716;
    property msScrollLimitYMax: OleVariant dispid -2147412715;
    property msScrollLimit: WideString dispid -2147412714;
    property textShadow: WideString dispid -2147412712;
    property msFlowFrom: WideString dispid -2147412710;
    property msFlowInto: WideString dispid -2147412709;
    property msHyphens: WideString dispid -2147412708;
    property msHyphenateLimitZone: OleVariant dispid -2147412707;
    property msHyphenateLimitChars: WideString dispid -2147412706;
    property msHyphenateLimitLines: OleVariant dispid -2147412705;
    property msHighContrastAdjust: WideString dispid -2147412703;
    property enableBackground: WideString dispid -2147412702;
    property msFontFeatureSettings: WideString dispid -2147412698;
    property msUserSelect: WideString dispid -2147412697;
    property msOverflowStyle: WideString dispid -2147412713;
    property msTransformStyle: WideString dispid -2147412759;
    property msBackfaceVisibility: WideString dispid -2147412758;
    property msPerspective: OleVariant dispid -2147412763;
    property msPerspectiveOrigin: WideString dispid -2147412762;
    property msTransitionProperty: WideString dispid -2147412782;
    property msTransitionDuration: WideString dispid -2147412781;
    property msTransitionTimingFunction: WideString dispid -2147412780;
    property msTransitionDelay: WideString dispid -2147412779;
    property msTransition: WideString dispid -2147412778;
    property msTouchAction: WideString dispid -2147412696;
    property msScrollTranslation: WideString dispid -2147412694;
    property msFlex: WideString dispid -2147412693;
    property msFlexPositive: OleVariant dispid -2147412692;
    property msFlexNegative: OleVariant dispid -2147412691;
    property msFlexPreferredSize: OleVariant dispid -2147412690;
    property msFlexFlow: WideString dispid -2147412689;
    property msFlexDirection: WideString dispid -2147412688;
    property msFlexWrap: WideString dispid -2147412687;
    property msFlexAlign: WideString dispid -2147412686;
    property msFlexItemAlign: WideString dispid -2147412685;
    property msFlexPack: WideString dispid -2147412684;
    property msFlexLinePack: WideString dispid -2147412683;
    property msFlexOrder: OleVariant dispid -2147412682;
    property msTouchSelect: WideString dispid -2147412654;
    property transform: WideString dispid -2147412681;
    property transformOrigin: WideString dispid -2147412680;
    property transformStyle: WideString dispid -2147412672;
    property backfaceVisibility: WideString dispid -2147412671;
    property perspective: OleVariant dispid -2147412674;
    property perspectiveOrigin: WideString dispid -2147412673;
    property transitionProperty: WideString dispid -2147412679;
    property transitionDuration: WideString dispid -2147412678;
    property transitionTimingFunction: WideString dispid -2147412677;
    property transitionDelay: WideString dispid -2147412676;
    property transition: WideString dispid -2147412675;
    property fontFeatureSettings: WideString dispid -2147412661;
    property animationName: WideString dispid -2147412670;
    property animationDuration: WideString dispid -2147412669;
    property animationTimingFunction: WideString dispid -2147412668;
    property animationDelay: WideString dispid -2147412667;
    property animationDirection: WideString dispid -2147412666;
    property animationPlayState: WideString dispid -2147412665;
    property animationIterationCount: WideString dispid -2147412664;
    property animation: WideString dispid -2147412663;
    property animationFillMode: WideString dispid -2147412662;
    property flex: WideString dispid -2147412646;
    property flexDirection: WideString dispid -2147412650;
    property flexWrap: WideString dispid -2147412649;
    property flexFlow: WideString dispid -2147412648;
    property flexGrow: OleVariant dispid -2147412645;
    property flexShrink: OleVariant dispid -2147412644;
    property flexBasis: OleVariant dispid -2147412643;
    property justifyContent: WideString dispid -2147412642;
    property alignItems: WideString dispid -2147412641;
    property alignSelf: WideString dispid -2147412640;
    property alignContent: WideString dispid -2147412639;
    property borderImage: WideString dispid -2147412638;
    property borderImageSource: WideString dispid -2147412637;
    property borderImageSlice: WideString dispid -2147412636;
    property borderImageWidth: WideString dispid -2147412635;
    property borderImageOutset: WideString dispid -2147412634;
    property borderImageRepeat: WideString dispid -2147412633;
    property msImeAlign: WideString dispid -2147412631;
    property msTextCombineHorizontal: WideString dispid -2147412630;
    property touchAction: WideString dispid -2147412629;
    function msGetPropertyEnabled(const name: WideString): WordBool; dispid -2147413605;
    procedure msPutPropertyEnabled(const name: WideString; b: WordBool); dispid -2147413604;
    property constructor_: IDispatch readonly dispid -2147417603;
  end;

// *********************************************************************//
// Interface: IHTMLStyleSheetRulesCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2E5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetRulesCollection = interface(IDispatch)
    ['{3050F2E5-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    function item(index: Integer): IHTMLStyleSheetRule; safecall;
    property length: Integer read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleSheetRulesCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2E5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetRulesCollectionDisp = dispinterface
    ['{3050F2E5-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1001;
    function item(index: Integer): IHTMLStyleSheetRule; dispid 0;
  end;

// *********************************************************************//
// Interface: IHTMLStyleSheet
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2E3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheet = interface(IDispatch)
    ['{3050F2E3-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_title(const p: WideString); safecall;
    function Get_title: WideString; safecall;
    function Get_parentStyleSheet: IHTMLStyleSheet; safecall;
    function Get_owningElement: IHTMLElement; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function Get_disabled: WordBool; safecall;
    function Get_readOnly: WordBool; safecall;
    function Get_imports: IHTMLStyleSheetsCollection; safecall;
    procedure Set_href(const p: WideString); safecall;
    function Get_href: WideString; safecall;
    function Get_type_: WideString; safecall;
    function Get_id: WideString; safecall;
    function addImport(const bstrURL: WideString; lIndex: Integer): Integer; safecall;
    function addRule(const bstrSelector: WideString; const bstrStyle: WideString; lIndex: Integer): Integer; safecall;
    procedure removeImport(lIndex: Integer); safecall;
    procedure removeRule(lIndex: Integer); safecall;
    procedure Set_media(const p: WideString); safecall;
    function Get_media: WideString; safecall;
    procedure Set_cssText(const p: WideString); safecall;
    function Get_cssText: WideString; safecall;
    function Get_rules: IHTMLStyleSheetRulesCollection; safecall;
    property title: WideString read Get_title write Set_title;
    property parentStyleSheet: IHTMLStyleSheet read Get_parentStyleSheet;
    property owningElement: IHTMLElement read Get_owningElement;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property readOnly: WordBool read Get_readOnly;
    property imports: IHTMLStyleSheetsCollection read Get_imports;
    property href: WideString read Get_href write Set_href;
    property type_: WideString read Get_type_;
    property id: WideString read Get_id;
    property media: WideString read Get_media write Set_media;
    property cssText: WideString read Get_cssText write Set_cssText;
    property rules: IHTMLStyleSheetRulesCollection read Get_rules;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleSheetDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2E3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetDisp = dispinterface
    ['{3050F2E3-98B5-11CF-BB82-00AA00BDCE0B}']
    property title: WideString dispid 1001;
    property parentStyleSheet: IHTMLStyleSheet readonly dispid 1002;
    property owningElement: IHTMLElement readonly dispid 1003;
    property disabled: WordBool dispid -2147418036;
    property readOnly: WordBool readonly dispid 1004;
    property imports: IHTMLStyleSheetsCollection readonly dispid 1005;
    property href: WideString dispid 1006;
    property type_: WideString readonly dispid 1007;
    property id: WideString readonly dispid 1008;
    function addImport(const bstrURL: WideString; lIndex: Integer): Integer; dispid 1009;
    function addRule(const bstrSelector: WideString; const bstrStyle: WideString; lIndex: Integer): Integer; dispid 1010;
    procedure removeImport(lIndex: Integer); dispid 1011;
    procedure removeRule(lIndex: Integer); dispid 1012;
    property media: WideString dispid 1013;
    property cssText: WideString dispid 1014;
    property rules: IHTMLStyleSheetRulesCollection readonly dispid 1015;
  end;

// *********************************************************************//
// Interface: IHTMLStyleSheetsCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F37E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetsCollection = interface(IDispatch)
    ['{3050F37E-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    function Get__newEnum: IUnknown; safecall;
    function item(const pvarIndex: OleVariant): OleVariant; safecall;
    property length: Integer read Get_length;
    property _newEnum: IUnknown read Get__newEnum;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleSheetsCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F37E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetsCollectionDisp = dispinterface
    ['{3050F37E-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1001;
    property _newEnum: IUnknown readonly dispid -4;
    function item(const pvarIndex: OleVariant): OleVariant; dispid 0;
  end;

// *********************************************************************//
// Interface: IHTMLCSSRule
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106E9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCSSRule = interface(IDispatch)
    ['{305106E9-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_type_: Word; safecall;
    procedure Set_cssText(const p: WideString); safecall;
    function Get_cssText: WideString; safecall;
    function Get_parentRule: IHTMLCSSRule; safecall;
    function Get_parentStyleSheet: IHTMLStyleSheet; safecall;
    property type_: Word read Get_type_;
    property cssText: WideString read Get_cssText write Set_cssText;
    property parentRule: IHTMLCSSRule read Get_parentRule;
    property parentStyleSheet: IHTMLStyleSheet read Get_parentStyleSheet;
  end;

// *********************************************************************//
// DispIntf:  IHTMLCSSRuleDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106E9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCSSRuleDisp = dispinterface
    ['{305106E9-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: Word readonly dispid 1101;
    property cssText: WideString dispid 1102;
    property parentRule: IHTMLCSSRule readonly dispid 1103;
    property parentStyleSheet: IHTMLStyleSheet readonly dispid 1104;
  end;

// *********************************************************************//
// Interface: IHTMLCSSImportRule
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106EA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCSSImportRule = interface(IDispatch)
    ['{305106EA-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_href: WideString; safecall;
    procedure Set_media(p: OleVariant); safecall;
    function Get_media: OleVariant; safecall;
    function Get_styleSheet: IHTMLStyleSheet; safecall;
    property href: WideString read Get_href;
    property media: OleVariant read Get_media write Set_media;
    property styleSheet: IHTMLStyleSheet read Get_styleSheet;
  end;

// *********************************************************************//
// DispIntf:  IHTMLCSSImportRuleDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106EA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCSSImportRuleDisp = dispinterface
    ['{305106EA-98B5-11CF-BB82-00AA00BDCE0B}']
    property href: WideString readonly dispid 1001;
    property media: OleVariant dispid 1002;
    property styleSheet: IHTMLStyleSheet readonly dispid 1003;
  end;

// *********************************************************************//
// Interface: IHTMLCSSMediaRule
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106EB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCSSMediaRule = interface(IDispatch)
    ['{305106EB-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_media(p: OleVariant); safecall;
    function Get_media: OleVariant; safecall;
    function Get_cssRules: IHTMLStyleSheetRulesCollection; safecall;
    function insertRule(const bstrRule: WideString; lIndex: Integer): Integer; safecall;
    procedure deleteRule(lIndex: Integer); safecall;
    property media: OleVariant read Get_media write Set_media;
    property cssRules: IHTMLStyleSheetRulesCollection read Get_cssRules;
  end;

// *********************************************************************//
// DispIntf:  IHTMLCSSMediaRuleDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106EB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCSSMediaRuleDisp = dispinterface
    ['{305106EB-98B5-11CF-BB82-00AA00BDCE0B}']
    property media: OleVariant dispid 1001;
    property cssRules: IHTMLStyleSheetRulesCollection readonly dispid 1002;
    function insertRule(const bstrRule: WideString; lIndex: Integer): Integer; dispid 1003;
    procedure deleteRule(lIndex: Integer); dispid 1004;
  end;

// *********************************************************************//
// Interface: IHTMLCSSMediaList
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510731-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCSSMediaList = interface(IDispatch)
    ['{30510731-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_mediaText(const p: WideString); safecall;
    function Get_mediaText: WideString; safecall;
    function Get_length: Integer; safecall;
    function item(index: Integer): WideString; safecall;
    procedure appendMedium(const bstrMedium: WideString); safecall;
    procedure deleteMedium(const bstrMedium: WideString); safecall;
    property mediaText: WideString read Get_mediaText write Set_mediaText;
    property length: Integer read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IHTMLCSSMediaListDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510731-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCSSMediaListDisp = dispinterface
    ['{30510731-98B5-11CF-BB82-00AA00BDCE0B}']
    property mediaText: WideString dispid 1001;
    property length: Integer readonly dispid 1002;
    function item(index: Integer): WideString; dispid 1003;
    procedure appendMedium(const bstrMedium: WideString); dispid 1004;
    procedure deleteMedium(const bstrMedium: WideString); dispid 1005;
  end;

// *********************************************************************//
// Interface: IHTMLCSSNamespaceRule
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106EE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCSSNamespaceRule = interface(IDispatch)
    ['{305106EE-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_namespaceURI: WideString; safecall;
    function Get_prefix: WideString; safecall;
    property namespaceURI: WideString read Get_namespaceURI;
    property prefix: WideString read Get_prefix;
  end;

// *********************************************************************//
// DispIntf:  IHTMLCSSNamespaceRuleDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106EE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCSSNamespaceRuleDisp = dispinterface
    ['{305106EE-98B5-11CF-BB82-00AA00BDCE0B}']
    property namespaceURI: WideString readonly dispid 1001;
    property prefix: WideString readonly dispid 1002;
  end;

// *********************************************************************//
// Interface: IHTMLMSCSSKeyframeRule
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051080C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMSCSSKeyframeRule = interface(IDispatch)
    ['{3051080C-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_keyText(const p: WideString); safecall;
    function Get_keyText: WideString; safecall;
    function Get_style: IHTMLRuleStyle; safecall;
    property keyText: WideString read Get_keyText write Set_keyText;
    property style: IHTMLRuleStyle read Get_style;
  end;

// *********************************************************************//
// DispIntf:  IHTMLMSCSSKeyframeRuleDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051080C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMSCSSKeyframeRuleDisp = dispinterface
    ['{3051080C-98B5-11CF-BB82-00AA00BDCE0B}']
    property keyText: WideString dispid 1001;
    property style: IHTMLRuleStyle readonly dispid 1002;
  end;

// *********************************************************************//
// Interface: IHTMLMSCSSKeyframesRule
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051080D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMSCSSKeyframesRule = interface(IDispatch)
    ['{3051080D-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    function Get_cssRules: IHTMLStyleSheetRulesCollection; safecall;
    procedure appendRule(const bstrRule: WideString); safecall;
    procedure deleteRule(const bstrKey: WideString); safecall;
    function findRule(const bstrKey: WideString): IHTMLMSCSSKeyframeRule; safecall;
    property name: WideString read Get_name write Set_name;
    property cssRules: IHTMLStyleSheetRulesCollection read Get_cssRules;
  end;

// *********************************************************************//
// DispIntf:  IHTMLMSCSSKeyframesRuleDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051080D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMSCSSKeyframesRuleDisp = dispinterface
    ['{3051080D-98B5-11CF-BB82-00AA00BDCE0B}']
    property name: WideString dispid 1001;
    property cssRules: IHTMLStyleSheetRulesCollection readonly dispid 1002;
    procedure appendRule(const bstrRule: WideString); dispid 1003;
    procedure deleteRule(const bstrKey: WideString); dispid 1004;
    function findRule(const bstrKey: WideString): IHTMLMSCSSKeyframeRule; dispid 1005;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLCSSRule
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059007D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLCSSRule = dispinterface
    ['{3059007D-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: Word readonly dispid 1101;
    property cssText: WideString dispid 1102;
    property parentRule: IHTMLCSSRule readonly dispid 1103;
    property parentStyleSheet: IHTMLStyleSheet readonly dispid 1104;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLCSSImportRule
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059007E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLCSSImportRule = dispinterface
    ['{3059007E-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: Word readonly dispid 1101;
    property cssText: WideString dispid 1102;
    property parentRule: IHTMLCSSRule readonly dispid 1103;
    property parentStyleSheet: IHTMLStyleSheet readonly dispid 1104;
    property href: WideString readonly dispid 1001;
    property media: OleVariant dispid 1002;
    property styleSheet: IHTMLStyleSheet readonly dispid 1003;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLCSSMediaRule
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059007F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLCSSMediaRule = dispinterface
    ['{3059007F-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: Word readonly dispid 1101;
    property cssText: WideString dispid 1102;
    property parentRule: IHTMLCSSRule readonly dispid 1103;
    property parentStyleSheet: IHTMLStyleSheet readonly dispid 1104;
    property media: OleVariant dispid 1001;
    property cssRules: IHTMLStyleSheetRulesCollection readonly dispid 1002;
    function insertRule(const bstrRule: WideString; lIndex: Integer): Integer; dispid 1003;
    procedure deleteRule(lIndex: Integer); dispid 1004;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLCSSMediaList
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590097-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLCSSMediaList = dispinterface
    ['{30590097-98B5-11CF-BB82-00AA00BDCE0B}']
    property mediaText: WideString dispid 1001;
    property length: Integer readonly dispid 1002;
    function item(index: Integer): WideString; dispid 1003;
    procedure appendMedium(const bstrMedium: WideString); dispid 1004;
    procedure deleteMedium(const bstrMedium: WideString); dispid 1005;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLCSSNamespaceRule
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590080-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLCSSNamespaceRule = dispinterface
    ['{30590080-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: Word readonly dispid 1101;
    property cssText: WideString dispid 1102;
    property parentRule: IHTMLCSSRule readonly dispid 1103;
    property parentStyleSheet: IHTMLStyleSheet readonly dispid 1104;
    property namespaceURI: WideString readonly dispid 1001;
    property prefix: WideString readonly dispid 1002;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLMSCSSKeyframeRule
// Flags:     (4112) Hidden Dispatchable
// GUID:      {305900DE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLMSCSSKeyframeRule = dispinterface
    ['{305900DE-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: Word readonly dispid 1101;
    property cssText: WideString dispid 1102;
    property parentRule: IHTMLCSSRule readonly dispid 1103;
    property parentStyleSheet: IHTMLStyleSheet readonly dispid 1104;
    property keyText: WideString dispid 1001;
    property style: IHTMLRuleStyle readonly dispid 1002;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLMSCSSKeyframesRule
// Flags:     (4112) Hidden Dispatchable
// GUID:      {305900DF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLMSCSSKeyframesRule = dispinterface
    ['{305900DF-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: Word readonly dispid 1101;
    property cssText: WideString dispid 1102;
    property parentRule: IHTMLCSSRule readonly dispid 1103;
    property parentStyleSheet: IHTMLStyleSheet readonly dispid 1104;
    property name: WideString dispid 1001;
    property cssRules: IHTMLStyleSheetRulesCollection readonly dispid 1002;
    procedure appendRule(const bstrRule: WideString); dispid 1003;
    procedure deleteRule(const bstrKey: WideString); dispid 1004;
    function findRule(const bstrKey: WideString): IHTMLMSCSSKeyframeRule; dispid 1005;
  end;

// *********************************************************************//
// Interface: IHTMLRenderStyle
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F6AE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRenderStyle = interface(IDispatch)
    ['{3050F6AE-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_textLineThroughStyle(const p: WideString); safecall;
    function Get_textLineThroughStyle: WideString; safecall;
    procedure Set_textUnderlineStyle(const p: WideString); safecall;
    function Get_textUnderlineStyle: WideString; safecall;
    procedure Set_textEffect(const p: WideString); safecall;
    function Get_textEffect: WideString; safecall;
    procedure Set_textColor(p: OleVariant); safecall;
    function Get_textColor: OleVariant; safecall;
    procedure Set_textBackgroundColor(p: OleVariant); safecall;
    function Get_textBackgroundColor: OleVariant; safecall;
    procedure Set_textDecorationColor(p: OleVariant); safecall;
    function Get_textDecorationColor: OleVariant; safecall;
    procedure Set_renderingPriority(p: Integer); safecall;
    function Get_renderingPriority: Integer; safecall;
    procedure Set_defaultTextSelection(const p: WideString); safecall;
    function Get_defaultTextSelection: WideString; safecall;
    procedure Set_textDecoration(const p: WideString); safecall;
    function Get_textDecoration: WideString; safecall;
    property textLineThroughStyle: WideString read Get_textLineThroughStyle write Set_textLineThroughStyle;
    property textUnderlineStyle: WideString read Get_textUnderlineStyle write Set_textUnderlineStyle;
    property textEffect: WideString read Get_textEffect write Set_textEffect;
    property textColor: OleVariant read Get_textColor write Set_textColor;
    property textBackgroundColor: OleVariant read Get_textBackgroundColor write Set_textBackgroundColor;
    property textDecorationColor: OleVariant read Get_textDecorationColor write Set_textDecorationColor;
    property renderingPriority: Integer read Get_renderingPriority write Set_renderingPriority;
    property defaultTextSelection: WideString read Get_defaultTextSelection write Set_defaultTextSelection;
    property textDecoration: WideString read Get_textDecoration write Set_textDecoration;
  end;

// *********************************************************************//
// DispIntf:  IHTMLRenderStyleDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F6AE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRenderStyleDisp = dispinterface
    ['{3050F6AE-98B5-11CF-BB82-00AA00BDCE0B}']
    property textLineThroughStyle: WideString dispid -2147412946;
    property textUnderlineStyle: WideString dispid -2147412945;
    property textEffect: WideString dispid -2147412944;
    property textColor: OleVariant dispid -2147412922;
    property textBackgroundColor: OleVariant dispid -2147412943;
    property textDecorationColor: OleVariant dispid -2147412923;
    property renderingPriority: Integer dispid -2147412942;
    property defaultTextSelection: WideString dispid -2147412924;
    property textDecoration: WideString dispid -2147412921;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLRenderStyle
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F58B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLRenderStyle = dispinterface
    ['{3050F58B-98B5-11CF-BB82-00AA00BDCE0B}']
    property textLineThroughStyle: WideString dispid -2147412946;
    property textUnderlineStyle: WideString dispid -2147412945;
    property textEffect: WideString dispid -2147412944;
    property textColor: OleVariant dispid -2147412922;
    property textBackgroundColor: OleVariant dispid -2147412943;
    property textDecorationColor: OleVariant dispid -2147412923;
    property renderingPriority: Integer dispid -2147412942;
    property defaultTextSelection: WideString dispid -2147412924;
    property textDecoration: WideString dispid -2147412921;
  end;

// *********************************************************************//
// Interface: IHTMLCurrentStyle
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3DB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCurrentStyle = interface(IDispatch)
    ['{3050F3DB-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_position: WideString; safecall;
    function Get_styleFloat: WideString; safecall;
    function Get_color: OleVariant; safecall;
    function Get_backgroundColor: OleVariant; safecall;
    function Get_fontFamily: WideString; safecall;
    function Get_fontStyle: WideString; safecall;
    function Get_fontVariant: WideString; safecall;
    function Get_fontWeight: OleVariant; safecall;
    function Get_fontSize: OleVariant; safecall;
    function Get_backgroundImage: WideString; safecall;
    function Get_backgroundPositionX: OleVariant; safecall;
    function Get_backgroundPositionY: OleVariant; safecall;
    function Get_backgroundRepeat: WideString; safecall;
    function Get_borderLeftColor: OleVariant; safecall;
    function Get_borderTopColor: OleVariant; safecall;
    function Get_borderRightColor: OleVariant; safecall;
    function Get_borderBottomColor: OleVariant; safecall;
    function Get_borderTopStyle: WideString; safecall;
    function Get_borderRightStyle: WideString; safecall;
    function Get_borderBottomStyle: WideString; safecall;
    function Get_borderLeftStyle: WideString; safecall;
    function Get_borderTopWidth: OleVariant; safecall;
    function Get_borderRightWidth: OleVariant; safecall;
    function Get_borderBottomWidth: OleVariant; safecall;
    function Get_borderLeftWidth: OleVariant; safecall;
    function Get_left: OleVariant; safecall;
    function Get_top: OleVariant; safecall;
    function Get_width: OleVariant; safecall;
    function Get_height: OleVariant; safecall;
    function Get_paddingLeft: OleVariant; safecall;
    function Get_paddingTop: OleVariant; safecall;
    function Get_paddingRight: OleVariant; safecall;
    function Get_paddingBottom: OleVariant; safecall;
    function Get_textAlign: WideString; safecall;
    function Get_textDecoration: WideString; safecall;
    function Get_display: WideString; safecall;
    function Get_visibility: WideString; safecall;
    function Get_zIndex: OleVariant; safecall;
    function Get_letterSpacing: OleVariant; safecall;
    function Get_lineHeight: OleVariant; safecall;
    function Get_textIndent: OleVariant; safecall;
    function Get_verticalAlign: OleVariant; safecall;
    function Get_backgroundAttachment: WideString; safecall;
    function Get_marginTop: OleVariant; safecall;
    function Get_marginRight: OleVariant; safecall;
    function Get_marginBottom: OleVariant; safecall;
    function Get_marginLeft: OleVariant; safecall;
    function Get_clear: WideString; safecall;
    function Get_listStyleType: WideString; safecall;
    function Get_listStylePosition: WideString; safecall;
    function Get_listStyleImage: WideString; safecall;
    function Get_clipTop: OleVariant; safecall;
    function Get_clipRight: OleVariant; safecall;
    function Get_clipBottom: OleVariant; safecall;
    function Get_clipLeft: OleVariant; safecall;
    function Get_overflow: WideString; safecall;
    function Get_pageBreakBefore: WideString; safecall;
    function Get_pageBreakAfter: WideString; safecall;
    function Get_cursor: WideString; safecall;
    function Get_tableLayout: WideString; safecall;
    function Get_borderCollapse: WideString; safecall;
    function Get_direction: WideString; safecall;
    function Get_behavior: WideString; safecall;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; safecall;
    function Get_unicodeBidi: WideString; safecall;
    function Get_right: OleVariant; safecall;
    function Get_bottom: OleVariant; safecall;
    function Get_imeMode: WideString; safecall;
    function Get_rubyAlign: WideString; safecall;
    function Get_rubyPosition: WideString; safecall;
    function Get_rubyOverhang: WideString; safecall;
    function Get_textAutospace: WideString; safecall;
    function Get_lineBreak: WideString; safecall;
    function Get_wordBreak: WideString; safecall;
    function Get_textJustify: WideString; safecall;
    function Get_textJustifyTrim: WideString; safecall;
    function Get_textKashida: OleVariant; safecall;
    function Get_blockDirection: WideString; safecall;
    function Get_layoutGridChar: OleVariant; safecall;
    function Get_layoutGridLine: OleVariant; safecall;
    function Get_layoutGridMode: WideString; safecall;
    function Get_layoutGridType: WideString; safecall;
    function Get_borderStyle: WideString; safecall;
    function Get_borderColor: WideString; safecall;
    function Get_borderWidth: WideString; safecall;
    function Get_padding: WideString; safecall;
    function Get_margin: WideString; safecall;
    function Get_accelerator: WideString; safecall;
    function Get_overflowX: WideString; safecall;
    function Get_overflowY: WideString; safecall;
    function Get_textTransform: WideString; safecall;
    property position: WideString read Get_position;
    property styleFloat: WideString read Get_styleFloat;
    property color: OleVariant read Get_color;
    property backgroundColor: OleVariant read Get_backgroundColor;
    property fontFamily: WideString read Get_fontFamily;
    property fontStyle: WideString read Get_fontStyle;
    property fontVariant: WideString read Get_fontVariant;
    property fontWeight: OleVariant read Get_fontWeight;
    property fontSize: OleVariant read Get_fontSize;
    property backgroundImage: WideString read Get_backgroundImage;
    property backgroundPositionX: OleVariant read Get_backgroundPositionX;
    property backgroundPositionY: OleVariant read Get_backgroundPositionY;
    property backgroundRepeat: WideString read Get_backgroundRepeat;
    property borderLeftColor: OleVariant read Get_borderLeftColor;
    property borderTopColor: OleVariant read Get_borderTopColor;
    property borderRightColor: OleVariant read Get_borderRightColor;
    property borderBottomColor: OleVariant read Get_borderBottomColor;
    property borderTopStyle: WideString read Get_borderTopStyle;
    property borderRightStyle: WideString read Get_borderRightStyle;
    property borderBottomStyle: WideString read Get_borderBottomStyle;
    property borderLeftStyle: WideString read Get_borderLeftStyle;
    property borderTopWidth: OleVariant read Get_borderTopWidth;
    property borderRightWidth: OleVariant read Get_borderRightWidth;
    property borderBottomWidth: OleVariant read Get_borderBottomWidth;
    property borderLeftWidth: OleVariant read Get_borderLeftWidth;
    property left: OleVariant read Get_left;
    property top: OleVariant read Get_top;
    property width: OleVariant read Get_width;
    property height: OleVariant read Get_height;
    property paddingLeft: OleVariant read Get_paddingLeft;
    property paddingTop: OleVariant read Get_paddingTop;
    property paddingRight: OleVariant read Get_paddingRight;
    property paddingBottom: OleVariant read Get_paddingBottom;
    property textAlign: WideString read Get_textAlign;
    property textDecoration: WideString read Get_textDecoration;
    property display: WideString read Get_display;
    property visibility: WideString read Get_visibility;
    property zIndex: OleVariant read Get_zIndex;
    property letterSpacing: OleVariant read Get_letterSpacing;
    property lineHeight: OleVariant read Get_lineHeight;
    property textIndent: OleVariant read Get_textIndent;
    property verticalAlign: OleVariant read Get_verticalAlign;
    property backgroundAttachment: WideString read Get_backgroundAttachment;
    property marginTop: OleVariant read Get_marginTop;
    property marginRight: OleVariant read Get_marginRight;
    property marginBottom: OleVariant read Get_marginBottom;
    property marginLeft: OleVariant read Get_marginLeft;
    property clear: WideString read Get_clear;
    property listStyleType: WideString read Get_listStyleType;
    property listStylePosition: WideString read Get_listStylePosition;
    property listStyleImage: WideString read Get_listStyleImage;
    property clipTop: OleVariant read Get_clipTop;
    property clipRight: OleVariant read Get_clipRight;
    property clipBottom: OleVariant read Get_clipBottom;
    property clipLeft: OleVariant read Get_clipLeft;
    property overflow: WideString read Get_overflow;
    property pageBreakBefore: WideString read Get_pageBreakBefore;
    property pageBreakAfter: WideString read Get_pageBreakAfter;
    property cursor: WideString read Get_cursor;
    property tableLayout: WideString read Get_tableLayout;
    property borderCollapse: WideString read Get_borderCollapse;
    property direction: WideString read Get_direction;
    property behavior: WideString read Get_behavior;
    property unicodeBidi: WideString read Get_unicodeBidi;
    property right: OleVariant read Get_right;
    property bottom: OleVariant read Get_bottom;
    property imeMode: WideString read Get_imeMode;
    property rubyAlign: WideString read Get_rubyAlign;
    property rubyPosition: WideString read Get_rubyPosition;
    property rubyOverhang: WideString read Get_rubyOverhang;
    property textAutospace: WideString read Get_textAutospace;
    property lineBreak: WideString read Get_lineBreak;
    property wordBreak: WideString read Get_wordBreak;
    property textJustify: WideString read Get_textJustify;
    property textJustifyTrim: WideString read Get_textJustifyTrim;
    property textKashida: OleVariant read Get_textKashida;
    property blockDirection: WideString read Get_blockDirection;
    property layoutGridChar: OleVariant read Get_layoutGridChar;
    property layoutGridLine: OleVariant read Get_layoutGridLine;
    property layoutGridMode: WideString read Get_layoutGridMode;
    property layoutGridType: WideString read Get_layoutGridType;
    property borderStyle: WideString read Get_borderStyle;
    property borderColor: WideString read Get_borderColor;
    property borderWidth: WideString read Get_borderWidth;
    property padding: WideString read Get_padding;
    property margin: WideString read Get_margin;
    property accelerator: WideString read Get_accelerator;
    property overflowX: WideString read Get_overflowX;
    property overflowY: WideString read Get_overflowY;
    property textTransform: WideString read Get_textTransform;
  end;

// *********************************************************************//
// DispIntf:  IHTMLCurrentStyleDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3DB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCurrentStyleDisp = dispinterface
    ['{3050F3DB-98B5-11CF-BB82-00AA00BDCE0B}']
    property position: WideString readonly dispid -2147413022;
    property styleFloat: WideString readonly dispid -2147413042;
    property color: OleVariant readonly dispid -2147413110;
    property backgroundColor: OleVariant readonly dispid -501;
    property fontFamily: WideString readonly dispid -2147413094;
    property fontStyle: WideString readonly dispid -2147413088;
    property fontVariant: WideString readonly dispid -2147413087;
    property fontWeight: OleVariant readonly dispid -2147413085;
    property fontSize: OleVariant readonly dispid -2147413093;
    property backgroundImage: WideString readonly dispid -2147413111;
    property backgroundPositionX: OleVariant readonly dispid -2147413079;
    property backgroundPositionY: OleVariant readonly dispid -2147413078;
    property backgroundRepeat: WideString readonly dispid -2147413068;
    property borderLeftColor: OleVariant readonly dispid -2147413054;
    property borderTopColor: OleVariant readonly dispid -2147413057;
    property borderRightColor: OleVariant readonly dispid -2147413056;
    property borderBottomColor: OleVariant readonly dispid -2147413055;
    property borderTopStyle: WideString readonly dispid -2147413047;
    property borderRightStyle: WideString readonly dispid -2147413046;
    property borderBottomStyle: WideString readonly dispid -2147413045;
    property borderLeftStyle: WideString readonly dispid -2147413044;
    property borderTopWidth: OleVariant readonly dispid -2147413052;
    property borderRightWidth: OleVariant readonly dispid -2147413051;
    property borderBottomWidth: OleVariant readonly dispid -2147413050;
    property borderLeftWidth: OleVariant readonly dispid -2147413049;
    property left: OleVariant readonly dispid -2147418109;
    property top: OleVariant readonly dispid -2147418108;
    property width: OleVariant readonly dispid -2147418107;
    property height: OleVariant readonly dispid -2147418106;
    property paddingLeft: OleVariant readonly dispid -2147413097;
    property paddingTop: OleVariant readonly dispid -2147413100;
    property paddingRight: OleVariant readonly dispid -2147413099;
    property paddingBottom: OleVariant readonly dispid -2147413098;
    property textAlign: WideString readonly dispid -2147418040;
    property textDecoration: WideString readonly dispid -2147413077;
    property display: WideString readonly dispid -2147413041;
    property visibility: WideString readonly dispid -2147413032;
    property zIndex: OleVariant readonly dispid -2147413021;
    property letterSpacing: OleVariant readonly dispid -2147413104;
    property lineHeight: OleVariant readonly dispid -2147413106;
    property textIndent: OleVariant readonly dispid -2147413105;
    property verticalAlign: OleVariant readonly dispid -2147413064;
    property backgroundAttachment: WideString readonly dispid -2147413067;
    property marginTop: OleVariant readonly dispid -2147413075;
    property marginRight: OleVariant readonly dispid -2147413074;
    property marginBottom: OleVariant readonly dispid -2147413073;
    property marginLeft: OleVariant readonly dispid -2147413072;
    property clear: WideString readonly dispid -2147413096;
    property listStyleType: WideString readonly dispid -2147413040;
    property listStylePosition: WideString readonly dispid -2147413039;
    property listStyleImage: WideString readonly dispid -2147413038;
    property clipTop: OleVariant readonly dispid -2147413019;
    property clipRight: OleVariant readonly dispid -2147413018;
    property clipBottom: OleVariant readonly dispid -2147413017;
    property clipLeft: OleVariant readonly dispid -2147413016;
    property overflow: WideString readonly dispid -2147413102;
    property pageBreakBefore: WideString readonly dispid -2147413035;
    property pageBreakAfter: WideString readonly dispid -2147413034;
    property cursor: WideString readonly dispid -2147413010;
    property tableLayout: WideString readonly dispid -2147413014;
    property borderCollapse: WideString readonly dispid -2147413028;
    property direction: WideString readonly dispid -2147412993;
    property behavior: WideString readonly dispid -2147412997;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    property unicodeBidi: WideString readonly dispid -2147412994;
    property right: OleVariant readonly dispid -2147418035;
    property bottom: OleVariant readonly dispid -2147418034;
    property imeMode: WideString readonly dispid -2147412992;
    property rubyAlign: WideString readonly dispid -2147412991;
    property rubyPosition: WideString readonly dispid -2147412990;
    property rubyOverhang: WideString readonly dispid -2147412989;
    property textAutospace: WideString readonly dispid -2147412980;
    property lineBreak: WideString readonly dispid -2147412979;
    property wordBreak: WideString readonly dispid -2147412978;
    property textJustify: WideString readonly dispid -2147412977;
    property textJustifyTrim: WideString readonly dispid -2147412976;
    property textKashida: OleVariant readonly dispid -2147412975;
    property blockDirection: WideString readonly dispid -2147412995;
    property layoutGridChar: OleVariant readonly dispid -2147412985;
    property layoutGridLine: OleVariant readonly dispid -2147412984;
    property layoutGridMode: WideString readonly dispid -2147412983;
    property layoutGridType: WideString readonly dispid -2147412982;
    property borderStyle: WideString readonly dispid -2147413048;
    property borderColor: WideString readonly dispid -2147413058;
    property borderWidth: WideString readonly dispid -2147413053;
    property padding: WideString readonly dispid -2147413101;
    property margin: WideString readonly dispid -2147413076;
    property accelerator: WideString readonly dispid -2147412965;
    property overflowX: WideString readonly dispid -2147412973;
    property overflowY: WideString readonly dispid -2147412972;
    property textTransform: WideString readonly dispid -2147413108;
  end;

// *********************************************************************//
// Interface: IHTMLCurrentStyle2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F658-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCurrentStyle2 = interface(IDispatch)
    ['{3050F658-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_layoutFlow: WideString; safecall;
    function Get_wordWrap: WideString; safecall;
    function Get_textUnderlinePosition: WideString; safecall;
    function Get_hasLayout: WordBool; safecall;
    function Get_scrollbarBaseColor: OleVariant; safecall;
    function Get_scrollbarFaceColor: OleVariant; safecall;
    function Get_scrollbar3dLightColor: OleVariant; safecall;
    function Get_scrollbarShadowColor: OleVariant; safecall;
    function Get_scrollbarHighlightColor: OleVariant; safecall;
    function Get_scrollbarDarkShadowColor: OleVariant; safecall;
    function Get_scrollbarArrowColor: OleVariant; safecall;
    function Get_scrollbarTrackColor: OleVariant; safecall;
    function Get_writingMode: WideString; safecall;
    function Get_zoom: OleVariant; safecall;
    function Get_filter: WideString; safecall;
    function Get_textAlignLast: WideString; safecall;
    function Get_textKashidaSpace: OleVariant; safecall;
    function Get_isBlock: WordBool; safecall;
    property layoutFlow: WideString read Get_layoutFlow;
    property wordWrap: WideString read Get_wordWrap;
    property textUnderlinePosition: WideString read Get_textUnderlinePosition;
    property hasLayout: WordBool read Get_hasLayout;
    property scrollbarBaseColor: OleVariant read Get_scrollbarBaseColor;
    property scrollbarFaceColor: OleVariant read Get_scrollbarFaceColor;
    property scrollbar3dLightColor: OleVariant read Get_scrollbar3dLightColor;
    property scrollbarShadowColor: OleVariant read Get_scrollbarShadowColor;
    property scrollbarHighlightColor: OleVariant read Get_scrollbarHighlightColor;
    property scrollbarDarkShadowColor: OleVariant read Get_scrollbarDarkShadowColor;
    property scrollbarArrowColor: OleVariant read Get_scrollbarArrowColor;
    property scrollbarTrackColor: OleVariant read Get_scrollbarTrackColor;
    property writingMode: WideString read Get_writingMode;
    property zoom: OleVariant read Get_zoom;
    property filter: WideString read Get_filter;
    property textAlignLast: WideString read Get_textAlignLast;
    property textKashidaSpace: OleVariant read Get_textKashidaSpace;
    property isBlock: WordBool read Get_isBlock;
  end;

// *********************************************************************//
// DispIntf:  IHTMLCurrentStyle2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F658-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCurrentStyle2Disp = dispinterface
    ['{3050F658-98B5-11CF-BB82-00AA00BDCE0B}']
    property layoutFlow: WideString readonly dispid -2147412957;
    property wordWrap: WideString readonly dispid -2147412954;
    property textUnderlinePosition: WideString readonly dispid -2147412953;
    property hasLayout: WordBool readonly dispid -2147412952;
    property scrollbarBaseColor: OleVariant readonly dispid -2147412932;
    property scrollbarFaceColor: OleVariant readonly dispid -2147412931;
    property scrollbar3dLightColor: OleVariant readonly dispid -2147412930;
    property scrollbarShadowColor: OleVariant readonly dispid -2147412929;
    property scrollbarHighlightColor: OleVariant readonly dispid -2147412928;
    property scrollbarDarkShadowColor: OleVariant readonly dispid -2147412927;
    property scrollbarArrowColor: OleVariant readonly dispid -2147412926;
    property scrollbarTrackColor: OleVariant readonly dispid -2147412916;
    property writingMode: WideString readonly dispid -2147412920;
    property zoom: OleVariant readonly dispid -2147412959;
    property filter: WideString readonly dispid -2147413030;
    property textAlignLast: WideString readonly dispid -2147412909;
    property textKashidaSpace: OleVariant readonly dispid -2147412908;
    property isBlock: WordBool readonly dispid -2147412904;
  end;

// *********************************************************************//
// Interface: IHTMLCurrentStyle3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F818-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCurrentStyle3 = interface(IDispatch)
    ['{3050F818-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_textOverflow: WideString; safecall;
    function Get_minHeight: OleVariant; safecall;
    function Get_wordSpacing: OleVariant; safecall;
    function Get_whiteSpace: WideString; safecall;
    property textOverflow: WideString read Get_textOverflow;
    property minHeight: OleVariant read Get_minHeight;
    property wordSpacing: OleVariant read Get_wordSpacing;
    property whiteSpace: WideString read Get_whiteSpace;
  end;

// *********************************************************************//
// DispIntf:  IHTMLCurrentStyle3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F818-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCurrentStyle3Disp = dispinterface
    ['{3050F818-98B5-11CF-BB82-00AA00BDCE0B}']
    property textOverflow: WideString readonly dispid -2147412903;
    property minHeight: OleVariant readonly dispid -2147412901;
    property wordSpacing: OleVariant readonly dispid -2147413065;
    property whiteSpace: WideString readonly dispid -2147413036;
  end;

// *********************************************************************//
// Interface: IHTMLCurrentStyle4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F33B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCurrentStyle4 = interface(IDispatch)
    ['{3050F33B-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_msInterpolationMode: WideString; safecall;
    function Get_maxHeight: OleVariant; safecall;
    function Get_minWidth: OleVariant; safecall;
    function Get_maxWidth: OleVariant; safecall;
    property msInterpolationMode: WideString read Get_msInterpolationMode;
    property maxHeight: OleVariant read Get_maxHeight;
    property minWidth: OleVariant read Get_minWidth;
    property maxWidth: OleVariant read Get_maxWidth;
  end;

// *********************************************************************//
// DispIntf:  IHTMLCurrentStyle4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F33B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCurrentStyle4Disp = dispinterface
    ['{3050F33B-98B5-11CF-BB82-00AA00BDCE0B}']
    property msInterpolationMode: WideString readonly dispid -2147412899;
    property maxHeight: OleVariant readonly dispid -2147412898;
    property minWidth: OleVariant readonly dispid -2147412897;
    property maxWidth: OleVariant readonly dispid -2147412896;
  end;

// *********************************************************************//
// Interface: IHTMLCurrentStyle5
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510481-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCurrentStyle5 = interface(IDispatch)
    ['{30510481-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_captionSide: WideString; safecall;
    function Get_outline: WideString; safecall;
    function Get_outlineWidth: OleVariant; safecall;
    function Get_outlineStyle: WideString; safecall;
    function Get_outlineColor: OleVariant; safecall;
    function Get_boxSizing: WideString; safecall;
    function Get_borderSpacing: WideString; safecall;
    function Get_orphans: OleVariant; safecall;
    function Get_widows: OleVariant; safecall;
    function Get_pageBreakInside: WideString; safecall;
    function Get_emptyCells: WideString; safecall;
    function Get_msBlockProgression: WideString; safecall;
    function Get_quotes: WideString; safecall;
    property captionSide: WideString read Get_captionSide;
    property outline: WideString read Get_outline;
    property outlineWidth: OleVariant read Get_outlineWidth;
    property outlineStyle: WideString read Get_outlineStyle;
    property outlineColor: OleVariant read Get_outlineColor;
    property boxSizing: WideString read Get_boxSizing;
    property borderSpacing: WideString read Get_borderSpacing;
    property orphans: OleVariant read Get_orphans;
    property widows: OleVariant read Get_widows;
    property pageBreakInside: WideString read Get_pageBreakInside;
    property emptyCells: WideString read Get_emptyCells;
    property msBlockProgression: WideString read Get_msBlockProgression;
    property quotes: WideString read Get_quotes;
  end;

// *********************************************************************//
// DispIntf:  IHTMLCurrentStyle5Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510481-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCurrentStyle5Disp = dispinterface
    ['{30510481-98B5-11CF-BB82-00AA00BDCE0B}']
    property captionSide: WideString readonly dispid -2147412893;
    property outline: WideString readonly dispid -2147412890;
    property outlineWidth: OleVariant readonly dispid -2147412889;
    property outlineStyle: WideString readonly dispid -2147412888;
    property outlineColor: OleVariant readonly dispid -2147412887;
    property boxSizing: WideString readonly dispid -2147412886;
    property borderSpacing: WideString readonly dispid -2147412885;
    property orphans: OleVariant readonly dispid -2147412884;
    property widows: OleVariant readonly dispid -2147412883;
    property pageBreakInside: WideString readonly dispid -2147412882;
    property emptyCells: WideString readonly dispid -2147412862;
    property msBlockProgression: WideString readonly dispid -2147412861;
    property quotes: WideString readonly dispid -2147412860;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLCurrentStyle
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F557-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLCurrentStyle = dispinterface
    ['{3050F557-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid -2147413611;
    property parentRule: OleVariant readonly dispid -2147413610;
    function getPropertyValue(const bstrPropertyName: WideString): WideString; dispid -2147413609;
    function getPropertyPriority(const bstrPropertyName: WideString): WideString; dispid -2147413608;
    function removeProperty(const bstrPropertyName: WideString): WideString; dispid -2147413607;
    procedure setProperty(const bstrPropertyName: WideString; const pvarPropertyValue: OleVariant; 
                          const pvarPropertyPriority: OleVariant); dispid -2147413606;
    function item(index: Integer): WideString; dispid 0;
    property msScrollChaining: WideString dispid -2147412757;
    property msContentZooming: WideString dispid -2147412756;
    property msContentZoomSnapType: WideString dispid -2147412755;
    property msScrollRails: WideString dispid -2147412754;
    property msContentZoomChaining: WideString dispid -2147412753;
    property msScrollSnapType: WideString dispid -2147412752;
    property msContentZoomLimit: WideString dispid -2147412751;
    property msContentZoomSnap: WideString dispid -2147412750;
    property msContentZoomSnapPoints: WideString dispid -2147412749;
    property msContentZoomLimitMin: OleVariant dispid -2147412747;
    property msContentZoomLimitMax: OleVariant dispid -2147412746;
    property msScrollSnapX: WideString dispid -2147412745;
    property msScrollSnapY: WideString dispid -2147412744;
    property msScrollSnapPointsX: WideString dispid -2147412743;
    property msScrollSnapPointsY: WideString dispid -2147412742;
    property msGridColumn: OleVariant dispid -2147412740;
    property msGridColumnAlign: WideString dispid -2147412739;
    property msGridColumns: WideString dispid -2147412738;
    property msGridColumnSpan: OleVariant dispid -2147412737;
    property msGridRow: OleVariant dispid -2147412735;
    property msGridRowAlign: WideString dispid -2147412734;
    property msGridRows: WideString dispid -2147412733;
    property msGridRowSpan: OleVariant dispid -2147412732;
    property msWrapThrough: WideString dispid -2147412711;
    property msWrapMargin: OleVariant dispid -2147412701;
    property msWrapFlow: WideString dispid -2147412699;
    property msAnimationName: WideString dispid -2147412731;
    property msAnimationDuration: WideString dispid -2147412730;
    property msAnimationTimingFunction: WideString dispid -2147412729;
    property msAnimationDelay: WideString dispid -2147412728;
    property msAnimationDirection: WideString dispid -2147412727;
    property msAnimationPlayState: WideString dispid -2147412726;
    property msAnimationIterationCount: WideString dispid -2147412725;
    property msAnimation: WideString dispid -2147412724;
    property msAnimationFillMode: WideString dispid -2147412723;
    property colorInterpolationFilters: WideString dispid -2147412720;
    property columnCount: OleVariant dispid -2147412776;
    property columnWidth: OleVariant dispid -2147412775;
    property columnGap: OleVariant dispid -2147412774;
    property columnFill: WideString dispid -2147412773;
    property columnSpan: WideString dispid -2147412772;
    property columns: WideString dispid -2147412777;
    property columnRule: WideString dispid -2147412771;
    property columnRuleColor: OleVariant dispid -2147412768;
    property columnRuleStyle: WideString dispid -2147412770;
    property columnRuleWidth: OleVariant dispid -2147412769;
    property breakBefore: WideString dispid -2147412767;
    property breakAfter: WideString dispid -2147412766;
    property breakInside: WideString dispid -2147412765;
    property floodColor: OleVariant dispid -2147412722;
    property floodOpacity: OleVariant dispid -2147412721;
    property lightingColor: OleVariant dispid -2147412719;
    property msScrollLimitXMin: OleVariant dispid -2147412718;
    property msScrollLimitYMin: OleVariant dispid -2147412717;
    property msScrollLimitXMax: OleVariant dispid -2147412716;
    property msScrollLimitYMax: OleVariant dispid -2147412715;
    property msScrollLimit: WideString dispid -2147412714;
    property textShadow: WideString dispid -2147412712;
    property msFlowFrom: WideString dispid -2147412710;
    property msFlowInto: WideString dispid -2147412709;
    property msHyphens: WideString dispid -2147412708;
    property msHyphenateLimitZone: OleVariant dispid -2147412707;
    property msHyphenateLimitChars: WideString dispid -2147412706;
    property msHyphenateLimitLines: OleVariant dispid -2147412705;
    property msHighContrastAdjust: WideString dispid -2147412703;
    property enableBackground: WideString dispid -2147412702;
    property msFontFeatureSettings: WideString dispid -2147412698;
    property msUserSelect: WideString dispid -2147412697;
    property msOverflowStyle: WideString dispid -2147412713;
    property msTransformStyle: WideString dispid -2147412759;
    property msBackfaceVisibility: WideString dispid -2147412758;
    property msPerspective: OleVariant dispid -2147412763;
    property msPerspectiveOrigin: WideString dispid -2147412762;
    property msTransitionProperty: WideString dispid -2147412782;
    property msTransitionDuration: WideString dispid -2147412781;
    property msTransitionTimingFunction: WideString dispid -2147412780;
    property msTransitionDelay: WideString dispid -2147412779;
    property msTransition: WideString dispid -2147412778;
    property msTouchAction: WideString dispid -2147412696;
    property msScrollTranslation: WideString dispid -2147412694;
    property msFlex: WideString dispid -2147412693;
    property msFlexPositive: OleVariant dispid -2147412692;
    property msFlexNegative: OleVariant dispid -2147412691;
    property msFlexPreferredSize: OleVariant dispid -2147412690;
    property msFlexFlow: WideString dispid -2147412689;
    property msFlexDirection: WideString dispid -2147412688;
    property msFlexWrap: WideString dispid -2147412687;
    property msFlexAlign: WideString dispid -2147412686;
    property msFlexItemAlign: WideString dispid -2147412685;
    property msFlexPack: WideString dispid -2147412684;
    property msFlexLinePack: WideString dispid -2147412683;
    property msFlexOrder: OleVariant dispid -2147412682;
    property msTouchSelect: WideString dispid -2147412654;
    property transform: WideString dispid -2147412681;
    property transformOrigin: WideString dispid -2147412680;
    property transformStyle: WideString dispid -2147412672;
    property backfaceVisibility: WideString dispid -2147412671;
    property perspective: OleVariant dispid -2147412674;
    property perspectiveOrigin: WideString dispid -2147412673;
    property transitionProperty: WideString dispid -2147412679;
    property transitionDuration: WideString dispid -2147412678;
    property transitionTimingFunction: WideString dispid -2147412677;
    property transitionDelay: WideString dispid -2147412676;
    property transition: WideString dispid -2147412675;
    property fontFeatureSettings: WideString dispid -2147412661;
    property animationName: WideString dispid -2147412670;
    property animationDuration: WideString dispid -2147412669;
    property animationTimingFunction: WideString dispid -2147412668;
    property animationDelay: WideString dispid -2147412667;
    property animationDirection: WideString dispid -2147412666;
    property animationPlayState: WideString dispid -2147412665;
    property animationIterationCount: WideString dispid -2147412664;
    property animation: WideString dispid -2147412663;
    property animationFillMode: WideString dispid -2147412662;
    property flex: WideString dispid -2147412646;
    property flexDirection: WideString dispid -2147412650;
    property flexWrap: WideString dispid -2147412649;
    property flexFlow: WideString dispid -2147412648;
    property flexGrow: OleVariant dispid -2147412645;
    property flexShrink: OleVariant dispid -2147412644;
    property flexBasis: OleVariant dispid -2147412643;
    property justifyContent: WideString dispid -2147412642;
    property alignItems: WideString dispid -2147412641;
    property alignSelf: WideString dispid -2147412640;
    property alignContent: WideString dispid -2147412639;
    property borderImage: WideString dispid -2147412638;
    property borderImageSource: WideString dispid -2147412637;
    property borderImageSlice: WideString dispid -2147412636;
    property borderImageWidth: WideString dispid -2147412635;
    property borderImageOutset: WideString dispid -2147412634;
    property borderImageRepeat: WideString dispid -2147412633;
    property msImeAlign: WideString dispid -2147412631;
    property msTextCombineHorizontal: WideString dispid -2147412630;
    property touchAction: WideString dispid -2147412629;
    property position: WideString readonly dispid -2147413022;
    property styleFloat: WideString readonly dispid -2147413042;
    property color: OleVariant readonly dispid -2147413110;
    property backgroundColor: OleVariant readonly dispid -501;
    property fontFamily: WideString readonly dispid -2147413094;
    property fontStyle: WideString readonly dispid -2147413088;
    property fontVariant: WideString readonly dispid -2147413087;
    property fontWeight: OleVariant readonly dispid -2147413085;
    property fontSize: OleVariant readonly dispid -2147413093;
    property backgroundImage: WideString readonly dispid -2147413111;
    property backgroundPositionX: OleVariant readonly dispid -2147413079;
    property backgroundPositionY: OleVariant readonly dispid -2147413078;
    property backgroundRepeat: WideString readonly dispid -2147413068;
    property borderLeftColor: OleVariant readonly dispid -2147413054;
    property borderTopColor: OleVariant readonly dispid -2147413057;
    property borderRightColor: OleVariant readonly dispid -2147413056;
    property borderBottomColor: OleVariant readonly dispid -2147413055;
    property borderTopStyle: WideString readonly dispid -2147413047;
    property borderRightStyle: WideString readonly dispid -2147413046;
    property borderBottomStyle: WideString readonly dispid -2147413045;
    property borderLeftStyle: WideString readonly dispid -2147413044;
    property borderTopWidth: OleVariant readonly dispid -2147413052;
    property borderRightWidth: OleVariant readonly dispid -2147413051;
    property borderBottomWidth: OleVariant readonly dispid -2147413050;
    property borderLeftWidth: OleVariant readonly dispid -2147413049;
    property left: OleVariant readonly dispid -2147418109;
    property top: OleVariant readonly dispid -2147418108;
    property width: OleVariant readonly dispid -2147418107;
    property height: OleVariant readonly dispid -2147418106;
    property paddingLeft: OleVariant readonly dispid -2147413097;
    property paddingTop: OleVariant readonly dispid -2147413100;
    property paddingRight: OleVariant readonly dispid -2147413099;
    property paddingBottom: OleVariant readonly dispid -2147413098;
    property textAlign: WideString readonly dispid -2147418040;
    property textDecoration: WideString readonly dispid -2147413077;
    property display: WideString readonly dispid -2147413041;
    property visibility: WideString readonly dispid -2147413032;
    property zIndex: OleVariant readonly dispid -2147413021;
    property letterSpacing: OleVariant readonly dispid -2147413104;
    property lineHeight: OleVariant readonly dispid -2147413106;
    property textIndent: OleVariant readonly dispid -2147413105;
    property verticalAlign: OleVariant readonly dispid -2147413064;
    property backgroundAttachment: WideString readonly dispid -2147413067;
    property marginTop: OleVariant readonly dispid -2147413075;
    property marginRight: OleVariant readonly dispid -2147413074;
    property marginBottom: OleVariant readonly dispid -2147413073;
    property marginLeft: OleVariant readonly dispid -2147413072;
    property clear: WideString readonly dispid -2147413096;
    property listStyleType: WideString readonly dispid -2147413040;
    property listStylePosition: WideString readonly dispid -2147413039;
    property listStyleImage: WideString readonly dispid -2147413038;
    property clipTop: OleVariant readonly dispid -2147413019;
    property clipRight: OleVariant readonly dispid -2147413018;
    property clipBottom: OleVariant readonly dispid -2147413017;
    property clipLeft: OleVariant readonly dispid -2147413016;
    property overflow: WideString readonly dispid -2147413102;
    property pageBreakBefore: WideString readonly dispid -2147413035;
    property pageBreakAfter: WideString readonly dispid -2147413034;
    property cursor: WideString readonly dispid -2147413010;
    property tableLayout: WideString readonly dispid -2147413014;
    property borderCollapse: WideString readonly dispid -2147413028;
    property direction: WideString readonly dispid -2147412993;
    property behavior: WideString readonly dispid -2147412997;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    property unicodeBidi: WideString readonly dispid -2147412994;
    property right: OleVariant readonly dispid -2147418035;
    property bottom: OleVariant readonly dispid -2147418034;
    property imeMode: WideString readonly dispid -2147412992;
    property rubyAlign: WideString readonly dispid -2147412991;
    property rubyPosition: WideString readonly dispid -2147412990;
    property rubyOverhang: WideString readonly dispid -2147412989;
    property textAutospace: WideString readonly dispid -2147412980;
    property lineBreak: WideString readonly dispid -2147412979;
    property wordBreak: WideString readonly dispid -2147412978;
    property textJustify: WideString readonly dispid -2147412977;
    property textJustifyTrim: WideString readonly dispid -2147412976;
    property textKashida: OleVariant readonly dispid -2147412975;
    property blockDirection: WideString readonly dispid -2147412995;
    property layoutGridChar: OleVariant readonly dispid -2147412985;
    property layoutGridLine: OleVariant readonly dispid -2147412984;
    property layoutGridMode: WideString readonly dispid -2147412983;
    property layoutGridType: WideString readonly dispid -2147412982;
    property borderStyle: WideString readonly dispid -2147413048;
    property borderColor: WideString readonly dispid -2147413058;
    property borderWidth: WideString readonly dispid -2147413053;
    property padding: WideString readonly dispid -2147413101;
    property margin: WideString readonly dispid -2147413076;
    property accelerator: WideString readonly dispid -2147412965;
    property overflowX: WideString readonly dispid -2147412973;
    property overflowY: WideString readonly dispid -2147412972;
    property textTransform: WideString readonly dispid -2147413108;
    property layoutFlow: WideString readonly dispid -2147412957;
    property wordWrap: WideString readonly dispid -2147412954;
    property textUnderlinePosition: WideString readonly dispid -2147412953;
    property hasLayout: WordBool readonly dispid -2147412952;
    property scrollbarBaseColor: OleVariant readonly dispid -2147412932;
    property scrollbarFaceColor: OleVariant readonly dispid -2147412931;
    property scrollbar3dLightColor: OleVariant readonly dispid -2147412930;
    property scrollbarShadowColor: OleVariant readonly dispid -2147412929;
    property scrollbarHighlightColor: OleVariant readonly dispid -2147412928;
    property scrollbarDarkShadowColor: OleVariant readonly dispid -2147412927;
    property scrollbarArrowColor: OleVariant readonly dispid -2147412926;
    property scrollbarTrackColor: OleVariant readonly dispid -2147412916;
    property writingMode: WideString readonly dispid -2147412920;
    property zoom: OleVariant readonly dispid -2147412959;
    property filter: WideString readonly dispid -2147413030;
    property textAlignLast: WideString readonly dispid -2147412909;
    property textKashidaSpace: OleVariant readonly dispid -2147412908;
    property isBlock: WordBool readonly dispid -2147412904;
    property textOverflow: WideString readonly dispid -2147412903;
    property minHeight: OleVariant readonly dispid -2147412901;
    property wordSpacing: OleVariant readonly dispid -2147413065;
    property whiteSpace: WideString readonly dispid -2147413036;
    property msInterpolationMode: WideString readonly dispid -2147412899;
    property maxHeight: OleVariant readonly dispid -2147412898;
    property minWidth: OleVariant readonly dispid -2147412897;
    property maxWidth: OleVariant readonly dispid -2147412896;
    property captionSide: WideString readonly dispid -2147412893;
    property outline: WideString readonly dispid -2147412890;
    property outlineWidth: OleVariant readonly dispid -2147412889;
    property outlineStyle: WideString readonly dispid -2147412888;
    property outlineColor: OleVariant readonly dispid -2147412887;
    property boxSizing: WideString readonly dispid -2147412886;
    property borderSpacing: WideString readonly dispid -2147412885;
    property orphans: OleVariant readonly dispid -2147412884;
    property widows: OleVariant readonly dispid -2147412883;
    property pageBreakInside: WideString readonly dispid -2147412882;
    property emptyCells: WideString readonly dispid -2147412862;
    property msBlockProgression: WideString readonly dispid -2147412861;
    property quotes: WideString readonly dispid -2147412860;
    property constructor_: IDispatch readonly dispid -2147417603;
  end;

// *********************************************************************//
// Interface: IHTMLRect
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4A3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRect = interface(IDispatch)
    ['{3050F4A3-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_left(p: Integer); safecall;
    function Get_left: Integer; safecall;
    procedure Set_top(p: Integer); safecall;
    function Get_top: Integer; safecall;
    procedure Set_right(p: Integer); safecall;
    function Get_right: Integer; safecall;
    procedure Set_bottom(p: Integer); safecall;
    function Get_bottom: Integer; safecall;
    property left: Integer read Get_left write Set_left;
    property top: Integer read Get_top write Set_top;
    property right: Integer read Get_right write Set_right;
    property bottom: Integer read Get_bottom write Set_bottom;
  end;

// *********************************************************************//
// DispIntf:  IHTMLRectDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4A3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRectDisp = dispinterface
    ['{3050F4A3-98B5-11CF-BB82-00AA00BDCE0B}']
    property left: Integer dispid 1001;
    property top: Integer dispid 1002;
    property right: Integer dispid 1003;
    property bottom: Integer dispid 1004;
  end;

// *********************************************************************//
// Interface: IHTMLRect2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051076C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRect2 = interface(IDispatch)
    ['{3051076C-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_width: Single; safecall;
    function Get_height: Single; safecall;
    property width: Single read Get_width;
    property height: Single read Get_height;
  end;

// *********************************************************************//
// DispIntf:  IHTMLRect2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051076C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRect2Disp = dispinterface
    ['{3051076C-98B5-11CF-BB82-00AA00BDCE0B}']
    property width: Single readonly dispid 1005;
    property height: Single readonly dispid 1006;
  end;

// *********************************************************************//
// Interface: IHTMLRectCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4A4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRectCollection = interface(IDispatch)
    ['{3050F4A4-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    function Get__newEnum: IUnknown; safecall;
    function item(const pvarIndex: OleVariant): OleVariant; safecall;
    property length: Integer read Get_length;
    property _newEnum: IUnknown read Get__newEnum;
  end;

// *********************************************************************//
// DispIntf:  IHTMLRectCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4A4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLRectCollectionDisp = dispinterface
    ['{3050F4A4-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1500;
    property _newEnum: IUnknown readonly dispid -4;
    function item(const pvarIndex: OleVariant): OleVariant; dispid 0;
  end;

// *********************************************************************//
// Interface: IHTMLElementCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F21F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElementCollection = interface(IDispatch)
    ['{3050F21F-98B5-11CF-BB82-00AA00BDCE0B}']
    function toString: WideString; safecall;
    procedure Set_length(p: Integer); safecall;
    function Get_length: Integer; safecall;
    function Get__newEnum: IUnknown; safecall;
    function item(name: OleVariant; index: OleVariant): IDispatch; safecall;
    function tags(tagName: OleVariant): IDispatch; safecall;
    property length: Integer read Get_length write Set_length;
    property _newEnum: IUnknown read Get__newEnum;
  end;

// *********************************************************************//
// DispIntf:  IHTMLElementCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F21F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElementCollectionDisp = dispinterface
    ['{3050F21F-98B5-11CF-BB82-00AA00BDCE0B}']
    function toString: WideString; dispid 1501;
    property length: Integer dispid 1500;
    property _newEnum: IUnknown readonly dispid -4;
    function item(name: OleVariant; index: OleVariant): IDispatch; dispid 0;
    function tags(tagName: OleVariant): IDispatch; dispid 1502;
  end;

// *********************************************************************//
// Interface: IHTMLElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F434-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElement2 = interface(IDispatch)
    ['{3050F434-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_scopeName: WideString; safecall;
    procedure setCapture(containerCapture: WordBool); safecall;
    procedure releaseCapture; safecall;
    procedure Set_onlosecapture(p: OleVariant); safecall;
    function Get_onlosecapture: OleVariant; safecall;
    function componentFromPoint(x: Integer; y: Integer): WideString; safecall;
    procedure doScroll(component: OleVariant); safecall;
    procedure Set_onscroll(p: OleVariant); safecall;
    function Get_onscroll: OleVariant; safecall;
    procedure Set_ondrag(p: OleVariant); safecall;
    function Get_ondrag: OleVariant; safecall;
    procedure Set_ondragend(p: OleVariant); safecall;
    function Get_ondragend: OleVariant; safecall;
    procedure Set_ondragenter(p: OleVariant); safecall;
    function Get_ondragenter: OleVariant; safecall;
    procedure Set_ondragover(p: OleVariant); safecall;
    function Get_ondragover: OleVariant; safecall;
    procedure Set_ondragleave(p: OleVariant); safecall;
    function Get_ondragleave: OleVariant; safecall;
    procedure Set_ondrop(p: OleVariant); safecall;
    function Get_ondrop: OleVariant; safecall;
    procedure Set_onbeforecut(p: OleVariant); safecall;
    function Get_onbeforecut: OleVariant; safecall;
    procedure Set_oncut(p: OleVariant); safecall;
    function Get_oncut: OleVariant; safecall;
    procedure Set_onbeforecopy(p: OleVariant); safecall;
    function Get_onbeforecopy: OleVariant; safecall;
    procedure Set_oncopy(p: OleVariant); safecall;
    function Get_oncopy: OleVariant; safecall;
    procedure Set_onbeforepaste(p: OleVariant); safecall;
    function Get_onbeforepaste: OleVariant; safecall;
    procedure Set_onpaste(p: OleVariant); safecall;
    function Get_onpaste: OleVariant; safecall;
    function Get_currentStyle: IHTMLCurrentStyle; safecall;
    procedure Set_onpropertychange(p: OleVariant); safecall;
    function Get_onpropertychange: OleVariant; safecall;
    function getClientRects: IHTMLRectCollection; safecall;
    function getBoundingClientRect: IHTMLRect; safecall;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); safecall;
    function getExpression(const propname: WideString): OleVariant; safecall;
    function removeExpression(const propname: WideString): WordBool; safecall;
    procedure Set_tabIndex(p: Smallint); safecall;
    function Get_tabIndex: Smallint; safecall;
    procedure focus; safecall;
    procedure Set_accessKey(const p: WideString); safecall;
    function Get_accessKey: WideString; safecall;
    procedure Set_onblur(p: OleVariant); safecall;
    function Get_onblur: OleVariant; safecall;
    procedure Set_onfocus(p: OleVariant); safecall;
    function Get_onfocus: OleVariant; safecall;
    procedure Set_onresize(p: OleVariant); safecall;
    function Get_onresize: OleVariant; safecall;
    procedure blur; safecall;
    procedure addFilter(const pUnk: IUnknown); safecall;
    procedure removeFilter(const pUnk: IUnknown); safecall;
    function Get_clientHeight: Integer; safecall;
    function Get_clientWidth: Integer; safecall;
    function Get_clientTop: Integer; safecall;
    function Get_clientLeft: Integer; safecall;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; safecall;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); safecall;
    function Get_readyState: OleVariant; safecall;
    procedure Set_onreadystatechange(p: OleVariant); safecall;
    function Get_onreadystatechange: OleVariant; safecall;
    procedure Set_onrowsdelete(p: OleVariant); safecall;
    function Get_onrowsdelete: OleVariant; safecall;
    procedure Set_onrowsinserted(p: OleVariant); safecall;
    function Get_onrowsinserted: OleVariant; safecall;
    procedure Set_oncellchange(p: OleVariant); safecall;
    function Get_oncellchange: OleVariant; safecall;
    procedure Set_dir(const p: WideString); safecall;
    function Get_dir: WideString; safecall;
    function createControlRange: IDispatch; safecall;
    function Get_scrollHeight: Integer; safecall;
    function Get_scrollWidth: Integer; safecall;
    procedure Set_scrollTop(p: Integer); safecall;
    function Get_scrollTop: Integer; safecall;
    procedure Set_scrollLeft(p: Integer); safecall;
    function Get_scrollLeft: Integer; safecall;
    procedure clearAttributes; safecall;
    procedure mergeAttributes(const mergeThis: IHTMLElement); safecall;
    procedure Set_oncontextmenu(p: OleVariant); safecall;
    function Get_oncontextmenu: OleVariant; safecall;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; safecall;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; safecall;
    function getAdjacentText(const where: WideString): WideString; safecall;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; safecall;
    function Get_canHaveChildren: WordBool; safecall;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; safecall;
    function removeBehavior(cookie: Integer): WordBool; safecall;
    function Get_runtimeStyle: IHTMLStyle; safecall;
    function Get_behaviorUrns: IDispatch; safecall;
    procedure Set_tagUrn(const p: WideString); safecall;
    function Get_tagUrn: WideString; safecall;
    procedure Set_onbeforeeditfocus(p: OleVariant); safecall;
    function Get_onbeforeeditfocus: OleVariant; safecall;
    function Get_readyStateValue: Integer; safecall;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; safecall;
    property scopeName: WideString read Get_scopeName;
    property onlosecapture: OleVariant read Get_onlosecapture write Set_onlosecapture;
    property onscroll: OleVariant read Get_onscroll write Set_onscroll;
    property ondrag: OleVariant read Get_ondrag write Set_ondrag;
    property ondragend: OleVariant read Get_ondragend write Set_ondragend;
    property ondragenter: OleVariant read Get_ondragenter write Set_ondragenter;
    property ondragover: OleVariant read Get_ondragover write Set_ondragover;
    property ondragleave: OleVariant read Get_ondragleave write Set_ondragleave;
    property ondrop: OleVariant read Get_ondrop write Set_ondrop;
    property onbeforecut: OleVariant read Get_onbeforecut write Set_onbeforecut;
    property oncut: OleVariant read Get_oncut write Set_oncut;
    property onbeforecopy: OleVariant read Get_onbeforecopy write Set_onbeforecopy;
    property oncopy: OleVariant read Get_oncopy write Set_oncopy;
    property onbeforepaste: OleVariant read Get_onbeforepaste write Set_onbeforepaste;
    property onpaste: OleVariant read Get_onpaste write Set_onpaste;
    property currentStyle: IHTMLCurrentStyle read Get_currentStyle;
    property onpropertychange: OleVariant read Get_onpropertychange write Set_onpropertychange;
    property tabIndex: Smallint read Get_tabIndex write Set_tabIndex;
    property accessKey: WideString read Get_accessKey write Set_accessKey;
    property onblur: OleVariant read Get_onblur write Set_onblur;
    property onfocus: OleVariant read Get_onfocus write Set_onfocus;
    property onresize: OleVariant read Get_onresize write Set_onresize;
    property clientHeight: Integer read Get_clientHeight;
    property clientWidth: Integer read Get_clientWidth;
    property clientTop: Integer read Get_clientTop;
    property clientLeft: Integer read Get_clientLeft;
    property readyState: OleVariant read Get_readyState;
    property onreadystatechange: OleVariant read Get_onreadystatechange write Set_onreadystatechange;
    property onrowsdelete: OleVariant read Get_onrowsdelete write Set_onrowsdelete;
    property onrowsinserted: OleVariant read Get_onrowsinserted write Set_onrowsinserted;
    property oncellchange: OleVariant read Get_oncellchange write Set_oncellchange;
    property dir: WideString read Get_dir write Set_dir;
    property scrollHeight: Integer read Get_scrollHeight;
    property scrollWidth: Integer read Get_scrollWidth;
    property scrollTop: Integer read Get_scrollTop write Set_scrollTop;
    property scrollLeft: Integer read Get_scrollLeft write Set_scrollLeft;
    property oncontextmenu: OleVariant read Get_oncontextmenu write Set_oncontextmenu;
    property canHaveChildren: WordBool read Get_canHaveChildren;
    property runtimeStyle: IHTMLStyle read Get_runtimeStyle;
    property behaviorUrns: IDispatch read Get_behaviorUrns;
    property tagUrn: WideString read Get_tagUrn write Set_tagUrn;
    property onbeforeeditfocus: OleVariant read Get_onbeforeeditfocus write Set_onbeforeeditfocus;
    property readyStateValue: Integer read Get_readyStateValue;
  end;

// *********************************************************************//
// DispIntf:  IHTMLElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F434-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElement2Disp = dispinterface
    ['{3050F434-98B5-11CF-BB82-00AA00BDCE0B}']
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    procedure mergeAttributes(const mergeThis: IHTMLElement); dispid -2147417049;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
  end;

// *********************************************************************//
// Interface: IHTMLAttributeCollection3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510469-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAttributeCollection3 = interface(IDispatch)
    ['{30510469-98B5-11CF-BB82-00AA00BDCE0B}']
    function getNamedItem(const bstrName: WideString): IHTMLDOMAttribute; safecall;
    function setNamedItem(const pNodeIn: IHTMLDOMAttribute): IHTMLDOMAttribute; safecall;
    function removeNamedItem(const bstrName: WideString): IHTMLDOMAttribute; safecall;
    function item(index: Integer): IHTMLDOMAttribute; safecall;
    function Get_length: Integer; safecall;
    property length: Integer read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IHTMLAttributeCollection3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510469-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAttributeCollection3Disp = dispinterface
    ['{30510469-98B5-11CF-BB82-00AA00BDCE0B}']
    function getNamedItem(const bstrName: WideString): IHTMLDOMAttribute; dispid 1150;
    function setNamedItem(const pNodeIn: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid 1151;
    function removeNamedItem(const bstrName: WideString): IHTMLDOMAttribute; dispid 1152;
    function item(index: Integer): IHTMLDOMAttribute; dispid 1154;
    property length: Integer readonly dispid 1153;
  end;

// *********************************************************************//
// Interface: IHTMLDOMAttribute
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4B0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMAttribute = interface(IDispatch)
    ['{3050F4B0-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_nodeName: WideString; safecall;
    procedure Set_nodeValue(p: OleVariant); safecall;
    function Get_nodeValue: OleVariant; safecall;
    function Get_specified: WordBool; safecall;
    property nodeName: WideString read Get_nodeName;
    property nodeValue: OleVariant read Get_nodeValue write Set_nodeValue;
    property specified: WordBool read Get_specified;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDOMAttributeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4B0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMAttributeDisp = dispinterface
    ['{3050F4B0-98B5-11CF-BB82-00AA00BDCE0B}']
    property nodeName: WideString readonly dispid 1000;
    property nodeValue: OleVariant dispid 1002;
    property specified: WordBool readonly dispid 1001;
  end;

// *********************************************************************//
// Interface: IDOMDocumentType
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510738-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMDocumentType = interface(IDispatch)
    ['{30510738-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_name: WideString; safecall;
    function Get_entities: IDispatch; safecall;
    function Get_notations: IDispatch; safecall;
    function Get_publicId: OleVariant; safecall;
    function Get_systemId: OleVariant; safecall;
    function Get_internalSubset: OleVariant; safecall;
    property name: WideString read Get_name;
    property entities: IDispatch read Get_entities;
    property notations: IDispatch read Get_notations;
    property publicId: OleVariant read Get_publicId;
    property systemId: OleVariant read Get_systemId;
    property internalSubset: OleVariant read Get_internalSubset;
  end;

// *********************************************************************//
// DispIntf:  IDOMDocumentTypeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510738-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMDocumentTypeDisp = dispinterface
    ['{30510738-98B5-11CF-BB82-00AA00BDCE0B}']
    property name: WideString readonly dispid 1000;
    property entities: IDispatch readonly dispid 1001;
    property notations: IDispatch readonly dispid 1002;
    property publicId: OleVariant readonly dispid 1003;
    property systemId: OleVariant readonly dispid 1004;
    property internalSubset: OleVariant readonly dispid 1005;
  end;

// *********************************************************************//
// Interface: IHTMLDocument7
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104B8-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDocument7 = interface(IDispatch)
    ['{305104B8-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_defaultView: IHTMLWindow2; safecall;
    function createCDATASection(const text: WideString): IHTMLDOMNode; safecall;
    function getSelection: IHTMLSelection; safecall;
    function getElementsByTagNameNS(const pvarNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; safecall;
    function createElementNS(const pvarNS: OleVariant; const bstrTag: WideString): IHTMLElement; safecall;
    function createAttributeNS(const pvarNS: OleVariant; const bstrAttrName: WideString): IHTMLDOMAttribute; safecall;
    procedure Set_onmsthumbnailclick(p: OleVariant); safecall;
    function Get_onmsthumbnailclick: OleVariant; safecall;
    function Get_characterSet: WideString; safecall;
    function createElement(const bstrTag: WideString): IHTMLElement; safecall;
    function createAttribute(const bstrAttrName: WideString): IHTMLDOMAttribute; safecall;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; safecall;
    function createProcessingInstruction(const bstrTarget: WideString; const bstrData: WideString): IDOMProcessingInstruction; safecall;
    function adoptNode(const pNodeSource: IHTMLDOMNode): IHTMLDOMNode3; safecall;
    procedure Set_onmssitemodejumplistitemremoved(p: OleVariant); safecall;
    function Get_onmssitemodejumplistitemremoved: OleVariant; safecall;
    function Get_all: IHTMLElementCollection; safecall;
    function Get_inputEncoding: WideString; safecall;
    function Get_xmlEncoding: WideString; safecall;
    procedure Set_xmlStandalone(p: WordBool); safecall;
    function Get_xmlStandalone: WordBool; safecall;
    procedure Set_xmlVersion(const p: WideString); safecall;
    function Get_xmlVersion: WideString; safecall;
    function hasAttributes: WordBool; safecall;
    procedure Set_onabort(p: OleVariant); safecall;
    function Get_onabort: OleVariant; safecall;
    procedure Set_onblur(p: OleVariant); safecall;
    function Get_onblur: OleVariant; safecall;
    procedure Set_oncanplay(p: OleVariant); safecall;
    function Get_oncanplay: OleVariant; safecall;
    procedure Set_oncanplaythrough(p: OleVariant); safecall;
    function Get_oncanplaythrough: OleVariant; safecall;
    procedure Set_onchange(p: OleVariant); safecall;
    function Get_onchange: OleVariant; safecall;
    procedure Set_ondrag(p: OleVariant); safecall;
    function Get_ondrag: OleVariant; safecall;
    procedure Set_ondragend(p: OleVariant); safecall;
    function Get_ondragend: OleVariant; safecall;
    procedure Set_ondragenter(p: OleVariant); safecall;
    function Get_ondragenter: OleVariant; safecall;
    procedure Set_ondragleave(p: OleVariant); safecall;
    function Get_ondragleave: OleVariant; safecall;
    procedure Set_ondragover(p: OleVariant); safecall;
    function Get_ondragover: OleVariant; safecall;
    procedure Set_ondrop(p: OleVariant); safecall;
    function Get_ondrop: OleVariant; safecall;
    procedure Set_ondurationchange(p: OleVariant); safecall;
    function Get_ondurationchange: OleVariant; safecall;
    procedure Set_onemptied(p: OleVariant); safecall;
    function Get_onemptied: OleVariant; safecall;
    procedure Set_onended(p: OleVariant); safecall;
    function Get_onended: OleVariant; safecall;
    procedure Set_onerror(p: OleVariant); safecall;
    function Get_onerror: OleVariant; safecall;
    procedure Set_onfocus(p: OleVariant); safecall;
    function Get_onfocus: OleVariant; safecall;
    procedure Set_oninput(p: OleVariant); safecall;
    function Get_oninput: OleVariant; safecall;
    procedure Set_onload(p: OleVariant); safecall;
    function Get_onload: OleVariant; safecall;
    procedure Set_onloadeddata(p: OleVariant); safecall;
    function Get_onloadeddata: OleVariant; safecall;
    procedure Set_onloadedmetadata(p: OleVariant); safecall;
    function Get_onloadedmetadata: OleVariant; safecall;
    procedure Set_onloadstart(p: OleVariant); safecall;
    function Get_onloadstart: OleVariant; safecall;
    procedure Set_onpause(p: OleVariant); safecall;
    function Get_onpause: OleVariant; safecall;
    procedure Set_onplay(p: OleVariant); safecall;
    function Get_onplay: OleVariant; safecall;
    procedure Set_onplaying(p: OleVariant); safecall;
    function Get_onplaying: OleVariant; safecall;
    procedure Set_onprogress(p: OleVariant); safecall;
    function Get_onprogress: OleVariant; safecall;
    procedure Set_onratechange(p: OleVariant); safecall;
    function Get_onratechange: OleVariant; safecall;
    procedure Set_onreset(p: OleVariant); safecall;
    function Get_onreset: OleVariant; safecall;
    procedure Set_onscroll(p: OleVariant); safecall;
    function Get_onscroll: OleVariant; safecall;
    procedure Set_onseeked(p: OleVariant); safecall;
    function Get_onseeked: OleVariant; safecall;
    procedure Set_onseeking(p: OleVariant); safecall;
    function Get_onseeking: OleVariant; safecall;
    procedure Set_onselect(p: OleVariant); safecall;
    function Get_onselect: OleVariant; safecall;
    procedure Set_onstalled(p: OleVariant); safecall;
    function Get_onstalled: OleVariant; safecall;
    procedure Set_onsubmit(p: OleVariant); safecall;
    function Get_onsubmit: OleVariant; safecall;
    procedure Set_onsuspend(p: OleVariant); safecall;
    function Get_onsuspend: OleVariant; safecall;
    procedure Set_ontimeupdate(p: OleVariant); safecall;
    function Get_ontimeupdate: OleVariant; safecall;
    procedure Set_onvolumechange(p: OleVariant); safecall;
    function Get_onvolumechange: OleVariant; safecall;
    procedure Set_onwaiting(p: OleVariant); safecall;
    function Get_onwaiting: OleVariant; safecall;
    procedure normalize; safecall;
    function importNode(const pNodeSource: IHTMLDOMNode; fDeep: WordBool): IHTMLDOMNode3; safecall;
    function Get_parentWindow: IHTMLWindow2; safecall;
    procedure _Set_body(const p: IHTMLElement); safecall;
    function Get_body: IHTMLElement; safecall;
    function Get_head: IHTMLElement; safecall;
    property defaultView: IHTMLWindow2 read Get_defaultView;
    property onmsthumbnailclick: OleVariant read Get_onmsthumbnailclick write Set_onmsthumbnailclick;
    property characterSet: WideString read Get_characterSet;
    property onmssitemodejumplistitemremoved: OleVariant read Get_onmssitemodejumplistitemremoved write Set_onmssitemodejumplistitemremoved;
    property all: IHTMLElementCollection read Get_all;
    property inputEncoding: WideString read Get_inputEncoding;
    property xmlEncoding: WideString read Get_xmlEncoding;
    property xmlStandalone: WordBool read Get_xmlStandalone write Set_xmlStandalone;
    property xmlVersion: WideString read Get_xmlVersion write Set_xmlVersion;
    property onabort: OleVariant read Get_onabort write Set_onabort;
    property onblur: OleVariant read Get_onblur write Set_onblur;
    property oncanplay: OleVariant read Get_oncanplay write Set_oncanplay;
    property oncanplaythrough: OleVariant read Get_oncanplaythrough write Set_oncanplaythrough;
    property onchange: OleVariant read Get_onchange write Set_onchange;
    property ondrag: OleVariant read Get_ondrag write Set_ondrag;
    property ondragend: OleVariant read Get_ondragend write Set_ondragend;
    property ondragenter: OleVariant read Get_ondragenter write Set_ondragenter;
    property ondragleave: OleVariant read Get_ondragleave write Set_ondragleave;
    property ondragover: OleVariant read Get_ondragover write Set_ondragover;
    property ondrop: OleVariant read Get_ondrop write Set_ondrop;
    property ondurationchange: OleVariant read Get_ondurationchange write Set_ondurationchange;
    property onemptied: OleVariant read Get_onemptied write Set_onemptied;
    property onended: OleVariant read Get_onended write Set_onended;
    property onerror: OleVariant read Get_onerror write Set_onerror;
    property onfocus: OleVariant read Get_onfocus write Set_onfocus;
    property oninput: OleVariant read Get_oninput write Set_oninput;
    property onload: OleVariant read Get_onload write Set_onload;
    property onloadeddata: OleVariant read Get_onloadeddata write Set_onloadeddata;
    property onloadedmetadata: OleVariant read Get_onloadedmetadata write Set_onloadedmetadata;
    property onloadstart: OleVariant read Get_onloadstart write Set_onloadstart;
    property onpause: OleVariant read Get_onpause write Set_onpause;
    property onplay: OleVariant read Get_onplay write Set_onplay;
    property onplaying: OleVariant read Get_onplaying write Set_onplaying;
    property onprogress: OleVariant read Get_onprogress write Set_onprogress;
    property onratechange: OleVariant read Get_onratechange write Set_onratechange;
    property onreset: OleVariant read Get_onreset write Set_onreset;
    property onscroll: OleVariant read Get_onscroll write Set_onscroll;
    property onseeked: OleVariant read Get_onseeked write Set_onseeked;
    property onseeking: OleVariant read Get_onseeking write Set_onseeking;
    property onselect: OleVariant read Get_onselect write Set_onselect;
    property onstalled: OleVariant read Get_onstalled write Set_onstalled;
    property onsubmit: OleVariant read Get_onsubmit write Set_onsubmit;
    property onsuspend: OleVariant read Get_onsuspend write Set_onsuspend;
    property ontimeupdate: OleVariant read Get_ontimeupdate write Set_ontimeupdate;
    property onvolumechange: OleVariant read Get_onvolumechange write Set_onvolumechange;
    property onwaiting: OleVariant read Get_onwaiting write Set_onwaiting;
    property parentWindow: IHTMLWindow2 read Get_parentWindow;
    property body: IHTMLElement read Get_body write _Set_body;
    property head: IHTMLElement read Get_head;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDocument7Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104B8-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDocument7Disp = dispinterface
    ['{305104B8-98B5-11CF-BB82-00AA00BDCE0B}']
    property defaultView: IHTMLWindow2 readonly dispid 1110;
    function createCDATASection(const text: WideString): IHTMLDOMNode; dispid 1123;
    function getSelection: IHTMLSelection; dispid 1112;
    function getElementsByTagNameNS(const pvarNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid 1113;
    function createElementNS(const pvarNS: OleVariant; const bstrTag: WideString): IHTMLElement; dispid 1114;
    function createAttributeNS(const pvarNS: OleVariant; const bstrAttrName: WideString): IHTMLDOMAttribute; dispid 1115;
    property onmsthumbnailclick: OleVariant dispid -2147411991;
    property characterSet: WideString readonly dispid 1117;
    function createElement(const bstrTag: WideString): IHTMLElement; dispid 1118;
    function createAttribute(const bstrAttrName: WideString): IHTMLDOMAttribute; dispid 1119;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid 1120;
    function createProcessingInstruction(const bstrTarget: WideString; const bstrData: WideString): IDOMProcessingInstruction; dispid 1124;
    function adoptNode(const pNodeSource: IHTMLDOMNode): IHTMLDOMNode3; dispid 1125;
    property onmssitemodejumplistitemremoved: OleVariant dispid -2147411982;
    property all: IHTMLElementCollection readonly dispid 1126;
    property inputEncoding: WideString readonly dispid 1127;
    property xmlEncoding: WideString readonly dispid 1128;
    property xmlStandalone: WordBool dispid 1129;
    property xmlVersion: WideString dispid 1130;
    function hasAttributes: WordBool; dispid 1132;
    property onabort: OleVariant dispid -2147412084;
    property onblur: OleVariant dispid -2147412097;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragleave: OleVariant dispid -2147412059;
    property ondragover: OleVariant dispid -2147412060;
    property ondrop: OleVariant dispid -2147412058;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property onfocus: OleVariant dispid -2147412098;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onscroll: OleVariant dispid -2147412081;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    procedure normalize; dispid 1134;
    function importNode(const pNodeSource: IHTMLDOMNode; fDeep: WordBool): IHTMLDOMNode3; dispid 1135;
    property parentWindow: IHTMLWindow2 readonly dispid 1136;
    property body: IHTMLElement dispid 1137;
    property head: IHTMLElement readonly dispid 1138;
  end;

// *********************************************************************//
// Interface: IHTMLFramesCollection2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {332C4426-26CB-11D0-B483-00C04FD90119}
// *********************************************************************//
  IHTMLFramesCollection2 = interface(IDispatch)
    ['{332C4426-26CB-11D0-B483-00C04FD90119}']
    function item(const pvarIndex: OleVariant): OleVariant; safecall;
    function Get_length: Integer; safecall;
    property length: Integer read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFramesCollection2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {332C4426-26CB-11D0-B483-00C04FD90119}
// *********************************************************************//
  IHTMLFramesCollection2Disp = dispinterface
    ['{332C4426-26CB-11D0-B483-00C04FD90119}']
    function item(const pvarIndex: OleVariant): OleVariant; dispid 0;
    property length: Integer readonly dispid 1001;
  end;

// *********************************************************************//
// Interface: IHTMLWindow2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {332C4427-26CB-11D0-B483-00C04FD90119}
// *********************************************************************//
  IHTMLWindow2 = interface(IHTMLFramesCollection2)
    ['{332C4427-26CB-11D0-B483-00C04FD90119}']
    function Get_frames: IHTMLFramesCollection2; safecall;
    procedure Set_defaultStatus(const p: WideString); safecall;
    function Get_defaultStatus: WideString; safecall;
    procedure Set_status(const p: WideString); safecall;
    function Get_status: WideString; safecall;
    function setTimeout(const expression: WideString; msec: Integer; const language: OleVariant): Integer; safecall;
    procedure clearTimeout(timerID: Integer); safecall;
    procedure alert(const message: WideString); safecall;
    function confirm(const message: WideString): WordBool; safecall;
    function prompt(const message: WideString; const defstr: WideString): OleVariant; safecall;
    function Get_Image: IHTMLImageElementFactory; safecall;
    function Get_location: IHTMLLocation; safecall;
    function Get_history: IOmHistory; safecall;
    procedure close; safecall;
    procedure Set_opener(p: OleVariant); safecall;
    function Get_opener: OleVariant; safecall;
    function Get_navigator: IOmNavigator; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    function Get_parent: IHTMLWindow2; safecall;
    function open(const url: WideString; const name: WideString; const features: WideString; 
                  replace: WordBool): IHTMLWindow2; safecall;
    function Get_self: IHTMLWindow2; safecall;
    function Get_top: IHTMLWindow2; safecall;
    function Get_window: IHTMLWindow2; safecall;
    procedure navigate(const url: WideString); safecall;
    procedure Set_onfocus(p: OleVariant); safecall;
    function Get_onfocus: OleVariant; safecall;
    procedure Set_onblur(p: OleVariant); safecall;
    function Get_onblur: OleVariant; safecall;
    procedure Set_onload(p: OleVariant); safecall;
    function Get_onload: OleVariant; safecall;
    procedure Set_onbeforeunload(p: OleVariant); safecall;
    function Get_onbeforeunload: OleVariant; safecall;
    procedure Set_onunload(p: OleVariant); safecall;
    function Get_onunload: OleVariant; safecall;
    procedure Set_onhelp(p: OleVariant); safecall;
    function Get_onhelp: OleVariant; safecall;
    procedure Set_onerror(p: OleVariant); safecall;
    function Get_onerror: OleVariant; safecall;
    procedure Set_onresize(p: OleVariant); safecall;
    function Get_onresize: OleVariant; safecall;
    procedure Set_onscroll(p: OleVariant); safecall;
    function Get_onscroll: OleVariant; safecall;
    function Get_document: IHTMLDocument2; safecall;
    function Get_event: IHTMLEventObj; safecall;
    function Get__newEnum: IUnknown; safecall;
    function showModalDialog(const dialog: WideString; const varArgIn: OleVariant; 
                             const varOptions: OleVariant): OleVariant; safecall;
    procedure showHelp(const helpURL: WideString; helpArg: OleVariant; const features: WideString); safecall;
    function Get_screen: IHTMLScreen; safecall;
    function Get_Option: IHTMLOptionElementFactory; safecall;
    procedure focus; safecall;
    function Get_closed: WordBool; safecall;
    procedure blur; safecall;
    procedure scroll(x: Integer; y: Integer); safecall;
    function Get_clientInformation: IOmNavigator; safecall;
    function setInterval(const expression: WideString; msec: Integer; const language: OleVariant): Integer; safecall;
    procedure clearInterval(timerID: Integer); safecall;
    procedure Set_offscreenBuffering(p: OleVariant); safecall;
    function Get_offscreenBuffering: OleVariant; safecall;
    function execScript(const code: WideString; const language: WideString): OleVariant; safecall;
    function toString: WideString; safecall;
    procedure scrollBy(x: Integer; y: Integer); safecall;
    procedure scrollTo(x: Integer; y: Integer); safecall;
    procedure moveTo(x: Integer; y: Integer); safecall;
    procedure moveBy(x: Integer; y: Integer); safecall;
    procedure resizeTo(x: Integer; y: Integer); safecall;
    procedure resizeBy(x: Integer; y: Integer); safecall;
    function Get_external: IDispatch; safecall;
    property frames: IHTMLFramesCollection2 read Get_frames;
    property defaultStatus: WideString read Get_defaultStatus write Set_defaultStatus;
    property status: WideString read Get_status write Set_status;
    property Image: IHTMLImageElementFactory read Get_Image;
    property location: IHTMLLocation read Get_location;
    property history: IOmHistory read Get_history;
    property opener: OleVariant read Get_opener write Set_opener;
    property navigator: IOmNavigator read Get_navigator;
    property name: WideString read Get_name write Set_name;
    property parent: IHTMLWindow2 read Get_parent;
    property self: IHTMLWindow2 read Get_self;
    property top: IHTMLWindow2 read Get_top;
    property window: IHTMLWindow2 read Get_window;
    property onfocus: OleVariant read Get_onfocus write Set_onfocus;
    property onblur: OleVariant read Get_onblur write Set_onblur;
    property onload: OleVariant read Get_onload write Set_onload;
    property onbeforeunload: OleVariant read Get_onbeforeunload write Set_onbeforeunload;
    property onunload: OleVariant read Get_onunload write Set_onunload;
    property onhelp: OleVariant read Get_onhelp write Set_onhelp;
    property onerror: OleVariant read Get_onerror write Set_onerror;
    property onresize: OleVariant read Get_onresize write Set_onresize;
    property onscroll: OleVariant read Get_onscroll write Set_onscroll;
    property document: IHTMLDocument2 read Get_document;
    property event: IHTMLEventObj read Get_event;
    property _newEnum: IUnknown read Get__newEnum;
    property screen: IHTMLScreen read Get_screen;
    property Option: IHTMLOptionElementFactory read Get_Option;
    property closed: WordBool read Get_closed;
    property clientInformation: IOmNavigator read Get_clientInformation;
    property offscreenBuffering: OleVariant read Get_offscreenBuffering write Set_offscreenBuffering;
    property external: IDispatch read Get_external;
  end;

// *********************************************************************//
// DispIntf:  IHTMLWindow2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {332C4427-26CB-11D0-B483-00C04FD90119}
// *********************************************************************//
  IHTMLWindow2Disp = dispinterface
    ['{332C4427-26CB-11D0-B483-00C04FD90119}']
    property frames: IHTMLFramesCollection2 readonly dispid 1100;
    property defaultStatus: WideString dispid 1101;
    property status: WideString dispid 1102;
    function setTimeout(const expression: WideString; msec: Integer; const language: OleVariant): Integer; dispid 1172;
    procedure clearTimeout(timerID: Integer); dispid 1104;
    procedure alert(const message: WideString); dispid 1105;
    function confirm(const message: WideString): WordBool; dispid 1110;
    function prompt(const message: WideString; const defstr: WideString): OleVariant; dispid 1111;
    property Image: IHTMLImageElementFactory readonly dispid 1125;
    property location: IHTMLLocation readonly dispid 14;
    property history: IOmHistory readonly dispid 2;
    procedure close; dispid 3;
    property opener: OleVariant dispid 4;
    property navigator: IOmNavigator readonly dispid 5;
    property name: WideString dispid 11;
    property parent: IHTMLWindow2 readonly dispid 12;
    function open(const url: WideString; const name: WideString; const features: WideString; 
                  replace: WordBool): IHTMLWindow2; dispid 13;
    property self: IHTMLWindow2 readonly dispid 20;
    property top: IHTMLWindow2 readonly dispid 21;
    property window: IHTMLWindow2 readonly dispid 22;
    procedure navigate(const url: WideString); dispid 25;
    property onfocus: OleVariant dispid -2147412098;
    property onblur: OleVariant dispid -2147412097;
    property onload: OleVariant dispid -2147412080;
    property onbeforeunload: OleVariant dispid -2147412073;
    property onunload: OleVariant dispid -2147412079;
    property onhelp: OleVariant dispid -2147412099;
    property onerror: OleVariant dispid -2147412083;
    property onresize: OleVariant dispid -2147412076;
    property onscroll: OleVariant dispid -2147412081;
    property document: IHTMLDocument2 readonly dispid 1151;
    property event: IHTMLEventObj readonly dispid 1152;
    property _newEnum: IUnknown readonly dispid 1153;
    function showModalDialog(const dialog: WideString; const varArgIn: OleVariant; 
                             const varOptions: OleVariant): OleVariant; dispid 1154;
    procedure showHelp(const helpURL: WideString; helpArg: OleVariant; const features: WideString); dispid 1155;
    property screen: IHTMLScreen readonly dispid 1156;
    property Option: IHTMLOptionElementFactory readonly dispid 1157;
    procedure focus; dispid 1158;
    property closed: WordBool readonly dispid 23;
    procedure blur; dispid 1159;
    procedure scroll(x: Integer; y: Integer); dispid 1160;
    property clientInformation: IOmNavigator readonly dispid 1161;
    function setInterval(const expression: WideString; msec: Integer; const language: OleVariant): Integer; dispid 1173;
    procedure clearInterval(timerID: Integer); dispid 1163;
    property offscreenBuffering: OleVariant dispid 1164;
    function execScript(const code: WideString; const language: WideString): OleVariant; dispid 1165;
    function toString: WideString; dispid 1166;
    procedure scrollBy(x: Integer; y: Integer); dispid 1167;
    procedure scrollTo(x: Integer; y: Integer); dispid 1168;
    procedure moveTo(x: Integer; y: Integer); dispid 6;
    procedure moveBy(x: Integer; y: Integer); dispid 7;
    procedure resizeTo(x: Integer; y: Integer); dispid 9;
    procedure resizeBy(x: Integer; y: Integer); dispid 8;
    property external: IDispatch readonly dispid 1169;
    function item(const pvarIndex: OleVariant): OleVariant; dispid 0;
    property length: Integer readonly dispid 1001;
  end;

// *********************************************************************//
// Interface: IHTMLImageElementFactory
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F38E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLImageElementFactory = interface(IDispatch)
    ['{3050F38E-98B5-11CF-BB82-00AA00BDCE0B}']
    function create(width: OleVariant; height: OleVariant): IHTMLImgElement; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLImageElementFactoryDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F38E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLImageElementFactoryDisp = dispinterface
    ['{3050F38E-98B5-11CF-BB82-00AA00BDCE0B}']
    function create(width: OleVariant; height: OleVariant): IHTMLImgElement; dispid 0;
  end;

// *********************************************************************//
// Interface: IHTMLImgElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F240-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLImgElement = interface(IDispatch)
    ['{3050F240-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_isMap(p: WordBool); safecall;
    function Get_isMap: WordBool; safecall;
    procedure Set_useMap(const p: WideString); safecall;
    function Get_useMap: WideString; safecall;
    function Get_mimeType: WideString; safecall;
    function Get_fileSize: WideString; safecall;
    function Get_fileCreatedDate: WideString; safecall;
    function Get_fileModifiedDate: WideString; safecall;
    function Get_fileUpdatedDate: WideString; safecall;
    function Get_protocol: WideString; safecall;
    function Get_href: WideString; safecall;
    function Get_nameProp: WideString; safecall;
    procedure Set_border(p: OleVariant); safecall;
    function Get_border: OleVariant; safecall;
    procedure Set_vspace(p: Integer); safecall;
    function Get_vspace: Integer; safecall;
    procedure Set_hspace(p: Integer); safecall;
    function Get_hspace: Integer; safecall;
    procedure Set_alt(const p: WideString); safecall;
    function Get_alt: WideString; safecall;
    procedure Set_src(const p: WideString); safecall;
    function Get_src: WideString; safecall;
    procedure Set_lowsrc(const p: WideString); safecall;
    function Get_lowsrc: WideString; safecall;
    procedure Set_vrml(const p: WideString); safecall;
    function Get_vrml: WideString; safecall;
    procedure Set_dynsrc(const p: WideString); safecall;
    function Get_dynsrc: WideString; safecall;
    function Get_readyState: WideString; safecall;
    function Get_complete: WordBool; safecall;
    procedure Set_loop(p: OleVariant); safecall;
    function Get_loop: OleVariant; safecall;
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    procedure Set_onload(p: OleVariant); safecall;
    function Get_onload: OleVariant; safecall;
    procedure Set_onerror(p: OleVariant); safecall;
    function Get_onerror: OleVariant; safecall;
    procedure Set_onabort(p: OleVariant); safecall;
    function Get_onabort: OleVariant; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_width(p: Integer); safecall;
    function Get_width: Integer; safecall;
    procedure Set_height(p: Integer); safecall;
    function Get_height: Integer; safecall;
    procedure Set_start(const p: WideString); safecall;
    function Get_start: WideString; safecall;
    property isMap: WordBool read Get_isMap write Set_isMap;
    property useMap: WideString read Get_useMap write Set_useMap;
    property mimeType: WideString read Get_mimeType;
    property fileSize: WideString read Get_fileSize;
    property fileCreatedDate: WideString read Get_fileCreatedDate;
    property fileModifiedDate: WideString read Get_fileModifiedDate;
    property fileUpdatedDate: WideString read Get_fileUpdatedDate;
    property protocol: WideString read Get_protocol;
    property href: WideString read Get_href;
    property nameProp: WideString read Get_nameProp;
    property border: OleVariant read Get_border write Set_border;
    property vspace: Integer read Get_vspace write Set_vspace;
    property hspace: Integer read Get_hspace write Set_hspace;
    property alt: WideString read Get_alt write Set_alt;
    property src: WideString read Get_src write Set_src;
    property lowsrc: WideString read Get_lowsrc write Set_lowsrc;
    property vrml: WideString read Get_vrml write Set_vrml;
    property dynsrc: WideString read Get_dynsrc write Set_dynsrc;
    property readyState: WideString read Get_readyState;
    property complete: WordBool read Get_complete;
    property loop: OleVariant read Get_loop write Set_loop;
    property align: WideString read Get_align write Set_align;
    property onload: OleVariant read Get_onload write Set_onload;
    property onerror: OleVariant read Get_onerror write Set_onerror;
    property onabort: OleVariant read Get_onabort write Set_onabort;
    property name: WideString read Get_name write Set_name;
    property width: Integer read Get_width write Set_width;
    property height: Integer read Get_height write Set_height;
    property start: WideString read Get_start write Set_start;
  end;

// *********************************************************************//
// DispIntf:  IHTMLImgElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F240-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLImgElementDisp = dispinterface
    ['{3050F240-98B5-11CF-BB82-00AA00BDCE0B}']
    property isMap: WordBool dispid 2002;
    property useMap: WideString dispid 2008;
    property mimeType: WideString readonly dispid 2010;
    property fileSize: WideString readonly dispid 2011;
    property fileCreatedDate: WideString readonly dispid 2012;
    property fileModifiedDate: WideString readonly dispid 2013;
    property fileUpdatedDate: WideString readonly dispid 2014;
    property protocol: WideString readonly dispid 2015;
    property href: WideString readonly dispid 2016;
    property nameProp: WideString readonly dispid 2017;
    property border: OleVariant dispid 1004;
    property vspace: Integer dispid 1005;
    property hspace: Integer dispid 1006;
    property alt: WideString dispid 1002;
    property src: WideString dispid 1003;
    property lowsrc: WideString dispid 1007;
    property vrml: WideString dispid 1008;
    property dynsrc: WideString dispid 1009;
    property readyState: WideString readonly dispid -2147412996;
    property complete: WordBool readonly dispid 1010;
    property loop: OleVariant dispid 1011;
    property align: WideString dispid -2147418039;
    property onload: OleVariant dispid -2147412080;
    property onerror: OleVariant dispid -2147412083;
    property onabort: OleVariant dispid -2147412084;
    property name: WideString dispid -2147418112;
    property width: Integer dispid -2147418107;
    property height: Integer dispid -2147418106;
    property start: WideString dispid 1013;
  end;

// *********************************************************************//
// Interface: IHTMLLocation
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {163BB1E0-6E00-11CF-837A-48DC04C10000}
// *********************************************************************//
  IHTMLLocation = interface(IDispatch)
    ['{163BB1E0-6E00-11CF-837A-48DC04C10000}']
    procedure Set_href(const p: WideString); safecall;
    function Get_href: WideString; safecall;
    procedure Set_protocol(const p: WideString); safecall;
    function Get_protocol: WideString; safecall;
    procedure Set_host(const p: WideString); safecall;
    function Get_host: WideString; safecall;
    procedure Set_hostname(const p: WideString); safecall;
    function Get_hostname: WideString; safecall;
    procedure Set_port(const p: WideString); safecall;
    function Get_port: WideString; safecall;
    procedure Set_pathname(const p: WideString); safecall;
    function Get_pathname: WideString; safecall;
    procedure Set_search(const p: WideString); safecall;
    function Get_search: WideString; safecall;
    procedure Set_hash(const p: WideString); safecall;
    function Get_hash: WideString; safecall;
    procedure reload(flag: WordBool); safecall;
    procedure replace(const bstr: WideString); safecall;
    procedure Assign_(const bstr: WideString); safecall;
    function toString: WideString; safecall;
    property href: WideString read Get_href write Set_href;
    property protocol: WideString read Get_protocol write Set_protocol;
    property host: WideString read Get_host write Set_host;
    property hostname: WideString read Get_hostname write Set_hostname;
    property port: WideString read Get_port write Set_port;
    property pathname: WideString read Get_pathname write Set_pathname;
    property search: WideString read Get_search write Set_search;
    property hash: WideString read Get_hash write Set_hash;
  end;

// *********************************************************************//
// DispIntf:  IHTMLLocationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {163BB1E0-6E00-11CF-837A-48DC04C10000}
// *********************************************************************//
  IHTMLLocationDisp = dispinterface
    ['{163BB1E0-6E00-11CF-837A-48DC04C10000}']
    property href: WideString dispid 0;
    property protocol: WideString dispid 1;
    property host: WideString dispid 2;
    property hostname: WideString dispid 3;
    property port: WideString dispid 4;
    property pathname: WideString dispid 5;
    property search: WideString dispid 6;
    property hash: WideString dispid 7;
    procedure reload(flag: WordBool); dispid 8;
    procedure replace(const bstr: WideString); dispid 9;
    procedure Assign_(const bstr: WideString); dispid 10;
    function toString: WideString; dispid 11;
  end;

// *********************************************************************//
// Interface: IOmHistory
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FECEAAA2-8405-11CF-8BA1-00AA00476DA6}
// *********************************************************************//
  IOmHistory = interface(IDispatch)
    ['{FECEAAA2-8405-11CF-8BA1-00AA00476DA6}']
    function Get_length: Smallint; safecall;
    procedure back(const pvargdistance: OleVariant); safecall;
    procedure forward(const pvargdistance: OleVariant); safecall;
    procedure go(const pvargdistance: OleVariant); safecall;
    property length: Smallint read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IOmHistoryDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FECEAAA2-8405-11CF-8BA1-00AA00476DA6}
// *********************************************************************//
  IOmHistoryDisp = dispinterface
    ['{FECEAAA2-8405-11CF-8BA1-00AA00476DA6}']
    property length: Smallint readonly dispid 1;
    procedure back(const pvargdistance: OleVariant); dispid 2;
    procedure forward(const pvargdistance: OleVariant); dispid 3;
    procedure go(const pvargdistance: OleVariant); dispid 4;
  end;

// *********************************************************************//
// Interface: IOmNavigator
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FECEAAA5-8405-11CF-8BA1-00AA00476DA6}
// *********************************************************************//
  IOmNavigator = interface(IDispatch)
    ['{FECEAAA5-8405-11CF-8BA1-00AA00476DA6}']
    function Get_appCodeName: WideString; safecall;
    function Get_appName: WideString; safecall;
    function Get_appVersion: WideString; safecall;
    function Get_userAgent: WideString; safecall;
    function javaEnabled: WordBool; safecall;
    function taintEnabled: WordBool; safecall;
    function Get_mimeTypes: IHTMLMimeTypesCollection; safecall;
    function Get_plugins: IHTMLPluginsCollection; safecall;
    function Get_cookieEnabled: WordBool; safecall;
    function Get_opsProfile: IHTMLOpsProfile; safecall;
    function toString: WideString; safecall;
    function Get_cpuClass: WideString; safecall;
    function Get_systemLanguage: WideString; safecall;
    function Get_browserLanguage: WideString; safecall;
    function Get_userLanguage: WideString; safecall;
    function Get_platform: WideString; safecall;
    function Get_appMinorVersion: WideString; safecall;
    function Get_connectionSpeed: Integer; safecall;
    function Get_onLine: WordBool; safecall;
    function Get_userProfile: IHTMLOpsProfile; safecall;
    property appCodeName: WideString read Get_appCodeName;
    property appName: WideString read Get_appName;
    property appVersion: WideString read Get_appVersion;
    property userAgent: WideString read Get_userAgent;
    property mimeTypes: IHTMLMimeTypesCollection read Get_mimeTypes;
    property plugins: IHTMLPluginsCollection read Get_plugins;
    property cookieEnabled: WordBool read Get_cookieEnabled;
    property opsProfile: IHTMLOpsProfile read Get_opsProfile;
    property cpuClass: WideString read Get_cpuClass;
    property systemLanguage: WideString read Get_systemLanguage;
    property browserLanguage: WideString read Get_browserLanguage;
    property userLanguage: WideString read Get_userLanguage;
    property platform: WideString read Get_platform;
    property appMinorVersion: WideString read Get_appMinorVersion;
    property connectionSpeed: Integer read Get_connectionSpeed;
    property onLine: WordBool read Get_onLine;
    property userProfile: IHTMLOpsProfile read Get_userProfile;
  end;

// *********************************************************************//
// DispIntf:  IOmNavigatorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {FECEAAA5-8405-11CF-8BA1-00AA00476DA6}
// *********************************************************************//
  IOmNavigatorDisp = dispinterface
    ['{FECEAAA5-8405-11CF-8BA1-00AA00476DA6}']
    property appCodeName: WideString readonly dispid 1;
    property appName: WideString readonly dispid 2;
    property appVersion: WideString readonly dispid 3;
    property userAgent: WideString readonly dispid 4;
    function javaEnabled: WordBool; dispid 5;
    function taintEnabled: WordBool; dispid 6;
    property mimeTypes: IHTMLMimeTypesCollection readonly dispid 7;
    property plugins: IHTMLPluginsCollection readonly dispid 8;
    property cookieEnabled: WordBool readonly dispid 9;
    property opsProfile: IHTMLOpsProfile readonly dispid 10;
    function toString: WideString; dispid 11;
    property cpuClass: WideString readonly dispid 12;
    property systemLanguage: WideString readonly dispid 13;
    property browserLanguage: WideString readonly dispid 14;
    property userLanguage: WideString readonly dispid 15;
    property platform: WideString readonly dispid 16;
    property appMinorVersion: WideString readonly dispid 17;
    property connectionSpeed: Integer readonly dispid 18;
    property onLine: WordBool readonly dispid 19;
    property userProfile: IHTMLOpsProfile readonly dispid 20;
  end;

// *********************************************************************//
// Interface: IHTMLMimeTypesCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3FC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMimeTypesCollection = interface(IDispatch)
    ['{3050F3FC-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    property length: Integer read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IHTMLMimeTypesCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3FC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMimeTypesCollectionDisp = dispinterface
    ['{3050F3FC-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1;
  end;

// *********************************************************************//
// Interface: IHTMLPluginsCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3FD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLPluginsCollection = interface(IDispatch)
    ['{3050F3FD-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    procedure refresh(reload: WordBool); safecall;
    property length: Integer read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IHTMLPluginsCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3FD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLPluginsCollectionDisp = dispinterface
    ['{3050F3FD-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1;
    procedure refresh(reload: WordBool); dispid 2;
  end;

// *********************************************************************//
// Interface: IHTMLOpsProfile
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F401-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOpsProfile = interface(IDispatch)
    ['{3050F401-98B5-11CF-BB82-00AA00BDCE0B}']
    function addRequest(const name: WideString; reserved: OleVariant): WordBool; safecall;
    procedure clearRequest; safecall;
    procedure doRequest(usage: OleVariant; fname: OleVariant; domain: OleVariant; path: OleVariant; 
                        expire: OleVariant; reserved: OleVariant); safecall;
    function getAttribute(const name: WideString): WideString; safecall;
    function setAttribute(const name: WideString; const value: WideString; prefs: OleVariant): WordBool; safecall;
    function commitChanges: WordBool; safecall;
    function addReadRequest(const name: WideString; reserved: OleVariant): WordBool; safecall;
    procedure doReadRequest(usage: OleVariant; fname: OleVariant; domain: OleVariant; 
                            path: OleVariant; expire: OleVariant; reserved: OleVariant); safecall;
    function doWriteRequest: WordBool; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLOpsProfileDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F401-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOpsProfileDisp = dispinterface
    ['{3050F401-98B5-11CF-BB82-00AA00BDCE0B}']
    function addRequest(const name: WideString; reserved: OleVariant): WordBool; dispid 1;
    procedure clearRequest; dispid 2;
    procedure doRequest(usage: OleVariant; fname: OleVariant; domain: OleVariant; path: OleVariant; 
                        expire: OleVariant; reserved: OleVariant); dispid 3;
    function getAttribute(const name: WideString): WideString; dispid 4;
    function setAttribute(const name: WideString; const value: WideString; prefs: OleVariant): WordBool; dispid 5;
    function commitChanges: WordBool; dispid 6;
    function addReadRequest(const name: WideString; reserved: OleVariant): WordBool; dispid 7;
    procedure doReadRequest(usage: OleVariant; fname: OleVariant; domain: OleVariant; 
                            path: OleVariant; expire: OleVariant; reserved: OleVariant); dispid 8;
    function doWriteRequest: WordBool; dispid 9;
  end;

// *********************************************************************//
// Interface: IHTMLDocument
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {626FC520-A41E-11CF-A731-00A0C9082637}
// *********************************************************************//
  IHTMLDocument = interface(IDispatch)
    ['{626FC520-A41E-11CF-A731-00A0C9082637}']
    function Get_Script: IDispatch; safecall;
    property Script: IDispatch read Get_Script;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDocumentDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {626FC520-A41E-11CF-A731-00A0C9082637}
// *********************************************************************//
  IHTMLDocumentDisp = dispinterface
    ['{626FC520-A41E-11CF-A731-00A0C9082637}']
    property Script: IDispatch readonly dispid 1001;
  end;

// *********************************************************************//
// Interface: IHTMLDocument2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {332C4425-26CB-11D0-B483-00C04FD90119}
// *********************************************************************//
  IHTMLDocument2 = interface(IHTMLDocument)
    ['{332C4425-26CB-11D0-B483-00C04FD90119}']
    function Get_all: IHTMLElementCollection; safecall;
    function Get_body: IHTMLElement; safecall;
    function Get_activeElement: IHTMLElement; safecall;
    function Get_images: IHTMLElementCollection; safecall;
    function Get_applets: IHTMLElementCollection; safecall;
    function Get_links: IHTMLElementCollection; safecall;
    function Get_forms: IHTMLElementCollection; safecall;
    function Get_anchors: IHTMLElementCollection; safecall;
    procedure Set_title(const p: WideString); safecall;
    function Get_title: WideString; safecall;
    function Get_scripts: IHTMLElementCollection; safecall;
    procedure Set_designMode(const p: WideString); safecall;
    function Get_designMode: WideString; safecall;
    function Get_selection: IHTMLSelectionObject; safecall;
    function Get_readyState: WideString; safecall;
    function Get_frames: IHTMLFramesCollection2; safecall;
    function Get_embeds: IHTMLElementCollection; safecall;
    function Get_plugins: IHTMLElementCollection; safecall;
    procedure Set_alinkColor(p: OleVariant); safecall;
    function Get_alinkColor: OleVariant; safecall;
    procedure Set_bgColor(p: OleVariant); safecall;
    function Get_bgColor: OleVariant; safecall;
    procedure Set_fgColor(p: OleVariant); safecall;
    function Get_fgColor: OleVariant; safecall;
    procedure Set_linkColor(p: OleVariant); safecall;
    function Get_linkColor: OleVariant; safecall;
    procedure Set_vlinkColor(p: OleVariant); safecall;
    function Get_vlinkColor: OleVariant; safecall;
    function Get_referrer: WideString; safecall;
    function Get_location: IHTMLLocation; safecall;
    function Get_lastModified: WideString; safecall;
    procedure Set_url(const p: WideString); safecall;
    function Get_url: WideString; safecall;
    procedure Set_domain(const p: WideString); safecall;
    function Get_domain: WideString; safecall;
    procedure Set_cookie(const p: WideString); safecall;
    function Get_cookie: WideString; safecall;
    procedure Set_expando(p: WordBool); safecall;
    function Get_expando: WordBool; safecall;
    procedure Set_charset(const p: WideString); safecall;
    function Get_charset: WideString; safecall;
    procedure Set_defaultCharset(const p: WideString); safecall;
    function Get_defaultCharset: WideString; safecall;
    function Get_mimeType: WideString; safecall;
    function Get_fileSize: WideString; safecall;
    function Get_fileCreatedDate: WideString; safecall;
    function Get_fileModifiedDate: WideString; safecall;
    function Get_fileUpdatedDate: WideString; safecall;
    function Get_security: WideString; safecall;
    function Get_protocol: WideString; safecall;
    function Get_nameProp: WideString; safecall;
    procedure write(psarray: PSafeArray); safecall;
    procedure writeln(psarray: PSafeArray); safecall;
    function open(const url: WideString; name: OleVariant; features: OleVariant; replace: OleVariant): IDispatch; safecall;
    procedure close; safecall;
    procedure clear; safecall;
    function queryCommandSupported(const cmdID: WideString): WordBool; safecall;
    function queryCommandEnabled(const cmdID: WideString): WordBool; safecall;
    function queryCommandState(const cmdID: WideString): WordBool; safecall;
    function queryCommandIndeterm(const cmdID: WideString): WordBool; safecall;
    function queryCommandText(const cmdID: WideString): WideString; safecall;
    function queryCommandValue(const cmdID: WideString): OleVariant; safecall;
    function execCommand(const cmdID: WideString; showUI: WordBool; value: OleVariant): WordBool; safecall;
    function execCommandShowHelp(const cmdID: WideString): WordBool; safecall;
    function createElement(const eTag: WideString): IHTMLElement; safecall;
    procedure Set_onhelp(p: OleVariant); safecall;
    function Get_onhelp: OleVariant; safecall;
    procedure Set_onclick(p: OleVariant); safecall;
    function Get_onclick: OleVariant; safecall;
    procedure Set_ondblclick(p: OleVariant); safecall;
    function Get_ondblclick: OleVariant; safecall;
    procedure Set_onkeyup(p: OleVariant); safecall;
    function Get_onkeyup: OleVariant; safecall;
    procedure Set_onkeydown(p: OleVariant); safecall;
    function Get_onkeydown: OleVariant; safecall;
    procedure Set_onkeypress(p: OleVariant); safecall;
    function Get_onkeypress: OleVariant; safecall;
    procedure Set_onmouseup(p: OleVariant); safecall;
    function Get_onmouseup: OleVariant; safecall;
    procedure Set_onmousedown(p: OleVariant); safecall;
    function Get_onmousedown: OleVariant; safecall;
    procedure Set_onmousemove(p: OleVariant); safecall;
    function Get_onmousemove: OleVariant; safecall;
    procedure Set_onmouseout(p: OleVariant); safecall;
    function Get_onmouseout: OleVariant; safecall;
    procedure Set_onmouseover(p: OleVariant); safecall;
    function Get_onmouseover: OleVariant; safecall;
    procedure Set_onreadystatechange(p: OleVariant); safecall;
    function Get_onreadystatechange: OleVariant; safecall;
    procedure Set_onafterupdate(p: OleVariant); safecall;
    function Get_onafterupdate: OleVariant; safecall;
    procedure Set_onrowexit(p: OleVariant); safecall;
    function Get_onrowexit: OleVariant; safecall;
    procedure Set_onrowenter(p: OleVariant); safecall;
    function Get_onrowenter: OleVariant; safecall;
    procedure Set_ondragstart(p: OleVariant); safecall;
    function Get_ondragstart: OleVariant; safecall;
    procedure Set_onselectstart(p: OleVariant); safecall;
    function Get_onselectstart: OleVariant; safecall;
    function elementFromPoint(x: Integer; y: Integer): IHTMLElement; safecall;
    function Get_parentWindow: IHTMLWindow2; safecall;
    function Get_styleSheets: IHTMLStyleSheetsCollection; safecall;
    procedure Set_onbeforeupdate(p: OleVariant); safecall;
    function Get_onbeforeupdate: OleVariant; safecall;
    procedure Set_onerrorupdate(p: OleVariant); safecall;
    function Get_onerrorupdate: OleVariant; safecall;
    function toString: WideString; safecall;
    function createStyleSheet(const bstrHref: WideString; lIndex: Integer): IHTMLStyleSheet; safecall;
    property all: IHTMLElementCollection read Get_all;
    property body: IHTMLElement read Get_body;
    property activeElement: IHTMLElement read Get_activeElement;
    property images: IHTMLElementCollection read Get_images;
    property applets: IHTMLElementCollection read Get_applets;
    property links: IHTMLElementCollection read Get_links;
    property forms: IHTMLElementCollection read Get_forms;
    property anchors: IHTMLElementCollection read Get_anchors;
    property title: WideString read Get_title write Set_title;
    property scripts: IHTMLElementCollection read Get_scripts;
    property designMode: WideString read Get_designMode write Set_designMode;
    property selection: IHTMLSelectionObject read Get_selection;
    property readyState: WideString read Get_readyState;
    property frames: IHTMLFramesCollection2 read Get_frames;
    property embeds: IHTMLElementCollection read Get_embeds;
    property plugins: IHTMLElementCollection read Get_plugins;
    property alinkColor: OleVariant read Get_alinkColor write Set_alinkColor;
    property bgColor: OleVariant read Get_bgColor write Set_bgColor;
    property fgColor: OleVariant read Get_fgColor write Set_fgColor;
    property linkColor: OleVariant read Get_linkColor write Set_linkColor;
    property vlinkColor: OleVariant read Get_vlinkColor write Set_vlinkColor;
    property referrer: WideString read Get_referrer;
    property location: IHTMLLocation read Get_location;
    property lastModified: WideString read Get_lastModified;
    property url: WideString read Get_url write Set_url;
    property domain: WideString read Get_domain write Set_domain;
    property cookie: WideString read Get_cookie write Set_cookie;
    property expando: WordBool read Get_expando write Set_expando;
    property charset: WideString read Get_charset write Set_charset;
    property defaultCharset: WideString read Get_defaultCharset write Set_defaultCharset;
    property mimeType: WideString read Get_mimeType;
    property fileSize: WideString read Get_fileSize;
    property fileCreatedDate: WideString read Get_fileCreatedDate;
    property fileModifiedDate: WideString read Get_fileModifiedDate;
    property fileUpdatedDate: WideString read Get_fileUpdatedDate;
    property security: WideString read Get_security;
    property protocol: WideString read Get_protocol;
    property nameProp: WideString read Get_nameProp;
    property onhelp: OleVariant read Get_onhelp write Set_onhelp;
    property onclick: OleVariant read Get_onclick write Set_onclick;
    property ondblclick: OleVariant read Get_ondblclick write Set_ondblclick;
    property onkeyup: OleVariant read Get_onkeyup write Set_onkeyup;
    property onkeydown: OleVariant read Get_onkeydown write Set_onkeydown;
    property onkeypress: OleVariant read Get_onkeypress write Set_onkeypress;
    property onmouseup: OleVariant read Get_onmouseup write Set_onmouseup;
    property onmousedown: OleVariant read Get_onmousedown write Set_onmousedown;
    property onmousemove: OleVariant read Get_onmousemove write Set_onmousemove;
    property onmouseout: OleVariant read Get_onmouseout write Set_onmouseout;
    property onmouseover: OleVariant read Get_onmouseover write Set_onmouseover;
    property onreadystatechange: OleVariant read Get_onreadystatechange write Set_onreadystatechange;
    property onafterupdate: OleVariant read Get_onafterupdate write Set_onafterupdate;
    property onrowexit: OleVariant read Get_onrowexit write Set_onrowexit;
    property onrowenter: OleVariant read Get_onrowenter write Set_onrowenter;
    property ondragstart: OleVariant read Get_ondragstart write Set_ondragstart;
    property onselectstart: OleVariant read Get_onselectstart write Set_onselectstart;
    property parentWindow: IHTMLWindow2 read Get_parentWindow;
    property styleSheets: IHTMLStyleSheetsCollection read Get_styleSheets;
    property onbeforeupdate: OleVariant read Get_onbeforeupdate write Set_onbeforeupdate;
    property onerrorupdate: OleVariant read Get_onerrorupdate write Set_onerrorupdate;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDocument2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {332C4425-26CB-11D0-B483-00C04FD90119}
// *********************************************************************//
  IHTMLDocument2Disp = dispinterface
    ['{332C4425-26CB-11D0-B483-00C04FD90119}']
    property all: IHTMLElementCollection readonly dispid 1003;
    property body: IHTMLElement readonly dispid 1004;
    property activeElement: IHTMLElement readonly dispid 1005;
    property images: IHTMLElementCollection readonly dispid 1011;
    property applets: IHTMLElementCollection readonly dispid 1008;
    property links: IHTMLElementCollection readonly dispid 1009;
    property forms: IHTMLElementCollection readonly dispid 1010;
    property anchors: IHTMLElementCollection readonly dispid 1007;
    property title: WideString dispid 1012;
    property scripts: IHTMLElementCollection readonly dispid 1013;
    property designMode: WideString dispid 1014;
    property selection: IHTMLSelectionObject readonly dispid 1017;
    property readyState: WideString readonly dispid 1018;
    property frames: IHTMLFramesCollection2 readonly dispid 1019;
    property embeds: IHTMLElementCollection readonly dispid 1015;
    property plugins: IHTMLElementCollection readonly dispid 1021;
    property alinkColor: OleVariant dispid 1022;
    property bgColor: OleVariant dispid -501;
    property fgColor: OleVariant dispid -2147413110;
    property linkColor: OleVariant dispid 1024;
    property vlinkColor: OleVariant dispid 1023;
    property referrer: WideString readonly dispid 1027;
    property location: IHTMLLocation readonly dispid 1026;
    property lastModified: WideString readonly dispid 1028;
    property url: WideString dispid 1025;
    property domain: WideString dispid 1029;
    property cookie: WideString dispid 1030;
    property expando: WordBool dispid 1031;
    property charset: WideString dispid 1032;
    property defaultCharset: WideString dispid 1033;
    property mimeType: WideString readonly dispid 1041;
    property fileSize: WideString readonly dispid 1042;
    property fileCreatedDate: WideString readonly dispid 1043;
    property fileModifiedDate: WideString readonly dispid 1044;
    property fileUpdatedDate: WideString readonly dispid 1045;
    property security: WideString readonly dispid 1046;
    property protocol: WideString readonly dispid 1047;
    property nameProp: WideString readonly dispid 1048;
    procedure write(psarray: {NOT_OLEAUTO(PSafeArray)}OleVariant); dispid 1054;
    procedure writeln(psarray: {NOT_OLEAUTO(PSafeArray)}OleVariant); dispid 1055;
    function open(const url: WideString; name: OleVariant; features: OleVariant; replace: OleVariant): IDispatch; dispid 1056;
    procedure close; dispid 1057;
    procedure clear; dispid 1058;
    function queryCommandSupported(const cmdID: WideString): WordBool; dispid 1059;
    function queryCommandEnabled(const cmdID: WideString): WordBool; dispid 1060;
    function queryCommandState(const cmdID: WideString): WordBool; dispid 1061;
    function queryCommandIndeterm(const cmdID: WideString): WordBool; dispid 1062;
    function queryCommandText(const cmdID: WideString): WideString; dispid 1063;
    function queryCommandValue(const cmdID: WideString): OleVariant; dispid 1064;
    function execCommand(const cmdID: WideString; showUI: WordBool; value: OleVariant): WordBool; dispid 1065;
    function execCommandShowHelp(const cmdID: WideString): WordBool; dispid 1066;
    function createElement(const eTag: WideString): IHTMLElement; dispid 1067;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseup: OleVariant dispid -2147412109;
    property onmousedown: OleVariant dispid -2147412110;
    property onmousemove: OleVariant dispid -2147412108;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onafterupdate: OleVariant dispid -2147412090;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondragstart: OleVariant dispid -2147412077;
    property onselectstart: OleVariant dispid -2147412075;
    function elementFromPoint(x: Integer; y: Integer): IHTMLElement; dispid 1068;
    property parentWindow: IHTMLWindow2 readonly dispid 1034;
    property styleSheets: IHTMLStyleSheetsCollection readonly dispid 1069;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onerrorupdate: OleVariant dispid -2147412074;
    function toString: WideString; dispid 1070;
    function createStyleSheet(const bstrHref: WideString; lIndex: Integer): IHTMLStyleSheet; dispid 1071;
    property Script: IDispatch readonly dispid 1001;
  end;

// *********************************************************************//
// Interface: IHTMLSelectionObject
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F25A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSelectionObject = interface(IDispatch)
    ['{3050F25A-98B5-11CF-BB82-00AA00BDCE0B}']
    function createRange: IDispatch; safecall;
    procedure empty; safecall;
    procedure clear; safecall;
    function Get_type_: WideString; safecall;
    property type_: WideString read Get_type_;
  end;

// *********************************************************************//
// DispIntf:  IHTMLSelectionObjectDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F25A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSelectionObjectDisp = dispinterface
    ['{3050F25A-98B5-11CF-BB82-00AA00BDCE0B}']
    function createRange: IDispatch; dispid 1001;
    procedure empty; dispid 1002;
    procedure clear; dispid 1003;
    property type_: WideString readonly dispid 1004;
  end;

// *********************************************************************//
// Interface: IHTMLScreen
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F35C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLScreen = interface(IDispatch)
    ['{3050F35C-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_colorDepth: Integer; safecall;
    procedure Set_bufferDepth(p: Integer); safecall;
    function Get_bufferDepth: Integer; safecall;
    function Get_width: Integer; safecall;
    function Get_height: Integer; safecall;
    procedure Set_updateInterval(p: Integer); safecall;
    function Get_updateInterval: Integer; safecall;
    function Get_availHeight: Integer; safecall;
    function Get_availWidth: Integer; safecall;
    function Get_fontSmoothingEnabled: WordBool; safecall;
    property colorDepth: Integer read Get_colorDepth;
    property bufferDepth: Integer read Get_bufferDepth write Set_bufferDepth;
    property width: Integer read Get_width;
    property height: Integer read Get_height;
    property updateInterval: Integer read Get_updateInterval write Set_updateInterval;
    property availHeight: Integer read Get_availHeight;
    property availWidth: Integer read Get_availWidth;
    property fontSmoothingEnabled: WordBool read Get_fontSmoothingEnabled;
  end;

// *********************************************************************//
// DispIntf:  IHTMLScreenDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F35C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLScreenDisp = dispinterface
    ['{3050F35C-98B5-11CF-BB82-00AA00BDCE0B}']
    property colorDepth: Integer readonly dispid 1001;
    property bufferDepth: Integer dispid 1002;
    property width: Integer readonly dispid 1003;
    property height: Integer readonly dispid 1004;
    property updateInterval: Integer dispid 1005;
    property availHeight: Integer readonly dispid 1006;
    property availWidth: Integer readonly dispid 1007;
    property fontSmoothingEnabled: WordBool readonly dispid 1008;
  end;

// *********************************************************************//
// Interface: IHTMLOptionElementFactory
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F38C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOptionElementFactory = interface(IDispatch)
    ['{3050F38C-98B5-11CF-BB82-00AA00BDCE0B}']
    function create(text: OleVariant; value: OleVariant; defaultSelected: OleVariant; 
                    selected: OleVariant): IHTMLOptionElement; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLOptionElementFactoryDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F38C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOptionElementFactoryDisp = dispinterface
    ['{3050F38C-98B5-11CF-BB82-00AA00BDCE0B}']
    function create(text: OleVariant; value: OleVariant; defaultSelected: OleVariant; 
                    selected: OleVariant): IHTMLOptionElement; dispid 0;
  end;

// *********************************************************************//
// Interface: IHTMLOptionElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F211-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOptionElement = interface(IDispatch)
    ['{3050F211-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_selected(p: WordBool); safecall;
    function Get_selected: WordBool; safecall;
    procedure Set_value(const p: WideString); safecall;
    function Get_value: WideString; safecall;
    procedure Set_defaultSelected(p: WordBool); safecall;
    function Get_defaultSelected: WordBool; safecall;
    procedure Set_index(p: Integer); safecall;
    function Get_index: Integer; safecall;
    procedure Set_text(const p: WideString); safecall;
    function Get_text: WideString; safecall;
    function Get_form: IHTMLFormElement; safecall;
    property selected: WordBool read Get_selected write Set_selected;
    property value: WideString read Get_value write Set_value;
    property defaultSelected: WordBool read Get_defaultSelected write Set_defaultSelected;
    property index: Integer read Get_index write Set_index;
    property text: WideString read Get_text write Set_text;
    property form: IHTMLFormElement read Get_form;
  end;

// *********************************************************************//
// DispIntf:  IHTMLOptionElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F211-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOptionElementDisp = dispinterface
    ['{3050F211-98B5-11CF-BB82-00AA00BDCE0B}']
    property selected: WordBool dispid 1001;
    property value: WideString dispid 1002;
    property defaultSelected: WordBool dispid 1003;
    property index: Integer dispid 1005;
    property text: WideString dispid 1004;
    property form: IHTMLFormElement readonly dispid 1006;
  end;

// *********************************************************************//
// Interface: IHTMLFormElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFormElement = interface(IDispatch)
    ['{3050F1F7-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_action(const p: WideString); safecall;
    function Get_action: WideString; safecall;
    procedure Set_dir(const p: WideString); safecall;
    function Get_dir: WideString; safecall;
    procedure Set_encoding(const p: WideString); safecall;
    function Get_encoding: WideString; safecall;
    procedure Set_method(const p: WideString); safecall;
    function Get_method: WideString; safecall;
    function Get_elements: IDispatch; safecall;
    procedure Set_target(const p: WideString); safecall;
    function Get_target: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_onsubmit(p: OleVariant); safecall;
    function Get_onsubmit: OleVariant; safecall;
    procedure Set_onreset(p: OleVariant); safecall;
    function Get_onreset: OleVariant; safecall;
    procedure submit; safecall;
    procedure reset; safecall;
    procedure Set_length(p: Integer); safecall;
    function Get_length: Integer; safecall;
    function Get__newEnum: IUnknown; safecall;
    function item(name: OleVariant; index: OleVariant): IDispatch; safecall;
    function tags(tagName: OleVariant): IDispatch; safecall;
    property action: WideString read Get_action write Set_action;
    property dir: WideString read Get_dir write Set_dir;
    property encoding: WideString read Get_encoding write Set_encoding;
    property method: WideString read Get_method write Set_method;
    property elements: IDispatch read Get_elements;
    property target: WideString read Get_target write Set_target;
    property name: WideString read Get_name write Set_name;
    property onsubmit: OleVariant read Get_onsubmit write Set_onsubmit;
    property onreset: OleVariant read Get_onreset write Set_onreset;
    property length: Integer read Get_length write Set_length;
    property _newEnum: IUnknown read Get__newEnum;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFormElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFormElementDisp = dispinterface
    ['{3050F1F7-98B5-11CF-BB82-00AA00BDCE0B}']
    property action: WideString dispid 1001;
    property dir: WideString dispid -2147412995;
    property encoding: WideString dispid 1003;
    property method: WideString dispid 1004;
    property elements: IDispatch readonly dispid 1005;
    property target: WideString dispid 1006;
    property name: WideString dispid -2147418112;
    property onsubmit: OleVariant dispid -2147412101;
    property onreset: OleVariant dispid -2147412100;
    procedure submit; dispid 1009;
    procedure reset; dispid 1010;
    property length: Integer dispid 1500;
    property _newEnum: IUnknown readonly dispid -4;
    function item(name: OleVariant; index: OleVariant): IDispatch; dispid 0;
    function tags(tagName: OleVariant): IDispatch; dispid 1502;
  end;

// *********************************************************************//
// Interface: IHTMLDOMNode
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5DA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMNode = interface(IDispatch)
    ['{3050F5DA-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_nodeType: Integer; safecall;
    function Get_parentNode: IHTMLDOMNode; safecall;
    function hasChildNodes: WordBool; safecall;
    function Get_childNodes: IDispatch; safecall;
    function Get_attributes: IDispatch; safecall;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; safecall;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; safecall;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; safecall;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; safecall;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; safecall;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; safecall;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; safecall;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; safecall;
    function Get_nodeName: WideString; safecall;
    procedure Set_nodeValue(p: OleVariant); safecall;
    function Get_nodeValue: OleVariant; safecall;
    function Get_firstChild: IHTMLDOMNode; safecall;
    function Get_lastChild: IHTMLDOMNode; safecall;
    function Get_previousSibling: IHTMLDOMNode; safecall;
    function Get_nextSibling: IHTMLDOMNode; safecall;
    property nodeType: Integer read Get_nodeType;
    property parentNode: IHTMLDOMNode read Get_parentNode;
    property childNodes: IDispatch read Get_childNodes;
    property attributes: IDispatch read Get_attributes;
    property nodeName: WideString read Get_nodeName;
    property nodeValue: OleVariant read Get_nodeValue write Set_nodeValue;
    property firstChild: IHTMLDOMNode read Get_firstChild;
    property lastChild: IHTMLDOMNode read Get_lastChild;
    property previousSibling: IHTMLDOMNode read Get_previousSibling;
    property nextSibling: IHTMLDOMNode read Get_nextSibling;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDOMNodeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5DA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMNodeDisp = dispinterface
    ['{3050F5DA-98B5-11CF-BB82-00AA00BDCE0B}']
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
  end;

// *********************************************************************//
// Interface: IHTMLSelection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104B6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSelection = interface(IDispatch)
    ['{305104B6-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_anchorNode: IHTMLDOMNode; safecall;
    function Get_anchorOffset: Integer; safecall;
    function Get_focusNode: IHTMLDOMNode; safecall;
    function Get_focusOffset: Integer; safecall;
    function Get_isCollapsed: WordBool; safecall;
    procedure collapse(const parentNode: IDispatch; offfset: Integer); safecall;
    procedure collapseToStart; safecall;
    procedure collapseToEnd; safecall;
    procedure selectAllChildren(const parentNode: IDispatch); safecall;
    procedure deleteFromDocument; safecall;
    function Get_rangeCount: Integer; safecall;
    function getRangeAt(index: Integer): IHTMLDOMRange; safecall;
    procedure addRange(const range: IDispatch); safecall;
    procedure removeRange(const range: IDispatch); safecall;
    procedure removeAllRanges; safecall;
    function toString: WideString; safecall;
    property anchorNode: IHTMLDOMNode read Get_anchorNode;
    property anchorOffset: Integer read Get_anchorOffset;
    property focusNode: IHTMLDOMNode read Get_focusNode;
    property focusOffset: Integer read Get_focusOffset;
    property isCollapsed: WordBool read Get_isCollapsed;
    property rangeCount: Integer read Get_rangeCount;
  end;

// *********************************************************************//
// DispIntf:  IHTMLSelectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104B6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSelectionDisp = dispinterface
    ['{305104B6-98B5-11CF-BB82-00AA00BDCE0B}']
    property anchorNode: IHTMLDOMNode readonly dispid 1001;
    property anchorOffset: Integer readonly dispid 1002;
    property focusNode: IHTMLDOMNode readonly dispid 1003;
    property focusOffset: Integer readonly dispid 1004;
    property isCollapsed: WordBool readonly dispid 1005;
    procedure collapse(const parentNode: IDispatch; offfset: Integer); dispid 1006;
    procedure collapseToStart; dispid 1007;
    procedure collapseToEnd; dispid 1008;
    procedure selectAllChildren(const parentNode: IDispatch); dispid 1009;
    procedure deleteFromDocument; dispid 1010;
    property rangeCount: Integer readonly dispid 1011;
    function getRangeAt(index: Integer): IHTMLDOMRange; dispid 1012;
    procedure addRange(const range: IDispatch); dispid 1013;
    procedure removeRange(const range: IDispatch); dispid 1014;
    procedure removeAllRanges; dispid 1015;
    function toString: WideString; dispid 1016;
  end;

// *********************************************************************//
// Interface: IHTMLDOMRange
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104AE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMRange = interface(IDispatch)
    ['{305104AE-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_startContainer: IHTMLDOMNode; safecall;
    function Get_startOffset: Integer; safecall;
    function Get_endContainer: IHTMLDOMNode; safecall;
    function Get_endOffset: Integer; safecall;
    function Get_collapsed: WordBool; safecall;
    function Get_commonAncestorContainer: IHTMLDOMNode; safecall;
    procedure setStart(const refNode: IDispatch; offset: Integer); safecall;
    procedure setEnd(const refNode: IDispatch; offset: Integer); safecall;
    procedure setStartBefore(const refNode: IDispatch); safecall;
    procedure setStartAfter(const refNode: IDispatch); safecall;
    procedure setEndBefore(const refNode: IDispatch); safecall;
    procedure setEndAfter(const refNode: IDispatch); safecall;
    procedure collapse(toStart: WordBool); safecall;
    procedure selectNode(const refNode: IDispatch); safecall;
    procedure selectNodeContents(const refNode: IDispatch); safecall;
    function compareBoundaryPoints(how: Smallint; const sourceRange: IDispatch): Integer; safecall;
    procedure deleteContents; safecall;
    function extractContents: IDispatch; safecall;
    function cloneContents: IDispatch; safecall;
    procedure insertNode(const newNode: IDispatch); safecall;
    procedure surroundContents(const newParent: IDispatch); safecall;
    function cloneRange: IHTMLDOMRange; safecall;
    function toString: WideString; safecall;
    procedure Detach; safecall;
    function getClientRects: IHTMLRectCollection; safecall;
    function getBoundingClientRect: IHTMLRect; safecall;
    property startContainer: IHTMLDOMNode read Get_startContainer;
    property startOffset: Integer read Get_startOffset;
    property endContainer: IHTMLDOMNode read Get_endContainer;
    property endOffset: Integer read Get_endOffset;
    property collapsed: WordBool read Get_collapsed;
    property commonAncestorContainer: IHTMLDOMNode read Get_commonAncestorContainer;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDOMRangeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104AE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMRangeDisp = dispinterface
    ['{305104AE-98B5-11CF-BB82-00AA00BDCE0B}']
    property startContainer: IHTMLDOMNode readonly dispid 1001;
    property startOffset: Integer readonly dispid 1002;
    property endContainer: IHTMLDOMNode readonly dispid 1003;
    property endOffset: Integer readonly dispid 1004;
    property collapsed: WordBool readonly dispid 1005;
    property commonAncestorContainer: IHTMLDOMNode readonly dispid 1006;
    procedure setStart(const refNode: IDispatch; offset: Integer); dispid 1007;
    procedure setEnd(const refNode: IDispatch; offset: Integer); dispid 1008;
    procedure setStartBefore(const refNode: IDispatch); dispid 1009;
    procedure setStartAfter(const refNode: IDispatch); dispid 1010;
    procedure setEndBefore(const refNode: IDispatch); dispid 1011;
    procedure setEndAfter(const refNode: IDispatch); dispid 1012;
    procedure collapse(toStart: WordBool); dispid 1013;
    procedure selectNode(const refNode: IDispatch); dispid 1014;
    procedure selectNodeContents(const refNode: IDispatch); dispid 1015;
    function compareBoundaryPoints(how: Smallint; const sourceRange: IDispatch): Integer; dispid 1016;
    procedure deleteContents; dispid 1017;
    function extractContents: IDispatch; dispid 1018;
    function cloneContents: IDispatch; dispid 1019;
    procedure insertNode(const newNode: IDispatch); dispid 1020;
    procedure surroundContents(const newParent: IDispatch); dispid 1021;
    function cloneRange: IHTMLDOMRange; dispid 1022;
    function toString: WideString; dispid 1023;
    procedure Detach; dispid 1024;
    function getClientRects: IHTMLRectCollection; dispid 1025;
    function getBoundingClientRect: IHTMLRect; dispid 1026;
  end;

// *********************************************************************//
// Interface: IDOMProcessingInstruction
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510742-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMProcessingInstruction = interface(IDispatch)
    ['{30510742-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_target: WideString; safecall;
    procedure Set_data(const p: WideString); safecall;
    function Get_data: WideString; safecall;
    property target: WideString read Get_target;
    property data: WideString read Get_data write Set_data;
  end;

// *********************************************************************//
// DispIntf:  IDOMProcessingInstructionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510742-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMProcessingInstructionDisp = dispinterface
    ['{30510742-98B5-11CF-BB82-00AA00BDCE0B}']
    property target: WideString readonly dispid 1000;
    property data: WideString dispid 1001;
  end;

// *********************************************************************//
// Interface: IHTMLDOMNode3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106E0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMNode3 = interface(IDispatch)
    ['{305106E0-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_prefix(p: OleVariant); safecall;
    function Get_prefix: OleVariant; safecall;
    function Get_localName: OleVariant; safecall;
    function Get_namespaceURI: OleVariant; safecall;
    procedure Set_textContent(p: OleVariant); safecall;
    function Get_textContent: OleVariant; safecall;
    function isEqualNode(const otherNode: IHTMLDOMNode3): WordBool; safecall;
    function lookupNamespaceURI(const pvarPrefix: OleVariant): OleVariant; safecall;
    function lookupPrefix(const pvarNamespaceURI: OleVariant): OleVariant; safecall;
    function isDefaultNamespace(const pvarNamespace: OleVariant): WordBool; safecall;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; safecall;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; safecall;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; safecall;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; safecall;
    function isSameNode(const otherNode: IHTMLDOMNode3): WordBool; safecall;
    function compareDocumentPosition(const otherNode: IHTMLDOMNode): Word; safecall;
    function isSupported(const feature: WideString; version: OleVariant): WordBool; safecall;
    property prefix: OleVariant read Get_prefix write Set_prefix;
    property localName: OleVariant read Get_localName;
    property namespaceURI: OleVariant read Get_namespaceURI;
    property textContent: OleVariant read Get_textContent write Set_textContent;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDOMNode3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106E0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMNode3Disp = dispinterface
    ['{305106E0-98B5-11CF-BB82-00AA00BDCE0B}']
    property prefix: OleVariant dispid -2147416992;
    property localName: OleVariant readonly dispid -2147416994;
    property namespaceURI: OleVariant readonly dispid -2147416993;
    property textContent: OleVariant dispid -2147416985;
    function isEqualNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416991;
    function lookupNamespaceURI(const pvarPrefix: OleVariant): OleVariant; dispid -2147416990;
    function lookupPrefix(const pvarNamespaceURI: OleVariant): OleVariant; dispid -2147416989;
    function isDefaultNamespace(const pvarNamespace: OleVariant): WordBool; dispid -2147416988;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416844;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147416843;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416842;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416841;
    function isSameNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416987;
    function compareDocumentPosition(const otherNode: IHTMLDOMNode): Word; dispid -2147416986;
    function isSupported(const feature: WideString; version: OleVariant): WordBool; dispid -2147416835;
  end;

// *********************************************************************//
// Interface: IHTMLDOMNode2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F80B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMNode2 = interface(IDispatch)
    ['{3050F80B-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_ownerDocument: IDispatch; safecall;
    property ownerDocument: IDispatch read Get_ownerDocument;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDOMNode2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F80B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMNode2Disp = dispinterface
    ['{3050F80B-98B5-11CF-BB82-00AA00BDCE0B}']
    property ownerDocument: IDispatch readonly dispid -2147416999;
  end;

// *********************************************************************//
// Interface: IHTMLDOMAttribute2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F810-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMAttribute2 = interface(IDispatch)
    ['{3050F810-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_name: WideString; safecall;
    procedure Set_value(const p: WideString); safecall;
    function Get_value: WideString; safecall;
    function Get_expando: WordBool; safecall;
    function Get_nodeType: Integer; safecall;
    function Get_parentNode: IHTMLDOMNode; safecall;
    function Get_childNodes: IDispatch; safecall;
    function Get_firstChild: IHTMLDOMNode; safecall;
    function Get_lastChild: IHTMLDOMNode; safecall;
    function Get_previousSibling: IHTMLDOMNode; safecall;
    function Get_nextSibling: IHTMLDOMNode; safecall;
    function Get_attributes: IDispatch; safecall;
    function Get_ownerDocument: IDispatch; safecall;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; safecall;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; safecall;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; safecall;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; safecall;
    function hasChildNodes: WordBool; safecall;
    function cloneNode(fDeep: WordBool): IHTMLDOMAttribute; safecall;
    property name: WideString read Get_name;
    property value: WideString read Get_value write Set_value;
    property expando: WordBool read Get_expando;
    property nodeType: Integer read Get_nodeType;
    property parentNode: IHTMLDOMNode read Get_parentNode;
    property childNodes: IDispatch read Get_childNodes;
    property firstChild: IHTMLDOMNode read Get_firstChild;
    property lastChild: IHTMLDOMNode read Get_lastChild;
    property previousSibling: IHTMLDOMNode read Get_previousSibling;
    property nextSibling: IHTMLDOMNode read Get_nextSibling;
    property attributes: IDispatch read Get_attributes;
    property ownerDocument: IDispatch read Get_ownerDocument;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDOMAttribute2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F810-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMAttribute2Disp = dispinterface
    ['{3050F810-98B5-11CF-BB82-00AA00BDCE0B}']
    property name: WideString readonly dispid 1003;
    property value: WideString dispid 1004;
    property expando: WordBool readonly dispid 1005;
    property nodeType: Integer readonly dispid 1006;
    property parentNode: IHTMLDOMNode readonly dispid 1007;
    property childNodes: IDispatch readonly dispid 1008;
    property firstChild: IHTMLDOMNode readonly dispid 1009;
    property lastChild: IHTMLDOMNode readonly dispid 1010;
    property previousSibling: IHTMLDOMNode readonly dispid 1011;
    property nextSibling: IHTMLDOMNode readonly dispid 1012;
    property attributes: IDispatch readonly dispid 1013;
    property ownerDocument: IDispatch readonly dispid 1014;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid 1015;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid 1016;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid 1017;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid 1018;
    function hasChildNodes: WordBool; dispid 1019;
    function cloneNode(fDeep: WordBool): IHTMLDOMAttribute; dispid 1020;
  end;

// *********************************************************************//
// Interface: IHTMLDOMAttribute3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510468-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMAttribute3 = interface(IDispatch)
    ['{30510468-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_nodeValue(p: OleVariant); safecall;
    function Get_nodeValue: OleVariant; safecall;
    procedure Set_value(const p: WideString); safecall;
    function Get_value: WideString; safecall;
    function Get_specified: WordBool; safecall;
    function Get_ownerElement: IHTMLElement2; safecall;
    property nodeValue: OleVariant read Get_nodeValue write Set_nodeValue;
    property value: WideString read Get_value write Set_value;
    property specified: WordBool read Get_specified;
    property ownerElement: IHTMLElement2 read Get_ownerElement;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDOMAttribute3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510468-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMAttribute3Disp = dispinterface
    ['{30510468-98B5-11CF-BB82-00AA00BDCE0B}']
    property nodeValue: OleVariant dispid 1153;
    property value: WideString dispid 1154;
    property specified: WordBool readonly dispid 1150;
    property ownerElement: IHTMLElement2 readonly dispid 1151;
  end;

// *********************************************************************//
// Interface: IHTMLDOMAttribute4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106F9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMAttribute4 = interface(IDispatch)
    ['{305106F9-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_nodeValue(p: OleVariant); safecall;
    function Get_nodeValue: OleVariant; safecall;
    function Get_nodeName: WideString; safecall;
    function Get_name: WideString; safecall;
    procedure Set_value(const p: WideString); safecall;
    function Get_value: WideString; safecall;
    function Get_firstChild: IHTMLDOMNode; safecall;
    function Get_lastChild: IHTMLDOMNode; safecall;
    function Get_childNodes: IDispatch; safecall;
    function hasAttributes: WordBool; safecall;
    function hasChildNodes: WordBool; safecall;
    procedure normalize; safecall;
    function Get_specified: WordBool; safecall;
    property nodeValue: OleVariant read Get_nodeValue write Set_nodeValue;
    property nodeName: WideString read Get_nodeName;
    property name: WideString read Get_name;
    property value: WideString read Get_value write Set_value;
    property firstChild: IHTMLDOMNode read Get_firstChild;
    property lastChild: IHTMLDOMNode read Get_lastChild;
    property childNodes: IDispatch read Get_childNodes;
    property specified: WordBool read Get_specified;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDOMAttribute4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106F9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMAttribute4Disp = dispinterface
    ['{305106F9-98B5-11CF-BB82-00AA00BDCE0B}']
    property nodeValue: OleVariant dispid 1159;
    property nodeName: WideString readonly dispid 1160;
    property name: WideString readonly dispid 1161;
    property value: WideString dispid 1162;
    property firstChild: IHTMLDOMNode readonly dispid 1163;
    property lastChild: IHTMLDOMNode readonly dispid 1164;
    property childNodes: IDispatch readonly dispid 1165;
    function hasAttributes: WordBool; dispid 1166;
    function hasChildNodes: WordBool; dispid 1167;
    procedure normalize; dispid 1170;
    property specified: WordBool readonly dispid 1171;
  end;

// *********************************************************************//
// Interface: IHTMLDOMTextNode
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4B1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMTextNode = interface(IDispatch)
    ['{3050F4B1-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_data(const p: WideString); safecall;
    function Get_data: WideString; safecall;
    function toString: WideString; safecall;
    function Get_length: Integer; safecall;
    function splitText(offset: Integer): IHTMLDOMNode; safecall;
    property data: WideString read Get_data write Set_data;
    property length: Integer read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDOMTextNodeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4B1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMTextNodeDisp = dispinterface
    ['{3050F4B1-98B5-11CF-BB82-00AA00BDCE0B}']
    property data: WideString dispid 1000;
    function toString: WideString; dispid 1001;
    property length: Integer readonly dispid 1002;
    function splitText(offset: Integer): IHTMLDOMNode; dispid 1003;
  end;

// *********************************************************************//
// Interface: IHTMLDOMTextNode2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F809-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMTextNode2 = interface(IDispatch)
    ['{3050F809-98B5-11CF-BB82-00AA00BDCE0B}']
    function substringData(offset: Integer; Count: Integer): WideString; safecall;
    procedure appendData(const bstrstring: WideString); safecall;
    procedure insertData(offset: Integer; const bstrstring: WideString); safecall;
    procedure deleteData(offset: Integer; Count: Integer); safecall;
    procedure replaceData(offset: Integer; Count: Integer; const bstrstring: WideString); safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDOMTextNode2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F809-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMTextNode2Disp = dispinterface
    ['{3050F809-98B5-11CF-BB82-00AA00BDCE0B}']
    function substringData(offset: Integer; Count: Integer): WideString; dispid 1004;
    procedure appendData(const bstrstring: WideString); dispid 1005;
    procedure insertData(offset: Integer; const bstrstring: WideString); dispid 1006;
    procedure deleteData(offset: Integer; Count: Integer); dispid 1007;
    procedure replaceData(offset: Integer; Count: Integer; const bstrstring: WideString); dispid 1008;
  end;

// *********************************************************************//
// Interface: IHTMLDOMTextNode3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051073E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMTextNode3 = interface(IDispatch)
    ['{3051073E-98B5-11CF-BB82-00AA00BDCE0B}']
    function substringData(offset: Integer; Count: Integer): WideString; safecall;
    procedure insertData(offset: Integer; const bstrstring: WideString); safecall;
    procedure deleteData(offset: Integer; Count: Integer); safecall;
    procedure replaceData(offset: Integer; Count: Integer; const bstrstring: WideString); safecall;
    function splitText(offset: Integer): IHTMLDOMNode; safecall;
    function Get_wholeText: WideString; safecall;
    function replaceWholeText(const bstrText: WideString): IHTMLDOMNode; safecall;
    function hasAttributes: WordBool; safecall;
    procedure normalize; safecall;
    property wholeText: WideString read Get_wholeText;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDOMTextNode3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051073E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMTextNode3Disp = dispinterface
    ['{3051073E-98B5-11CF-BB82-00AA00BDCE0B}']
    function substringData(offset: Integer; Count: Integer): WideString; dispid 1010;
    procedure insertData(offset: Integer; const bstrstring: WideString); dispid 1011;
    procedure deleteData(offset: Integer; Count: Integer); dispid 1012;
    procedure replaceData(offset: Integer; Count: Integer; const bstrstring: WideString); dispid 1013;
    function splitText(offset: Integer): IHTMLDOMNode; dispid 1009;
    property wholeText: WideString readonly dispid 1014;
    function replaceWholeText(const bstrText: WideString): IHTMLDOMNode; dispid 1015;
    function hasAttributes: WordBool; dispid 1017;
    procedure normalize; dispid 1019;
  end;

// *********************************************************************//
// Interface: IHTMLDOMImplementation
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F80D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMImplementation = interface(IDispatch)
    ['{3050F80D-98B5-11CF-BB82-00AA00BDCE0B}']
    function hasFeature(const bstrfeature: WideString; version: OleVariant): WordBool; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDOMImplementationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F80D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMImplementationDisp = dispinterface
    ['{3050F80D-98B5-11CF-BB82-00AA00BDCE0B}']
    function hasFeature(const bstrfeature: WideString; version: OleVariant): WordBool; dispid 1000;
  end;

// *********************************************************************//
// Interface: IHTMLDOMImplementation2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051073C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMImplementation2 = interface(IDispatch)
    ['{3051073C-98B5-11CF-BB82-00AA00BDCE0B}']
    function createDocumentType(const bstrQualifiedName: WideString; 
                                const pvarPublicId: OleVariant; const pvarSystemId: OleVariant): IDOMDocumentType; safecall;
    function createDocument(const pvarNS: OleVariant; const pvarTagName: OleVariant; 
                            const pDocumentType: IDOMDocumentType): IHTMLDocument7; safecall;
    function createHTMLDocument(const bstrTitle: WideString): IHTMLDocument7; safecall;
    function hasFeature(const bstrfeature: WideString; version: OleVariant): WordBool; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDOMImplementation2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051073C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMImplementation2Disp = dispinterface
    ['{3051073C-98B5-11CF-BB82-00AA00BDCE0B}']
    function createDocumentType(const bstrQualifiedName: WideString; 
                                const pvarPublicId: OleVariant; const pvarSystemId: OleVariant): IDOMDocumentType; dispid 1001;
    function createDocument(const pvarNS: OleVariant; const pvarTagName: OleVariant; 
                            const pDocumentType: IDOMDocumentType): IHTMLDocument7; dispid 1002;
    function createHTMLDocument(const bstrTitle: WideString): IHTMLDocument7; dispid 1003;
    function hasFeature(const bstrfeature: WideString; version: OleVariant): WordBool; dispid 1004;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLDOMAttribute
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F564-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLDOMAttribute = dispinterface
    ['{3050F564-98B5-11CF-BB82-00AA00BDCE0B}']
    property nodeName: WideString readonly dispid 1000;
    property nodeValue: OleVariant dispid 1002;
    property specified: WordBool readonly dispid 1001;
    property name: WideString readonly dispid 1003;
    property value: WideString dispid 1004;
    property expando: WordBool readonly dispid 1005;
    property nodeType: Integer readonly dispid 1006;
    property parentNode: IHTMLDOMNode readonly dispid 1007;
    property childNodes: IDispatch readonly dispid 1008;
    property firstChild: IHTMLDOMNode readonly dispid 1009;
    property lastChild: IHTMLDOMNode readonly dispid 1010;
    property previousSibling: IHTMLDOMNode readonly dispid 1011;
    property nextSibling: IHTMLDOMNode readonly dispid 1012;
    property attributes: IDispatch readonly dispid 1013;
    property ownerDocument: IDispatch readonly dispid 1014;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid 1015;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid 1016;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid 1017;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid 1018;
    function hasChildNodes: WordBool; dispid 1019;
    function cloneNode(fDeep: WordBool): IHTMLDOMAttribute; dispid 1020;
    property ie8_nodeValue: OleVariant dispid 1153;
    property ie8_value: WideString dispid 1154;
    property ie8_specified: WordBool readonly dispid 1150;
    property ownerElement: IHTMLElement2 readonly dispid 1151;
    property ie9_nodeValue: OleVariant dispid 1159;
    property ie9_nodeName: WideString readonly dispid 1160;
    property ie9_name: WideString readonly dispid 1161;
    property ie9_value: WideString dispid 1162;
    property ie9_firstChild: IHTMLDOMNode readonly dispid 1163;
    property ie9_lastChild: IHTMLDOMNode readonly dispid 1164;
    property ie9_childNodes: IDispatch readonly dispid 1165;
    function hasAttributes: WordBool; dispid 1166;
    function ie9_hasChildNodes: WordBool; dispid 1167;
    procedure normalize; dispid 1170;
    property ie9_specified: WordBool readonly dispid 1171;
    property constructor_: IDispatch readonly dispid -2147417603;
    property prefix: OleVariant dispid -2147416992;
    property localName: OleVariant readonly dispid -2147416994;
    property namespaceURI: OleVariant readonly dispid -2147416993;
    property textContent: OleVariant dispid -2147416985;
    function isEqualNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416991;
    function lookupNamespaceURI(const pvarPrefix: OleVariant): OleVariant; dispid -2147416990;
    function lookupPrefix(const pvarNamespaceURI: OleVariant): OleVariant; dispid -2147416989;
    function isDefaultNamespace(const pvarNamespace: OleVariant): WordBool; dispid -2147416988;
    function ie9_appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416844;
    function ie9_insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147416843;
    function ie9_removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416842;
    function ie9_replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416841;
    function isSameNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416987;
    function compareDocumentPosition(const otherNode: IHTMLDOMNode): Word; dispid -2147416986;
    function isSupported(const feature: WideString; version: OleVariant): WordBool; dispid -2147416835;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLDOMTextNode
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F565-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLDOMTextNode = dispinterface
    ['{3050F565-98B5-11CF-BB82-00AA00BDCE0B}']
    property data: WideString dispid 1000;
    function toString: WideString; dispid 1001;
    property length: Integer readonly dispid 1002;
    function splitText(offset: Integer): IHTMLDOMNode; dispid 1003;
    function substringData(offset: Integer; Count: Integer): WideString; dispid 1004;
    procedure appendData(const bstrstring: WideString); dispid 1005;
    procedure insertData(offset: Integer; const bstrstring: WideString); dispid 1006;
    procedure deleteData(offset: Integer; Count: Integer); dispid 1007;
    procedure replaceData(offset: Integer; Count: Integer; const bstrstring: WideString); dispid 1008;
    function ie9_substringData(offset: Integer; Count: Integer): WideString; dispid 1010;
    procedure ie9_insertData(offset: Integer; const bstrstring: WideString); dispid 1011;
    procedure ie9_deleteData(offset: Integer; Count: Integer); dispid 1012;
    procedure ie9_replaceData(offset: Integer; Count: Integer; const bstrstring: WideString); dispid 1013;
    function ie9_splitText(offset: Integer): IHTMLDOMNode; dispid 1009;
    property wholeText: WideString readonly dispid 1014;
    function replaceWholeText(const bstrText: WideString): IHTMLDOMNode; dispid 1015;
    function hasAttributes: WordBool; dispid 1017;
    procedure normalize; dispid 1019;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    property prefix: OleVariant dispid -2147416992;
    property localName: OleVariant readonly dispid -2147416994;
    property namespaceURI: OleVariant readonly dispid -2147416993;
    property textContent: OleVariant dispid -2147416985;
    function isEqualNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416991;
    function lookupNamespaceURI(const pvarPrefix: OleVariant): OleVariant; dispid -2147416990;
    function lookupPrefix(const pvarNamespaceURI: OleVariant): OleVariant; dispid -2147416989;
    function isDefaultNamespace(const pvarNamespace: OleVariant): WordBool; dispid -2147416988;
    function ie9_appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416844;
    function ie9_insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147416843;
    function ie9_removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416842;
    function ie9_replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416841;
    function isSameNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416987;
    function compareDocumentPosition(const otherNode: IHTMLDOMNode): Word; dispid -2147416986;
    function isSupported(const feature: WideString; version: OleVariant): WordBool; dispid -2147416835;
    property constructor_: IDispatch readonly dispid -2147417603;
    procedure addEventListener(const type_: WideString; const listener: IDispatch; 
                               useCapture: WordBool); dispid -2147417602;
    procedure removeEventListener(const type_: WideString; const listener: IDispatch; 
                                  useCapture: WordBool); dispid -2147417601;
    function dispatchEvent(const evt: IDOMEvent): WordBool; dispid -2147417600;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLDOMImplementation
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F58F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLDOMImplementation = dispinterface
    ['{3050F58F-98B5-11CF-BB82-00AA00BDCE0B}']
    function hasFeature(const bstrfeature: WideString; version: OleVariant): WordBool; dispid 1000;
    function createDocumentType(const bstrQualifiedName: WideString; 
                                const pvarPublicId: OleVariant; const pvarSystemId: OleVariant): IDOMDocumentType; dispid 1001;
    function createDocument(const pvarNS: OleVariant; const pvarTagName: OleVariant; 
                            const pDocumentType: IDOMDocumentType): IHTMLDocument7; dispid 1002;
    function createHTMLDocument(const bstrTitle: WideString): IHTMLDocument7; dispid 1003;
    function ie9_hasFeature(const bstrfeature: WideString; version: OleVariant): WordBool; dispid 1004;
    property constructor_: IDispatch readonly dispid -2147417603;
  end;

// *********************************************************************//
// Interface: IHTMLAttributeCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4C3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAttributeCollection = interface(IDispatch)
    ['{3050F4C3-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    function Get__newEnum: IUnknown; safecall;
    function item(const name: OleVariant): IDispatch; safecall;
    property length: Integer read Get_length;
    property _newEnum: IUnknown read Get__newEnum;
  end;

// *********************************************************************//
// DispIntf:  IHTMLAttributeCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4C3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAttributeCollectionDisp = dispinterface
    ['{3050F4C3-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1500;
    property _newEnum: IUnknown readonly dispid -4;
    function item(const name: OleVariant): IDispatch; dispid 0;
  end;

// *********************************************************************//
// Interface: IHTMLAttributeCollection2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F80A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAttributeCollection2 = interface(IDispatch)
    ['{3050F80A-98B5-11CF-BB82-00AA00BDCE0B}']
    function getNamedItem(const bstrName: WideString): IHTMLDOMAttribute; safecall;
    function setNamedItem(const ppNode: IHTMLDOMAttribute): IHTMLDOMAttribute; safecall;
    function removeNamedItem(const bstrName: WideString): IHTMLDOMAttribute; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLAttributeCollection2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F80A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAttributeCollection2Disp = dispinterface
    ['{3050F80A-98B5-11CF-BB82-00AA00BDCE0B}']
    function getNamedItem(const bstrName: WideString): IHTMLDOMAttribute; dispid 1501;
    function setNamedItem(const ppNode: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid 1502;
    function removeNamedItem(const bstrName: WideString): IHTMLDOMAttribute; dispid 1503;
  end;

// *********************************************************************//
// Interface: IHTMLAttributeCollection4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106FA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAttributeCollection4 = interface(IDispatch)
    ['{305106FA-98B5-11CF-BB82-00AA00BDCE0B}']
    function getNamedItemNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; safecall;
    function setNamedItemNS(const pNodeIn: IHTMLDOMAttribute2): IHTMLDOMAttribute2; safecall;
    function removeNamedItemNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; safecall;
    function getNamedItem(const bstrName: WideString): IHTMLDOMAttribute2; safecall;
    function setNamedItem(const pNodeIn: IHTMLDOMAttribute2): IHTMLDOMAttribute2; safecall;
    function removeNamedItem(const bstrName: WideString): IHTMLDOMAttribute2; safecall;
    function item(index: Integer): IHTMLDOMAttribute2; safecall;
    function Get_length: Integer; safecall;
    property length: Integer read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IHTMLAttributeCollection4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106FA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAttributeCollection4Disp = dispinterface
    ['{305106FA-98B5-11CF-BB82-00AA00BDCE0B}']
    function getNamedItemNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid 1155;
    function setNamedItemNS(const pNodeIn: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid 1156;
    function removeNamedItemNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid 1157;
    function getNamedItem(const bstrName: WideString): IHTMLDOMAttribute2; dispid 1158;
    function setNamedItem(const pNodeIn: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid 1159;
    function removeNamedItem(const bstrName: WideString): IHTMLDOMAttribute2; dispid 1160;
    function item(index: Integer): IHTMLDOMAttribute2; dispid 1161;
    property length: Integer readonly dispid 1162;
  end;

// *********************************************************************//
// Interface: IHTMLDOMChildrenCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5AB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMChildrenCollection = interface(IDispatch)
    ['{3050F5AB-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    function Get__newEnum: IUnknown; safecall;
    function item(index: Integer): IDispatch; safecall;
    property length: Integer read Get_length;
    property _newEnum: IUnknown read Get__newEnum;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDOMChildrenCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5AB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMChildrenCollectionDisp = dispinterface
    ['{3050F5AB-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1500;
    property _newEnum: IUnknown readonly dispid -4;
    function item(index: Integer): IDispatch; dispid 0;
  end;

// *********************************************************************//
// Interface: IHTMLDOMChildrenCollection2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510791-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMChildrenCollection2 = interface(IDispatch)
    ['{30510791-98B5-11CF-BB82-00AA00BDCE0B}']
    function item(index: Integer): IDispatch; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDOMChildrenCollection2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510791-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMChildrenCollection2Disp = dispinterface
    ['{30510791-98B5-11CF-BB82-00AA00BDCE0B}']
    function item(index: Integer): IDispatch; dispid 1;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLAttributeCollection
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F56C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLAttributeCollection = dispinterface
    ['{3050F56C-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1500;
    property _newEnum: IUnknown readonly dispid -4;
    function item(const name: OleVariant): IDispatch; dispid 0;
    function getNamedItem(const bstrName: WideString): IHTMLDOMAttribute; dispid 1501;
    function setNamedItem(const ppNode: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid 1502;
    function removeNamedItem(const bstrName: WideString): IHTMLDOMAttribute; dispid 1503;
    function ie8_getNamedItem(const bstrName: WideString): IHTMLDOMAttribute; dispid 1150;
    function ie8_setNamedItem(const pNodeIn: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid 1151;
    function ie8_removeNamedItem(const bstrName: WideString): IHTMLDOMAttribute; dispid 1152;
    function ie8_item(index: Integer): IHTMLDOMAttribute; dispid 1154;
    property ie8_length: Integer readonly dispid 1153;
    function getNamedItemNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid 1155;
    function setNamedItemNS(const pNodeIn: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid 1156;
    function removeNamedItemNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid 1157;
    function ie9_getNamedItem(const bstrName: WideString): IHTMLDOMAttribute2; dispid 1158;
    function ie9_setNamedItem(const pNodeIn: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid 1159;
    function ie9_removeNamedItem(const bstrName: WideString): IHTMLDOMAttribute2; dispid 1160;
    function ie9_item(index: Integer): IHTMLDOMAttribute2; dispid 1161;
    property ie9_length: Integer readonly dispid 1162;
    property constructor_: IDispatch readonly dispid -2147417603;
  end;

// *********************************************************************//
// DispIntf:  DispStaticNodeList
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F59B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispStaticNodeList = dispinterface
    ['{3050F59B-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1500;
    property _newEnum: IUnknown readonly dispid -4;
    function item(index: Integer): IDispatch; dispid 0;
    property constructor_: IDispatch readonly dispid -2147417603;
  end;

// *********************************************************************//
// DispIntf:  DispDOMChildrenCollection
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F577-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispDOMChildrenCollection = dispinterface
    ['{3050F577-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1500;
    property _newEnum: IUnknown readonly dispid -4;
    function item(index: Integer): IDispatch; dispid 0;
    function ie9_item(index: Integer): IDispatch; dispid 1;
    property constructor_: IDispatch readonly dispid -2147417603;
  end;

// *********************************************************************//
// DispIntf:  HTMLElementEvents4
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3051075E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLElementEvents4 = dispinterface
    ['{3051075E-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure onabort(const pEvtObj: IHTMLEventObj); dispid 1000;
    procedure onchange(const pEvtObj: IHTMLEventObj); dispid 1001;
    procedure onerror(const pEvtObj: IHTMLEventObj); dispid 1002;
    procedure onload(const pEvtObj: IHTMLEventObj); dispid 1003;
    procedure onreset(const pEvtObj: IHTMLEventObj); dispid 1015;
    procedure onselect(const pEvtObj: IHTMLEventObj); dispid 1006;
    procedure onsubmit(const pEvtObj: IHTMLEventObj); dispid 1007;
    procedure onmscontentzoom(const pEvtObj: IHTMLEventObj); dispid -2147411940;
  end;

// *********************************************************************//
// DispIntf:  HTMLElementEvents3
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F59F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLElementEvents3 = dispinterface
    ['{3050F59F-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure ononline(const pEvtObj: IHTMLEventObj); dispid 1064;
    procedure onoffline(const pEvtObj: IHTMLEventObj); dispid 1065;
  end;

// *********************************************************************//
// DispIntf:  HTMLElementEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F60F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLElementEvents2 = dispinterface
    ['{3050F60F-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
  end;

// *********************************************************************//
// DispIntf:  HTMLElementEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F33C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLElementEvents = dispinterface
    ['{3050F33C-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid -2147418102;
    function onclick: WordBool; dispid -600;
    function ondblclick: WordBool; dispid -601;
    function onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function ondragstart: WordBool; dispid -2147418101;
    function onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function onerrorupdate: WordBool; dispid -2147418099;
    function onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function ondragenter: WordBool; dispid -2147418090;
    function ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function ondrop: WordBool; dispid -2147418087;
    function onbeforecut: WordBool; dispid -2147418083;
    function oncut: WordBool; dispid -2147418086;
    function onbeforecopy: WordBool; dispid -2147418082;
    function oncopy: WordBool; dispid -2147418085;
    function onbeforepaste: WordBool; dispid -2147418081;
    function onpaste: WordBool; dispid -2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
  end;

// *********************************************************************//
// Interface: IRulesAppliedCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104BE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IRulesAppliedCollection = interface(IDispatch)
    ['{305104BE-98B5-11CF-BB82-00AA00BDCE0B}']
    function item(index: Integer): IRulesApplied; safecall;
    function Get_length: Integer; safecall;
    function Get_element: IHTMLElement; safecall;
    function propertyInheritedFrom(const name: WideString): IRulesApplied; safecall;
    function Get_propertyCount: Integer; safecall;
    function property_(index: Integer): WideString; safecall;
    function propertyInheritedTrace(const name: WideString; index: Integer): IRulesApplied; safecall;
    function propertyInheritedTraceLength(const name: WideString): Integer; safecall;
    property length: Integer read Get_length;
    property element: IHTMLElement read Get_element;
    property propertyCount: Integer read Get_propertyCount;
  end;

// *********************************************************************//
// DispIntf:  IRulesAppliedCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104BE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IRulesAppliedCollectionDisp = dispinterface
    ['{305104BE-98B5-11CF-BB82-00AA00BDCE0B}']
    function item(index: Integer): IRulesApplied; dispid 0;
    property length: Integer readonly dispid 1001;
    property element: IHTMLElement readonly dispid 1002;
    function propertyInheritedFrom(const name: WideString): IRulesApplied; dispid 1003;
    property propertyCount: Integer readonly dispid 1004;
    function property_(index: Integer): WideString; dispid 1005;
    function propertyInheritedTrace(const name: WideString; index: Integer): IRulesApplied; dispid 1006;
    function propertyInheritedTraceLength(const name: WideString): Integer; dispid 1007;
  end;

// *********************************************************************//
// Interface: IRulesApplied
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104BF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IRulesApplied = interface(IDispatch)
    ['{305104BF-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_element: IHTMLElement; safecall;
    function Get_inlineStyles: IHTMLStyle; safecall;
    function Get_appliedRules: IHTMLStyleSheetRulesAppliedCollection; safecall;
    function propertyIsInline(const name: WideString): WordBool; safecall;
    function propertyIsInheritable(const name: WideString): WordBool; safecall;
    function hasInheritableProperty: WordBool; safecall;
    property element: IHTMLElement read Get_element;
    property inlineStyles: IHTMLStyle read Get_inlineStyles;
    property appliedRules: IHTMLStyleSheetRulesAppliedCollection read Get_appliedRules;
  end;

// *********************************************************************//
// DispIntf:  IRulesAppliedDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104BF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IRulesAppliedDisp = dispinterface
    ['{305104BF-98B5-11CF-BB82-00AA00BDCE0B}']
    property element: IHTMLElement readonly dispid 1001;
    property inlineStyles: IHTMLStyle readonly dispid 1002;
    property appliedRules: IHTMLStyleSheetRulesAppliedCollection readonly dispid 1003;
    function propertyIsInline(const name: WideString): WordBool; dispid 1004;
    function propertyIsInheritable(const name: WideString): WordBool; dispid 1005;
    function hasInheritableProperty: WordBool; dispid 1006;
  end;

// *********************************************************************//
// Interface: IHTMLStyleSheetRulesAppliedCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104C0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetRulesAppliedCollection = interface(IDispatch)
    ['{305104C0-98B5-11CF-BB82-00AA00BDCE0B}']
    function item(index: Integer): IHTMLStyleSheetRule; safecall;
    function Get_length: Integer; safecall;
    function propertyAppliedBy(const name: WideString): IHTMLStyleSheetRule; safecall;
    function propertyAppliedTrace(const name: WideString; index: Integer): IHTMLStyleSheetRule; safecall;
    function propertyAppliedTraceLength(const name: WideString): Integer; safecall;
    property length: Integer read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleSheetRulesAppliedCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104C0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetRulesAppliedCollectionDisp = dispinterface
    ['{305104C0-98B5-11CF-BB82-00AA00BDCE0B}']
    function item(index: Integer): IHTMLStyleSheetRule; dispid 0;
    property length: Integer readonly dispid 1001;
    function propertyAppliedBy(const name: WideString): IHTMLStyleSheetRule; dispid 1002;
    function propertyAppliedTrace(const name: WideString; index: Integer): IHTMLStyleSheetRule; dispid 1004;
    function propertyAppliedTraceLength(const name: WideString): Integer; dispid 1005;
  end;

// *********************************************************************//
// Interface: IHTMLElement3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F673-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElement3 = interface(IDispatch)
    ['{3050F673-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); safecall;
    function Get_isMultiLine: WordBool; safecall;
    function Get_canHaveHTML: WordBool; safecall;
    procedure Set_onlayoutcomplete(p: OleVariant); safecall;
    function Get_onlayoutcomplete: OleVariant; safecall;
    procedure Set_onpage(p: OleVariant); safecall;
    function Get_onpage: OleVariant; safecall;
    procedure Set_inflateBlock(p: WordBool); safecall;
    function Get_inflateBlock: WordBool; safecall;
    procedure Set_onbeforedeactivate(p: OleVariant); safecall;
    function Get_onbeforedeactivate: OleVariant; safecall;
    procedure setActive; safecall;
    procedure Set_contentEditable(const p: WideString); safecall;
    function Get_contentEditable: WideString; safecall;
    function Get_isContentEditable: WordBool; safecall;
    procedure Set_hideFocus(p: WordBool); safecall;
    function Get_hideFocus: WordBool; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function Get_disabled: WordBool; safecall;
    function Get_isDisabled: WordBool; safecall;
    procedure Set_onmove(p: OleVariant); safecall;
    function Get_onmove: OleVariant; safecall;
    procedure Set_oncontrolselect(p: OleVariant); safecall;
    function Get_oncontrolselect: OleVariant; safecall;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; safecall;
    procedure Set_onresizestart(p: OleVariant); safecall;
    function Get_onresizestart: OleVariant; safecall;
    procedure Set_onresizeend(p: OleVariant); safecall;
    function Get_onresizeend: OleVariant; safecall;
    procedure Set_onmovestart(p: OleVariant); safecall;
    function Get_onmovestart: OleVariant; safecall;
    procedure Set_onmoveend(p: OleVariant); safecall;
    function Get_onmoveend: OleVariant; safecall;
    procedure Set_onmouseenter(p: OleVariant); safecall;
    function Get_onmouseenter: OleVariant; safecall;
    procedure Set_onmouseleave(p: OleVariant); safecall;
    function Get_onmouseleave: OleVariant; safecall;
    procedure Set_onactivate(p: OleVariant); safecall;
    function Get_onactivate: OleVariant; safecall;
    procedure Set_ondeactivate(p: OleVariant); safecall;
    function Get_ondeactivate: OleVariant; safecall;
    function dragDrop: WordBool; safecall;
    function Get_glyphMode: Integer; safecall;
    property isMultiLine: WordBool read Get_isMultiLine;
    property canHaveHTML: WordBool read Get_canHaveHTML;
    property onlayoutcomplete: OleVariant read Get_onlayoutcomplete write Set_onlayoutcomplete;
    property onpage: OleVariant read Get_onpage write Set_onpage;
    property inflateBlock: WordBool read Get_inflateBlock write Set_inflateBlock;
    property onbeforedeactivate: OleVariant read Get_onbeforedeactivate write Set_onbeforedeactivate;
    property contentEditable: WideString read Get_contentEditable write Set_contentEditable;
    property isContentEditable: WordBool read Get_isContentEditable;
    property hideFocus: WordBool read Get_hideFocus write Set_hideFocus;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property isDisabled: WordBool read Get_isDisabled;
    property onmove: OleVariant read Get_onmove write Set_onmove;
    property oncontrolselect: OleVariant read Get_oncontrolselect write Set_oncontrolselect;
    property onresizestart: OleVariant read Get_onresizestart write Set_onresizestart;
    property onresizeend: OleVariant read Get_onresizeend write Set_onresizeend;
    property onmovestart: OleVariant read Get_onmovestart write Set_onmovestart;
    property onmoveend: OleVariant read Get_onmoveend write Set_onmoveend;
    property onmouseenter: OleVariant read Get_onmouseenter write Set_onmouseenter;
    property onmouseleave: OleVariant read Get_onmouseleave write Set_onmouseleave;
    property onactivate: OleVariant read Get_onactivate write Set_onactivate;
    property ondeactivate: OleVariant read Get_ondeactivate write Set_ondeactivate;
    property glyphMode: Integer read Get_glyphMode;
  end;

// *********************************************************************//
// DispIntf:  IHTMLElement3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F673-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElement3Disp = dispinterface
    ['{3050F673-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
  end;

// *********************************************************************//
// Interface: IHTMLElement4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F80F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElement4 = interface(IDispatch)
    ['{3050F80F-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_onmousewheel(p: OleVariant); safecall;
    function Get_onmousewheel: OleVariant; safecall;
    procedure normalize; safecall;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; safecall;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; safecall;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; safecall;
    procedure Set_onbeforeactivate(p: OleVariant); safecall;
    function Get_onbeforeactivate: OleVariant; safecall;
    procedure Set_onfocusin(p: OleVariant); safecall;
    function Get_onfocusin: OleVariant; safecall;
    procedure Set_onfocusout(p: OleVariant); safecall;
    function Get_onfocusout: OleVariant; safecall;
    property onmousewheel: OleVariant read Get_onmousewheel write Set_onmousewheel;
    property onbeforeactivate: OleVariant read Get_onbeforeactivate write Set_onbeforeactivate;
    property onfocusin: OleVariant read Get_onfocusin write Set_onfocusin;
    property onfocusout: OleVariant read Get_onfocusout write Set_onfocusout;
  end;

// *********************************************************************//
// DispIntf:  IHTMLElement4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F80F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElement4Disp = dispinterface
    ['{3050F80F-98B5-11CF-BB82-00AA00BDCE0B}']
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
  end;

// *********************************************************************//
// Interface: IElementSelector
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510463-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementSelector = interface(IDispatch)
    ['{30510463-98B5-11CF-BB82-00AA00BDCE0B}']
    function querySelector(const v: WideString): IHTMLElement; safecall;
    function querySelectorAll(const v: WideString): IHTMLDOMChildrenCollection; safecall;
  end;

// *********************************************************************//
// DispIntf:  IElementSelectorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510463-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementSelectorDisp = dispinterface
    ['{30510463-98B5-11CF-BB82-00AA00BDCE0B}']
    function querySelector(const v: WideString): IHTMLElement; dispid -2147416998;
    function querySelectorAll(const v: WideString): IHTMLDOMChildrenCollection; dispid -2147416997;
  end;

// *********************************************************************//
// Interface: IHTMLElementRender
// Flags:     (0)
// GUID:      {3050F669-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElementRender = interface(IUnknown)
    ['{3050F669-98B5-11CF-BB82-00AA00BDCE0B}']
    // !! API fix decl
    function DrawToDC(hdc: HDC): HResult; stdcall;
    // !! API fix decl
    function SetDocumentPrinter(const bstrPrinterName: WideString; hdc: HDC): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IHTMLUniqueName
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4D0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLUniqueName = interface(IDispatch)
    ['{3050F4D0-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_uniqueNumber: Integer; safecall;
    function Get_uniqueID: WideString; safecall;
    property uniqueNumber: Integer read Get_uniqueNumber;
    property uniqueID: WideString read Get_uniqueID;
  end;

// *********************************************************************//
// DispIntf:  IHTMLUniqueNameDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4D0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLUniqueNameDisp = dispinterface
    ['{3050F4D0-98B5-11CF-BB82-00AA00BDCE0B}']
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
  end;

// *********************************************************************//
// Interface: IHTMLElement5
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051045D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElement5 = interface(IDispatch)
    ['{3051045D-98B5-11CF-BB82-00AA00BDCE0B}']
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; safecall;
    function setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; safecall;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; safecall;
    function hasAttribute(const name: WideString): WordBool; safecall;
    procedure Set_role(const p: WideString); safecall;
    function Get_role: WideString; safecall;
    procedure Set_ariaBusy(const p: WideString); safecall;
    function Get_ariaBusy: WideString; safecall;
    procedure Set_ariaChecked(const p: WideString); safecall;
    function Get_ariaChecked: WideString; safecall;
    procedure Set_ariaDisabled(const p: WideString); safecall;
    function Get_ariaDisabled: WideString; safecall;
    procedure Set_ariaExpanded(const p: WideString); safecall;
    function Get_ariaExpanded: WideString; safecall;
    procedure Set_ariaHaspopup(const p: WideString); safecall;
    function Get_ariaHaspopup: WideString; safecall;
    procedure Set_ariaHidden(const p: WideString); safecall;
    function Get_ariaHidden: WideString; safecall;
    procedure Set_ariaInvalid(const p: WideString); safecall;
    function Get_ariaInvalid: WideString; safecall;
    procedure Set_ariaMultiselectable(const p: WideString); safecall;
    function Get_ariaMultiselectable: WideString; safecall;
    procedure Set_ariaPressed(const p: WideString); safecall;
    function Get_ariaPressed: WideString; safecall;
    procedure Set_ariaReadonly(const p: WideString); safecall;
    function Get_ariaReadonly: WideString; safecall;
    procedure Set_ariaRequired(const p: WideString); safecall;
    function Get_ariaRequired: WideString; safecall;
    procedure Set_ariaSecret(const p: WideString); safecall;
    function Get_ariaSecret: WideString; safecall;
    procedure Set_ariaSelected(const p: WideString); safecall;
    function Get_ariaSelected: WideString; safecall;
    function getAttribute(const strAttributeName: WideString): OleVariant; safecall;
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); safecall;
    function removeAttribute(const strAttributeName: WideString): WordBool; safecall;
    function Get_attributes: IHTMLAttributeCollection3; safecall;
    procedure Set_ariaValuenow(const p: WideString); safecall;
    function Get_ariaValuenow: WideString; safecall;
    procedure Set_ariaPosinset(p: Smallint); safecall;
    function Get_ariaPosinset: Smallint; safecall;
    procedure Set_ariaSetsize(p: Smallint); safecall;
    function Get_ariaSetsize: Smallint; safecall;
    procedure Set_ariaLevel(p: Smallint); safecall;
    function Get_ariaLevel: Smallint; safecall;
    procedure Set_ariaValuemin(const p: WideString); safecall;
    function Get_ariaValuemin: WideString; safecall;
    procedure Set_ariaValuemax(const p: WideString); safecall;
    function Get_ariaValuemax: WideString; safecall;
    procedure Set_ariaControls(const p: WideString); safecall;
    function Get_ariaControls: WideString; safecall;
    procedure Set_ariaDescribedby(const p: WideString); safecall;
    function Get_ariaDescribedby: WideString; safecall;
    procedure Set_ariaFlowto(const p: WideString); safecall;
    function Get_ariaFlowto: WideString; safecall;
    procedure Set_ariaLabelledby(const p: WideString); safecall;
    function Get_ariaLabelledby: WideString; safecall;
    procedure Set_ariaActivedescendant(const p: WideString); safecall;
    function Get_ariaActivedescendant: WideString; safecall;
    procedure Set_ariaOwns(const p: WideString); safecall;
    function Get_ariaOwns: WideString; safecall;
    function hasAttributes: WordBool; safecall;
    procedure Set_ariaLive(const p: WideString); safecall;
    function Get_ariaLive: WideString; safecall;
    procedure Set_ariaRelevant(const p: WideString); safecall;
    function Get_ariaRelevant: WideString; safecall;
    property role: WideString read Get_role write Set_role;
    property ariaBusy: WideString read Get_ariaBusy write Set_ariaBusy;
    property ariaChecked: WideString read Get_ariaChecked write Set_ariaChecked;
    property ariaDisabled: WideString read Get_ariaDisabled write Set_ariaDisabled;
    property ariaExpanded: WideString read Get_ariaExpanded write Set_ariaExpanded;
    property ariaHaspopup: WideString read Get_ariaHaspopup write Set_ariaHaspopup;
    property ariaHidden: WideString read Get_ariaHidden write Set_ariaHidden;
    property ariaInvalid: WideString read Get_ariaInvalid write Set_ariaInvalid;
    property ariaMultiselectable: WideString read Get_ariaMultiselectable write Set_ariaMultiselectable;
    property ariaPressed: WideString read Get_ariaPressed write Set_ariaPressed;
    property ariaReadonly: WideString read Get_ariaReadonly write Set_ariaReadonly;
    property ariaRequired: WideString read Get_ariaRequired write Set_ariaRequired;
    property ariaSecret: WideString read Get_ariaSecret write Set_ariaSecret;
    property ariaSelected: WideString read Get_ariaSelected write Set_ariaSelected;
    property attributes: IHTMLAttributeCollection3 read Get_attributes;
    property ariaValuenow: WideString read Get_ariaValuenow write Set_ariaValuenow;
    property ariaPosinset: Smallint read Get_ariaPosinset write Set_ariaPosinset;
    property ariaSetsize: Smallint read Get_ariaSetsize write Set_ariaSetsize;
    property ariaLevel: Smallint read Get_ariaLevel write Set_ariaLevel;
    property ariaValuemin: WideString read Get_ariaValuemin write Set_ariaValuemin;
    property ariaValuemax: WideString read Get_ariaValuemax write Set_ariaValuemax;
    property ariaControls: WideString read Get_ariaControls write Set_ariaControls;
    property ariaDescribedby: WideString read Get_ariaDescribedby write Set_ariaDescribedby;
    property ariaFlowto: WideString read Get_ariaFlowto write Set_ariaFlowto;
    property ariaLabelledby: WideString read Get_ariaLabelledby write Set_ariaLabelledby;
    property ariaActivedescendant: WideString read Get_ariaActivedescendant write Set_ariaActivedescendant;
    property ariaOwns: WideString read Get_ariaOwns write Set_ariaOwns;
    property ariaLive: WideString read Get_ariaLive write Set_ariaLive;
    property ariaRelevant: WideString read Get_ariaRelevant write Set_ariaRelevant;
  end;

// *********************************************************************//
// DispIntf:  IHTMLElement5Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051045D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElement5Disp = dispinterface
    ['{3051045D-98B5-11CF-BB82-00AA00BDCE0B}']
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
  end;

// *********************************************************************//
// Interface: IHTMLElement6
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106F8-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElement6 = interface(IDispatch)
    ['{305106F8-98B5-11CF-BB82-00AA00BDCE0B}']
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; safecall;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); safecall;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); safecall;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; safecall;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; safecall;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; safecall;
    function getAttribute(const strAttributeName: WideString): OleVariant; safecall;
    procedure setAttribute(const strAttributeName: WideString; const pvarAttributeValue: OleVariant); safecall;
    procedure removeAttribute(const strAttributeName: WideString); safecall;
    function getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; safecall;
    function setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; safecall;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; safecall;
    function hasAttribute(const name: WideString): WordBool; safecall;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; safecall;
    function Get_tagName: WideString; safecall;
    function Get_nodeName: WideString; safecall;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; safecall;
    function msMatchesSelector(const v: WideString): WordBool; safecall;
    procedure Set_onabort(p: OleVariant); safecall;
    function Get_onabort: OleVariant; safecall;
    procedure Set_oncanplay(p: OleVariant); safecall;
    function Get_oncanplay: OleVariant; safecall;
    procedure Set_oncanplaythrough(p: OleVariant); safecall;
    function Get_oncanplaythrough: OleVariant; safecall;
    procedure Set_onchange(p: OleVariant); safecall;
    function Get_onchange: OleVariant; safecall;
    procedure Set_ondurationchange(p: OleVariant); safecall;
    function Get_ondurationchange: OleVariant; safecall;
    procedure Set_onemptied(p: OleVariant); safecall;
    function Get_onemptied: OleVariant; safecall;
    procedure Set_onended(p: OleVariant); safecall;
    function Get_onended: OleVariant; safecall;
    procedure Set_onerror(p: OleVariant); safecall;
    function Get_onerror: OleVariant; safecall;
    procedure Set_oninput(p: OleVariant); safecall;
    function Get_oninput: OleVariant; safecall;
    procedure Set_onload(p: OleVariant); safecall;
    function Get_onload: OleVariant; safecall;
    procedure Set_onloadeddata(p: OleVariant); safecall;
    function Get_onloadeddata: OleVariant; safecall;
    procedure Set_onloadedmetadata(p: OleVariant); safecall;
    function Get_onloadedmetadata: OleVariant; safecall;
    procedure Set_onloadstart(p: OleVariant); safecall;
    function Get_onloadstart: OleVariant; safecall;
    procedure Set_onpause(p: OleVariant); safecall;
    function Get_onpause: OleVariant; safecall;
    procedure Set_onplay(p: OleVariant); safecall;
    function Get_onplay: OleVariant; safecall;
    procedure Set_onplaying(p: OleVariant); safecall;
    function Get_onplaying: OleVariant; safecall;
    procedure Set_onprogress(p: OleVariant); safecall;
    function Get_onprogress: OleVariant; safecall;
    procedure Set_onratechange(p: OleVariant); safecall;
    function Get_onratechange: OleVariant; safecall;
    procedure Set_onreset(p: OleVariant); safecall;
    function Get_onreset: OleVariant; safecall;
    procedure Set_onseeked(p: OleVariant); safecall;
    function Get_onseeked: OleVariant; safecall;
    procedure Set_onseeking(p: OleVariant); safecall;
    function Get_onseeking: OleVariant; safecall;
    procedure Set_onselect(p: OleVariant); safecall;
    function Get_onselect: OleVariant; safecall;
    procedure Set_onstalled(p: OleVariant); safecall;
    function Get_onstalled: OleVariant; safecall;
    procedure Set_onsubmit(p: OleVariant); safecall;
    function Get_onsubmit: OleVariant; safecall;
    procedure Set_onsuspend(p: OleVariant); safecall;
    function Get_onsuspend: OleVariant; safecall;
    procedure Set_ontimeupdate(p: OleVariant); safecall;
    function Get_ontimeupdate: OleVariant; safecall;
    procedure Set_onvolumechange(p: OleVariant); safecall;
    function Get_onvolumechange: OleVariant; safecall;
    procedure Set_onwaiting(p: OleVariant); safecall;
    function Get_onwaiting: OleVariant; safecall;
    function hasAttributes: WordBool; safecall;
    property tagName: WideString read Get_tagName;
    property nodeName: WideString read Get_nodeName;
    property onabort: OleVariant read Get_onabort write Set_onabort;
    property oncanplay: OleVariant read Get_oncanplay write Set_oncanplay;
    property oncanplaythrough: OleVariant read Get_oncanplaythrough write Set_oncanplaythrough;
    property onchange: OleVariant read Get_onchange write Set_onchange;
    property ondurationchange: OleVariant read Get_ondurationchange write Set_ondurationchange;
    property onemptied: OleVariant read Get_onemptied write Set_onemptied;
    property onended: OleVariant read Get_onended write Set_onended;
    property onerror: OleVariant read Get_onerror write Set_onerror;
    property oninput: OleVariant read Get_oninput write Set_oninput;
    property onload: OleVariant read Get_onload write Set_onload;
    property onloadeddata: OleVariant read Get_onloadeddata write Set_onloadeddata;
    property onloadedmetadata: OleVariant read Get_onloadedmetadata write Set_onloadedmetadata;
    property onloadstart: OleVariant read Get_onloadstart write Set_onloadstart;
    property onpause: OleVariant read Get_onpause write Set_onpause;
    property onplay: OleVariant read Get_onplay write Set_onplay;
    property onplaying: OleVariant read Get_onplaying write Set_onplaying;
    property onprogress: OleVariant read Get_onprogress write Set_onprogress;
    property onratechange: OleVariant read Get_onratechange write Set_onratechange;
    property onreset: OleVariant read Get_onreset write Set_onreset;
    property onseeked: OleVariant read Get_onseeked write Set_onseeked;
    property onseeking: OleVariant read Get_onseeking write Set_onseeking;
    property onselect: OleVariant read Get_onselect write Set_onselect;
    property onstalled: OleVariant read Get_onstalled write Set_onstalled;
    property onsubmit: OleVariant read Get_onsubmit write Set_onsubmit;
    property onsuspend: OleVariant read Get_onsuspend write Set_onsuspend;
    property ontimeupdate: OleVariant read Get_ontimeupdate write Set_ontimeupdate;
    property onvolumechange: OleVariant read Get_onvolumechange write Set_onvolumechange;
    property onwaiting: OleVariant read Get_onwaiting write Set_onwaiting;
  end;

// *********************************************************************//
// DispIntf:  IHTMLElement6Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106F8-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElement6Disp = dispinterface
    ['{305106F8-98B5-11CF-BB82-00AA00BDCE0B}']
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure setAttribute(const strAttributeName: WideString; const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property tagName: WideString readonly dispid -2147416847;
    property nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function hasAttributes: WordBool; dispid -2147416833;
  end;

// *********************************************************************//
// Interface: IHTMLElement7
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305107AA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElement7 = interface(IDispatch)
    ['{305107AA-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_onmspointerdown(p: OleVariant); safecall;
    function Get_onmspointerdown: OleVariant; safecall;
    procedure Set_onmspointermove(p: OleVariant); safecall;
    function Get_onmspointermove: OleVariant; safecall;
    procedure Set_onmspointerup(p: OleVariant); safecall;
    function Get_onmspointerup: OleVariant; safecall;
    procedure Set_onmspointerover(p: OleVariant); safecall;
    function Get_onmspointerover: OleVariant; safecall;
    procedure Set_onmspointerout(p: OleVariant); safecall;
    function Get_onmspointerout: OleVariant; safecall;
    procedure Set_onmspointercancel(p: OleVariant); safecall;
    function Get_onmspointercancel: OleVariant; safecall;
    procedure Set_onmspointerhover(p: OleVariant); safecall;
    function Get_onmspointerhover: OleVariant; safecall;
    procedure Set_onmslostpointercapture(p: OleVariant); safecall;
    function Get_onmslostpointercapture: OleVariant; safecall;
    procedure Set_onmsgotpointercapture(p: OleVariant); safecall;
    function Get_onmsgotpointercapture: OleVariant; safecall;
    procedure Set_onmsgesturestart(p: OleVariant); safecall;
    function Get_onmsgesturestart: OleVariant; safecall;
    procedure Set_onmsgesturechange(p: OleVariant); safecall;
    function Get_onmsgesturechange: OleVariant; safecall;
    procedure Set_onmsgestureend(p: OleVariant); safecall;
    function Get_onmsgestureend: OleVariant; safecall;
    procedure Set_onmsgesturehold(p: OleVariant); safecall;
    function Get_onmsgesturehold: OleVariant; safecall;
    procedure Set_onmsgesturetap(p: OleVariant); safecall;
    function Get_onmsgesturetap: OleVariant; safecall;
    procedure Set_onmsgesturedoubletap(p: OleVariant); safecall;
    function Get_onmsgesturedoubletap: OleVariant; safecall;
    procedure Set_onmsinertiastart(p: OleVariant); safecall;
    function Get_onmsinertiastart: OleVariant; safecall;
    procedure msSetPointerCapture(pointerId: Integer); safecall;
    procedure msReleasePointerCapture(pointerId: Integer); safecall;
    procedure Set_onmstransitionstart(p: OleVariant); safecall;
    function Get_onmstransitionstart: OleVariant; safecall;
    procedure Set_onmstransitionend(p: OleVariant); safecall;
    function Get_onmstransitionend: OleVariant; safecall;
    procedure Set_onmsanimationstart(p: OleVariant); safecall;
    function Get_onmsanimationstart: OleVariant; safecall;
    procedure Set_onmsanimationend(p: OleVariant); safecall;
    function Get_onmsanimationend: OleVariant; safecall;
    procedure Set_onmsanimationiteration(p: OleVariant); safecall;
    function Get_onmsanimationiteration: OleVariant; safecall;
    procedure Set_oninvalid(p: OleVariant); safecall;
    function Get_oninvalid: OleVariant; safecall;
    procedure Set_xmsAcceleratorKey(const p: WideString); safecall;
    function Get_xmsAcceleratorKey: WideString; safecall;
    procedure Set_spellcheck(p: OleVariant); safecall;
    function Get_spellcheck: OleVariant; safecall;
    procedure Set_onmsmanipulationstatechanged(p: OleVariant); safecall;
    function Get_onmsmanipulationstatechanged: OleVariant; safecall;
    procedure Set_oncuechange(p: OleVariant); safecall;
    function Get_oncuechange: OleVariant; safecall;
    property onmspointerdown: OleVariant read Get_onmspointerdown write Set_onmspointerdown;
    property onmspointermove: OleVariant read Get_onmspointermove write Set_onmspointermove;
    property onmspointerup: OleVariant read Get_onmspointerup write Set_onmspointerup;
    property onmspointerover: OleVariant read Get_onmspointerover write Set_onmspointerover;
    property onmspointerout: OleVariant read Get_onmspointerout write Set_onmspointerout;
    property onmspointercancel: OleVariant read Get_onmspointercancel write Set_onmspointercancel;
    property onmspointerhover: OleVariant read Get_onmspointerhover write Set_onmspointerhover;
    property onmslostpointercapture: OleVariant read Get_onmslostpointercapture write Set_onmslostpointercapture;
    property onmsgotpointercapture: OleVariant read Get_onmsgotpointercapture write Set_onmsgotpointercapture;
    property onmsgesturestart: OleVariant read Get_onmsgesturestart write Set_onmsgesturestart;
    property onmsgesturechange: OleVariant read Get_onmsgesturechange write Set_onmsgesturechange;
    property onmsgestureend: OleVariant read Get_onmsgestureend write Set_onmsgestureend;
    property onmsgesturehold: OleVariant read Get_onmsgesturehold write Set_onmsgesturehold;
    property onmsgesturetap: OleVariant read Get_onmsgesturetap write Set_onmsgesturetap;
    property onmsgesturedoubletap: OleVariant read Get_onmsgesturedoubletap write Set_onmsgesturedoubletap;
    property onmsinertiastart: OleVariant read Get_onmsinertiastart write Set_onmsinertiastart;
    property onmstransitionstart: OleVariant read Get_onmstransitionstart write Set_onmstransitionstart;
    property onmstransitionend: OleVariant read Get_onmstransitionend write Set_onmstransitionend;
    property onmsanimationstart: OleVariant read Get_onmsanimationstart write Set_onmsanimationstart;
    property onmsanimationend: OleVariant read Get_onmsanimationend write Set_onmsanimationend;
    property onmsanimationiteration: OleVariant read Get_onmsanimationiteration write Set_onmsanimationiteration;
    property oninvalid: OleVariant read Get_oninvalid write Set_oninvalid;
    property xmsAcceleratorKey: WideString read Get_xmsAcceleratorKey write Set_xmsAcceleratorKey;
    property spellcheck: OleVariant read Get_spellcheck write Set_spellcheck;
    property onmsmanipulationstatechanged: OleVariant read Get_onmsmanipulationstatechanged write Set_onmsmanipulationstatechanged;
    property oncuechange: OleVariant read Get_oncuechange write Set_oncuechange;
  end;

// *********************************************************************//
// DispIntf:  IHTMLElement7Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305107AA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElement7Disp = dispinterface
    ['{305107AA-98B5-11CF-BB82-00AA00BDCE0B}']
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
  end;

// *********************************************************************//
// Interface: IHTMLElementAppliedStyles
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104BD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElementAppliedStyles = interface(IDispatch)
    ['{305104BD-98B5-11CF-BB82-00AA00BDCE0B}']
    function msGetRulesApplied: IRulesAppliedCollection; safecall;
    function msGetRulesAppliedWithAncestor(varContext: OleVariant): IRulesAppliedCollection; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLElementAppliedStylesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104BD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElementAppliedStylesDisp = dispinterface
    ['{305104BD-98B5-11CF-BB82-00AA00BDCE0B}']
    function msGetRulesApplied: IRulesAppliedCollection; dispid -2147416996;
    function msGetRulesAppliedWithAncestor(varContext: OleVariant): IRulesAppliedCollection; dispid -2147416995;
  end;

// *********************************************************************//
// Interface: IElementTraversal
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510736-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementTraversal = interface(IDispatch)
    ['{30510736-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_firstElementChild: IHTMLElement; safecall;
    function Get_lastElementChild: IHTMLElement; safecall;
    function Get_previousElementSibling: IHTMLElement; safecall;
    function Get_nextElementSibling: IHTMLElement; safecall;
    function Get_childElementCount: Integer; safecall;
    property firstElementChild: IHTMLElement read Get_firstElementChild;
    property lastElementChild: IHTMLElement read Get_lastElementChild;
    property previousElementSibling: IHTMLElement read Get_previousElementSibling;
    property nextElementSibling: IHTMLElement read Get_nextElementSibling;
    property childElementCount: Integer read Get_childElementCount;
  end;

// *********************************************************************//
// DispIntf:  IElementTraversalDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510736-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementTraversalDisp = dispinterface
    ['{30510736-98B5-11CF-BB82-00AA00BDCE0B}']
    property firstElementChild: IHTMLElement readonly dispid -2147416840;
    property lastElementChild: IHTMLElement readonly dispid -2147416839;
    property previousElementSibling: IHTMLElement readonly dispid -2147416838;
    property nextElementSibling: IHTMLElement readonly dispid -2147416837;
    property childElementCount: Integer readonly dispid -2147416836;
  end;

// *********************************************************************//
// Interface: IHTMLDatabinding
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3F2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDatabinding = interface(IDispatch)
    ['{3050F3F2-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_dataFld(const p: WideString); safecall;
    function Get_dataFld: WideString; safecall;
    procedure Set_dataSrc(const p: WideString); safecall;
    function Get_dataSrc: WideString; safecall;
    procedure Set_dataFormatAs(const p: WideString); safecall;
    function Get_dataFormatAs: WideString; safecall;
    property dataFld: WideString read Get_dataFld write Set_dataFld;
    property dataSrc: WideString read Get_dataSrc write Set_dataSrc;
    property dataFormatAs: WideString read Get_dataFormatAs write Set_dataFormatAs;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDatabindingDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3F2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDatabindingDisp = dispinterface
    ['{3050F3F2-98B5-11CF-BB82-00AA00BDCE0B}']
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
  end;

// *********************************************************************//
// Interface: IHTMLElementDefaults
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F6C9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElementDefaults = interface(IDispatch)
    ['{3050F6C9-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_style: IHTMLStyle; safecall;
    procedure Set_tabStop(p: WordBool); safecall;
    function Get_tabStop: WordBool; safecall;
    procedure Set_viewInheritStyle(p: WordBool); safecall;
    function Get_viewInheritStyle: WordBool; safecall;
    procedure Set_viewMasterTab(p: WordBool); safecall;
    function Get_viewMasterTab: WordBool; safecall;
    procedure Set_scrollSegmentX(p: Integer); safecall;
    function Get_scrollSegmentX: Integer; safecall;
    procedure Set_scrollSegmentY(p: Integer); safecall;
    function Get_scrollSegmentY: Integer; safecall;
    procedure Set_isMultiLine(p: WordBool); safecall;
    function Get_isMultiLine: WordBool; safecall;
    procedure Set_contentEditable(const p: WideString); safecall;
    function Get_contentEditable: WideString; safecall;
    procedure Set_canHaveHTML(p: WordBool); safecall;
    function Get_canHaveHTML: WordBool; safecall;
    procedure _Set_viewLink(const p: IHTMLDocument); safecall;
    function Get_viewLink: IHTMLDocument; safecall;
    procedure Set_frozen(p: WordBool); safecall;
    function Get_frozen: WordBool; safecall;
    property style: IHTMLStyle read Get_style;
    property tabStop: WordBool read Get_tabStop write Set_tabStop;
    property viewInheritStyle: WordBool read Get_viewInheritStyle write Set_viewInheritStyle;
    property viewMasterTab: WordBool read Get_viewMasterTab write Set_viewMasterTab;
    property scrollSegmentX: Integer read Get_scrollSegmentX write Set_scrollSegmentX;
    property scrollSegmentY: Integer read Get_scrollSegmentY write Set_scrollSegmentY;
    property isMultiLine: WordBool read Get_isMultiLine write Set_isMultiLine;
    property contentEditable: WideString read Get_contentEditable write Set_contentEditable;
    property canHaveHTML: WordBool read Get_canHaveHTML write Set_canHaveHTML;
    property viewLink: IHTMLDocument read Get_viewLink write _Set_viewLink;
    property frozen: WordBool read Get_frozen write Set_frozen;
  end;

// *********************************************************************//
// DispIntf:  IHTMLElementDefaultsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F6C9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElementDefaultsDisp = dispinterface
    ['{3050F6C9-98B5-11CF-BB82-00AA00BDCE0B}']
    property style: IHTMLStyle readonly dispid 1001;
    property tabStop: WordBool dispid 1002;
    property viewInheritStyle: WordBool dispid -2147412913;
    property viewMasterTab: WordBool dispid 1006;
    property scrollSegmentX: Integer dispid 1003;
    property scrollSegmentY: Integer dispid 1004;
    property isMultiLine: WordBool dispid 1008;
    property contentEditable: WideString dispid -2147412950;
    property canHaveHTML: WordBool dispid 1009;
    property viewLink: IHTMLDocument dispid 1011;
    property frozen: WordBool dispid -2147412914;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLDefaults
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F58C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLDefaults = dispinterface
    ['{3050F58C-98B5-11CF-BB82-00AA00BDCE0B}']
    property style: IHTMLStyle readonly dispid 1001;
    property tabStop: WordBool dispid 1002;
    property viewInheritStyle: WordBool dispid -2147412913;
    property viewMasterTab: WordBool dispid 1006;
    property scrollSegmentX: Integer dispid 1003;
    property scrollSegmentY: Integer dispid 1004;
    property isMultiLine: WordBool dispid 1008;
    property contentEditable: WideString dispid -2147412950;
    property canHaveHTML: WordBool dispid 1009;
    property viewLink: IHTMLDocument dispid 1011;
    property frozen: WordBool dispid -2147412914;
    property constructor_: IDispatch readonly dispid -2147417603;
  end;

// *********************************************************************//
// Interface: IHTCDefaultDispatch
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4FD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCDefaultDispatch = interface(IDispatch)
    ['{3050F4FD-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_element: IHTMLElement; safecall;
    function CreateEventObject: IHTMLEventObj; safecall;
    function Get_defaults: IDispatch; safecall;
    function Get_document: IDispatch; safecall;
    property element: IHTMLElement read Get_element;
    property defaults: IDispatch read Get_defaults;
    property document: IDispatch read Get_document;
  end;

// *********************************************************************//
// DispIntf:  IHTCDefaultDispatchDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4FD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCDefaultDispatchDisp = dispinterface
    ['{3050F4FD-98B5-11CF-BB82-00AA00BDCE0B}']
    property element: IHTMLElement readonly dispid -2147412969;
    function CreateEventObject: IHTMLEventObj; dispid -2147412968;
    property defaults: IDispatch readonly dispid -2147412947;
    property document: IDispatch readonly dispid -2147412970;
  end;

// *********************************************************************//
// Interface: IHTCPropertyBehavior
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5DF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCPropertyBehavior = interface(IDispatch)
    ['{3050F5DF-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure fireChange; safecall;
    procedure Set_value(p: OleVariant); safecall;
    function Get_value: OleVariant; safecall;
    property value: OleVariant read Get_value write Set_value;
  end;

// *********************************************************************//
// DispIntf:  IHTCPropertyBehaviorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5DF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCPropertyBehaviorDisp = dispinterface
    ['{3050F5DF-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure fireChange; dispid -2147417612;
    property value: OleVariant dispid -2147412971;
  end;

// *********************************************************************//
// Interface: IHTCMethodBehavior
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F631-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCMethodBehavior = interface(IDispatch)
    ['{3050F631-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  IHTCMethodBehaviorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F631-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCMethodBehaviorDisp = dispinterface
    ['{3050F631-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// Interface: IHTCEventBehavior
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4FF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCEventBehavior = interface(IDispatch)
    ['{3050F4FF-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure fire(const pVar: IHTMLEventObj); safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTCEventBehaviorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4FF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCEventBehaviorDisp = dispinterface
    ['{3050F4FF-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure fire(const pVar: IHTMLEventObj); dispid -2147417612;
  end;

// *********************************************************************//
// Interface: IHTCAttachBehavior
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5F4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCAttachBehavior = interface(IDispatch)
    ['{3050F5F4-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure FireEvent(const evt: IDispatch); safecall;
    procedure detachEvent; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTCAttachBehaviorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5F4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCAttachBehaviorDisp = dispinterface
    ['{3050F5F4-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure FireEvent(const evt: IDispatch); dispid 0;
    procedure detachEvent; dispid -2147417612;
  end;

// *********************************************************************//
// Interface: IHTCAttachBehavior2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F7EB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCAttachBehavior2 = interface(IDispatch)
    ['{3050F7EB-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure FireEvent(evt: OleVariant); safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTCAttachBehavior2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F7EB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCAttachBehavior2Disp = dispinterface
    ['{3050F7EB-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure FireEvent(evt: OleVariant); dispid 0;
  end;

// *********************************************************************//
// Interface: IHTCDescBehavior
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5DC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCDescBehavior = interface(IDispatch)
    ['{3050F5DC-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_urn: WideString; safecall;
    function Get_name: WideString; safecall;
    property urn: WideString read Get_urn;
    property name: WideString read Get_name;
  end;

// *********************************************************************//
// DispIntf:  IHTCDescBehaviorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5DC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTCDescBehaviorDisp = dispinterface
    ['{3050F5DC-98B5-11CF-BB82-00AA00BDCE0B}']
    property urn: WideString readonly dispid -2147417612;
    property name: WideString readonly dispid -2147417611;
  end;

// *********************************************************************//
// DispIntf:  DispHTCDefaultDispatch
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F573-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTCDefaultDispatch = dispinterface
    ['{3050F573-98B5-11CF-BB82-00AA00BDCE0B}']
    property element: IHTMLElement readonly dispid -2147412969;
    function CreateEventObject: IHTMLEventObj; dispid -2147412968;
    property defaults: IDispatch readonly dispid -2147412947;
    property document: IDispatch readonly dispid -2147412970;
  end;

// *********************************************************************//
// DispIntf:  DispHTCPropertyBehavior
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F57F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTCPropertyBehavior = dispinterface
    ['{3050F57F-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure fireChange; dispid -2147417612;
    property value: OleVariant dispid -2147412971;
  end;

// *********************************************************************//
// DispIntf:  DispHTCMethodBehavior
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F587-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTCMethodBehavior = dispinterface
    ['{3050F587-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  DispHTCEventBehavior
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F574-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTCEventBehavior = dispinterface
    ['{3050F574-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure fire(const pVar: IHTMLEventObj); dispid -2147417612;
  end;

// *********************************************************************//
// DispIntf:  DispHTCAttachBehavior
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F583-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTCAttachBehavior = dispinterface
    ['{3050F583-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure FireEvent(evt: OleVariant); dispid 0;
    procedure detachEvent; dispid -2147417612;
  end;

// *********************************************************************//
// DispIntf:  DispHTCDescBehavior
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F57E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTCDescBehavior = dispinterface
    ['{3050F57E-98B5-11CF-BB82-00AA00BDCE0B}']
    property urn: WideString readonly dispid -2147417612;
    property name: WideString readonly dispid -2147417611;
  end;

// *********************************************************************//
// Interface: IHTMLUrnCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5E2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLUrnCollection = interface(IDispatch)
    ['{3050F5E2-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    function item(index: Integer): WideString; safecall;
    property length: Integer read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IHTMLUrnCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5E2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLUrnCollectionDisp = dispinterface
    ['{3050F5E2-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1001;
    function item(index: Integer): WideString; dispid 0;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLUrnCollection
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F551-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLUrnCollection = dispinterface
    ['{3050F551-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1001;
    function item(index: Integer): WideString; dispid 0;
    property constructor_: IDispatch readonly dispid -2147417603;
  end;

// *********************************************************************//
// Interface: IHTMLGenericElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4B7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLGenericElement = interface(IDispatch)
    ['{3050F4B7-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_recordset: IDispatch; safecall;
    function namedRecordset(const dataMember: WideString; const hierarchy: OleVariant): IDispatch; safecall;
    property recordset: IDispatch read Get_recordset;
  end;

// *********************************************************************//
// DispIntf:  IHTMLGenericElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4B7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLGenericElementDisp = dispinterface
    ['{3050F4B7-98B5-11CF-BB82-00AA00BDCE0B}']
    property recordset: IDispatch readonly dispid 1001;
    function namedRecordset(const dataMember: WideString; const hierarchy: OleVariant): IDispatch; dispid 1002;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLGenericElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F563-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLGenericElement = dispinterface
    ['{3050F563-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property recordset: IDispatch readonly dispid 1001;
    function namedRecordset(const dataMember: WideString; const hierarchy: OleVariant): IDispatch; dispid 1002;
  end;

// *********************************************************************//
// Interface: IHTMLStyleSheetRuleApplied
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104C1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetRuleApplied = interface(IDispatch)
    ['{305104C1-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_msSpecificity: Integer; safecall;
    function msGetSpecificity(index: Integer): Integer; safecall;
    property msSpecificity: Integer read Get_msSpecificity;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleSheetRuleAppliedDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104C1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetRuleAppliedDisp = dispinterface
    ['{305104C1-98B5-11CF-BB82-00AA00BDCE0B}']
    property msSpecificity: Integer readonly dispid 1003;
    function msGetSpecificity(index: Integer): Integer; dispid 1004;
  end;

// *********************************************************************//
// Interface: IHTMLStyleSheetRule2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106FD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetRule2 = interface(IDispatch)
    ['{305106FD-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_selectorText(const p: WideString); safecall;
    function Get_selectorText: WideString; safecall;
    property selectorText: WideString read Get_selectorText write Set_selectorText;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleSheetRule2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106FD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetRule2Disp = dispinterface
    ['{305106FD-98B5-11CF-BB82-00AA00BDCE0B}']
    property selectorText: WideString dispid 1005;
  end;

// *********************************************************************//
// Interface: IHTMLStyleSheetRulesCollection2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106E8-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetRulesCollection2 = interface(IDispatch)
    ['{305106E8-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    function item(index: Integer): IHTMLCSSRule; safecall;
    property length: Integer read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleSheetRulesCollection2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106E8-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetRulesCollection2Disp = dispinterface
    ['{305106E8-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1003;
    function item(index: Integer): IHTMLCSSRule; dispid 1002;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLStyleSheetRule
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F50E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLStyleSheetRule = dispinterface
    ['{3050F50E-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: Word readonly dispid 1101;
    property cssText: WideString dispid 1102;
    property parentRule: IHTMLCSSRule readonly dispid 1103;
    property parentStyleSheet: IHTMLStyleSheet readonly dispid 1104;
    property selectorText: WideString dispid 1001;
    property style: IHTMLRuleStyle readonly dispid -2147418038;
    property readOnly: WordBool readonly dispid 1002;
    property ie9_selectorText: WideString dispid 1005;
    property msSpecificity: Integer readonly dispid 1003;
    function msGetSpecificity(index: Integer): Integer; dispid 1004;
    property constructor_: IDispatch readonly dispid -2147417603;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLStyleSheetRulesCollection
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F52F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLStyleSheetRulesCollection = dispinterface
    ['{3050F52F-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1001;
    function item(index: Integer): IHTMLStyleSheetRule; dispid 0;
    property ie9_length: Integer readonly dispid 1003;
    function ie9_item(index: Integer): IHTMLCSSRule; dispid 1002;
    property constructor_: IDispatch readonly dispid -2147417603;
  end;

// *********************************************************************//
// Interface: IHTMLStyleSheetPage
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F7EE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetPage = interface(IDispatch)
    ['{3050F7EE-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_selector: WideString; safecall;
    function Get_pseudoClass: WideString; safecall;
    property selector: WideString read Get_selector;
    property pseudoClass: WideString read Get_pseudoClass;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleSheetPageDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F7EE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetPageDisp = dispinterface
    ['{3050F7EE-98B5-11CF-BB82-00AA00BDCE0B}']
    property selector: WideString readonly dispid 1001;
    property pseudoClass: WideString readonly dispid 1002;
  end;

// *********************************************************************//
// Interface: IHTMLStyleSheetPage2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106ED-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetPage2 = interface(IDispatch)
    ['{305106ED-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_selectorText(const p: WideString); safecall;
    function Get_selectorText: WideString; safecall;
    function Get_style: IHTMLRuleStyle; safecall;
    property selectorText: WideString read Get_selectorText write Set_selectorText;
    property style: IHTMLRuleStyle read Get_style;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleSheetPage2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106ED-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetPage2Disp = dispinterface
    ['{305106ED-98B5-11CF-BB82-00AA00BDCE0B}']
    property selectorText: WideString dispid 1003;
    property style: IHTMLRuleStyle readonly dispid -2147418038;
  end;

// *********************************************************************//
// Interface: IHTMLStyleSheetPagesCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F7F0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetPagesCollection = interface(IDispatch)
    ['{3050F7F0-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    function item(index: Integer): IHTMLStyleSheetPage; safecall;
    property length: Integer read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleSheetPagesCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F7F0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetPagesCollectionDisp = dispinterface
    ['{3050F7F0-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1001;
    function item(index: Integer): IHTMLStyleSheetPage; dispid 0;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLStyleSheetPage
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F540-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLStyleSheetPage = dispinterface
    ['{3050F540-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: Word readonly dispid 1101;
    property cssText: WideString dispid 1102;
    property parentRule: IHTMLCSSRule readonly dispid 1103;
    property parentStyleSheet: IHTMLStyleSheet readonly dispid 1104;
    property selector: WideString readonly dispid 1001;
    property pseudoClass: WideString readonly dispid 1002;
    property selectorText: WideString dispid 1003;
    property style: IHTMLRuleStyle readonly dispid -2147418038;
    property constructor_: IDispatch readonly dispid -2147417603;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLStyleSheetPagesCollection
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F543-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLStyleSheetPagesCollection = dispinterface
    ['{3050F543-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1001;
    function item(index: Integer): IHTMLStyleSheetPage; dispid 0;
    property constructor_: IDispatch readonly dispid -2147417603;
  end;

// *********************************************************************//
// Interface: IHTMLStyleSheet2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3D1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheet2 = interface(IDispatch)
    ['{3050F3D1-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_pages: IHTMLStyleSheetPagesCollection; safecall;
    function addPageRule(const bstrSelector: WideString; const bstrStyle: WideString; 
                         lIndex: Integer): Integer; safecall;
    property pages: IHTMLStyleSheetPagesCollection read Get_pages;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleSheet2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3D1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheet2Disp = dispinterface
    ['{3050F3D1-98B5-11CF-BB82-00AA00BDCE0B}']
    property pages: IHTMLStyleSheetPagesCollection readonly dispid 1016;
    function addPageRule(const bstrSelector: WideString; const bstrStyle: WideString; 
                         lIndex: Integer): Integer; dispid 1017;
  end;

// *********************************************************************//
// Interface: IHTMLStyleSheet3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510496-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheet3 = interface(IDispatch)
    ['{30510496-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_href(const p: WideString); safecall;
    function Get_href: WideString; safecall;
    function Get_isAlternate: WordBool; safecall;
    function Get_isPrefAlternate: WordBool; safecall;
    property href: WideString read Get_href write Set_href;
    property isAlternate: WordBool read Get_isAlternate;
    property isPrefAlternate: WordBool read Get_isPrefAlternate;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleSheet3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510496-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheet3Disp = dispinterface
    ['{30510496-98B5-11CF-BB82-00AA00BDCE0B}']
    property href: WideString dispid 1150;
    property isAlternate: WordBool readonly dispid 1151;
    property isPrefAlternate: WordBool readonly dispid 1152;
  end;

// *********************************************************************//
// Interface: IHTMLStyleSheet4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106F4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheet4 = interface(IDispatch)
    ['{305106F4-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_type_: WideString; safecall;
    function Get_href: OleVariant; safecall;
    function Get_title: WideString; safecall;
    function Get_ownerNode: IHTMLElement; safecall;
    function Get_ownerRule: IHTMLCSSRule; safecall;
    function Get_cssRules: IHTMLStyleSheetRulesCollection; safecall;
    function Get_media: OleVariant; safecall;
    function insertRule(const bstrRule: WideString; lIndex: Integer): Integer; safecall;
    procedure deleteRule(lIndex: Integer); safecall;
    property type_: WideString read Get_type_;
    property href: OleVariant read Get_href;
    property title: WideString read Get_title;
    property ownerNode: IHTMLElement read Get_ownerNode;
    property ownerRule: IHTMLCSSRule read Get_ownerRule;
    property cssRules: IHTMLStyleSheetRulesCollection read Get_cssRules;
    property media: OleVariant read Get_media;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleSheet4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106F4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheet4Disp = dispinterface
    ['{305106F4-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString readonly dispid 1153;
    property href: OleVariant readonly dispid 1154;
    property title: WideString readonly dispid 1155;
    property ownerNode: IHTMLElement readonly dispid 1156;
    property ownerRule: IHTMLCSSRule readonly dispid 1157;
    property cssRules: IHTMLStyleSheetRulesCollection readonly dispid 1158;
    property media: OleVariant readonly dispid 1159;
    function insertRule(const bstrRule: WideString; lIndex: Integer): Integer; dispid 1160;
    procedure deleteRule(lIndex: Integer); dispid 1161;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLStyleSheet
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F58D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLStyleSheet = dispinterface
    ['{3050F58D-98B5-11CF-BB82-00AA00BDCE0B}']
    property title: WideString dispid 1001;
    property parentStyleSheet: IHTMLStyleSheet readonly dispid 1002;
    property owningElement: IHTMLElement readonly dispid 1003;
    property disabled: WordBool dispid -2147418036;
    property readOnly: WordBool readonly dispid 1004;
    property imports: IHTMLStyleSheetsCollection readonly dispid 1005;
    property href: WideString dispid 1006;
    property type_: WideString readonly dispid 1007;
    property id: WideString readonly dispid 1008;
    function addImport(const bstrURL: WideString; lIndex: Integer): Integer; dispid 1009;
    function addRule(const bstrSelector: WideString; const bstrStyle: WideString; lIndex: Integer): Integer; dispid 1010;
    procedure removeImport(lIndex: Integer); dispid 1011;
    procedure removeRule(lIndex: Integer); dispid 1012;
    property media: WideString dispid 1013;
    property cssText: WideString dispid 1014;
    property rules: IHTMLStyleSheetRulesCollection readonly dispid 1015;
    property pages: IHTMLStyleSheetPagesCollection readonly dispid 1016;
    function addPageRule(const bstrSelector: WideString; const bstrStyle: WideString; 
                         lIndex: Integer): Integer; dispid 1017;
    property ie8_href: WideString dispid 1150;
    property isAlternate: WordBool readonly dispid 1151;
    property isPrefAlternate: WordBool readonly dispid 1152;
    property ie9_type: WideString readonly dispid 1153;
    property ie9_href: OleVariant readonly dispid 1154;
    property ie9_title: WideString readonly dispid 1155;
    property ownerNode: IHTMLElement readonly dispid 1156;
    property ownerRule: IHTMLCSSRule readonly dispid 1157;
    property cssRules: IHTMLStyleSheetRulesCollection readonly dispid 1158;
    property ie9_media: OleVariant readonly dispid 1159;
    function insertRule(const bstrRule: WideString; lIndex: Integer): Integer; dispid 1160;
    procedure deleteRule(lIndex: Integer); dispid 1161;
    property constructor_: IDispatch readonly dispid -2147417603;
  end;

// *********************************************************************//
// Interface: IHTMLStyleSheetsCollection2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106E7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetsCollection2 = interface(IDispatch)
    ['{305106E7-98B5-11CF-BB82-00AA00BDCE0B}']
    function item(index: Integer): OleVariant; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleSheetsCollection2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106E7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleSheetsCollection2Disp = dispinterface
    ['{305106E7-98B5-11CF-BB82-00AA00BDCE0B}']
    function item(index: Integer): OleVariant; dispid 1002;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLStyleSheetsCollection
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F547-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLStyleSheetsCollection = dispinterface
    ['{3050F547-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1001;
    property _newEnum: IUnknown readonly dispid -4;
    function item(const pvarIndex: OleVariant): OleVariant; dispid 0;
    function ie9_item(index: Integer): OleVariant; dispid 1002;
    property constructor_: IDispatch readonly dispid -2147417603;
  end;

// *********************************************************************//
// DispIntf:  HTMLLinkElementEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F61D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLLinkElementEvents2 = dispinterface
    ['{3050F61D-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
    procedure onload(const pEvtObj: IHTMLEventObj); dispid 1003;
    procedure onerror(const pEvtObj: IHTMLEventObj); dispid 1002;
  end;

// *********************************************************************//
// DispIntf:  HTMLLinkElementEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F3CC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLLinkElementEvents = dispinterface
    ['{3050F3CC-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid -2147418102;
    function onclick: WordBool; dispid -600;
    function ondblclick: WordBool; dispid -601;
    function onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function ondragstart: WordBool; dispid -2147418101;
    function onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function onerrorupdate: WordBool; dispid -2147418099;
    function onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function ondragenter: WordBool; dispid -2147418090;
    function ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function ondrop: WordBool; dispid -2147418087;
    function onbeforecut: WordBool; dispid -2147418083;
    function oncut: WordBool; dispid -2147418086;
    function onbeforecopy: WordBool; dispid -2147418082;
    function oncopy: WordBool; dispid -2147418085;
    function onbeforepaste: WordBool; dispid -2147418081;
    function onpaste: WordBool; dispid -2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
    procedure onload; dispid 1003;
    procedure onerror; dispid 1002;
  end;

// *********************************************************************//
// Interface: IHTMLLinkElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F205-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLinkElement = interface(IDispatch)
    ['{3050F205-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_href(const p: WideString); safecall;
    function Get_href: WideString; safecall;
    procedure Set_rel(const p: WideString); safecall;
    function Get_rel: WideString; safecall;
    procedure Set_rev(const p: WideString); safecall;
    function Get_rev: WideString; safecall;
    procedure Set_type_(const p: WideString); safecall;
    function Get_type_: WideString; safecall;
    function Get_readyState: WideString; safecall;
    procedure Set_onreadystatechange(p: OleVariant); safecall;
    function Get_onreadystatechange: OleVariant; safecall;
    procedure Set_onload(p: OleVariant); safecall;
    function Get_onload: OleVariant; safecall;
    procedure Set_onerror(p: OleVariant); safecall;
    function Get_onerror: OleVariant; safecall;
    function Get_styleSheet: IHTMLStyleSheet; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function Get_disabled: WordBool; safecall;
    procedure Set_media(const p: WideString); safecall;
    function Get_media: WideString; safecall;
    property href: WideString read Get_href write Set_href;
    property rel: WideString read Get_rel write Set_rel;
    property rev: WideString read Get_rev write Set_rev;
    property type_: WideString read Get_type_ write Set_type_;
    property readyState: WideString read Get_readyState;
    property onreadystatechange: OleVariant read Get_onreadystatechange write Set_onreadystatechange;
    property onload: OleVariant read Get_onload write Set_onload;
    property onerror: OleVariant read Get_onerror write Set_onerror;
    property styleSheet: IHTMLStyleSheet read Get_styleSheet;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property media: WideString read Get_media write Set_media;
  end;

// *********************************************************************//
// DispIntf:  IHTMLLinkElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F205-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLinkElementDisp = dispinterface
    ['{3050F205-98B5-11CF-BB82-00AA00BDCE0B}']
    property href: WideString dispid 1005;
    property rel: WideString dispid 1006;
    property rev: WideString dispid 1007;
    property type_: WideString dispid 1008;
    property readyState: WideString readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onload: OleVariant dispid -2147412080;
    property onerror: OleVariant dispid -2147412083;
    property styleSheet: IHTMLStyleSheet readonly dispid 1014;
    property disabled: WordBool dispid -2147418036;
    property media: WideString dispid 1016;
  end;

// *********************************************************************//
// Interface: IHTMLLinkElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4E5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLinkElement2 = interface(IDispatch)
    ['{3050F4E5-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_target(const p: WideString); safecall;
    function Get_target: WideString; safecall;
    property target: WideString read Get_target write Set_target;
  end;

// *********************************************************************//
// DispIntf:  IHTMLLinkElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4E5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLinkElement2Disp = dispinterface
    ['{3050F4E5-98B5-11CF-BB82-00AA00BDCE0B}']
    property target: WideString dispid 1017;
  end;

// *********************************************************************//
// Interface: IHTMLLinkElement3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F81E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLinkElement3 = interface(IDispatch)
    ['{3050F81E-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_charset(const p: WideString); safecall;
    function Get_charset: WideString; safecall;
    procedure Set_hreflang(const p: WideString); safecall;
    function Get_hreflang: WideString; safecall;
    property charset: WideString read Get_charset write Set_charset;
    property hreflang: WideString read Get_hreflang write Set_hreflang;
  end;

// *********************************************************************//
// DispIntf:  IHTMLLinkElement3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F81E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLinkElement3Disp = dispinterface
    ['{3050F81E-98B5-11CF-BB82-00AA00BDCE0B}']
    property charset: WideString dispid 1018;
    property hreflang: WideString dispid 1019;
  end;

// *********************************************************************//
// Interface: IHTMLLinkElement4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051043A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLinkElement4 = interface(IDispatch)
    ['{3051043A-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_href(const p: WideString); safecall;
    function Get_href: WideString; safecall;
    property href: WideString read Get_href write Set_href;
  end;

// *********************************************************************//
// DispIntf:  IHTMLLinkElement4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051043A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLinkElement4Disp = dispinterface
    ['{3051043A-98B5-11CF-BB82-00AA00BDCE0B}']
    property href: WideString dispid 1150;
  end;

// *********************************************************************//
// Interface: IHTMLLinkElement5
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510726-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLinkElement5 = interface(IDispatch)
    ['{30510726-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_sheet: IHTMLStyleSheet; safecall;
    property sheet: IHTMLStyleSheet read Get_sheet;
  end;

// *********************************************************************//
// DispIntf:  IHTMLLinkElement5Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510726-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLinkElement5Disp = dispinterface
    ['{30510726-98B5-11CF-BB82-00AA00BDCE0B}']
    property sheet: IHTMLStyleSheet readonly dispid 1020;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLLinkElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F524-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLLinkElement = dispinterface
    ['{3050F524-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property href: WideString dispid 1005;
    property rel: WideString dispid 1006;
    property rev: WideString dispid 1007;
    property type_: WideString dispid 1008;
    property styleSheet: IHTMLStyleSheet readonly dispid 1014;
    property media: WideString dispid 1016;
    property target: WideString dispid 1017;
    property charset: WideString dispid 1018;
    property hreflang: WideString dispid 1019;
    property ie8_href: WideString dispid 1150;
    property sheet: IHTMLStyleSheet readonly dispid 1020;
  end;

// *********************************************************************//
// Interface: IHTMLTxtRange
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F220-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTxtRange = interface(IDispatch)
    ['{3050F220-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_htmlText: WideString; safecall;
    procedure Set_text(const p: WideString); safecall;
    function Get_text: WideString; safecall;
    function parentElement: IHTMLElement; safecall;
    function duplicate: IHTMLTxtRange; safecall;
    function inRange(const range: IHTMLTxtRange): WordBool; safecall;
    function isEqual(const range: IHTMLTxtRange): WordBool; safecall;
    procedure scrollIntoView(fStart: WordBool); safecall;
    procedure collapse(start: WordBool); safecall;
    function expand(const Unit_: WideString): WordBool; safecall;
    function move(const Unit_: WideString; Count: Integer): Integer; safecall;
    function moveStart(const Unit_: WideString; Count: Integer): Integer; safecall;
    function moveEnd(const Unit_: WideString; Count: Integer): Integer; safecall;
    procedure select; safecall;
    procedure pasteHTML(const html: WideString); safecall;
    procedure moveToElementText(const element: IHTMLElement); safecall;
    procedure setEndPoint(const how: WideString; const sourceRange: IHTMLTxtRange); safecall;
    function compareEndPoints(const how: WideString; const sourceRange: IHTMLTxtRange): Integer; safecall;
    function findText(const String_: WideString; Count: Integer; flags: Integer): WordBool; safecall;
    procedure moveToPoint(x: Integer; y: Integer); safecall;
    function getBookmark: WideString; safecall;
    function moveToBookmark(const Bookmark: WideString): WordBool; safecall;
    function queryCommandSupported(const cmdID: WideString): WordBool; safecall;
    function queryCommandEnabled(const cmdID: WideString): WordBool; safecall;
    function queryCommandState(const cmdID: WideString): WordBool; safecall;
    function queryCommandIndeterm(const cmdID: WideString): WordBool; safecall;
    function queryCommandText(const cmdID: WideString): WideString; safecall;
    function queryCommandValue(const cmdID: WideString): OleVariant; safecall;
    function execCommand(const cmdID: WideString; showUI: WordBool; value: OleVariant): WordBool; safecall;
    function execCommandShowHelp(const cmdID: WideString): WordBool; safecall;
    property htmlText: WideString read Get_htmlText;
    property text: WideString read Get_text write Set_text;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTxtRangeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F220-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTxtRangeDisp = dispinterface
    ['{3050F220-98B5-11CF-BB82-00AA00BDCE0B}']
    property htmlText: WideString readonly dispid 1003;
    property text: WideString dispid 1004;
    function parentElement: IHTMLElement; dispid 1006;
    function duplicate: IHTMLTxtRange; dispid 1008;
    function inRange(const range: IHTMLTxtRange): WordBool; dispid 1010;
    function isEqual(const range: IHTMLTxtRange): WordBool; dispid 1011;
    procedure scrollIntoView(fStart: WordBool); dispid 1012;
    procedure collapse(start: WordBool); dispid 1013;
    function expand(const Unit_: WideString): WordBool; dispid 1014;
    function move(const Unit_: WideString; Count: Integer): Integer; dispid 1015;
    function moveStart(const Unit_: WideString; Count: Integer): Integer; dispid 1016;
    function moveEnd(const Unit_: WideString; Count: Integer): Integer; dispid 1017;
    procedure select; dispid 1024;
    procedure pasteHTML(const html: WideString); dispid 1026;
    procedure moveToElementText(const element: IHTMLElement); dispid 1001;
    procedure setEndPoint(const how: WideString; const sourceRange: IHTMLTxtRange); dispid 1025;
    function compareEndPoints(const how: WideString; const sourceRange: IHTMLTxtRange): Integer; dispid 1018;
    function findText(const String_: WideString; Count: Integer; flags: Integer): WordBool; dispid 1019;
    procedure moveToPoint(x: Integer; y: Integer); dispid 1020;
    function getBookmark: WideString; dispid 1021;
    function moveToBookmark(const Bookmark: WideString): WordBool; dispid 1009;
    function queryCommandSupported(const cmdID: WideString): WordBool; dispid 1027;
    function queryCommandEnabled(const cmdID: WideString): WordBool; dispid 1028;
    function queryCommandState(const cmdID: WideString): WordBool; dispid 1029;
    function queryCommandIndeterm(const cmdID: WideString): WordBool; dispid 1030;
    function queryCommandText(const cmdID: WideString): WideString; dispid 1031;
    function queryCommandValue(const cmdID: WideString): OleVariant; dispid 1032;
    function execCommand(const cmdID: WideString; showUI: WordBool; value: OleVariant): WordBool; dispid 1033;
    function execCommandShowHelp(const cmdID: WideString): WordBool; dispid 1034;
  end;

// *********************************************************************//
// Interface: IHTMLTextRangeMetrics
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F40B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTextRangeMetrics = interface(IDispatch)
    ['{3050F40B-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_offsetTop: Integer; safecall;
    function Get_offsetLeft: Integer; safecall;
    function Get_boundingTop: Integer; safecall;
    function Get_boundingLeft: Integer; safecall;
    function Get_boundingWidth: Integer; safecall;
    function Get_boundingHeight: Integer; safecall;
    property offsetTop: Integer read Get_offsetTop;
    property offsetLeft: Integer read Get_offsetLeft;
    property boundingTop: Integer read Get_boundingTop;
    property boundingLeft: Integer read Get_boundingLeft;
    property boundingWidth: Integer read Get_boundingWidth;
    property boundingHeight: Integer read Get_boundingHeight;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTextRangeMetricsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F40B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTextRangeMetricsDisp = dispinterface
    ['{3050F40B-98B5-11CF-BB82-00AA00BDCE0B}']
    property offsetTop: Integer readonly dispid 1035;
    property offsetLeft: Integer readonly dispid 1036;
    property boundingTop: Integer readonly dispid 1037;
    property boundingLeft: Integer readonly dispid 1038;
    property boundingWidth: Integer readonly dispid 1039;
    property boundingHeight: Integer readonly dispid 1040;
  end;

// *********************************************************************//
// Interface: IHTMLTextRangeMetrics2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4A6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTextRangeMetrics2 = interface(IDispatch)
    ['{3050F4A6-98B5-11CF-BB82-00AA00BDCE0B}']
    function getClientRects: IHTMLRectCollection; safecall;
    function getBoundingClientRect: IHTMLRect; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTextRangeMetrics2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4A6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTextRangeMetrics2Disp = dispinterface
    ['{3050F4A6-98B5-11CF-BB82-00AA00BDCE0B}']
    function getClientRects: IHTMLRectCollection; dispid 1041;
    function getBoundingClientRect: IHTMLRect; dispid 1042;
  end;

// *********************************************************************//
// Interface: IHTMLTxtRangeCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F7ED-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTxtRangeCollection = interface(IDispatch)
    ['{3050F7ED-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    function Get__newEnum: IUnknown; safecall;
    function item(const pvarIndex: OleVariant): OleVariant; safecall;
    property length: Integer read Get_length;
    property _newEnum: IUnknown read Get__newEnum;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTxtRangeCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F7ED-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTxtRangeCollectionDisp = dispinterface
    ['{3050F7ED-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1500;
    property _newEnum: IUnknown readonly dispid -4;
    function item(const pvarIndex: OleVariant): OleVariant; dispid 0;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLDOMRange
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F5A3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLDOMRange = dispinterface
    ['{3050F5A3-98B5-11CF-BB82-00AA00BDCE0B}']
    property startContainer: IHTMLDOMNode readonly dispid 1001;
    property startOffset: Integer readonly dispid 1002;
    property endContainer: IHTMLDOMNode readonly dispid 1003;
    property endOffset: Integer readonly dispid 1004;
    property collapsed: WordBool readonly dispid 1005;
    property commonAncestorContainer: IHTMLDOMNode readonly dispid 1006;
    procedure setStart(const refNode: IDispatch; offset: Integer); dispid 1007;
    procedure setEnd(const refNode: IDispatch; offset: Integer); dispid 1008;
    procedure setStartBefore(const refNode: IDispatch); dispid 1009;
    procedure setStartAfter(const refNode: IDispatch); dispid 1010;
    procedure setEndBefore(const refNode: IDispatch); dispid 1011;
    procedure setEndAfter(const refNode: IDispatch); dispid 1012;
    procedure collapse(toStart: WordBool); dispid 1013;
    procedure selectNode(const refNode: IDispatch); dispid 1014;
    procedure selectNodeContents(const refNode: IDispatch); dispid 1015;
    function compareBoundaryPoints(how: Smallint; const sourceRange: IDispatch): Integer; dispid 1016;
    procedure deleteContents; dispid 1017;
    function extractContents: IDispatch; dispid 1018;
    function cloneContents: IDispatch; dispid 1019;
    procedure insertNode(const newNode: IDispatch); dispid 1020;
    procedure surroundContents(const newParent: IDispatch); dispid 1021;
    function cloneRange: IHTMLDOMRange; dispid 1022;
    function toString: WideString; dispid 1023;
    procedure Detach; dispid 1024;
    function getClientRects: IHTMLRectCollection; dispid 1025;
    function getBoundingClientRect: IHTMLRect; dispid 1026;
  end;

// *********************************************************************//
// DispIntf:  HTMLFormElementEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F614-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLFormElementEvents2 = dispinterface
    ['{3050F614-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
    function onsubmit(const pEvtObj: IHTMLEventObj): WordBool; dispid 1007;
    function onreset(const pEvtObj: IHTMLEventObj): WordBool; dispid 1015;
  end;

// *********************************************************************//
// DispIntf:  HTMLFormElementEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F364-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLFormElementEvents = dispinterface
    ['{3050F364-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid -2147418102;
    function onclick: WordBool; dispid -600;
    function ondblclick: WordBool; dispid -601;
    function onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function ondragstart: WordBool; dispid -2147418101;
    function onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function onerrorupdate: WordBool; dispid -2147418099;
    function onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function ondragenter: WordBool; dispid -2147418090;
    function ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function ondrop: WordBool; dispid -2147418087;
    function onbeforecut: WordBool; dispid -2147418083;
    function oncut: WordBool; dispid -2147418086;
    function onbeforecopy: WordBool; dispid -2147418082;
    function oncopy: WordBool; dispid -2147418085;
    function onbeforepaste: WordBool; dispid -2147418081;
    function onpaste: WordBool; dispid -2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
    function onsubmit: WordBool; dispid 1007;
    function onreset: WordBool; dispid 1015;
  end;

// *********************************************************************//
// Interface: IHTMLFormElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4F6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFormElement2 = interface(IDispatch)
    ['{3050F4F6-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_acceptCharset(const p: WideString); safecall;
    function Get_acceptCharset: WideString; safecall;
    function urns(urn: OleVariant): IDispatch; safecall;
    property acceptCharset: WideString read Get_acceptCharset write Set_acceptCharset;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFormElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4F6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFormElement2Disp = dispinterface
    ['{3050F4F6-98B5-11CF-BB82-00AA00BDCE0B}']
    property acceptCharset: WideString dispid 1011;
    function urns(urn: OleVariant): IDispatch; dispid 1505;
  end;

// *********************************************************************//
// Interface: IHTMLFormElement3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F836-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFormElement3 = interface(IDispatch)
    ['{3050F836-98B5-11CF-BB82-00AA00BDCE0B}']
    function namedItem(const name: WideString): IDispatch; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFormElement3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F836-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFormElement3Disp = dispinterface
    ['{3050F836-98B5-11CF-BB82-00AA00BDCE0B}']
    function namedItem(const name: WideString): IDispatch; dispid 1506;
  end;

// *********************************************************************//
// Interface: IHTMLSubmitData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F645-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSubmitData = interface(IDispatch)
    ['{3050F645-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure appendNameValuePair(const name: WideString; const value: WideString); safecall;
    procedure appendNameFilePair(const name: WideString; const filename: WideString); safecall;
    procedure appendItemSeparator; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLSubmitDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F645-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSubmitDataDisp = dispinterface
    ['{3050F645-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure appendNameValuePair(const name: WideString; const value: WideString); dispid 1012;
    procedure appendNameFilePair(const name: WideString; const filename: WideString); dispid 1013;
    procedure appendItemSeparator; dispid 1014;
  end;

// *********************************************************************//
// Interface: IHTMLFormElement4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051042C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFormElement4 = interface(IDispatch)
    ['{3051042C-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_action(const p: WideString); safecall;
    function Get_action: WideString; safecall;
    property action: WideString read Get_action write Set_action;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFormElement4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051042C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFormElement4Disp = dispinterface
    ['{3051042C-98B5-11CF-BB82-00AA00BDCE0B}']
    property action: WideString dispid 1150;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLFormElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F510-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLFormElement = dispinterface
    ['{3050F510-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property action: WideString dispid 1001;
    property encoding: WideString dispid 1003;
    property method: WideString dispid 1004;
    property elements: IDispatch readonly dispid 1005;
    property target: WideString dispid 1006;
    property name: WideString dispid -2147418112;
    procedure submit; dispid 1009;
    procedure reset; dispid 1010;
    property length: Integer dispid 1500;
    property _newEnum: IUnknown readonly dispid -4;
    function item(name: OleVariant; index: OleVariant): IDispatch; dispid 0;
    function tags(tagName: OleVariant): IDispatch; dispid 1502;
    property acceptCharset: WideString dispid 1011;
    function urns(urn: OleVariant): IDispatch; dispid 1505;
    function namedItem(const name: WideString): IDispatch; dispid 1506;
    procedure appendNameValuePair(const name: WideString; const value: WideString); dispid 1012;
    procedure appendNameFilePair(const name: WideString; const filename: WideString); dispid 1013;
    procedure appendItemSeparator; dispid 1014;
    property ie8_action: WideString dispid 1150;
  end;

// *********************************************************************//
// DispIntf:  HTMLControlElementEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F612-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLControlElementEvents2 = dispinterface
    ['{3050F612-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
  end;

// *********************************************************************//
// DispIntf:  HTMLControlElementEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F4EA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLControlElementEvents = dispinterface
    ['{3050F4EA-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid -2147418102;
    function onclick: WordBool; dispid -600;
    function ondblclick: WordBool; dispid -601;
    function onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function ondragstart: WordBool; dispid -2147418101;
    function onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function onerrorupdate: WordBool; dispid -2147418099;
    function onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function ondragenter: WordBool; dispid -2147418090;
    function ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function ondrop: WordBool; dispid -2147418087;
    function onbeforecut: WordBool; dispid -2147418083;
    function oncut: WordBool; dispid -2147418086;
    function onbeforecopy: WordBool; dispid -2147418082;
    function oncopy: WordBool; dispid -2147418085;
    function onbeforepaste: WordBool; dispid -2147418081;
    function onpaste: WordBool; dispid -2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
  end;

// *********************************************************************//
// Interface: IHTMLControlElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4E9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLControlElement = interface(IDispatch)
    ['{3050F4E9-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_tabIndex(p: Smallint); safecall;
    function Get_tabIndex: Smallint; safecall;
    procedure focus; safecall;
    procedure Set_accessKey(const p: WideString); safecall;
    function Get_accessKey: WideString; safecall;
    procedure Set_onblur(p: OleVariant); safecall;
    function Get_onblur: OleVariant; safecall;
    procedure Set_onfocus(p: OleVariant); safecall;
    function Get_onfocus: OleVariant; safecall;
    procedure Set_onresize(p: OleVariant); safecall;
    function Get_onresize: OleVariant; safecall;
    procedure blur; safecall;
    procedure addFilter(const pUnk: IUnknown); safecall;
    procedure removeFilter(const pUnk: IUnknown); safecall;
    function Get_clientHeight: Integer; safecall;
    function Get_clientWidth: Integer; safecall;
    function Get_clientTop: Integer; safecall;
    function Get_clientLeft: Integer; safecall;
    property tabIndex: Smallint read Get_tabIndex write Set_tabIndex;
    property accessKey: WideString read Get_accessKey write Set_accessKey;
    property onblur: OleVariant read Get_onblur write Set_onblur;
    property onfocus: OleVariant read Get_onfocus write Set_onfocus;
    property onresize: OleVariant read Get_onresize write Set_onresize;
    property clientHeight: Integer read Get_clientHeight;
    property clientWidth: Integer read Get_clientWidth;
    property clientTop: Integer read Get_clientTop;
    property clientLeft: Integer read Get_clientLeft;
  end;

// *********************************************************************//
// DispIntf:  IHTMLControlElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4E9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLControlElementDisp = dispinterface
    ['{3050F4E9-98B5-11CF-BB82-00AA00BDCE0B}']
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
  end;

// *********************************************************************//
// Interface: IHTMLTextElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F218-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTextElement = interface(IDispatch)
    ['{3050F218-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  IHTMLTextElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F218-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTextElementDisp = dispinterface
    ['{3050F218-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  DispHTMLTextElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F537-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLTextElement = dispinterface
    ['{3050F537-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
  end;

// *********************************************************************//
// DispIntf:  HTMLTextContainerEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F624-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLTextContainerEvents2 = dispinterface
    ['{3050F624-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
    procedure onchange(const pEvtObj: IHTMLEventObj); dispid 1001;
    procedure onselect(const pEvtObj: IHTMLEventObj); dispid 1006;
  end;

// *********************************************************************//
// DispIntf:  HTMLTextContainerEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {1FF6AA72-5842-11CF-A707-00AA00C0098D}
// *********************************************************************//
  HTMLTextContainerEvents = dispinterface
    ['{1FF6AA72-5842-11CF-A707-00AA00C0098D}']
    function onhelp: WordBool; dispid -2147418102;
    function onclick: WordBool; dispid -600;
    function ondblclick: WordBool; dispid -601;
    function onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function ondragstart: WordBool; dispid -2147418101;
    function onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function onerrorupdate: WordBool; dispid -2147418099;
    function onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function ondragenter: WordBool; dispid -2147418090;
    function ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function ondrop: WordBool; dispid -2147418087;
    function onbeforecut: WordBool; dispid -2147418083;
    function oncut: WordBool; dispid -2147418086;
    function onbeforecopy: WordBool; dispid -2147418082;
    function oncopy: WordBool; dispid -2147418085;
    function onbeforepaste: WordBool; dispid -2147418081;
    function onpaste: WordBool; dispid -2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
    procedure onchange; dispid 1001;
    procedure onselect; dispid 1006;
  end;

// *********************************************************************//
// Interface: IHTMLTextContainer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F230-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTextContainer = interface(IDispatch)
    ['{3050F230-98B5-11CF-BB82-00AA00BDCE0B}']
    function createControlRange: IDispatch; safecall;
    function Get_scrollHeight: Integer; safecall;
    function Get_scrollWidth: Integer; safecall;
    procedure Set_scrollTop(p: Integer); safecall;
    function Get_scrollTop: Integer; safecall;
    procedure Set_scrollLeft(p: Integer); safecall;
    function Get_scrollLeft: Integer; safecall;
    procedure Set_onscroll(p: OleVariant); safecall;
    function Get_onscroll: OleVariant; safecall;
    property scrollHeight: Integer read Get_scrollHeight;
    property scrollWidth: Integer read Get_scrollWidth;
    property scrollTop: Integer read Get_scrollTop write Set_scrollTop;
    property scrollLeft: Integer read Get_scrollLeft write Set_scrollLeft;
    property onscroll: OleVariant read Get_onscroll write Set_onscroll;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTextContainerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F230-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTextContainerDisp = dispinterface
    ['{3050F230-98B5-11CF-BB82-00AA00BDCE0B}']
    function createControlRange: IDispatch; dispid 1001;
    property scrollHeight: Integer readonly dispid 1002;
    property scrollWidth: Integer readonly dispid 1003;
    property scrollTop: Integer dispid 1004;
    property scrollLeft: Integer dispid 1005;
    property onscroll: OleVariant dispid -2147412081;
  end;

// *********************************************************************//
// Interface: IHTMLControlRange
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F29C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLControlRange = interface(IDispatch)
    ['{3050F29C-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure select; safecall;
    procedure add(const item: IHTMLControlElement); safecall;
    procedure remove(index: Integer); safecall;
    function item(index: Integer): IHTMLElement; safecall;
    procedure scrollIntoView(varargStart: OleVariant); safecall;
    function queryCommandSupported(const cmdID: WideString): WordBool; safecall;
    function queryCommandEnabled(const cmdID: WideString): WordBool; safecall;
    function queryCommandState(const cmdID: WideString): WordBool; safecall;
    function queryCommandIndeterm(const cmdID: WideString): WordBool; safecall;
    function queryCommandText(const cmdID: WideString): WideString; safecall;
    function queryCommandValue(const cmdID: WideString): OleVariant; safecall;
    function execCommand(const cmdID: WideString; showUI: WordBool; value: OleVariant): WordBool; safecall;
    function execCommandShowHelp(const cmdID: WideString): WordBool; safecall;
    function commonParentElement: IHTMLElement; safecall;
    function Get_length: Integer; safecall;
    property length: Integer read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IHTMLControlRangeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F29C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLControlRangeDisp = dispinterface
    ['{3050F29C-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure select; dispid 1002;
    procedure add(const item: IHTMLControlElement); dispid 1003;
    procedure remove(index: Integer); dispid 1004;
    function item(index: Integer): IHTMLElement; dispid 0;
    procedure scrollIntoView(varargStart: OleVariant); dispid 1006;
    function queryCommandSupported(const cmdID: WideString): WordBool; dispid 1007;
    function queryCommandEnabled(const cmdID: WideString): WordBool; dispid 1008;
    function queryCommandState(const cmdID: WideString): WordBool; dispid 1009;
    function queryCommandIndeterm(const cmdID: WideString): WordBool; dispid 1010;
    function queryCommandText(const cmdID: WideString): WideString; dispid 1011;
    function queryCommandValue(const cmdID: WideString): OleVariant; dispid 1012;
    function execCommand(const cmdID: WideString; showUI: WordBool; value: OleVariant): WordBool; dispid 1013;
    function execCommandShowHelp(const cmdID: WideString): WordBool; dispid 1014;
    function commonParentElement: IHTMLElement; dispid 1015;
    property length: Integer readonly dispid 1005;
  end;

// *********************************************************************//
// Interface: IHTMLControlRange2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F65E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLControlRange2 = interface(IDispatch)
    ['{3050F65E-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure addElement(const item: IHTMLElement); safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLControlRange2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F65E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLControlRange2Disp = dispinterface
    ['{3050F65E-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure addElement(const item: IHTMLElement); dispid 1016;
  end;

// *********************************************************************//
// DispIntf:  HTMLImgEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F616-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLImgEvents2 = dispinterface
    ['{3050F616-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
    procedure onload(const pEvtObj: IHTMLEventObj); dispid 1003;
    procedure onerror(const pEvtObj: IHTMLEventObj); dispid 1002;
    procedure onabort(const pEvtObj: IHTMLEventObj); dispid 1000;
  end;

// *********************************************************************//
// DispIntf:  HTMLImgEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F25B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLImgEvents = dispinterface
    ['{3050F25B-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid -2147418102;
    function onclick: WordBool; dispid -600;
    function ondblclick: WordBool; dispid -601;
    function onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function ondragstart: WordBool; dispid -2147418101;
    function onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function onerrorupdate: WordBool; dispid -2147418099;
    function onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function ondragenter: WordBool; dispid -2147418090;
    function ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function ondrop: WordBool; dispid -2147418087;
    function onbeforecut: WordBool; dispid -2147418083;
    function oncut: WordBool; dispid -2147418086;
    function onbeforecopy: WordBool; dispid -2147418082;
    function oncopy: WordBool; dispid -2147418085;
    function onbeforepaste: WordBool; dispid -2147418081;
    function onpaste: WordBool; dispid -2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
    procedure onload; dispid 1003;
    procedure onerror; dispid 1002;
    procedure onabort; dispid 1000;
  end;

// *********************************************************************//
// Interface: IHTMLImgElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F826-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLImgElement2 = interface(IDispatch)
    ['{3050F826-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_longDesc(const p: WideString); safecall;
    function Get_longDesc: WideString; safecall;
    property longDesc: WideString read Get_longDesc write Set_longDesc;
  end;

// *********************************************************************//
// DispIntf:  IHTMLImgElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F826-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLImgElement2Disp = dispinterface
    ['{3050F826-98B5-11CF-BB82-00AA00BDCE0B}']
    property longDesc: WideString dispid 2019;
  end;

// *********************************************************************//
// Interface: IHTMLImgElement3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510434-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLImgElement3 = interface(IDispatch)
    ['{30510434-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_longDesc(const p: WideString); safecall;
    function Get_longDesc: WideString; safecall;
    procedure Set_vrml(const p: WideString); safecall;
    function Get_vrml: WideString; safecall;
    procedure Set_lowsrc(const p: WideString); safecall;
    function Get_lowsrc: WideString; safecall;
    procedure Set_dynsrc(const p: WideString); safecall;
    function Get_dynsrc: WideString; safecall;
    property longDesc: WideString read Get_longDesc write Set_longDesc;
    property vrml: WideString read Get_vrml write Set_vrml;
    property lowsrc: WideString read Get_lowsrc write Set_lowsrc;
    property dynsrc: WideString read Get_dynsrc write Set_dynsrc;
  end;

// *********************************************************************//
// DispIntf:  IHTMLImgElement3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510434-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLImgElement3Disp = dispinterface
    ['{30510434-98B5-11CF-BB82-00AA00BDCE0B}']
    property longDesc: WideString dispid 1151;
    property vrml: WideString dispid 1152;
    property lowsrc: WideString dispid 1153;
    property dynsrc: WideString dispid 1154;
  end;

// *********************************************************************//
// Interface: IHTMLImgElement4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305107F6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLImgElement4 = interface(IDispatch)
    ['{305107F6-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_naturalWidth: Integer; safecall;
    function Get_naturalHeight: Integer; safecall;
    property naturalWidth: Integer read Get_naturalWidth;
    property naturalHeight: Integer read Get_naturalHeight;
  end;

// *********************************************************************//
// DispIntf:  IHTMLImgElement4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305107F6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLImgElement4Disp = dispinterface
    ['{305107F6-98B5-11CF-BB82-00AA00BDCE0B}']
    property naturalWidth: Integer readonly dispid 1155;
    property naturalHeight: Integer readonly dispid 1156;
  end;

// *********************************************************************//
// Interface: IHTMLMSImgElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510793-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMSImgElement = interface(IDispatch)
    ['{30510793-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_msPlayToDisabled(p: WordBool); safecall;
    function Get_msPlayToDisabled: WordBool; safecall;
    procedure Set_msPlayToPrimary(p: WordBool); safecall;
    function Get_msPlayToPrimary: WordBool; safecall;
    property msPlayToDisabled: WordBool read Get_msPlayToDisabled write Set_msPlayToDisabled;
    property msPlayToPrimary: WordBool read Get_msPlayToPrimary write Set_msPlayToPrimary;
  end;

// *********************************************************************//
// DispIntf:  IHTMLMSImgElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510793-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMSImgElementDisp = dispinterface
    ['{30510793-98B5-11CF-BB82-00AA00BDCE0B}']
    property msPlayToDisabled: WordBool dispid 1157;
    property msPlayToPrimary: WordBool dispid 1158;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLImg
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F51C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLImg = dispinterface
    ['{3050F51C-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    property prefix: OleVariant dispid -2147416992;
    property localName: OleVariant readonly dispid -2147416994;
    property namespaceURI: OleVariant readonly dispid -2147416993;
    property textContent: OleVariant dispid -2147416985;
    function isEqualNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416991;
    function lookupNamespaceURI(const pvarPrefix: OleVariant): OleVariant; dispid -2147416990;
    function lookupPrefix(const pvarNamespaceURI: OleVariant): OleVariant; dispid -2147416989;
    function isDefaultNamespace(const pvarNamespace: OleVariant): WordBool; dispid -2147416988;
    function ie9_appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416844;
    function ie9_insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147416843;
    function ie9_removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416842;
    function ie9_replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416841;
    function isSameNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416987;
    function compareDocumentPosition(const otherNode: IHTMLDOMNode): Word; dispid -2147416986;
    function isSupported(const feature: WideString; version: OleVariant): WordBool; dispid -2147416835;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    function querySelector(const v: WideString): IHTMLElement; dispid -2147416998;
    function querySelectorAll(const v: WideString): IHTMLDOMChildrenCollection; dispid -2147416997;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property isMap: WordBool dispid 2002;
    property useMap: WideString dispid 2008;
    property mimeType: WideString readonly dispid 2010;
    property fileSize: WideString readonly dispid 2011;
    property fileCreatedDate: WideString readonly dispid 2012;
    property fileModifiedDate: WideString readonly dispid 2013;
    property fileUpdatedDate: WideString readonly dispid 2014;
    property protocol: WideString readonly dispid 2015;
    property href: WideString readonly dispid 2016;
    property nameProp: WideString readonly dispid 2017;
    property border: OleVariant dispid 1004;
    property vspace: Integer dispid 1005;
    property hspace: Integer dispid 1006;
    property alt: WideString dispid 1002;
    property src: WideString dispid 1003;
    property lowsrc: WideString dispid 1007;
    property vrml: WideString dispid 1008;
    property dynsrc: WideString dispid 1009;
    property complete: WordBool readonly dispid 1010;
    property loop: OleVariant dispid 1011;
    property align: WideString dispid -2147418039;
    property name: WideString dispid -2147418112;
    property width: Integer dispid -2147418107;
    property height: Integer dispid -2147418106;
    property start: WideString dispid 1013;
    property longDesc: WideString dispid 2019;
    property ie8_longDesc: WideString dispid 1151;
    property ie8_vrml: WideString dispid 1152;
    property ie8_lowsrc: WideString dispid 1153;
    property ie8_dynsrc: WideString dispid 1154;
    property naturalWidth: Integer readonly dispid 1155;
    property naturalHeight: Integer readonly dispid 1156;
    property msPlayToDisabled: WordBool dispid 1157;
    property msPlayToPrimary: WordBool dispid 1158;
  end;

// *********************************************************************//
// Interface: IHTMLBodyElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1D8-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBodyElement = interface(IDispatch)
    ['{3050F1D8-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_background(const p: WideString); safecall;
    function Get_background: WideString; safecall;
    procedure Set_bgProperties(const p: WideString); safecall;
    function Get_bgProperties: WideString; safecall;
    procedure Set_leftMargin(p: OleVariant); safecall;
    function Get_leftMargin: OleVariant; safecall;
    procedure Set_topMargin(p: OleVariant); safecall;
    function Get_topMargin: OleVariant; safecall;
    procedure Set_rightMargin(p: OleVariant); safecall;
    function Get_rightMargin: OleVariant; safecall;
    procedure Set_bottomMargin(p: OleVariant); safecall;
    function Get_bottomMargin: OleVariant; safecall;
    procedure Set_noWrap(p: WordBool); safecall;
    function Get_noWrap: WordBool; safecall;
    procedure Set_bgColor(p: OleVariant); safecall;
    function Get_bgColor: OleVariant; safecall;
    procedure Set_text(p: OleVariant); safecall;
    function Get_text: OleVariant; safecall;
    procedure Set_link(p: OleVariant); safecall;
    function Get_link: OleVariant; safecall;
    procedure Set_vLink(p: OleVariant); safecall;
    function Get_vLink: OleVariant; safecall;
    procedure Set_aLink(p: OleVariant); safecall;
    function Get_aLink: OleVariant; safecall;
    procedure Set_onload(p: OleVariant); safecall;
    function Get_onload: OleVariant; safecall;
    procedure Set_onunload(p: OleVariant); safecall;
    function Get_onunload: OleVariant; safecall;
    procedure Set_scroll(const p: WideString); safecall;
    function Get_scroll: WideString; safecall;
    procedure Set_onselect(p: OleVariant); safecall;
    function Get_onselect: OleVariant; safecall;
    procedure Set_onbeforeunload(p: OleVariant); safecall;
    function Get_onbeforeunload: OleVariant; safecall;
    function createTextRange: IHTMLTxtRange; safecall;
    property background: WideString read Get_background write Set_background;
    property bgProperties: WideString read Get_bgProperties write Set_bgProperties;
    property leftMargin: OleVariant read Get_leftMargin write Set_leftMargin;
    property topMargin: OleVariant read Get_topMargin write Set_topMargin;
    property rightMargin: OleVariant read Get_rightMargin write Set_rightMargin;
    property bottomMargin: OleVariant read Get_bottomMargin write Set_bottomMargin;
    property noWrap: WordBool read Get_noWrap write Set_noWrap;
    property bgColor: OleVariant read Get_bgColor write Set_bgColor;
    property text: OleVariant read Get_text write Set_text;
    property link: OleVariant read Get_link write Set_link;
    property vLink: OleVariant read Get_vLink write Set_vLink;
    property aLink: OleVariant read Get_aLink write Set_aLink;
    property onload: OleVariant read Get_onload write Set_onload;
    property onunload: OleVariant read Get_onunload write Set_onunload;
    property scroll: WideString read Get_scroll write Set_scroll;
    property onselect: OleVariant read Get_onselect write Set_onselect;
    property onbeforeunload: OleVariant read Get_onbeforeunload write Set_onbeforeunload;
  end;

// *********************************************************************//
// DispIntf:  IHTMLBodyElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1D8-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBodyElementDisp = dispinterface
    ['{3050F1D8-98B5-11CF-BB82-00AA00BDCE0B}']
    property background: WideString dispid -2147413111;
    property bgProperties: WideString dispid -2147413067;
    property leftMargin: OleVariant dispid -2147413072;
    property topMargin: OleVariant dispid -2147413075;
    property rightMargin: OleVariant dispid -2147413074;
    property bottomMargin: OleVariant dispid -2147413073;
    property noWrap: WordBool dispid -2147413107;
    property bgColor: OleVariant dispid -501;
    property text: OleVariant dispid -2147413110;
    property link: OleVariant dispid 2010;
    property vLink: OleVariant dispid 2012;
    property aLink: OleVariant dispid 2011;
    property onload: OleVariant dispid -2147412080;
    property onunload: OleVariant dispid -2147412079;
    property scroll: WideString dispid -2147413033;
    property onselect: OleVariant dispid -2147412102;
    property onbeforeunload: OleVariant dispid -2147412073;
    function createTextRange: IHTMLTxtRange; dispid 2013;
  end;

// *********************************************************************//
// Interface: IHTMLBodyElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5C5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBodyElement2 = interface(IDispatch)
    ['{3050F5C5-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_onbeforeprint(p: OleVariant); safecall;
    function Get_onbeforeprint: OleVariant; safecall;
    procedure Set_onafterprint(p: OleVariant); safecall;
    function Get_onafterprint: OleVariant; safecall;
    property onbeforeprint: OleVariant read Get_onbeforeprint write Set_onbeforeprint;
    property onafterprint: OleVariant read Get_onafterprint write Set_onafterprint;
  end;

// *********************************************************************//
// DispIntf:  IHTMLBodyElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5C5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBodyElement2Disp = dispinterface
    ['{3050F5C5-98B5-11CF-BB82-00AA00BDCE0B}']
    property onbeforeprint: OleVariant dispid -2147412046;
    property onafterprint: OleVariant dispid -2147412045;
  end;

// *********************************************************************//
// Interface: IHTMLBodyElement3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510422-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBodyElement3 = interface(IDispatch)
    ['{30510422-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_background(const p: WideString); safecall;
    function Get_background: WideString; safecall;
    procedure Set_ononline(p: OleVariant); safecall;
    function Get_ononline: OleVariant; safecall;
    procedure Set_onoffline(p: OleVariant); safecall;
    function Get_onoffline: OleVariant; safecall;
    procedure Set_onhashchange(p: OleVariant); safecall;
    function Get_onhashchange: OleVariant; safecall;
    property background: WideString read Get_background write Set_background;
    property ononline: OleVariant read Get_ononline write Set_ononline;
    property onoffline: OleVariant read Get_onoffline write Set_onoffline;
    property onhashchange: OleVariant read Get_onhashchange write Set_onhashchange;
  end;

// *********************************************************************//
// DispIntf:  IHTMLBodyElement3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510422-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBodyElement3Disp = dispinterface
    ['{30510422-98B5-11CF-BB82-00AA00BDCE0B}']
    property background: WideString dispid 1150;
    property ononline: OleVariant dispid -2147412005;
    property onoffline: OleVariant dispid -2147412004;
    property onhashchange: OleVariant dispid -2147412003;
  end;

// *********************************************************************//
// Interface: IHTMLBodyElement4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510795-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBodyElement4 = interface(IDispatch)
    ['{30510795-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_onmessage(p: OleVariant); safecall;
    function Get_onmessage: OleVariant; safecall;
    procedure Set_onstorage(p: OleVariant); safecall;
    function Get_onstorage: OleVariant; safecall;
    property onmessage: OleVariant read Get_onmessage write Set_onmessage;
    property onstorage: OleVariant read Get_onstorage write Set_onstorage;
  end;

// *********************************************************************//
// DispIntf:  IHTMLBodyElement4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510795-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBodyElement4Disp = dispinterface
    ['{30510795-98B5-11CF-BB82-00AA00BDCE0B}']
    property onmessage: OleVariant dispid -2147412002;
    property onstorage: OleVariant dispid -2147412012;
  end;

// *********************************************************************//
// Interface: IHTMLBodyElement5
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510822-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBodyElement5 = interface(IDispatch)
    ['{30510822-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_onpopstate(p: OleVariant); safecall;
    function Get_onpopstate: OleVariant; safecall;
    property onpopstate: OleVariant read Get_onpopstate write Set_onpopstate;
  end;

// *********************************************************************//
// DispIntf:  IHTMLBodyElement5Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510822-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBodyElement5Disp = dispinterface
    ['{30510822-98B5-11CF-BB82-00AA00BDCE0B}']
    property onpopstate: OleVariant dispid -2147411920;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLBody
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F507-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLBody = dispinterface
    ['{3050F507-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property background: WideString dispid -2147413111;
    property bgProperties: WideString dispid -2147413067;
    property leftMargin: OleVariant dispid -2147413072;
    property topMargin: OleVariant dispid -2147413075;
    property rightMargin: OleVariant dispid -2147413074;
    property bottomMargin: OleVariant dispid -2147413073;
    property noWrap: WordBool dispid -2147413107;
    property bgColor: OleVariant dispid -501;
    property text: OleVariant dispid -2147413110;
    property link: OleVariant dispid 2010;
    property vLink: OleVariant dispid 2012;
    property aLink: OleVariant dispid 2011;
    property onunload: OleVariant dispid -2147412079;
    property scroll: WideString dispid -2147413033;
    property onbeforeunload: OleVariant dispid -2147412073;
    function createTextRange: IHTMLTxtRange; dispid 2013;
    property onbeforeprint: OleVariant dispid -2147412046;
    property onafterprint: OleVariant dispid -2147412045;
    property ie8_background: WideString dispid 1150;
    property ononline: OleVariant dispid -2147412005;
    property onoffline: OleVariant dispid -2147412004;
    property onhashchange: OleVariant dispid -2147412003;
    property onmessage: OleVariant dispid -2147412002;
    property onstorage: OleVariant dispid -2147412012;
    property onpopstate: OleVariant dispid -2147411920;
  end;

// *********************************************************************//
// Interface: IHTMLFontElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1D9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFontElement = interface(IDispatch)
    ['{3050F1D9-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_color(p: OleVariant); safecall;
    function Get_color: OleVariant; safecall;
    procedure Set_face(const p: WideString); safecall;
    function Get_face: WideString; safecall;
    procedure Set_size(p: OleVariant); safecall;
    function Get_size: OleVariant; safecall;
    property color: OleVariant read Get_color write Set_color;
    property face: WideString read Get_face write Set_face;
    property size: OleVariant read Get_size write Set_size;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFontElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1D9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFontElementDisp = dispinterface
    ['{3050F1D9-98B5-11CF-BB82-00AA00BDCE0B}']
    property color: OleVariant dispid -2147413110;
    property face: WideString dispid -2147413094;
    property size: OleVariant dispid -2147413093;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLFontElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F512-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLFontElement = dispinterface
    ['{3050F512-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property color: OleVariant dispid -2147413110;
    property face: WideString dispid -2147413094;
    property size: OleVariant dispid -2147413093;
  end;

// *********************************************************************//
// DispIntf:  HTMLAnchorEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F610-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLAnchorEvents2 = dispinterface
    ['{3050F610-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
  end;

// *********************************************************************//
// DispIntf:  HTMLAnchorEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F29D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLAnchorEvents = dispinterface
    ['{3050F29D-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid -2147418102;
    function onclick: WordBool; dispid -600;
    function ondblclick: WordBool; dispid -601;
    function onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function ondragstart: WordBool; dispid -2147418101;
    function onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function onerrorupdate: WordBool; dispid -2147418099;
    function onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function ondragenter: WordBool; dispid -2147418090;
    function ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function ondrop: WordBool; dispid -2147418087;
    function onbeforecut: WordBool; dispid -2147418083;
    function oncut: WordBool; dispid -2147418086;
    function onbeforecopy: WordBool; dispid -2147418082;
    function oncopy: WordBool; dispid -2147418085;
    function onbeforepaste: WordBool; dispid -2147418081;
    function onpaste: WordBool; dispid -2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
  end;

// *********************************************************************//
// Interface: IHTMLAnchorElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1DA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAnchorElement = interface(IDispatch)
    ['{3050F1DA-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_href(const p: WideString); safecall;
    function Get_href: WideString; safecall;
    procedure Set_target(const p: WideString); safecall;
    function Get_target: WideString; safecall;
    procedure Set_rel(const p: WideString); safecall;
    function Get_rel: WideString; safecall;
    procedure Set_rev(const p: WideString); safecall;
    function Get_rev: WideString; safecall;
    procedure Set_urn(const p: WideString); safecall;
    function Get_urn: WideString; safecall;
    procedure Set_Methods(const p: WideString); safecall;
    function Get_Methods: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_host(const p: WideString); safecall;
    function Get_host: WideString; safecall;
    procedure Set_hostname(const p: WideString); safecall;
    function Get_hostname: WideString; safecall;
    procedure Set_pathname(const p: WideString); safecall;
    function Get_pathname: WideString; safecall;
    procedure Set_port(const p: WideString); safecall;
    function Get_port: WideString; safecall;
    procedure Set_protocol(const p: WideString); safecall;
    function Get_protocol: WideString; safecall;
    procedure Set_search(const p: WideString); safecall;
    function Get_search: WideString; safecall;
    procedure Set_hash(const p: WideString); safecall;
    function Get_hash: WideString; safecall;
    procedure Set_onblur(p: OleVariant); safecall;
    function Get_onblur: OleVariant; safecall;
    procedure Set_onfocus(p: OleVariant); safecall;
    function Get_onfocus: OleVariant; safecall;
    procedure Set_accessKey(const p: WideString); safecall;
    function Get_accessKey: WideString; safecall;
    function Get_protocolLong: WideString; safecall;
    function Get_mimeType: WideString; safecall;
    function Get_nameProp: WideString; safecall;
    procedure Set_tabIndex(p: Smallint); safecall;
    function Get_tabIndex: Smallint; safecall;
    procedure focus; safecall;
    procedure blur; safecall;
    property href: WideString read Get_href write Set_href;
    property target: WideString read Get_target write Set_target;
    property rel: WideString read Get_rel write Set_rel;
    property rev: WideString read Get_rev write Set_rev;
    property urn: WideString read Get_urn write Set_urn;
    property Methods: WideString read Get_Methods write Set_Methods;
    property name: WideString read Get_name write Set_name;
    property host: WideString read Get_host write Set_host;
    property hostname: WideString read Get_hostname write Set_hostname;
    property pathname: WideString read Get_pathname write Set_pathname;
    property port: WideString read Get_port write Set_port;
    property protocol: WideString read Get_protocol write Set_protocol;
    property search: WideString read Get_search write Set_search;
    property hash: WideString read Get_hash write Set_hash;
    property onblur: OleVariant read Get_onblur write Set_onblur;
    property onfocus: OleVariant read Get_onfocus write Set_onfocus;
    property accessKey: WideString read Get_accessKey write Set_accessKey;
    property protocolLong: WideString read Get_protocolLong;
    property mimeType: WideString read Get_mimeType;
    property nameProp: WideString read Get_nameProp;
    property tabIndex: Smallint read Get_tabIndex write Set_tabIndex;
  end;

// *********************************************************************//
// DispIntf:  IHTMLAnchorElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1DA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAnchorElementDisp = dispinterface
    ['{3050F1DA-98B5-11CF-BB82-00AA00BDCE0B}']
    property href: WideString dispid 0;
    property target: WideString dispid 1003;
    property rel: WideString dispid 1005;
    property rev: WideString dispid 1006;
    property urn: WideString dispid 1007;
    property Methods: WideString dispid 1008;
    property name: WideString dispid -2147418112;
    property host: WideString dispid 1012;
    property hostname: WideString dispid 1013;
    property pathname: WideString dispid 1014;
    property port: WideString dispid 1015;
    property protocol: WideString dispid 1016;
    property search: WideString dispid 1017;
    property hash: WideString dispid 1018;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property accessKey: WideString dispid -2147416107;
    property protocolLong: WideString readonly dispid 1031;
    property mimeType: WideString readonly dispid 1030;
    property nameProp: WideString readonly dispid 1032;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    procedure blur; dispid -2147416110;
  end;

// *********************************************************************//
// Interface: IHTMLAnchorElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F825-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAnchorElement2 = interface(IDispatch)
    ['{3050F825-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_charset(const p: WideString); safecall;
    function Get_charset: WideString; safecall;
    procedure Set_coords(const p: WideString); safecall;
    function Get_coords: WideString; safecall;
    procedure Set_hreflang(const p: WideString); safecall;
    function Get_hreflang: WideString; safecall;
    procedure Set_shape(const p: WideString); safecall;
    function Get_shape: WideString; safecall;
    procedure Set_type_(const p: WideString); safecall;
    function Get_type_: WideString; safecall;
    property charset: WideString read Get_charset write Set_charset;
    property coords: WideString read Get_coords write Set_coords;
    property hreflang: WideString read Get_hreflang write Set_hreflang;
    property shape: WideString read Get_shape write Set_shape;
    property type_: WideString read Get_type_ write Set_type_;
  end;

// *********************************************************************//
// DispIntf:  IHTMLAnchorElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F825-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAnchorElement2Disp = dispinterface
    ['{3050F825-98B5-11CF-BB82-00AA00BDCE0B}']
    property charset: WideString dispid 1023;
    property coords: WideString dispid 1024;
    property hreflang: WideString dispid 1025;
    property shape: WideString dispid 1026;
    property type_: WideString dispid 1027;
  end;

// *********************************************************************//
// Interface: IHTMLAnchorElement3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051041D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAnchorElement3 = interface(IDispatch)
    ['{3051041D-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_shape(const p: WideString); safecall;
    function Get_shape: WideString; safecall;
    procedure Set_coords(const p: WideString); safecall;
    function Get_coords: WideString; safecall;
    procedure Set_href(const p: WideString); safecall;
    function Get_href: WideString; safecall;
    property shape: WideString read Get_shape write Set_shape;
    property coords: WideString read Get_coords write Set_coords;
    property href: WideString read Get_href write Set_href;
  end;

// *********************************************************************//
// DispIntf:  IHTMLAnchorElement3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051041D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAnchorElement3Disp = dispinterface
    ['{3051041D-98B5-11CF-BB82-00AA00BDCE0B}']
    property shape: WideString dispid 1151;
    property coords: WideString dispid 1152;
    property href: WideString dispid 1153;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLAnchorElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F502-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLAnchorElement = dispinterface
    ['{3050F502-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    property prefix: OleVariant dispid -2147416992;
    property localName: OleVariant readonly dispid -2147416994;
    property namespaceURI: OleVariant readonly dispid -2147416993;
    property textContent: OleVariant dispid -2147416985;
    function isEqualNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416991;
    function lookupNamespaceURI(const pvarPrefix: OleVariant): OleVariant; dispid -2147416990;
    function lookupPrefix(const pvarNamespaceURI: OleVariant): OleVariant; dispid -2147416989;
    function isDefaultNamespace(const pvarNamespace: OleVariant): WordBool; dispid -2147416988;
    function ie9_appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416844;
    function ie9_insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147416843;
    function ie9_removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416842;
    function ie9_replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416841;
    function isSameNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416987;
    function compareDocumentPosition(const otherNode: IHTMLDOMNode): Word; dispid -2147416986;
    function isSupported(const feature: WideString; version: OleVariant): WordBool; dispid -2147416835;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    function querySelector(const v: WideString): IHTMLElement; dispid -2147416998;
    function querySelectorAll(const v: WideString): IHTMLDOMChildrenCollection; dispid -2147416997;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property href: WideString dispid 0;
    property target: WideString dispid 1003;
    property rel: WideString dispid 1005;
    property rev: WideString dispid 1006;
    property urn: WideString dispid 1007;
    property Methods: WideString dispid 1008;
    property name: WideString dispid -2147418112;
    property host: WideString dispid 1012;
    property hostname: WideString dispid 1013;
    property pathname: WideString dispid 1014;
    property port: WideString dispid 1015;
    property protocol: WideString dispid 1016;
    property search: WideString dispid 1017;
    property hash: WideString dispid 1018;
    property protocolLong: WideString readonly dispid 1031;
    property mimeType: WideString readonly dispid 1030;
    property nameProp: WideString readonly dispid 1032;
    property charset: WideString dispid 1023;
    property coords: WideString dispid 1024;
    property hreflang: WideString dispid 1025;
    property shape: WideString dispid 1026;
    property type_: WideString dispid 1027;
    property ie8_shape: WideString dispid 1151;
    property ie8_coords: WideString dispid 1152;
    property ie8_href: WideString dispid 1153;
  end;

// *********************************************************************//
// DispIntf:  HTMLLabelEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F61C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLLabelEvents2 = dispinterface
    ['{3050F61C-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
  end;

// *********************************************************************//
// DispIntf:  HTMLLabelEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F329-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLLabelEvents = dispinterface
    ['{3050F329-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid -2147418102;
    function onclick: WordBool; dispid -600;
    function ondblclick: WordBool; dispid -601;
    function onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function ondragstart: WordBool; dispid -2147418101;
    function onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function onerrorupdate: WordBool; dispid -2147418099;
    function onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function ondragenter: WordBool; dispid -2147418090;
    function ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function ondrop: WordBool; dispid -2147418087;
    function onbeforecut: WordBool; dispid -2147418083;
    function oncut: WordBool; dispid -2147418086;
    function onbeforecopy: WordBool; dispid -2147418082;
    function oncopy: WordBool; dispid -2147418085;
    function onbeforepaste: WordBool; dispid -2147418081;
    function onpaste: WordBool; dispid -2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
  end;

// *********************************************************************//
// Interface: IHTMLLabelElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F32A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLabelElement = interface(IDispatch)
    ['{3050F32A-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_htmlFor(const p: WideString); safecall;
    function Get_htmlFor: WideString; safecall;
    procedure Set_accessKey(const p: WideString); safecall;
    function Get_accessKey: WideString; safecall;
    property htmlFor: WideString read Get_htmlFor write Set_htmlFor;
    property accessKey: WideString read Get_accessKey write Set_accessKey;
  end;

// *********************************************************************//
// DispIntf:  IHTMLLabelElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F32A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLabelElementDisp = dispinterface
    ['{3050F32A-98B5-11CF-BB82-00AA00BDCE0B}']
    property htmlFor: WideString dispid 1000;
    property accessKey: WideString dispid -2147416107;
  end;

// *********************************************************************//
// Interface: IHTMLLabelElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F832-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLabelElement2 = interface(IDispatch)
    ['{3050F832-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_form: IHTMLFormElement; safecall;
    property form: IHTMLFormElement read Get_form;
  end;

// *********************************************************************//
// DispIntf:  IHTMLLabelElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F832-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLabelElement2Disp = dispinterface
    ['{3050F832-98B5-11CF-BB82-00AA00BDCE0B}']
    property form: IHTMLFormElement readonly dispid 1002;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLLabelElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F522-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLLabelElement = dispinterface
    ['{3050F522-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    property prefix: OleVariant dispid -2147416992;
    property localName: OleVariant readonly dispid -2147416994;
    property namespaceURI: OleVariant readonly dispid -2147416993;
    property textContent: OleVariant dispid -2147416985;
    function isEqualNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416991;
    function lookupNamespaceURI(const pvarPrefix: OleVariant): OleVariant; dispid -2147416990;
    function lookupPrefix(const pvarNamespaceURI: OleVariant): OleVariant; dispid -2147416989;
    function isDefaultNamespace(const pvarNamespace: OleVariant): WordBool; dispid -2147416988;
    function ie9_appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416844;
    function ie9_insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147416843;
    function ie9_removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416842;
    function ie9_replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416841;
    function isSameNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416987;
    function compareDocumentPosition(const otherNode: IHTMLDOMNode): Word; dispid -2147416986;
    function isSupported(const feature: WideString; version: OleVariant): WordBool; dispid -2147416835;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    function querySelector(const v: WideString): IHTMLElement; dispid -2147416998;
    function querySelectorAll(const v: WideString): IHTMLDOMChildrenCollection; dispid -2147416997;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property htmlFor: WideString dispid 1000;
    property form: IHTMLFormElement readonly dispid 1002;
  end;

// *********************************************************************//
// Interface: IHTMLListElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F20E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLListElement = interface(IDispatch)
    ['{3050F20E-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  IHTMLListElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F20E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLListElementDisp = dispinterface
    ['{3050F20E-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// Interface: IHTMLListElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F822-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLListElement2 = interface(IDispatch)
    ['{3050F822-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_compact(p: WordBool); safecall;
    function Get_compact: WordBool; safecall;
    property compact: WordBool read Get_compact write Set_compact;
  end;

// *********************************************************************//
// DispIntf:  IHTMLListElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F822-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLListElement2Disp = dispinterface
    ['{3050F822-98B5-11CF-BB82-00AA00BDCE0B}']
    property compact: WordBool dispid 1001;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLListElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F525-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLListElement = dispinterface
    ['{3050F525-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property compact: WordBool dispid 1001;
  end;

// *********************************************************************//
// Interface: IHTMLUListElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1DD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLUListElement = interface(IDispatch)
    ['{3050F1DD-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_compact(p: WordBool); safecall;
    function Get_compact: WordBool; safecall;
    procedure Set_type_(const p: WideString); safecall;
    function Get_type_: WideString; safecall;
    property compact: WordBool read Get_compact write Set_compact;
    property type_: WideString read Get_type_ write Set_type_;
  end;

// *********************************************************************//
// DispIntf:  IHTMLUListElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1DD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLUListElementDisp = dispinterface
    ['{3050F1DD-98B5-11CF-BB82-00AA00BDCE0B}']
    property compact: WordBool dispid 1001;
    property type_: WideString dispid -2147413095;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLUListElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F538-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLUListElement = dispinterface
    ['{3050F538-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property compact: WordBool dispid 1001;
    property type_: WideString dispid -2147413095;
  end;

// *********************************************************************//
// Interface: IHTMLOListElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1DE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOListElement = interface(IDispatch)
    ['{3050F1DE-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_compact(p: WordBool); safecall;
    function Get_compact: WordBool; safecall;
    procedure Set_start(p: Integer); safecall;
    function Get_start: Integer; safecall;
    procedure Set_type_(const p: WideString); safecall;
    function Get_type_: WideString; safecall;
    property compact: WordBool read Get_compact write Set_compact;
    property start: Integer read Get_start write Set_start;
    property type_: WideString read Get_type_ write Set_type_;
  end;

// *********************************************************************//
// DispIntf:  IHTMLOListElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1DE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOListElementDisp = dispinterface
    ['{3050F1DE-98B5-11CF-BB82-00AA00BDCE0B}']
    property compact: WordBool dispid 1001;
    property start: Integer dispid 1003;
    property type_: WideString dispid -2147413095;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLOListElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F52A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLOListElement = dispinterface
    ['{3050F52A-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property compact: WordBool dispid 1001;
    property start: Integer dispid 1003;
    property type_: WideString dispid -2147413095;
  end;

// *********************************************************************//
// Interface: IHTMLLIElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1E0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLIElement = interface(IDispatch)
    ['{3050F1E0-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_type_(const p: WideString); safecall;
    function Get_type_: WideString; safecall;
    procedure Set_value(p: Integer); safecall;
    function Get_value: Integer; safecall;
    property type_: WideString read Get_type_ write Set_type_;
    property value: Integer read Get_value write Set_value;
  end;

// *********************************************************************//
// DispIntf:  IHTMLLIElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1E0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLIElementDisp = dispinterface
    ['{3050F1E0-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString dispid -2147413095;
    property value: Integer dispid 1001;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLLIElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F523-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLLIElement = dispinterface
    ['{3050F523-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property type_: WideString dispid -2147413095;
    property value: Integer dispid 1001;
  end;

// *********************************************************************//
// Interface: IHTMLBlockElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F208-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBlockElement = interface(IDispatch)
    ['{3050F208-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_clear(const p: WideString); safecall;
    function Get_clear: WideString; safecall;
    property clear: WideString read Get_clear write Set_clear;
  end;

// *********************************************************************//
// DispIntf:  IHTMLBlockElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F208-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBlockElementDisp = dispinterface
    ['{3050F208-98B5-11CF-BB82-00AA00BDCE0B}']
    property clear: WideString dispid -2147413096;
  end;

// *********************************************************************//
// Interface: IHTMLBlockElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F823-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBlockElement2 = interface(IDispatch)
    ['{3050F823-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_cite(const p: WideString); safecall;
    function Get_cite: WideString; safecall;
    procedure Set_width(const p: WideString); safecall;
    function Get_width: WideString; safecall;
    property cite: WideString read Get_cite write Set_cite;
    property width: WideString read Get_width write Set_width;
  end;

// *********************************************************************//
// DispIntf:  IHTMLBlockElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F823-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBlockElement2Disp = dispinterface
    ['{3050F823-98B5-11CF-BB82-00AA00BDCE0B}']
    property cite: WideString dispid 1001;
    property width: WideString dispid 1002;
  end;

// *********************************************************************//
// Interface: IHTMLBlockElement3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510494-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBlockElement3 = interface(IDispatch)
    ['{30510494-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_cite(const p: WideString); safecall;
    function Get_cite: WideString; safecall;
    property cite: WideString read Get_cite write Set_cite;
  end;

// *********************************************************************//
// DispIntf:  IHTMLBlockElement3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510494-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBlockElement3Disp = dispinterface
    ['{30510494-98B5-11CF-BB82-00AA00BDCE0B}']
    property cite: WideString dispid 1150;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLBlockElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F506-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLBlockElement = dispinterface
    ['{3050F506-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property clear: WideString dispid -2147413096;
    property cite: WideString dispid 1001;
    property width: WideString dispid 1002;
    property ie8_cite: WideString dispid 1150;
  end;

// *********************************************************************//
// Interface: IHTMLDivElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F200-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDivElement = interface(IDispatch)
    ['{3050F200-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    procedure Set_noWrap(p: WordBool); safecall;
    function Get_noWrap: WordBool; safecall;
    property align: WideString read Get_align write Set_align;
    property noWrap: WordBool read Get_noWrap write Set_noWrap;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDivElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F200-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDivElementDisp = dispinterface
    ['{3050F200-98B5-11CF-BB82-00AA00BDCE0B}']
    property align: WideString dispid -2147418040;
    property noWrap: WordBool dispid -2147413107;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLDivElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F50C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLDivElement = dispinterface
    ['{3050F50C-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    property prefix: OleVariant dispid -2147416992;
    property localName: OleVariant readonly dispid -2147416994;
    property namespaceURI: OleVariant readonly dispid -2147416993;
    property textContent: OleVariant dispid -2147416985;
    function isEqualNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416991;
    function lookupNamespaceURI(const pvarPrefix: OleVariant): OleVariant; dispid -2147416990;
    function lookupPrefix(const pvarNamespaceURI: OleVariant): OleVariant; dispid -2147416989;
    function isDefaultNamespace(const pvarNamespace: OleVariant): WordBool; dispid -2147416988;
    function ie9_appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416844;
    function ie9_insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147416843;
    function ie9_removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416842;
    function ie9_replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416841;
    function isSameNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416987;
    function compareDocumentPosition(const otherNode: IHTMLDOMNode): Word; dispid -2147416986;
    function isSupported(const feature: WideString; version: OleVariant): WordBool; dispid -2147416835;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    function querySelector(const v: WideString): IHTMLElement; dispid -2147416998;
    function querySelectorAll(const v: WideString): IHTMLDOMChildrenCollection; dispid -2147416997;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property align: WideString dispid -2147418040;
    property noWrap: WordBool dispid -2147413107;
  end;

// *********************************************************************//
// Interface: IHTMLDDElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDDElement = interface(IDispatch)
    ['{3050F1F2-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_noWrap(p: WordBool); safecall;
    function Get_noWrap: WordBool; safecall;
    property noWrap: WordBool read Get_noWrap write Set_noWrap;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDDElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDDElementDisp = dispinterface
    ['{3050F1F2-98B5-11CF-BB82-00AA00BDCE0B}']
    property noWrap: WordBool dispid -2147413107;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLDDElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F50B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLDDElement = dispinterface
    ['{3050F50B-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property noWrap: WordBool dispid -2147413107;
  end;

// *********************************************************************//
// Interface: IHTMLDTElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDTElement = interface(IDispatch)
    ['{3050F1F3-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_noWrap(p: WordBool); safecall;
    function Get_noWrap: WordBool; safecall;
    property noWrap: WordBool read Get_noWrap write Set_noWrap;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDTElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDTElementDisp = dispinterface
    ['{3050F1F3-98B5-11CF-BB82-00AA00BDCE0B}']
    property noWrap: WordBool dispid -2147413107;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLDTElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F50D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLDTElement = dispinterface
    ['{3050F50D-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property noWrap: WordBool dispid -2147413107;
  end;

// *********************************************************************//
// Interface: IHTMLBRElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBRElement = interface(IDispatch)
    ['{3050F1F0-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_clear(const p: WideString); safecall;
    function Get_clear: WideString; safecall;
    property clear: WideString read Get_clear write Set_clear;
  end;

// *********************************************************************//
// DispIntf:  IHTMLBRElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBRElementDisp = dispinterface
    ['{3050F1F0-98B5-11CF-BB82-00AA00BDCE0B}']
    property clear: WideString dispid -2147413096;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLBRElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F53A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLBRElement = dispinterface
    ['{3050F53A-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property clear: WideString dispid -2147413096;
  end;

// *********************************************************************//
// Interface: IHTMLDListElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDListElement = interface(IDispatch)
    ['{3050F1F1-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_compact(p: WordBool); safecall;
    function Get_compact: WordBool; safecall;
    property compact: WordBool read Get_compact write Set_compact;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDListElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDListElementDisp = dispinterface
    ['{3050F1F1-98B5-11CF-BB82-00AA00BDCE0B}']
    property compact: WordBool dispid 1001;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLDListElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F53B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLDListElement = dispinterface
    ['{3050F53B-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property compact: WordBool dispid 1001;
  end;

// *********************************************************************//
// Interface: IHTMLHRElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLHRElement = interface(IDispatch)
    ['{3050F1F4-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    procedure Set_color(p: OleVariant); safecall;
    function Get_color: OleVariant; safecall;
    procedure Set_noShade(p: WordBool); safecall;
    function Get_noShade: WordBool; safecall;
    procedure Set_width(p: OleVariant); safecall;
    function Get_width: OleVariant; safecall;
    procedure Set_size(p: OleVariant); safecall;
    function Get_size: OleVariant; safecall;
    property align: WideString read Get_align write Set_align;
    property color: OleVariant read Get_color write Set_color;
    property noShade: WordBool read Get_noShade write Set_noShade;
    property width: OleVariant read Get_width write Set_width;
    property size: OleVariant read Get_size write Set_size;
  end;

// *********************************************************************//
// DispIntf:  IHTMLHRElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLHRElementDisp = dispinterface
    ['{3050F1F4-98B5-11CF-BB82-00AA00BDCE0B}']
    property align: WideString dispid -2147418040;
    property color: OleVariant dispid -2147413110;
    property noShade: WordBool dispid 1001;
    property width: OleVariant dispid -2147418107;
    property size: OleVariant dispid -2147418106;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLHRElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F53D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLHRElement = dispinterface
    ['{3050F53D-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property align: WideString dispid -2147418040;
    property color: OleVariant dispid -2147413110;
    property noShade: WordBool dispid 1001;
    property width: OleVariant dispid -2147418107;
    property size: OleVariant dispid -2147418106;
  end;

// *********************************************************************//
// Interface: IHTMLParaElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLParaElement = interface(IDispatch)
    ['{3050F1F5-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    property align: WideString read Get_align write Set_align;
  end;

// *********************************************************************//
// DispIntf:  IHTMLParaElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLParaElementDisp = dispinterface
    ['{3050F1F5-98B5-11CF-BB82-00AA00BDCE0B}']
    property align: WideString dispid -2147418040;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLParaElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F52C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLParaElement = dispinterface
    ['{3050F52C-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property clear: WideString dispid -2147413096;
    property align: WideString dispid -2147418040;
  end;

// *********************************************************************//
// Interface: IHTMLElementCollection2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5EE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElementCollection2 = interface(IDispatch)
    ['{3050F5EE-98B5-11CF-BB82-00AA00BDCE0B}']
    function urns(urn: OleVariant): IDispatch; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLElementCollection2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5EE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElementCollection2Disp = dispinterface
    ['{3050F5EE-98B5-11CF-BB82-00AA00BDCE0B}']
    function urns(urn: OleVariant): IDispatch; dispid 1505;
  end;

// *********************************************************************//
// Interface: IHTMLElementCollection3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F835-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElementCollection3 = interface(IDispatch)
    ['{3050F835-98B5-11CF-BB82-00AA00BDCE0B}']
    function namedItem(const name: WideString): IDispatch; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLElementCollection3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F835-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElementCollection3Disp = dispinterface
    ['{3050F835-98B5-11CF-BB82-00AA00BDCE0B}']
    function namedItem(const name: WideString): IDispatch; dispid 1506;
  end;

// *********************************************************************//
// Interface: IHTMLElementCollection4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510425-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElementCollection4 = interface(IDispatch)
    ['{30510425-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    function item(index: Integer): IHTMLElement2; safecall;
    function namedItem(const name: WideString): IHTMLElement2; safecall;
    property length: Integer read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IHTMLElementCollection4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510425-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLElementCollection4Disp = dispinterface
    ['{30510425-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1150;
    function item(index: Integer): IHTMLElement2; dispid 1152;
    function namedItem(const name: WideString): IHTMLElement2; dispid 1153;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLElementCollection
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F56B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLElementCollection = dispinterface
    ['{3050F56B-98B5-11CF-BB82-00AA00BDCE0B}']
    function toString: WideString; dispid 1501;
    property length: Integer dispid 1500;
    property _newEnum: IUnknown readonly dispid -4;
    function item(name: OleVariant; index: OleVariant): IDispatch; dispid 0;
    function tags(tagName: OleVariant): IDispatch; dispid 1502;
    function urns(urn: OleVariant): IDispatch; dispid 1505;
    function namedItem(const name: WideString): IDispatch; dispid 1506;
    property ie8_length: Integer readonly dispid 1150;
    function ie8_item(index: Integer): IHTMLElement2; dispid 1152;
    function ie8_namedItem(const name: WideString): IHTMLElement2; dispid 1153;
    property constructor_: IDispatch readonly dispid -2147417603;
  end;

// *********************************************************************//
// Interface: IHTMLHeaderElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLHeaderElement = interface(IDispatch)
    ['{3050F1F6-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    property align: WideString read Get_align write Set_align;
  end;

// *********************************************************************//
// DispIntf:  IHTMLHeaderElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F1F6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLHeaderElementDisp = dispinterface
    ['{3050F1F6-98B5-11CF-BB82-00AA00BDCE0B}']
    property align: WideString dispid -2147418040;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLHeaderElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F515-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLHeaderElement = dispinterface
    ['{3050F515-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property clear: WideString dispid -2147413096;
    property align: WideString dispid -2147418040;
  end;

// *********************************************************************//
// DispIntf:  HTMLSelectElementEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F622-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLSelectElementEvents2 = dispinterface
    ['{3050F622-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
    procedure onchange(const pEvtObj: IHTMLEventObj); dispid 1001;
  end;

// *********************************************************************//
// DispIntf:  HTMLSelectElementEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F302-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLSelectElementEvents = dispinterface
    ['{3050F302-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid -2147418102;
    function onclick: WordBool; dispid -600;
    function ondblclick: WordBool; dispid -601;
    function onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function ondragstart: WordBool; dispid -2147418101;
    function onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function onerrorupdate: WordBool; dispid -2147418099;
    function onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function ondragenter: WordBool; dispid -2147418090;
    function ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function ondrop: WordBool; dispid -2147418087;
    function onbeforecut: WordBool; dispid -2147418083;
    function oncut: WordBool; dispid -2147418086;
    function onbeforecopy: WordBool; dispid -2147418082;
    function oncopy: WordBool; dispid -2147418085;
    function onbeforepaste: WordBool; dispid -2147418081;
    function onpaste: WordBool; dispid -2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
    procedure onchange; dispid 1001;
  end;

// *********************************************************************//
// Interface: IHTMLSelectElementEx
// Flags:     (0)
// GUID:      {3050F2D1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSelectElementEx = interface(IUnknown)
    ['{3050F2D1-98B5-11CF-BB82-00AA00BDCE0B}']
    function ShowDropdown(fShow: Integer): HResult; stdcall;
    function SetSelectExFlags(lFlags: LongWord): HResult; stdcall;
    function GetSelectExFlags(out pFlags: LongWord): HResult; stdcall;
    function GetDropdownOpen(out pfOpen: Integer): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IHTMLSelectElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F244-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSelectElement = interface(IDispatch)
    ['{3050F244-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_size(p: Integer); safecall;
    function Get_size: Integer; safecall;
    procedure Set_multiple(p: WordBool); safecall;
    function Get_multiple: WordBool; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    function Get_options: IDispatch; safecall;
    procedure Set_onchange(p: OleVariant); safecall;
    function Get_onchange: OleVariant; safecall;
    procedure Set_selectedIndex(p: Integer); safecall;
    function Get_selectedIndex: Integer; safecall;
    function Get_type_: WideString; safecall;
    procedure Set_value(const p: WideString); safecall;
    function Get_value: WideString; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function Get_disabled: WordBool; safecall;
    function Get_form: IHTMLFormElement; safecall;
    procedure add(const element: IHTMLElement; before: OleVariant); safecall;
    procedure remove(index: Integer); safecall;
    procedure Set_length(p: Integer); safecall;
    function Get_length: Integer; safecall;
    function Get__newEnum: IUnknown; safecall;
    function item(name: OleVariant; index: OleVariant): IDispatch; safecall;
    function tags(tagName: OleVariant): IDispatch; safecall;
    property size: Integer read Get_size write Set_size;
    property multiple: WordBool read Get_multiple write Set_multiple;
    property name: WideString read Get_name write Set_name;
    property options: IDispatch read Get_options;
    property onchange: OleVariant read Get_onchange write Set_onchange;
    property selectedIndex: Integer read Get_selectedIndex write Set_selectedIndex;
    property type_: WideString read Get_type_;
    property value: WideString read Get_value write Set_value;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property form: IHTMLFormElement read Get_form;
    property length: Integer read Get_length write Set_length;
    property _newEnum: IUnknown read Get__newEnum;
  end;

// *********************************************************************//
// DispIntf:  IHTMLSelectElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F244-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSelectElementDisp = dispinterface
    ['{3050F244-98B5-11CF-BB82-00AA00BDCE0B}']
    property size: Integer dispid 1002;
    property multiple: WordBool dispid 1003;
    property name: WideString dispid -2147418112;
    property options: IDispatch readonly dispid 1005;
    property onchange: OleVariant dispid -2147412082;
    property selectedIndex: Integer dispid 1010;
    property type_: WideString readonly dispid 1012;
    property value: WideString dispid 1011;
    property disabled: WordBool dispid -2147418036;
    property form: IHTMLFormElement readonly dispid -2147416108;
    procedure add(const element: IHTMLElement; before: OleVariant); dispid 1503;
    procedure remove(index: Integer); dispid 1504;
    property length: Integer dispid 1500;
    property _newEnum: IUnknown readonly dispid -4;
    function item(name: OleVariant; index: OleVariant): IDispatch; dispid 0;
    function tags(tagName: OleVariant): IDispatch; dispid 1502;
  end;

// *********************************************************************//
// Interface: IHTMLSelectElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5ED-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSelectElement2 = interface(IDispatch)
    ['{3050F5ED-98B5-11CF-BB82-00AA00BDCE0B}']
    function urns(urn: OleVariant): IDispatch; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLSelectElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5ED-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSelectElement2Disp = dispinterface
    ['{3050F5ED-98B5-11CF-BB82-00AA00BDCE0B}']
    function urns(urn: OleVariant): IDispatch; dispid 1505;
  end;

// *********************************************************************//
// Interface: IHTMLSelectElement4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F838-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSelectElement4 = interface(IDispatch)
    ['{3050F838-98B5-11CF-BB82-00AA00BDCE0B}']
    function namedItem(const name: WideString): IDispatch; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLSelectElement4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F838-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSelectElement4Disp = dispinterface
    ['{3050F838-98B5-11CF-BB82-00AA00BDCE0B}']
    function namedItem(const name: WideString): IDispatch; dispid 1506;
  end;

// *********************************************************************//
// Interface: IHTMLSelectElement5
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051049D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSelectElement5 = interface(IDispatch)
    ['{3051049D-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure add(const pElem: IHTMLOptionElement; const pvarBefore: OleVariant); safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLSelectElement5Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051049D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSelectElement5Disp = dispinterface
    ['{3051049D-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure add(const pElem: IHTMLOptionElement; const pvarBefore: OleVariant); dispid 1150;
  end;

// *********************************************************************//
// Interface: IHTMLSelectElement6
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510760-98B6-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSelectElement6 = interface(IDispatch)
    ['{30510760-98B6-11CF-BB82-00AA00BDCE0B}']
    procedure add(const pElem: IHTMLOptionElement; const pvarBefore: OleVariant); safecall;
    procedure Set_value(const p: WideString); safecall;
    function Get_value: WideString; safecall;
    property value: WideString read Get_value write Set_value;
  end;

// *********************************************************************//
// DispIntf:  IHTMLSelectElement6Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510760-98B6-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSelectElement6Disp = dispinterface
    ['{30510760-98B6-11CF-BB82-00AA00BDCE0B}']
    procedure add(const pElem: IHTMLOptionElement; const pvarBefore: OleVariant); dispid 1151;
    property value: WideString dispid 1152;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLSelectElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F531-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLSelectElement = dispinterface
    ['{3050F531-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    property prefix: OleVariant dispid -2147416992;
    property localName: OleVariant readonly dispid -2147416994;
    property namespaceURI: OleVariant readonly dispid -2147416993;
    property textContent: OleVariant dispid -2147416985;
    function isEqualNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416991;
    function lookupNamespaceURI(const pvarPrefix: OleVariant): OleVariant; dispid -2147416990;
    function lookupPrefix(const pvarNamespaceURI: OleVariant): OleVariant; dispid -2147416989;
    function isDefaultNamespace(const pvarNamespace: OleVariant): WordBool; dispid -2147416988;
    function ie9_appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416844;
    function ie9_insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147416843;
    function ie9_removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416842;
    function ie9_replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416841;
    function isSameNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416987;
    function compareDocumentPosition(const otherNode: IHTMLDOMNode): Word; dispid -2147416986;
    function isSupported(const feature: WideString; version: OleVariant): WordBool; dispid -2147416835;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    function querySelector(const v: WideString): IHTMLElement; dispid -2147416998;
    function querySelectorAll(const v: WideString): IHTMLDOMChildrenCollection; dispid -2147416997;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property size: Integer dispid 1002;
    property multiple: WordBool dispid 1003;
    property name: WideString dispid -2147418112;
    property options: IDispatch readonly dispid 1005;
    property selectedIndex: Integer dispid 1010;
    property type_: WideString readonly dispid 1012;
    property value: WideString dispid 1011;
    property form: IHTMLFormElement readonly dispid -2147416108;
    procedure add(const element: IHTMLElement; before: OleVariant); dispid 1503;
    procedure remove(index: Integer); dispid 1504;
    property length: Integer dispid 1500;
    property _newEnum: IUnknown readonly dispid -4;
    function item(name: OleVariant; index: OleVariant): IDispatch; dispid 0;
    function tags(tagName: OleVariant): IDispatch; dispid 1502;
    function urns(urn: OleVariant): IDispatch; dispid 1505;
    function namedItem(const name: WideString): IDispatch; dispid 1506;
    procedure ie8_add(const pElem: IHTMLOptionElement; const pvarBefore: OleVariant); dispid 1150;
    procedure ie9_add(const pElem: IHTMLOptionElement; const pvarBefore: OleVariant); dispid 1151;
    property ie9_value: WideString dispid 1152;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLWndSelectElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F597-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLWndSelectElement = dispinterface
    ['{3050F597-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    property prefix: OleVariant dispid -2147416992;
    property localName: OleVariant readonly dispid -2147416994;
    property namespaceURI: OleVariant readonly dispid -2147416993;
    property textContent: OleVariant dispid -2147416985;
    function isEqualNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416991;
    function lookupNamespaceURI(const pvarPrefix: OleVariant): OleVariant; dispid -2147416990;
    function lookupPrefix(const pvarNamespaceURI: OleVariant): OleVariant; dispid -2147416989;
    function isDefaultNamespace(const pvarNamespace: OleVariant): WordBool; dispid -2147416988;
    function ie9_appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416844;
    function ie9_insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147416843;
    function ie9_removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416842;
    function ie9_replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416841;
    function isSameNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416987;
    function compareDocumentPosition(const otherNode: IHTMLDOMNode): Word; dispid -2147416986;
    function isSupported(const feature: WideString; version: OleVariant): WordBool; dispid -2147416835;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    function querySelector(const v: WideString): IHTMLElement; dispid -2147416998;
    function querySelectorAll(const v: WideString): IHTMLDOMChildrenCollection; dispid -2147416997;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property size: Integer dispid 1002;
    property multiple: WordBool dispid 1003;
    property name: WideString dispid -2147418112;
    property options: IDispatch readonly dispid 1005;
    property selectedIndex: Integer dispid 1010;
    property type_: WideString readonly dispid 1012;
    property value: WideString dispid 1011;
    property form: IHTMLFormElement readonly dispid -2147416108;
    procedure add(const element: IHTMLElement; before: OleVariant); dispid 1503;
    procedure remove(index: Integer); dispid 1504;
    property length: Integer dispid 1500;
    property _newEnum: IUnknown readonly dispid -4;
    function item(name: OleVariant; index: OleVariant): IDispatch; dispid 0;
    function tags(tagName: OleVariant): IDispatch; dispid 1502;
    function urns(urn: OleVariant): IDispatch; dispid 1505;
    function namedItem(const name: WideString): IDispatch; dispid 1506;
  end;

// *********************************************************************//
// Interface: IHTMLSelectionObject2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F7EC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSelectionObject2 = interface(IDispatch)
    ['{3050F7EC-98B5-11CF-BB82-00AA00BDCE0B}']
    function createRangeCollection: IDispatch; safecall;
    function Get_typeDetail: WideString; safecall;
    property typeDetail: WideString read Get_typeDetail;
  end;

// *********************************************************************//
// DispIntf:  IHTMLSelectionObject2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F7EC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSelectionObject2Disp = dispinterface
    ['{3050F7EC-98B5-11CF-BB82-00AA00BDCE0B}']
    function createRangeCollection: IDispatch; dispid 1005;
    property typeDetail: WideString readonly dispid 1006;
  end;

// *********************************************************************//
// Interface: IHTMLOptionElement3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F820-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOptionElement3 = interface(IDispatch)
    ['{3050F820-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_label_(const p: WideString); safecall;
    function Get_label_: WideString; safecall;
    property label_: WideString read Get_label_ write Set_label_;
  end;

// *********************************************************************//
// DispIntf:  IHTMLOptionElement3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F820-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOptionElement3Disp = dispinterface
    ['{3050F820-98B5-11CF-BB82-00AA00BDCE0B}']
    property label_: WideString dispid 1007;
  end;

// *********************************************************************//
// Interface: IHTMLOptionElement4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305107B4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOptionElement4 = interface(IDispatch)
    ['{305107B4-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_value(const p: WideString); safecall;
    function Get_value: WideString; safecall;
    property value: WideString read Get_value write Set_value;
  end;

// *********************************************************************//
// DispIntf:  IHTMLOptionElement4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305107B4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOptionElement4Disp = dispinterface
    ['{305107B4-98B5-11CF-BB82-00AA00BDCE0B}']
    property value: WideString dispid 1008;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLOptionElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F52B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLOptionElement = dispinterface
    ['{3050F52B-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    property prefix: OleVariant dispid -2147416992;
    property localName: OleVariant readonly dispid -2147416994;
    property namespaceURI: OleVariant readonly dispid -2147416993;
    property textContent: OleVariant dispid -2147416985;
    function isEqualNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416991;
    function lookupNamespaceURI(const pvarPrefix: OleVariant): OleVariant; dispid -2147416990;
    function lookupPrefix(const pvarNamespaceURI: OleVariant): OleVariant; dispid -2147416989;
    function isDefaultNamespace(const pvarNamespace: OleVariant): WordBool; dispid -2147416988;
    function ie9_appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416844;
    function ie9_insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147416843;
    function ie9_removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416842;
    function ie9_replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416841;
    function isSameNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416987;
    function compareDocumentPosition(const otherNode: IHTMLDOMNode): Word; dispid -2147416986;
    function isSupported(const feature: WideString; version: OleVariant): WordBool; dispid -2147416835;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    function querySelector(const v: WideString): IHTMLElement; dispid -2147416998;
    function querySelectorAll(const v: WideString): IHTMLDOMChildrenCollection; dispid -2147416997;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property selected: WordBool dispid 1001;
    property value: WideString dispid 1002;
    property defaultSelected: WordBool dispid 1003;
    property index: Integer dispid 1005;
    property text: WideString dispid 1004;
    property form: IHTMLFormElement readonly dispid 1006;
    property label_: WideString dispid 1007;
    property ie9_value: WideString dispid 1008;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLWndOptionElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F598-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLWndOptionElement = dispinterface
    ['{3050F598-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    property prefix: OleVariant dispid -2147416992;
    property localName: OleVariant readonly dispid -2147416994;
    property namespaceURI: OleVariant readonly dispid -2147416993;
    property textContent: OleVariant dispid -2147416985;
    function isEqualNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416991;
    function lookupNamespaceURI(const pvarPrefix: OleVariant): OleVariant; dispid -2147416990;
    function lookupPrefix(const pvarNamespaceURI: OleVariant): OleVariant; dispid -2147416989;
    function isDefaultNamespace(const pvarNamespace: OleVariant): WordBool; dispid -2147416988;
    function ie9_appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416844;
    function ie9_insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147416843;
    function ie9_removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416842;
    function ie9_replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416841;
    function isSameNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416987;
    function compareDocumentPosition(const otherNode: IHTMLDOMNode): Word; dispid -2147416986;
    function isSupported(const feature: WideString; version: OleVariant): WordBool; dispid -2147416835;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    function querySelector(const v: WideString): IHTMLElement; dispid -2147416998;
    function querySelectorAll(const v: WideString): IHTMLDOMChildrenCollection; dispid -2147416997;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property selected: WordBool dispid 1001;
    property value: WideString dispid 1002;
    property defaultSelected: WordBool dispid 1003;
    property index: Integer dispid 1005;
    property text: WideString dispid 1004;
    property form: IHTMLFormElement readonly dispid 1006;
    property label_: WideString dispid 1007;
  end;

// *********************************************************************//
// DispIntf:  HTMLButtonElementEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F617-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLButtonElementEvents2 = dispinterface
    ['{3050F617-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
  end;

// *********************************************************************//
// DispIntf:  HTMLButtonElementEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F2B3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLButtonElementEvents = dispinterface
    ['{3050F2B3-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid -2147418102;
    function onclick: WordBool; dispid -600;
    function ondblclick: WordBool; dispid -601;
    function onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function ondragstart: WordBool; dispid -2147418101;
    function onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function onerrorupdate: WordBool; dispid -2147418099;
    function onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function ondragenter: WordBool; dispid -2147418090;
    function ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function ondrop: WordBool; dispid -2147418087;
    function onbeforecut: WordBool; dispid -2147418083;
    function oncut: WordBool; dispid -2147418086;
    function onbeforecopy: WordBool; dispid -2147418082;
    function oncopy: WordBool; dispid -2147418085;
    function onbeforepaste: WordBool; dispid -2147418081;
    function onpaste: WordBool; dispid -2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
  end;

// *********************************************************************//
// DispIntf:  HTMLInputTextElementEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F618-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLInputTextElementEvents2 = dispinterface
    ['{3050F618-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
    function onchange(const pEvtObj: IHTMLEventObj): WordBool; dispid 1001;
    procedure onselect(const pEvtObj: IHTMLEventObj); dispid 1006;
    procedure onload(const pEvtObj: IHTMLEventObj); dispid 1003;
    procedure onerror(const pEvtObj: IHTMLEventObj); dispid 1002;
    procedure onabort(const pEvtObj: IHTMLEventObj); dispid 1000;
  end;

// *********************************************************************//
// DispIntf:  HTMLOptionButtonElementEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F619-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLOptionButtonElementEvents2 = dispinterface
    ['{3050F619-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
    function onchange(const pEvtObj: IHTMLEventObj): WordBool; dispid 1001;
    procedure onselect(const pEvtObj: IHTMLEventObj); dispid 1006;
    procedure onload(const pEvtObj: IHTMLEventObj); dispid 1003;
    procedure onerror(const pEvtObj: IHTMLEventObj); dispid 1002;
    procedure onabort(const pEvtObj: IHTMLEventObj); dispid 1000;
  end;

// *********************************************************************//
// DispIntf:  HTMLInputFileElementEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F61A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLInputFileElementEvents2 = dispinterface
    ['{3050F61A-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
    function onchange(const pEvtObj: IHTMLEventObj): WordBool; dispid 1001;
    procedure onselect(const pEvtObj: IHTMLEventObj); dispid 1006;
    procedure onload(const pEvtObj: IHTMLEventObj); dispid 1003;
    procedure onerror(const pEvtObj: IHTMLEventObj); dispid 1002;
    procedure onabort(const pEvtObj: IHTMLEventObj); dispid 1000;
  end;

// *********************************************************************//
// DispIntf:  HTMLInputImageEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F61B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLInputImageEvents2 = dispinterface
    ['{3050F61B-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
    procedure onload(const pEvtObj: IHTMLEventObj); dispid 1003;
    procedure onerror(const pEvtObj: IHTMLEventObj); dispid 1002;
    procedure onabort(const pEvtObj: IHTMLEventObj); dispid 1000;
  end;

// *********************************************************************//
// DispIntf:  HTMLInputTextElementEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F2A7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLInputTextElementEvents = dispinterface
    ['{3050F2A7-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid -2147418102;
    function onclick: WordBool; dispid -600;
    function ondblclick: WordBool; dispid -601;
    function onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function ondragstart: WordBool; dispid -2147418101;
    function onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function onerrorupdate: WordBool; dispid -2147418099;
    function onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function ondragenter: WordBool; dispid -2147418090;
    function ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function ondrop: WordBool; dispid -2147418087;
    function onbeforecut: WordBool; dispid -2147418083;
    function oncut: WordBool; dispid -2147418086;
    function onbeforecopy: WordBool; dispid -2147418082;
    function oncopy: WordBool; dispid -2147418085;
    function onbeforepaste: WordBool; dispid -2147418081;
    function onpaste: WordBool; dispid -2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
    function onchange: WordBool; dispid 1001;
    procedure onselect; dispid 1006;
    procedure onload; dispid 1003;
    procedure onerror; dispid 1002;
    procedure onabort; dispid 1000;
  end;

// *********************************************************************//
// DispIntf:  HTMLOptionButtonElementEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F2BD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLOptionButtonElementEvents = dispinterface
    ['{3050F2BD-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid -2147418102;
    function onclick: WordBool; dispid -600;
    function ondblclick: WordBool; dispid -601;
    function onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function ondragstart: WordBool; dispid -2147418101;
    function onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function onerrorupdate: WordBool; dispid -2147418099;
    function onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function ondragenter: WordBool; dispid -2147418090;
    function ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function ondrop: WordBool; dispid -2147418087;
    function onbeforecut: WordBool; dispid -2147418083;
    function oncut: WordBool; dispid -2147418086;
    function onbeforecopy: WordBool; dispid -2147418082;
    function oncopy: WordBool; dispid -2147418085;
    function onbeforepaste: WordBool; dispid -2147418081;
    function onpaste: WordBool; dispid -2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
    function onchange: WordBool; dispid 1001;
    procedure onselect; dispid 1006;
    procedure onload; dispid 1003;
    procedure onerror; dispid 1002;
    procedure onabort; dispid 1000;
  end;

// *********************************************************************//
// DispIntf:  HTMLInputFileElementEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F2AF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLInputFileElementEvents = dispinterface
    ['{3050F2AF-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid -2147418102;
    function onclick: WordBool; dispid -600;
    function ondblclick: WordBool; dispid -601;
    function onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function ondragstart: WordBool; dispid -2147418101;
    function onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function onerrorupdate: WordBool; dispid -2147418099;
    function onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function ondragenter: WordBool; dispid -2147418090;
    function ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function ondrop: WordBool; dispid -2147418087;
    function onbeforecut: WordBool; dispid -2147418083;
    function oncut: WordBool; dispid -2147418086;
    function onbeforecopy: WordBool; dispid -2147418082;
    function oncopy: WordBool; dispid -2147418085;
    function onbeforepaste: WordBool; dispid -2147418081;
    function onpaste: WordBool; dispid -2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
    function onchange: WordBool; dispid 1001;
    procedure onselect; dispid 1006;
    procedure onload; dispid 1003;
    procedure onerror; dispid 1002;
    procedure onabort; dispid 1000;
  end;

// *********************************************************************//
// DispIntf:  HTMLInputImageEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F2C3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLInputImageEvents = dispinterface
    ['{3050F2C3-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid -2147418102;
    function onclick: WordBool; dispid -600;
    function ondblclick: WordBool; dispid -601;
    function onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function ondragstart: WordBool; dispid -2147418101;
    function onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function onerrorupdate: WordBool; dispid -2147418099;
    function onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function ondragenter: WordBool; dispid -2147418090;
    function ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function ondrop: WordBool; dispid -2147418087;
    function onbeforecut: WordBool; dispid -2147418083;
    function oncut: WordBool; dispid -2147418086;
    function onbeforecopy: WordBool; dispid -2147418082;
    function oncopy: WordBool; dispid -2147418085;
    function onbeforepaste: WordBool; dispid -2147418081;
    function onpaste: WordBool; dispid -2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
    procedure onload; dispid 1003;
    procedure onerror; dispid 1002;
    procedure onabort; dispid 1000;
  end;

// *********************************************************************//
// Interface: IHTMLInputElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5D2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputElement = interface(IDispatch)
    ['{3050F5D2-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_type_(const p: WideString); safecall;
    function Get_type_: WideString; safecall;
    procedure Set_value(const p: WideString); safecall;
    function Get_value: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_status(p: WordBool); safecall;
    function Get_status: WordBool; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function Get_disabled: WordBool; safecall;
    function Get_form: IHTMLFormElement; safecall;
    procedure Set_size(p: Integer); safecall;
    function Get_size: Integer; safecall;
    procedure Set_maxLength(p: Integer); safecall;
    function Get_maxLength: Integer; safecall;
    procedure select; safecall;
    procedure Set_onchange(p: OleVariant); safecall;
    function Get_onchange: OleVariant; safecall;
    procedure Set_onselect(p: OleVariant); safecall;
    function Get_onselect: OleVariant; safecall;
    procedure Set_defaultValue(const p: WideString); safecall;
    function Get_defaultValue: WideString; safecall;
    procedure Set_readOnly(p: WordBool); safecall;
    function Get_readOnly: WordBool; safecall;
    function createTextRange: IHTMLTxtRange; safecall;
    procedure Set_indeterminate(p: WordBool); safecall;
    function Get_indeterminate: WordBool; safecall;
    procedure Set_defaultChecked(p: WordBool); safecall;
    function Get_defaultChecked: WordBool; safecall;
    procedure Set_checked(p: WordBool); safecall;
    function Get_checked: WordBool; safecall;
    procedure Set_border(p: OleVariant); safecall;
    function Get_border: OleVariant; safecall;
    procedure Set_vspace(p: Integer); safecall;
    function Get_vspace: Integer; safecall;
    procedure Set_hspace(p: Integer); safecall;
    function Get_hspace: Integer; safecall;
    procedure Set_alt(const p: WideString); safecall;
    function Get_alt: WideString; safecall;
    procedure Set_src(const p: WideString); safecall;
    function Get_src: WideString; safecall;
    procedure Set_lowsrc(const p: WideString); safecall;
    function Get_lowsrc: WideString; safecall;
    procedure Set_vrml(const p: WideString); safecall;
    function Get_vrml: WideString; safecall;
    procedure Set_dynsrc(const p: WideString); safecall;
    function Get_dynsrc: WideString; safecall;
    function Get_readyState: WideString; safecall;
    function Get_complete: WordBool; safecall;
    procedure Set_loop(p: OleVariant); safecall;
    function Get_loop: OleVariant; safecall;
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    procedure Set_onload(p: OleVariant); safecall;
    function Get_onload: OleVariant; safecall;
    procedure Set_onerror(p: OleVariant); safecall;
    function Get_onerror: OleVariant; safecall;
    procedure Set_onabort(p: OleVariant); safecall;
    function Get_onabort: OleVariant; safecall;
    procedure Set_width(p: Integer); safecall;
    function Get_width: Integer; safecall;
    procedure Set_height(p: Integer); safecall;
    function Get_height: Integer; safecall;
    procedure Set_start(const p: WideString); safecall;
    function Get_start: WideString; safecall;
    property type_: WideString read Get_type_ write Set_type_;
    property value: WideString read Get_value write Set_value;
    property name: WideString read Get_name write Set_name;
    property status: WordBool read Get_status write Set_status;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property form: IHTMLFormElement read Get_form;
    property size: Integer read Get_size write Set_size;
    property maxLength: Integer read Get_maxLength write Set_maxLength;
    property onchange: OleVariant read Get_onchange write Set_onchange;
    property onselect: OleVariant read Get_onselect write Set_onselect;
    property defaultValue: WideString read Get_defaultValue write Set_defaultValue;
    property readOnly: WordBool read Get_readOnly write Set_readOnly;
    property indeterminate: WordBool read Get_indeterminate write Set_indeterminate;
    property defaultChecked: WordBool read Get_defaultChecked write Set_defaultChecked;
    property checked: WordBool read Get_checked write Set_checked;
    property border: OleVariant read Get_border write Set_border;
    property vspace: Integer read Get_vspace write Set_vspace;
    property hspace: Integer read Get_hspace write Set_hspace;
    property alt: WideString read Get_alt write Set_alt;
    property src: WideString read Get_src write Set_src;
    property lowsrc: WideString read Get_lowsrc write Set_lowsrc;
    property vrml: WideString read Get_vrml write Set_vrml;
    property dynsrc: WideString read Get_dynsrc write Set_dynsrc;
    property readyState: WideString read Get_readyState;
    property complete: WordBool read Get_complete;
    property loop: OleVariant read Get_loop write Set_loop;
    property align: WideString read Get_align write Set_align;
    property onload: OleVariant read Get_onload write Set_onload;
    property onerror: OleVariant read Get_onerror write Set_onerror;
    property onabort: OleVariant read Get_onabort write Set_onabort;
    property width: Integer read Get_width write Set_width;
    property height: Integer read Get_height write Set_height;
    property start: WideString read Get_start write Set_start;
  end;

// *********************************************************************//
// DispIntf:  IHTMLInputElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5D2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputElementDisp = dispinterface
    ['{3050F5D2-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString dispid 2000;
    property value: WideString dispid -2147413011;
    property name: WideString dispid -2147418112;
    property status: WordBool dispid 2001;
    property disabled: WordBool dispid -2147418036;
    property form: IHTMLFormElement readonly dispid -2147416108;
    property size: Integer dispid 2002;
    property maxLength: Integer dispid 2003;
    procedure select; dispid 2004;
    property onchange: OleVariant dispid -2147412082;
    property onselect: OleVariant dispid -2147412102;
    property defaultValue: WideString dispid -2147413029;
    property readOnly: WordBool dispid 2005;
    function createTextRange: IHTMLTxtRange; dispid 2006;
    property indeterminate: WordBool dispid 2007;
    property defaultChecked: WordBool dispid 2008;
    property checked: WordBool dispid 2009;
    property border: OleVariant dispid 2012;
    property vspace: Integer dispid 2013;
    property hspace: Integer dispid 2014;
    property alt: WideString dispid 2010;
    property src: WideString dispid 2011;
    property lowsrc: WideString dispid 2015;
    property vrml: WideString dispid 2016;
    property dynsrc: WideString dispid 2017;
    property readyState: WideString readonly dispid -2147412996;
    property complete: WordBool readonly dispid 2018;
    property loop: OleVariant dispid 2019;
    property align: WideString dispid -2147418039;
    property onload: OleVariant dispid -2147412080;
    property onerror: OleVariant dispid -2147412083;
    property onabort: OleVariant dispid -2147412084;
    property width: Integer dispid -2147418107;
    property height: Integer dispid -2147418106;
    property start: WideString dispid 2020;
  end;

// *********************************************************************//
// Interface: IHTMLInputElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F821-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputElement2 = interface(IDispatch)
    ['{3050F821-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_accept(const p: WideString); safecall;
    function Get_accept: WideString; safecall;
    procedure Set_useMap(const p: WideString); safecall;
    function Get_useMap: WideString; safecall;
    property accept: WideString read Get_accept write Set_accept;
    property useMap: WideString read Get_useMap write Set_useMap;
  end;

// *********************************************************************//
// DispIntf:  IHTMLInputElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F821-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputElement2Disp = dispinterface
    ['{3050F821-98B5-11CF-BB82-00AA00BDCE0B}']
    property accept: WideString dispid 2022;
    property useMap: WideString dispid 2023;
  end;

// *********************************************************************//
// Interface: IHTMLInputElement3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510435-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputElement3 = interface(IDispatch)
    ['{30510435-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_src(const p: WideString); safecall;
    function Get_src: WideString; safecall;
    procedure Set_lowsrc(const p: WideString); safecall;
    function Get_lowsrc: WideString; safecall;
    procedure Set_vrml(const p: WideString); safecall;
    function Get_vrml: WideString; safecall;
    procedure Set_dynsrc(const p: WideString); safecall;
    function Get_dynsrc: WideString; safecall;
    property src: WideString read Get_src write Set_src;
    property lowsrc: WideString read Get_lowsrc write Set_lowsrc;
    property vrml: WideString read Get_vrml write Set_vrml;
    property dynsrc: WideString read Get_dynsrc write Set_dynsrc;
  end;

// *********************************************************************//
// DispIntf:  IHTMLInputElement3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510435-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputElement3Disp = dispinterface
    ['{30510435-98B5-11CF-BB82-00AA00BDCE0B}']
    property src: WideString dispid 1150;
    property lowsrc: WideString dispid 1151;
    property vrml: WideString dispid 1152;
    property dynsrc: WideString dispid 1153;
  end;

// *********************************************************************//
// Interface: IHTMLInputButtonElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2B2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputButtonElement = interface(IDispatch)
    ['{3050F2B2-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_type_: WideString; safecall;
    procedure Set_value(const p: WideString); safecall;
    function Get_value: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_status(p: OleVariant); safecall;
    function Get_status: OleVariant; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function Get_disabled: WordBool; safecall;
    function Get_form: IHTMLFormElement; safecall;
    function createTextRange: IHTMLTxtRange; safecall;
    property type_: WideString read Get_type_;
    property value: WideString read Get_value write Set_value;
    property name: WideString read Get_name write Set_name;
    property status: OleVariant read Get_status write Set_status;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property form: IHTMLFormElement read Get_form;
  end;

// *********************************************************************//
// DispIntf:  IHTMLInputButtonElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2B2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputButtonElementDisp = dispinterface
    ['{3050F2B2-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString readonly dispid 2000;
    property value: WideString dispid -2147413011;
    property name: WideString dispid -2147418112;
    property status: OleVariant dispid 2021;
    property disabled: WordBool dispid -2147418036;
    property form: IHTMLFormElement readonly dispid -2147416108;
    function createTextRange: IHTMLTxtRange; dispid 2006;
  end;

// *********************************************************************//
// Interface: IHTMLInputHiddenElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2A4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputHiddenElement = interface(IDispatch)
    ['{3050F2A4-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_type_: WideString; safecall;
    procedure Set_value(const p: WideString); safecall;
    function Get_value: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_status(p: OleVariant); safecall;
    function Get_status: OleVariant; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function Get_disabled: WordBool; safecall;
    function Get_form: IHTMLFormElement; safecall;
    function createTextRange: IHTMLTxtRange; safecall;
    property type_: WideString read Get_type_;
    property value: WideString read Get_value write Set_value;
    property name: WideString read Get_name write Set_name;
    property status: OleVariant read Get_status write Set_status;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property form: IHTMLFormElement read Get_form;
  end;

// *********************************************************************//
// DispIntf:  IHTMLInputHiddenElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2A4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputHiddenElementDisp = dispinterface
    ['{3050F2A4-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString readonly dispid 2000;
    property value: WideString dispid -2147413011;
    property name: WideString dispid -2147418112;
    property status: OleVariant dispid 2021;
    property disabled: WordBool dispid -2147418036;
    property form: IHTMLFormElement readonly dispid -2147416108;
    function createTextRange: IHTMLTxtRange; dispid 2006;
  end;

// *********************************************************************//
// Interface: IHTMLInputTextElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2A6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputTextElement = interface(IDispatch)
    ['{3050F2A6-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_type_: WideString; safecall;
    procedure Set_value(const p: WideString); safecall;
    function Get_value: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_status(p: OleVariant); safecall;
    function Get_status: OleVariant; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function Get_disabled: WordBool; safecall;
    function Get_form: IHTMLFormElement; safecall;
    procedure Set_defaultValue(const p: WideString); safecall;
    function Get_defaultValue: WideString; safecall;
    procedure Set_size(p: Integer); safecall;
    function Get_size: Integer; safecall;
    procedure Set_maxLength(p: Integer); safecall;
    function Get_maxLength: Integer; safecall;
    procedure select; safecall;
    procedure Set_onchange(p: OleVariant); safecall;
    function Get_onchange: OleVariant; safecall;
    procedure Set_onselect(p: OleVariant); safecall;
    function Get_onselect: OleVariant; safecall;
    procedure Set_readOnly(p: WordBool); safecall;
    function Get_readOnly: WordBool; safecall;
    function createTextRange: IHTMLTxtRange; safecall;
    property type_: WideString read Get_type_;
    property value: WideString read Get_value write Set_value;
    property name: WideString read Get_name write Set_name;
    property status: OleVariant read Get_status write Set_status;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property form: IHTMLFormElement read Get_form;
    property defaultValue: WideString read Get_defaultValue write Set_defaultValue;
    property size: Integer read Get_size write Set_size;
    property maxLength: Integer read Get_maxLength write Set_maxLength;
    property onchange: OleVariant read Get_onchange write Set_onchange;
    property onselect: OleVariant read Get_onselect write Set_onselect;
    property readOnly: WordBool read Get_readOnly write Set_readOnly;
  end;

// *********************************************************************//
// DispIntf:  IHTMLInputTextElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2A6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputTextElementDisp = dispinterface
    ['{3050F2A6-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString readonly dispid 2000;
    property value: WideString dispid -2147413011;
    property name: WideString dispid -2147418112;
    property status: OleVariant dispid 2021;
    property disabled: WordBool dispid -2147418036;
    property form: IHTMLFormElement readonly dispid -2147416108;
    property defaultValue: WideString dispid -2147413029;
    property size: Integer dispid 2002;
    property maxLength: Integer dispid 2003;
    procedure select; dispid 2004;
    property onchange: OleVariant dispid -2147412082;
    property onselect: OleVariant dispid -2147412102;
    property readOnly: WordBool dispid 2005;
    function createTextRange: IHTMLTxtRange; dispid 2006;
  end;

// *********************************************************************//
// Interface: IHTMLInputTextElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2D2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputTextElement2 = interface(IDispatch)
    ['{3050F2D2-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_selectionStart(p: Integer); safecall;
    function Get_selectionStart: Integer; safecall;
    procedure Set_selectionEnd(p: Integer); safecall;
    function Get_selectionEnd: Integer; safecall;
    procedure setSelectionRange(start: Integer; end_: Integer); safecall;
    property selectionStart: Integer read Get_selectionStart write Set_selectionStart;
    property selectionEnd: Integer read Get_selectionEnd write Set_selectionEnd;
  end;

// *********************************************************************//
// DispIntf:  IHTMLInputTextElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2D2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputTextElement2Disp = dispinterface
    ['{3050F2D2-98B5-11CF-BB82-00AA00BDCE0B}']
    property selectionStart: Integer dispid 2025;
    property selectionEnd: Integer dispid 2026;
    procedure setSelectionRange(start: Integer; end_: Integer); dispid 2027;
  end;

// *********************************************************************//
// Interface: IHTMLInputFileElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2AD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputFileElement = interface(IDispatch)
    ['{3050F2AD-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_type_: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_status(p: OleVariant); safecall;
    function Get_status: OleVariant; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function Get_disabled: WordBool; safecall;
    function Get_form: IHTMLFormElement; safecall;
    procedure Set_size(p: Integer); safecall;
    function Get_size: Integer; safecall;
    procedure Set_maxLength(p: Integer); safecall;
    function Get_maxLength: Integer; safecall;
    procedure select; safecall;
    procedure Set_onchange(p: OleVariant); safecall;
    function Get_onchange: OleVariant; safecall;
    procedure Set_onselect(p: OleVariant); safecall;
    function Get_onselect: OleVariant; safecall;
    procedure Set_value(const p: WideString); safecall;
    function Get_value: WideString; safecall;
    property type_: WideString read Get_type_;
    property name: WideString read Get_name write Set_name;
    property status: OleVariant read Get_status write Set_status;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property form: IHTMLFormElement read Get_form;
    property size: Integer read Get_size write Set_size;
    property maxLength: Integer read Get_maxLength write Set_maxLength;
    property onchange: OleVariant read Get_onchange write Set_onchange;
    property onselect: OleVariant read Get_onselect write Set_onselect;
    property value: WideString read Get_value write Set_value;
  end;

// *********************************************************************//
// DispIntf:  IHTMLInputFileElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2AD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputFileElementDisp = dispinterface
    ['{3050F2AD-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString readonly dispid 2000;
    property name: WideString dispid -2147418112;
    property status: OleVariant dispid 2021;
    property disabled: WordBool dispid -2147418036;
    property form: IHTMLFormElement readonly dispid -2147416108;
    property size: Integer dispid 2002;
    property maxLength: Integer dispid 2003;
    procedure select; dispid 2004;
    property onchange: OleVariant dispid -2147412082;
    property onselect: OleVariant dispid -2147412102;
    property value: WideString dispid -2147413011;
  end;

// *********************************************************************//
// Interface: IHTMLOptionButtonElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2BC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOptionButtonElement = interface(IDispatch)
    ['{3050F2BC-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_value(const p: WideString); safecall;
    function Get_value: WideString; safecall;
    function Get_type_: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_checked(p: WordBool); safecall;
    function Get_checked: WordBool; safecall;
    procedure Set_defaultChecked(p: WordBool); safecall;
    function Get_defaultChecked: WordBool; safecall;
    procedure Set_onchange(p: OleVariant); safecall;
    function Get_onchange: OleVariant; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function Get_disabled: WordBool; safecall;
    procedure Set_status(p: WordBool); safecall;
    function Get_status: WordBool; safecall;
    procedure Set_indeterminate(p: WordBool); safecall;
    function Get_indeterminate: WordBool; safecall;
    function Get_form: IHTMLFormElement; safecall;
    property value: WideString read Get_value write Set_value;
    property type_: WideString read Get_type_;
    property name: WideString read Get_name write Set_name;
    property checked: WordBool read Get_checked write Set_checked;
    property defaultChecked: WordBool read Get_defaultChecked write Set_defaultChecked;
    property onchange: OleVariant read Get_onchange write Set_onchange;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property status: WordBool read Get_status write Set_status;
    property indeterminate: WordBool read Get_indeterminate write Set_indeterminate;
    property form: IHTMLFormElement read Get_form;
  end;

// *********************************************************************//
// DispIntf:  IHTMLOptionButtonElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2BC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOptionButtonElementDisp = dispinterface
    ['{3050F2BC-98B5-11CF-BB82-00AA00BDCE0B}']
    property value: WideString dispid -2147413011;
    property type_: WideString readonly dispid 2000;
    property name: WideString dispid -2147418112;
    property checked: WordBool dispid 2009;
    property defaultChecked: WordBool dispid 2008;
    property onchange: OleVariant dispid -2147412082;
    property disabled: WordBool dispid -2147418036;
    property status: WordBool dispid 2001;
    property indeterminate: WordBool dispid 2007;
    property form: IHTMLFormElement readonly dispid -2147416108;
  end;

// *********************************************************************//
// Interface: IHTMLInputImage
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2C2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputImage = interface(IDispatch)
    ['{3050F2C2-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_type_: WideString; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function Get_disabled: WordBool; safecall;
    procedure Set_border(p: OleVariant); safecall;
    function Get_border: OleVariant; safecall;
    procedure Set_vspace(p: Integer); safecall;
    function Get_vspace: Integer; safecall;
    procedure Set_hspace(p: Integer); safecall;
    function Get_hspace: Integer; safecall;
    procedure Set_alt(const p: WideString); safecall;
    function Get_alt: WideString; safecall;
    procedure Set_src(const p: WideString); safecall;
    function Get_src: WideString; safecall;
    procedure Set_lowsrc(const p: WideString); safecall;
    function Get_lowsrc: WideString; safecall;
    procedure Set_vrml(const p: WideString); safecall;
    function Get_vrml: WideString; safecall;
    procedure Set_dynsrc(const p: WideString); safecall;
    function Get_dynsrc: WideString; safecall;
    function Get_readyState: WideString; safecall;
    function Get_complete: WordBool; safecall;
    procedure Set_loop(p: OleVariant); safecall;
    function Get_loop: OleVariant; safecall;
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    procedure Set_onload(p: OleVariant); safecall;
    function Get_onload: OleVariant; safecall;
    procedure Set_onerror(p: OleVariant); safecall;
    function Get_onerror: OleVariant; safecall;
    procedure Set_onabort(p: OleVariant); safecall;
    function Get_onabort: OleVariant; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_width(p: Integer); safecall;
    function Get_width: Integer; safecall;
    procedure Set_height(p: Integer); safecall;
    function Get_height: Integer; safecall;
    procedure Set_start(const p: WideString); safecall;
    function Get_start: WideString; safecall;
    property type_: WideString read Get_type_;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property border: OleVariant read Get_border write Set_border;
    property vspace: Integer read Get_vspace write Set_vspace;
    property hspace: Integer read Get_hspace write Set_hspace;
    property alt: WideString read Get_alt write Set_alt;
    property src: WideString read Get_src write Set_src;
    property lowsrc: WideString read Get_lowsrc write Set_lowsrc;
    property vrml: WideString read Get_vrml write Set_vrml;
    property dynsrc: WideString read Get_dynsrc write Set_dynsrc;
    property readyState: WideString read Get_readyState;
    property complete: WordBool read Get_complete;
    property loop: OleVariant read Get_loop write Set_loop;
    property align: WideString read Get_align write Set_align;
    property onload: OleVariant read Get_onload write Set_onload;
    property onerror: OleVariant read Get_onerror write Set_onerror;
    property onabort: OleVariant read Get_onabort write Set_onabort;
    property name: WideString read Get_name write Set_name;
    property width: Integer read Get_width write Set_width;
    property height: Integer read Get_height write Set_height;
    property start: WideString read Get_start write Set_start;
  end;

// *********************************************************************//
// DispIntf:  IHTMLInputImageDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2C2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputImageDisp = dispinterface
    ['{3050F2C2-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString readonly dispid 2000;
    property disabled: WordBool dispid -2147418036;
    property border: OleVariant dispid 2012;
    property vspace: Integer dispid 2013;
    property hspace: Integer dispid 2014;
    property alt: WideString dispid 2010;
    property src: WideString dispid 2011;
    property lowsrc: WideString dispid 2015;
    property vrml: WideString dispid 2016;
    property dynsrc: WideString dispid 2017;
    property readyState: WideString readonly dispid -2147412996;
    property complete: WordBool readonly dispid 2018;
    property loop: OleVariant dispid 2019;
    property align: WideString dispid -2147418039;
    property onload: OleVariant dispid -2147412080;
    property onerror: OleVariant dispid -2147412083;
    property onabort: OleVariant dispid -2147412084;
    property name: WideString dispid -2147418112;
    property width: Integer dispid -2147418107;
    property height: Integer dispid -2147418106;
    property start: WideString dispid 2020;
  end;

// *********************************************************************//
// Interface: IHTMLInputRangeElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2D4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputRangeElement = interface(IDispatch)
    ['{3050F2D4-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_disabled(p: WordBool); safecall;
    function Get_disabled: WordBool; safecall;
    function Get_type_: WideString; safecall;
    procedure Set_alt(const p: WideString); safecall;
    function Get_alt: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_value(const p: WideString); safecall;
    function Get_value: WideString; safecall;
    procedure Set_min(const p: WideString); safecall;
    function Get_min: WideString; safecall;
    procedure Set_max(const p: WideString); safecall;
    function Get_max: WideString; safecall;
    procedure Set_step(const p: WideString); safecall;
    function Get_step: WideString; safecall;
    procedure Set_valueAsNumber(p: Double); safecall;
    function Get_valueAsNumber: Double; safecall;
    procedure stepUp(n: Integer); safecall;
    procedure stepDown(n: Integer); safecall;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property type_: WideString read Get_type_;
    property alt: WideString read Get_alt write Set_alt;
    property name: WideString read Get_name write Set_name;
    property value: WideString read Get_value write Set_value;
    property min: WideString read Get_min write Set_min;
    property max: WideString read Get_max write Set_max;
    property step: WideString read Get_step write Set_step;
    property valueAsNumber: Double read Get_valueAsNumber write Set_valueAsNumber;
  end;

// *********************************************************************//
// DispIntf:  IHTMLInputRangeElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2D4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLInputRangeElementDisp = dispinterface
    ['{3050F2D4-98B5-11CF-BB82-00AA00BDCE0B}']
    property disabled: WordBool dispid -2147418036;
    property type_: WideString readonly dispid 2000;
    property alt: WideString dispid 2010;
    property name: WideString dispid -2147418112;
    property value: WideString dispid -2147413011;
    property min: WideString dispid 2028;
    property max: WideString dispid 2029;
    property step: WideString dispid 2030;
    property valueAsNumber: Double dispid 2031;
    procedure stepUp(n: Integer); dispid 2033;
    procedure stepDown(n: Integer); dispid 2032;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLInputElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F57D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLInputElement = dispinterface
    ['{3050F57D-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    property prefix: OleVariant dispid -2147416992;
    property localName: OleVariant readonly dispid -2147416994;
    property namespaceURI: OleVariant readonly dispid -2147416993;
    property textContent: OleVariant dispid -2147416985;
    function isEqualNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416991;
    function lookupNamespaceURI(const pvarPrefix: OleVariant): OleVariant; dispid -2147416990;
    function lookupPrefix(const pvarNamespaceURI: OleVariant): OleVariant; dispid -2147416989;
    function isDefaultNamespace(const pvarNamespace: OleVariant): WordBool; dispid -2147416988;
    function ie9_appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416844;
    function ie9_insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147416843;
    function ie9_removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416842;
    function ie9_replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416841;
    function isSameNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416987;
    function compareDocumentPosition(const otherNode: IHTMLDOMNode): Word; dispid -2147416986;
    function isSupported(const feature: WideString; version: OleVariant): WordBool; dispid -2147416835;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    function querySelector(const v: WideString): IHTMLElement; dispid -2147416998;
    function querySelectorAll(const v: WideString): IHTMLDOMChildrenCollection; dispid -2147416997;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property type_: WideString dispid 2000;
    property value: WideString dispid -2147413011;
    property name: WideString dispid -2147418112;
    property status: WordBool dispid 2001;
    property form: IHTMLFormElement readonly dispid -2147416108;
    property size: Integer dispid 2002;
    property maxLength: Integer dispid 2003;
    procedure select; dispid 2004;
    property defaultValue: WideString dispid -2147413029;
    property readOnly: WordBool dispid 2005;
    function createTextRange: IHTMLTxtRange; dispid 2006;
    property indeterminate: WordBool dispid 2007;
    property defaultChecked: WordBool dispid 2008;
    property checked: WordBool dispid 2009;
    property border: OleVariant dispid 2012;
    property vspace: Integer dispid 2013;
    property hspace: Integer dispid 2014;
    property alt: WideString dispid 2010;
    property src: WideString dispid 2011;
    property lowsrc: WideString dispid 2015;
    property vrml: WideString dispid 2016;
    property dynsrc: WideString dispid 2017;
    property complete: WordBool readonly dispid 2018;
    property loop: OleVariant dispid 2019;
    property align: WideString dispid -2147418039;
    property width: Integer dispid -2147418107;
    property height: Integer dispid -2147418106;
    property start: WideString dispid 2020;
    property accept: WideString dispid 2022;
    property useMap: WideString dispid 2023;
    property selectionStart: Integer dispid 2025;
    property selectionEnd: Integer dispid 2026;
    procedure setSelectionRange(start: Integer; end_: Integer); dispid 2027;
    property ie8_src: WideString dispid 1150;
    property ie8_lowsrc: WideString dispid 1151;
    property ie8_vrml: WideString dispid 1152;
    property ie8_dynsrc: WideString dispid 1153;
    property min: WideString dispid 2028;
    property max: WideString dispid 2029;
    property step: WideString dispid 2030;
    property valueAsNumber: Double dispid 2031;
    procedure stepUp(n: Integer); dispid 2033;
    procedure stepDown(n: Integer); dispid 2032;
  end;

// *********************************************************************//
// Interface: IHTMLTextAreaElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2AA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTextAreaElement = interface(IDispatch)
    ['{3050F2AA-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_type_: WideString; safecall;
    procedure Set_value(const p: WideString); safecall;
    function Get_value: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_status(p: OleVariant); safecall;
    function Get_status: OleVariant; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function Get_disabled: WordBool; safecall;
    function Get_form: IHTMLFormElement; safecall;
    procedure Set_defaultValue(const p: WideString); safecall;
    function Get_defaultValue: WideString; safecall;
    procedure select; safecall;
    procedure Set_onchange(p: OleVariant); safecall;
    function Get_onchange: OleVariant; safecall;
    procedure Set_onselect(p: OleVariant); safecall;
    function Get_onselect: OleVariant; safecall;
    procedure Set_readOnly(p: WordBool); safecall;
    function Get_readOnly: WordBool; safecall;
    procedure Set_rows(p: Integer); safecall;
    function Get_rows: Integer; safecall;
    procedure Set_cols(p: Integer); safecall;
    function Get_cols: Integer; safecall;
    procedure Set_wrap(const p: WideString); safecall;
    function Get_wrap: WideString; safecall;
    function createTextRange: IHTMLTxtRange; safecall;
    property type_: WideString read Get_type_;
    property value: WideString read Get_value write Set_value;
    property name: WideString read Get_name write Set_name;
    property status: OleVariant read Get_status write Set_status;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property form: IHTMLFormElement read Get_form;
    property defaultValue: WideString read Get_defaultValue write Set_defaultValue;
    property onchange: OleVariant read Get_onchange write Set_onchange;
    property onselect: OleVariant read Get_onselect write Set_onselect;
    property readOnly: WordBool read Get_readOnly write Set_readOnly;
    property rows: Integer read Get_rows write Set_rows;
    property cols: Integer read Get_cols write Set_cols;
    property wrap: WideString read Get_wrap write Set_wrap;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTextAreaElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2AA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTextAreaElementDisp = dispinterface
    ['{3050F2AA-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString readonly dispid 2000;
    property value: WideString dispid -2147413011;
    property name: WideString dispid -2147418112;
    property status: OleVariant dispid 2001;
    property disabled: WordBool dispid -2147418036;
    property form: IHTMLFormElement readonly dispid -2147416108;
    property defaultValue: WideString dispid -2147413029;
    procedure select; dispid 7005;
    property onchange: OleVariant dispid -2147412082;
    property onselect: OleVariant dispid -2147412102;
    property readOnly: WordBool dispid 7004;
    property rows: Integer dispid 7001;
    property cols: Integer dispid 7002;
    property wrap: WideString dispid 7003;
    function createTextRange: IHTMLTxtRange; dispid 7006;
  end;

// *********************************************************************//
// Interface: IHTMLTextAreaElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2D3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTextAreaElement2 = interface(IDispatch)
    ['{3050F2D3-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_selectionStart(p: Integer); safecall;
    function Get_selectionStart: Integer; safecall;
    procedure Set_selectionEnd(p: Integer); safecall;
    function Get_selectionEnd: Integer; safecall;
    procedure setSelectionRange(start: Integer; end_: Integer); safecall;
    property selectionStart: Integer read Get_selectionStart write Set_selectionStart;
    property selectionEnd: Integer read Get_selectionEnd write Set_selectionEnd;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTextAreaElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2D3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTextAreaElement2Disp = dispinterface
    ['{3050F2D3-98B5-11CF-BB82-00AA00BDCE0B}']
    property selectionStart: Integer dispid 7007;
    property selectionEnd: Integer dispid 7008;
    procedure setSelectionRange(start: Integer; end_: Integer); dispid 7009;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLTextAreaElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F521-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLTextAreaElement = dispinterface
    ['{3050F521-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    property prefix: OleVariant dispid -2147416992;
    property localName: OleVariant readonly dispid -2147416994;
    property namespaceURI: OleVariant readonly dispid -2147416993;
    property textContent: OleVariant dispid -2147416985;
    function isEqualNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416991;
    function lookupNamespaceURI(const pvarPrefix: OleVariant): OleVariant; dispid -2147416990;
    function lookupPrefix(const pvarNamespaceURI: OleVariant): OleVariant; dispid -2147416989;
    function isDefaultNamespace(const pvarNamespace: OleVariant): WordBool; dispid -2147416988;
    function ie9_appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416844;
    function ie9_insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147416843;
    function ie9_removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416842;
    function ie9_replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416841;
    function isSameNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416987;
    function compareDocumentPosition(const otherNode: IHTMLDOMNode): Word; dispid -2147416986;
    function isSupported(const feature: WideString; version: OleVariant): WordBool; dispid -2147416835;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    function querySelector(const v: WideString): IHTMLElement; dispid -2147416998;
    function querySelectorAll(const v: WideString): IHTMLDOMChildrenCollection; dispid -2147416997;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property type_: WideString readonly dispid 2000;
    property value: WideString dispid -2147413011;
    property name: WideString dispid -2147418112;
    property status: OleVariant dispid 2001;
    property form: IHTMLFormElement readonly dispid -2147416108;
    property defaultValue: WideString dispid -2147413029;
    procedure select; dispid 7005;
    property readOnly: WordBool dispid 7004;
    property rows: Integer dispid 7001;
    property cols: Integer dispid 7002;
    property wrap: WideString dispid 7003;
    function createTextRange: IHTMLTxtRange; dispid 7006;
    property selectionStart: Integer dispid 7007;
    property selectionEnd: Integer dispid 7008;
    procedure setSelectionRange(start: Integer; end_: Integer); dispid 7009;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLRichtextElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F54D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLRichtextElement = dispinterface
    ['{3050F54D-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    property prefix: OleVariant dispid -2147416992;
    property localName: OleVariant readonly dispid -2147416994;
    property namespaceURI: OleVariant readonly dispid -2147416993;
    property textContent: OleVariant dispid -2147416985;
    function isEqualNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416991;
    function lookupNamespaceURI(const pvarPrefix: OleVariant): OleVariant; dispid -2147416990;
    function lookupPrefix(const pvarNamespaceURI: OleVariant): OleVariant; dispid -2147416989;
    function isDefaultNamespace(const pvarNamespace: OleVariant): WordBool; dispid -2147416988;
    function ie9_appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416844;
    function ie9_insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147416843;
    function ie9_removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416842;
    function ie9_replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416841;
    function isSameNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416987;
    function compareDocumentPosition(const otherNode: IHTMLDOMNode): Word; dispid -2147416986;
    function isSupported(const feature: WideString; version: OleVariant): WordBool; dispid -2147416835;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    function querySelector(const v: WideString): IHTMLElement; dispid -2147416998;
    function querySelectorAll(const v: WideString): IHTMLDOMChildrenCollection; dispid -2147416997;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property type_: WideString readonly dispid 2000;
    property value: WideString dispid -2147413011;
    property name: WideString dispid -2147418112;
    property status: OleVariant dispid 2001;
    property form: IHTMLFormElement readonly dispid -2147416108;
    property defaultValue: WideString dispid -2147413029;
    procedure select; dispid 7005;
    property readOnly: WordBool dispid 7004;
    property rows: Integer dispid 7001;
    property cols: Integer dispid 7002;
    property wrap: WideString dispid 7003;
    function createTextRange: IHTMLTxtRange; dispid 7006;
  end;

// *********************************************************************//
// Interface: IHTMLButtonElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2BB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLButtonElement = interface(IDispatch)
    ['{3050F2BB-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_type_: WideString; safecall;
    procedure Set_value(const p: WideString); safecall;
    function Get_value: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_status(p: OleVariant); safecall;
    function Get_status: OleVariant; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function Get_disabled: WordBool; safecall;
    function Get_form: IHTMLFormElement; safecall;
    function createTextRange: IHTMLTxtRange; safecall;
    property type_: WideString read Get_type_;
    property value: WideString read Get_value write Set_value;
    property name: WideString read Get_name write Set_name;
    property status: OleVariant read Get_status write Set_status;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property form: IHTMLFormElement read Get_form;
  end;

// *********************************************************************//
// DispIntf:  IHTMLButtonElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2BB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLButtonElementDisp = dispinterface
    ['{3050F2BB-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString readonly dispid 2000;
    property value: WideString dispid -2147413011;
    property name: WideString dispid -2147418112;
    property status: OleVariant dispid 8001;
    property disabled: WordBool dispid -2147418036;
    property form: IHTMLFormElement readonly dispid -2147416108;
    function createTextRange: IHTMLTxtRange; dispid 8002;
  end;

// *********************************************************************//
// Interface: IHTMLButtonElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106F3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLButtonElement2 = interface(IDispatch)
    ['{305106F3-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_type_(const p: WideString); safecall;
    function Get_type_: WideString; safecall;
    property type_: WideString read Get_type_ write Set_type_;
  end;

// *********************************************************************//
// DispIntf:  IHTMLButtonElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106F3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLButtonElement2Disp = dispinterface
    ['{305106F3-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString dispid 8003;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLButtonElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F51F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLButtonElement = dispinterface
    ['{3050F51F-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    property prefix: OleVariant dispid -2147416992;
    property localName: OleVariant readonly dispid -2147416994;
    property namespaceURI: OleVariant readonly dispid -2147416993;
    property textContent: OleVariant dispid -2147416985;
    function isEqualNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416991;
    function lookupNamespaceURI(const pvarPrefix: OleVariant): OleVariant; dispid -2147416990;
    function lookupPrefix(const pvarNamespaceURI: OleVariant): OleVariant; dispid -2147416989;
    function isDefaultNamespace(const pvarNamespace: OleVariant): WordBool; dispid -2147416988;
    function ie9_appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416844;
    function ie9_insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147416843;
    function ie9_removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416842;
    function ie9_replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416841;
    function isSameNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416987;
    function compareDocumentPosition(const otherNode: IHTMLDOMNode): Word; dispid -2147416986;
    function isSupported(const feature: WideString; version: OleVariant): WordBool; dispid -2147416835;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    function querySelector(const v: WideString): IHTMLElement; dispid -2147416998;
    function querySelectorAll(const v: WideString): IHTMLDOMChildrenCollection; dispid -2147416997;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property type_: WideString readonly dispid 2000;
    property value: WideString dispid -2147413011;
    property name: WideString dispid -2147418112;
    property status: OleVariant dispid 8001;
    property form: IHTMLFormElement readonly dispid -2147416108;
    function createTextRange: IHTMLTxtRange; dispid 8002;
    property ie9_type: WideString dispid 8003;
  end;

// *********************************************************************//
// DispIntf:  HTMLMarqueeElementEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F61F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLMarqueeElementEvents2 = dispinterface
    ['{3050F61F-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
    procedure onchange(const pEvtObj: IHTMLEventObj); dispid 1001;
    procedure onselect(const pEvtObj: IHTMLEventObj); dispid 1006;
    procedure onbounce(const pEvtObj: IHTMLEventObj); dispid 1009;
    procedure onfinish(const pEvtObj: IHTMLEventObj); dispid 1010;
    procedure onstart(const pEvtObj: IHTMLEventObj); dispid 1011;
  end;

// *********************************************************************//
// DispIntf:  HTMLMarqueeElementEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F2B8-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLMarqueeElementEvents = dispinterface
    ['{3050F2B8-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid -2147418102;
    function onclick: WordBool; dispid -600;
    function ondblclick: WordBool; dispid -601;
    function onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function ondragstart: WordBool; dispid -2147418101;
    function onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function onerrorupdate: WordBool; dispid -2147418099;
    function onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function ondragenter: WordBool; dispid -2147418090;
    function ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function ondrop: WordBool; dispid -2147418087;
    function onbeforecut: WordBool; dispid -2147418083;
    function oncut: WordBool; dispid -2147418086;
    function onbeforecopy: WordBool; dispid -2147418082;
    function oncopy: WordBool; dispid -2147418085;
    function onbeforepaste: WordBool; dispid -2147418081;
    function onpaste: WordBool; dispid -2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
    procedure onchange; dispid 1001;
    procedure onselect; dispid 1006;
    procedure onbounce; dispid 1009;
    procedure onfinish; dispid 1010;
    procedure onstart; dispid 1011;
  end;

// *********************************************************************//
// Interface: IHTMLMarqueeElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2B5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMarqueeElement = interface(IDispatch)
    ['{3050F2B5-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_bgColor(p: OleVariant); safecall;
    function Get_bgColor: OleVariant; safecall;
    procedure Set_scrollDelay(p: Integer); safecall;
    function Get_scrollDelay: Integer; safecall;
    procedure Set_direction(const p: WideString); safecall;
    function Get_direction: WideString; safecall;
    procedure Set_behavior(const p: WideString); safecall;
    function Get_behavior: WideString; safecall;
    procedure Set_scrollAmount(p: Integer); safecall;
    function Get_scrollAmount: Integer; safecall;
    procedure Set_loop(p: Integer); safecall;
    function Get_loop: Integer; safecall;
    procedure Set_vspace(p: Integer); safecall;
    function Get_vspace: Integer; safecall;
    procedure Set_hspace(p: Integer); safecall;
    function Get_hspace: Integer; safecall;
    procedure Set_onfinish(p: OleVariant); safecall;
    function Get_onfinish: OleVariant; safecall;
    procedure Set_onstart(p: OleVariant); safecall;
    function Get_onstart: OleVariant; safecall;
    procedure Set_onbounce(p: OleVariant); safecall;
    function Get_onbounce: OleVariant; safecall;
    procedure Set_width(p: OleVariant); safecall;
    function Get_width: OleVariant; safecall;
    procedure Set_height(p: OleVariant); safecall;
    function Get_height: OleVariant; safecall;
    procedure Set_trueSpeed(p: WordBool); safecall;
    function Get_trueSpeed: WordBool; safecall;
    procedure start; safecall;
    procedure stop; safecall;
    property bgColor: OleVariant read Get_bgColor write Set_bgColor;
    property scrollDelay: Integer read Get_scrollDelay write Set_scrollDelay;
    property direction: WideString read Get_direction write Set_direction;
    property behavior: WideString read Get_behavior write Set_behavior;
    property scrollAmount: Integer read Get_scrollAmount write Set_scrollAmount;
    property loop: Integer read Get_loop write Set_loop;
    property vspace: Integer read Get_vspace write Set_vspace;
    property hspace: Integer read Get_hspace write Set_hspace;
    property onfinish: OleVariant read Get_onfinish write Set_onfinish;
    property onstart: OleVariant read Get_onstart write Set_onstart;
    property onbounce: OleVariant read Get_onbounce write Set_onbounce;
    property width: OleVariant read Get_width write Set_width;
    property height: OleVariant read Get_height write Set_height;
    property trueSpeed: WordBool read Get_trueSpeed write Set_trueSpeed;
  end;

// *********************************************************************//
// DispIntf:  IHTMLMarqueeElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2B5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMarqueeElementDisp = dispinterface
    ['{3050F2B5-98B5-11CF-BB82-00AA00BDCE0B}']
    property bgColor: OleVariant dispid -501;
    property scrollDelay: Integer dispid 6000;
    property direction: WideString dispid 6001;
    property behavior: WideString dispid 6002;
    property scrollAmount: Integer dispid 6003;
    property loop: Integer dispid 6004;
    property vspace: Integer dispid 6005;
    property hspace: Integer dispid 6006;
    property onfinish: OleVariant dispid -2147412086;
    property onstart: OleVariant dispid -2147412085;
    property onbounce: OleVariant dispid -2147412092;
    property width: OleVariant dispid -2147418107;
    property height: OleVariant dispid -2147418106;
    property trueSpeed: WordBool dispid 6007;
    procedure start; dispid 6010;
    procedure stop; dispid 6011;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLMarqueeElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F527-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLMarqueeElement = dispinterface
    ['{3050F527-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    property prefix: OleVariant dispid -2147416992;
    property localName: OleVariant readonly dispid -2147416994;
    property namespaceURI: OleVariant readonly dispid -2147416993;
    property textContent: OleVariant dispid -2147416985;
    function isEqualNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416991;
    function lookupNamespaceURI(const pvarPrefix: OleVariant): OleVariant; dispid -2147416990;
    function lookupPrefix(const pvarNamespaceURI: OleVariant): OleVariant; dispid -2147416989;
    function isDefaultNamespace(const pvarNamespace: OleVariant): WordBool; dispid -2147416988;
    function ie9_appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416844;
    function ie9_insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147416843;
    function ie9_removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416842;
    function ie9_replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416841;
    function isSameNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416987;
    function compareDocumentPosition(const otherNode: IHTMLDOMNode): Word; dispid -2147416986;
    function isSupported(const feature: WideString; version: OleVariant): WordBool; dispid -2147416835;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    function querySelector(const v: WideString): IHTMLElement; dispid -2147416998;
    function querySelectorAll(const v: WideString): IHTMLDOMChildrenCollection; dispid -2147416997;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property bgColor: OleVariant dispid -501;
    property scrollDelay: Integer dispid 6000;
    property direction: WideString dispid 6001;
    property behavior: WideString dispid 6002;
    property scrollAmount: Integer dispid 6003;
    property loop: Integer dispid 6004;
    property vspace: Integer dispid 6005;
    property hspace: Integer dispid 6006;
    property onfinish: OleVariant dispid -2147412086;
    property onstart: OleVariant dispid -2147412085;
    property onbounce: OleVariant dispid -2147412092;
    property width: OleVariant dispid -2147418107;
    property height: OleVariant dispid -2147418106;
    property trueSpeed: WordBool dispid 6007;
    procedure start; dispid 6010;
    procedure stop; dispid 6011;
  end;

// *********************************************************************//
// Interface: IHTMLHtmlElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F81C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLHtmlElement = interface(IDispatch)
    ['{3050F81C-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_version(const p: WideString); safecall;
    function Get_version: WideString; safecall;
    property version: WideString read Get_version write Set_version;
  end;

// *********************************************************************//
// DispIntf:  IHTMLHtmlElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F81C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLHtmlElementDisp = dispinterface
    ['{3050F81C-98B5-11CF-BB82-00AA00BDCE0B}']
    property version: WideString dispid 1001;
  end;

// *********************************************************************//
// Interface: IHTMLHeadElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F81D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLHeadElement = interface(IDispatch)
    ['{3050F81D-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_profile(const p: WideString); safecall;
    function Get_profile: WideString; safecall;
    property profile: WideString read Get_profile write Set_profile;
  end;

// *********************************************************************//
// DispIntf:  IHTMLHeadElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F81D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLHeadElementDisp = dispinterface
    ['{3050F81D-98B5-11CF-BB82-00AA00BDCE0B}']
    property profile: WideString dispid 1001;
  end;

// *********************************************************************//
// Interface: IHTMLHeadElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051042F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLHeadElement2 = interface(IDispatch)
    ['{3051042F-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_profile(const p: WideString); safecall;
    function Get_profile: WideString; safecall;
    property profile: WideString read Get_profile write Set_profile;
  end;

// *********************************************************************//
// DispIntf:  IHTMLHeadElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051042F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLHeadElement2Disp = dispinterface
    ['{3051042F-98B5-11CF-BB82-00AA00BDCE0B}']
    property profile: WideString dispid 1150;
  end;

// *********************************************************************//
// Interface: IHTMLTitleElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F322-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTitleElement = interface(IDispatch)
    ['{3050F322-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_text(const p: WideString); safecall;
    function Get_text: WideString; safecall;
    property text: WideString read Get_text write Set_text;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTitleElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F322-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTitleElementDisp = dispinterface
    ['{3050F322-98B5-11CF-BB82-00AA00BDCE0B}']
    property text: WideString dispid -2147413011;
  end;

// *********************************************************************//
// Interface: IHTMLMetaElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F203-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMetaElement = interface(IDispatch)
    ['{3050F203-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_httpEquiv(const p: WideString); safecall;
    function Get_httpEquiv: WideString; safecall;
    procedure Set_content(const p: WideString); safecall;
    function Get_content: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_url(const p: WideString); safecall;
    function Get_url: WideString; safecall;
    procedure Set_charset(const p: WideString); safecall;
    function Get_charset: WideString; safecall;
    property httpEquiv: WideString read Get_httpEquiv write Set_httpEquiv;
    property content: WideString read Get_content write Set_content;
    property name: WideString read Get_name write Set_name;
    property url: WideString read Get_url write Set_url;
    property charset: WideString read Get_charset write Set_charset;
  end;

// *********************************************************************//
// DispIntf:  IHTMLMetaElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F203-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMetaElementDisp = dispinterface
    ['{3050F203-98B5-11CF-BB82-00AA00BDCE0B}']
    property httpEquiv: WideString dispid 1001;
    property content: WideString dispid 1002;
    property name: WideString dispid -2147418112;
    property url: WideString dispid 1003;
    property charset: WideString dispid 1013;
  end;

// *********************************************************************//
// Interface: IHTMLMetaElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F81F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMetaElement2 = interface(IDispatch)
    ['{3050F81F-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_scheme(const p: WideString); safecall;
    function Get_scheme: WideString; safecall;
    property scheme: WideString read Get_scheme write Set_scheme;
  end;

// *********************************************************************//
// DispIntf:  IHTMLMetaElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F81F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMetaElement2Disp = dispinterface
    ['{3050F81F-98B5-11CF-BB82-00AA00BDCE0B}']
    property scheme: WideString dispid 1020;
  end;

// *********************************************************************//
// Interface: IHTMLMetaElement3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510495-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMetaElement3 = interface(IDispatch)
    ['{30510495-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_url(const p: WideString); safecall;
    function Get_url: WideString; safecall;
    property url: WideString read Get_url write Set_url;
  end;

// *********************************************************************//
// DispIntf:  IHTMLMetaElement3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510495-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMetaElement3Disp = dispinterface
    ['{30510495-98B5-11CF-BB82-00AA00BDCE0B}']
    property url: WideString dispid 1150;
  end;

// *********************************************************************//
// Interface: IHTMLBaseElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F204-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBaseElement = interface(IDispatch)
    ['{3050F204-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_href(const p: WideString); safecall;
    function Get_href: WideString; safecall;
    procedure Set_target(const p: WideString); safecall;
    function Get_target: WideString; safecall;
    property href: WideString read Get_href write Set_href;
    property target: WideString read Get_target write Set_target;
  end;

// *********************************************************************//
// DispIntf:  IHTMLBaseElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F204-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBaseElementDisp = dispinterface
    ['{3050F204-98B5-11CF-BB82-00AA00BDCE0B}']
    property href: WideString dispid 1003;
    property target: WideString dispid 1004;
  end;

// *********************************************************************//
// Interface: IHTMLBaseElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510420-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBaseElement2 = interface(IDispatch)
    ['{30510420-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_href(const p: WideString); safecall;
    function Get_href: WideString; safecall;
    property href: WideString read Get_href write Set_href;
  end;

// *********************************************************************//
// DispIntf:  IHTMLBaseElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510420-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBaseElement2Disp = dispinterface
    ['{30510420-98B5-11CF-BB82-00AA00BDCE0B}']
    property href: WideString dispid 1150;
  end;

// *********************************************************************//
// Interface: IHTMLIsIndexElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F206-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLIsIndexElement = interface(IDispatch)
    ['{3050F206-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_prompt(const p: WideString); safecall;
    function Get_prompt: WideString; safecall;
    procedure Set_action(const p: WideString); safecall;
    function Get_action: WideString; safecall;
    property prompt: WideString read Get_prompt write Set_prompt;
    property action: WideString read Get_action write Set_action;
  end;

// *********************************************************************//
// DispIntf:  IHTMLIsIndexElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F206-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLIsIndexElementDisp = dispinterface
    ['{3050F206-98B5-11CF-BB82-00AA00BDCE0B}']
    property prompt: WideString dispid 1010;
    property action: WideString dispid 1011;
  end;

// *********************************************************************//
// Interface: IHTMLIsIndexElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F82F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLIsIndexElement2 = interface(IDispatch)
    ['{3050F82F-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_form: IHTMLFormElement; safecall;
    property form: IHTMLFormElement read Get_form;
  end;

// *********************************************************************//
// DispIntf:  IHTMLIsIndexElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F82F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLIsIndexElement2Disp = dispinterface
    ['{3050F82F-98B5-11CF-BB82-00AA00BDCE0B}']
    property form: IHTMLFormElement readonly dispid 1012;
  end;

// *********************************************************************//
// Interface: IHTMLNextIdElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F207-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLNextIdElement = interface(IDispatch)
    ['{3050F207-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_n(const p: WideString); safecall;
    function Get_n: WideString; safecall;
    property n: WideString read Get_n write Set_n;
  end;

// *********************************************************************//
// DispIntf:  IHTMLNextIdElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F207-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLNextIdElementDisp = dispinterface
    ['{3050F207-98B5-11CF-BB82-00AA00BDCE0B}']
    property n: WideString dispid 1012;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLHtmlElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F560-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLHtmlElement = dispinterface
    ['{3050F560-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property version: WideString dispid 1001;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLHeadElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F561-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLHeadElement = dispinterface
    ['{3050F561-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property profile: WideString dispid 1001;
    property ie8_profile: WideString dispid 1150;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLTitleElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F516-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLTitleElement = dispinterface
    ['{3050F516-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property text: WideString dispid -2147413011;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLMetaElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F517-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLMetaElement = dispinterface
    ['{3050F517-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property httpEquiv: WideString dispid 1001;
    property content: WideString dispid 1002;
    property name: WideString dispid -2147418112;
    property url: WideString dispid 1003;
    property charset: WideString dispid 1013;
    property scheme: WideString dispid 1020;
    property ie8_url: WideString dispid 1150;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLBaseElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F518-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLBaseElement = dispinterface
    ['{3050F518-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property href: WideString dispid 1003;
    property target: WideString dispid 1004;
    property ie8_href: WideString dispid 1150;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLIsIndexElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F519-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLIsIndexElement = dispinterface
    ['{3050F519-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property prompt: WideString dispid 1010;
    property action: WideString dispid 1011;
    property form: IHTMLFormElement readonly dispid 1012;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLNextIdElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F51A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLNextIdElement = dispinterface
    ['{3050F51A-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property n: WideString dispid 1012;
  end;

// *********************************************************************//
// Interface: IHTMLBaseFontElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F202-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBaseFontElement = interface(IDispatch)
    ['{3050F202-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_color(p: OleVariant); safecall;
    function Get_color: OleVariant; safecall;
    procedure Set_face(const p: WideString); safecall;
    function Get_face: WideString; safecall;
    procedure Set_size(p: Integer); safecall;
    function Get_size: Integer; safecall;
    property color: OleVariant read Get_color write Set_color;
    property face: WideString read Get_face write Set_face;
    property size: Integer read Get_size write Set_size;
  end;

// *********************************************************************//
// DispIntf:  IHTMLBaseFontElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F202-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBaseFontElementDisp = dispinterface
    ['{3050F202-98B5-11CF-BB82-00AA00BDCE0B}']
    property color: OleVariant dispid -2147413110;
    property face: WideString dispid -2147413094;
    property size: Integer dispid -2147413086;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLBaseFontElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F504-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLBaseFontElement = dispinterface
    ['{3050F504-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property color: OleVariant dispid -2147413110;
    property face: WideString dispid -2147413094;
    property size: Integer dispid -2147413086;
  end;

// *********************************************************************//
// Interface: IHTMLUnknownElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F209-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLUnknownElement = interface(IDispatch)
    ['{3050F209-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  IHTMLUnknownElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F209-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLUnknownElementDisp = dispinterface
    ['{3050F209-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  DispHTMLUnknownElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F539-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLUnknownElement = dispinterface
    ['{3050F539-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
  end;

// *********************************************************************//
// Interface: IWebGeolocation
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305107C5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IWebGeolocation = interface(IDispatch)
    ['{305107C5-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure getCurrentPosition(const successCallback: IDispatch; const errorCallback: IDispatch; 
                                 const options: IDispatch); safecall;
    function watchPosition(const successCallback: IDispatch; const errorCallback: IDispatch; 
                           const options: IDispatch): Integer; safecall;
    procedure clearWatch(watchId: Integer); safecall;
  end;

// *********************************************************************//
// DispIntf:  IWebGeolocationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305107C5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IWebGeolocationDisp = dispinterface
    ['{305107C5-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure getCurrentPosition(const successCallback: IDispatch; const errorCallback: IDispatch; 
                                 const options: IDispatch); dispid 1001;
    function watchPosition(const successCallback: IDispatch; const errorCallback: IDispatch; 
                           const options: IDispatch): Integer; dispid 1002;
    procedure clearWatch(watchId: Integer); dispid 1003;
  end;

// *********************************************************************//
// Interface: INavigatorGeolocation
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305107CF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  INavigatorGeolocation = interface(IDispatch)
    ['{305107CF-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_geolocation: IWebGeolocation; safecall;
    property geolocation: IWebGeolocation read Get_geolocation;
  end;

// *********************************************************************//
// DispIntf:  INavigatorGeolocationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305107CF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  INavigatorGeolocationDisp = dispinterface
    ['{305107CF-98B5-11CF-BB82-00AA00BDCE0B}']
    property geolocation: IWebGeolocation readonly dispid 21;
  end;

// *********************************************************************//
// Interface: INavigatorDoNotTrack
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510804-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  INavigatorDoNotTrack = interface(IDispatch)
    ['{30510804-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_msDoNotTrack: WideString; safecall;
    property msDoNotTrack: WideString read Get_msDoNotTrack;
  end;

// *********************************************************************//
// DispIntf:  INavigatorDoNotTrackDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510804-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  INavigatorDoNotTrackDisp = dispinterface
    ['{30510804-98B5-11CF-BB82-00AA00BDCE0B}']
    property msDoNotTrack: WideString readonly dispid 22;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLHistory
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F549-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLHistory = dispinterface
    ['{3050F549-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Smallint readonly dispid 1;
    procedure back(const pvargdistance: OleVariant); dispid 2;
    procedure forward(const pvargdistance: OleVariant); dispid 3;
    procedure go(const pvargdistance: OleVariant); dispid 4;
    property constructor_: IDispatch readonly dispid -2147417603;
  end;

// *********************************************************************//
// DispIntf:  DispCPlugins
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F54A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispCPlugins = dispinterface
    ['{3050F54A-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1;
    procedure refresh(reload: WordBool); dispid 2;
    property constructor_: IDispatch readonly dispid -2147417603;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLNavigator
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F54C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLNavigator = dispinterface
    ['{3050F54C-98B5-11CF-BB82-00AA00BDCE0B}']
    property appCodeName: WideString readonly dispid 1;
    property appName: WideString readonly dispid 2;
    property appVersion: WideString readonly dispid 3;
    property userAgent: WideString readonly dispid 4;
    function javaEnabled: WordBool; dispid 5;
    function taintEnabled: WordBool; dispid 6;
    property mimeTypes: IHTMLMimeTypesCollection readonly dispid 7;
    property plugins: IHTMLPluginsCollection readonly dispid 8;
    property cookieEnabled: WordBool readonly dispid 9;
    property opsProfile: IHTMLOpsProfile readonly dispid 10;
    function toString: WideString; dispid 11;
    property cpuClass: WideString readonly dispid 12;
    property systemLanguage: WideString readonly dispid 13;
    property browserLanguage: WideString readonly dispid 14;
    property userLanguage: WideString readonly dispid 15;
    property platform: WideString readonly dispid 16;
    property appMinorVersion: WideString readonly dispid 17;
    property connectionSpeed: Integer readonly dispid 18;
    property onLine: WordBool readonly dispid 19;
    property userProfile: IHTMLOpsProfile readonly dispid 20;
    property geolocation: IWebGeolocation readonly dispid 21;
    property msDoNotTrack: WideString readonly dispid 22;
    property constructor_: IDispatch readonly dispid -2147417603;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLLocation
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F54E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLLocation = dispinterface
    ['{3050F54E-98B5-11CF-BB82-00AA00BDCE0B}']
    property href: WideString dispid 0;
    property protocol: WideString dispid 1;
    property host: WideString dispid 2;
    property hostname: WideString dispid 3;
    property port: WideString dispid 4;
    property pathname: WideString dispid 5;
    property search: WideString dispid 6;
    property hash: WideString dispid 7;
    procedure reload(flag: WordBool); dispid 8;
    procedure replace(const bstr: WideString); dispid 9;
    procedure Assign_(const bstr: WideString); dispid 10;
    function toString: WideString; dispid 11;
    property constructor_: IDispatch readonly dispid -2147417603;
  end;

// *********************************************************************//
// Interface: IHTMLBookmarkCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4CE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBookmarkCollection = interface(IDispatch)
    ['{3050F4CE-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    function Get__newEnum: IUnknown; safecall;
    function item(index: Integer): OleVariant; safecall;
    property length: Integer read Get_length;
    property _newEnum: IUnknown read Get__newEnum;
  end;

// *********************************************************************//
// DispIntf:  IHTMLBookmarkCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4CE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBookmarkCollectionDisp = dispinterface
    ['{3050F4CE-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1501;
    property _newEnum: IUnknown readonly dispid -4;
    function item(index: Integer): OleVariant; dispid 0;
  end;

// *********************************************************************//
// Interface: IHTMLDataTransfer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4B3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDataTransfer = interface(IDispatch)
    ['{3050F4B3-98B5-11CF-BB82-00AA00BDCE0B}']
    function setData(const format: WideString; const data: OleVariant): WordBool; safecall;
    function getData(const format: WideString): OleVariant; safecall;
    function clearData(const format: WideString): WordBool; safecall;
    procedure Set_dropEffect(const p: WideString); safecall;
    function Get_dropEffect: WideString; safecall;
    procedure Set_effectAllowed(const p: WideString); safecall;
    function Get_effectAllowed: WideString; safecall;
    property dropEffect: WideString read Get_dropEffect write Set_dropEffect;
    property effectAllowed: WideString read Get_effectAllowed write Set_effectAllowed;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDataTransferDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4B3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDataTransferDisp = dispinterface
    ['{3050F4B3-98B5-11CF-BB82-00AA00BDCE0B}']
    function setData(const format: WideString; const data: OleVariant): WordBool; dispid 1001;
    function getData(const format: WideString): OleVariant; dispid 1002;
    function clearData(const format: WideString): WordBool; dispid 1003;
    property dropEffect: WideString dispid 1004;
    property effectAllowed: WideString dispid 1005;
  end;

// *********************************************************************//
// Interface: IHTMLEventObj2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F48B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEventObj2 = interface(IDispatch)
    ['{3050F48B-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); safecall;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; safecall;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; safecall;
    procedure Set_propertyName(const p: WideString); safecall;
    function Get_propertyName: WideString; safecall;
    procedure _Set_bookmarks(const p: IHTMLBookmarkCollection); safecall;
    function Get_bookmarks: IHTMLBookmarkCollection; safecall;
    procedure _Set_recordset(const p: IDispatch); safecall;
    function Get_recordset: IDispatch; safecall;
    procedure Set_dataFld(const p: WideString); safecall;
    function Get_dataFld: WideString; safecall;
    procedure _Set_boundElements(const p: IHTMLElementCollection); safecall;
    function Get_boundElements: IHTMLElementCollection; safecall;
    procedure Set_repeat_(p: WordBool); safecall;
    function Get_repeat_: WordBool; safecall;
    procedure Set_srcUrn(const p: WideString); safecall;
    function Get_srcUrn: WideString; safecall;
    procedure _Set_srcElement(const p: IHTMLElement); safecall;
    function Get_srcElement: IHTMLElement; safecall;
    procedure Set_altKey(p: WordBool); safecall;
    function Get_altKey: WordBool; safecall;
    procedure Set_ctrlKey(p: WordBool); safecall;
    function Get_ctrlKey: WordBool; safecall;
    procedure Set_shiftKey(p: WordBool); safecall;
    function Get_shiftKey: WordBool; safecall;
    procedure _Set_fromElement(const p: IHTMLElement); safecall;
    function Get_fromElement: IHTMLElement; safecall;
    procedure _Set_toElement(const p: IHTMLElement); safecall;
    function Get_toElement: IHTMLElement; safecall;
    procedure Set_button(p: Integer); safecall;
    function Get_button: Integer; safecall;
    procedure Set_type_(const p: WideString); safecall;
    function Get_type_: WideString; safecall;
    procedure Set_qualifier(const p: WideString); safecall;
    function Get_qualifier: WideString; safecall;
    procedure Set_reason(p: Integer); safecall;
    function Get_reason: Integer; safecall;
    procedure Set_x(p: Integer); safecall;
    function Get_x: Integer; safecall;
    procedure Set_y(p: Integer); safecall;
    function Get_y: Integer; safecall;
    procedure Set_clientX(p: Integer); safecall;
    function Get_clientX: Integer; safecall;
    procedure Set_clientY(p: Integer); safecall;
    function Get_clientY: Integer; safecall;
    procedure Set_offsetX(p: Integer); safecall;
    function Get_offsetX: Integer; safecall;
    procedure Set_offsetY(p: Integer); safecall;
    function Get_offsetY: Integer; safecall;
    procedure Set_screenX(p: Integer); safecall;
    function Get_screenX: Integer; safecall;
    procedure Set_screenY(p: Integer); safecall;
    function Get_screenY: Integer; safecall;
    procedure _Set_srcFilter(const p: IDispatch); safecall;
    function Get_srcFilter: IDispatch; safecall;
    function Get_dataTransfer: IHTMLDataTransfer; safecall;
    property propertyName: WideString read Get_propertyName write Set_propertyName;
    property bookmarks: IHTMLBookmarkCollection read Get_bookmarks write _Set_bookmarks;
    property recordset: IDispatch read Get_recordset write _Set_recordset;
    property dataFld: WideString read Get_dataFld write Set_dataFld;
    property boundElements: IHTMLElementCollection read Get_boundElements write _Set_boundElements;
    property repeat_: WordBool read Get_repeat_ write Set_repeat_;
    property srcUrn: WideString read Get_srcUrn write Set_srcUrn;
    property srcElement: IHTMLElement read Get_srcElement write _Set_srcElement;
    property altKey: WordBool read Get_altKey write Set_altKey;
    property ctrlKey: WordBool read Get_ctrlKey write Set_ctrlKey;
    property shiftKey: WordBool read Get_shiftKey write Set_shiftKey;
    property fromElement: IHTMLElement read Get_fromElement write _Set_fromElement;
    property toElement: IHTMLElement read Get_toElement write _Set_toElement;
    property button: Integer read Get_button write Set_button;
    property type_: WideString read Get_type_ write Set_type_;
    property qualifier: WideString read Get_qualifier write Set_qualifier;
    property reason: Integer read Get_reason write Set_reason;
    property x: Integer read Get_x write Set_x;
    property y: Integer read Get_y write Set_y;
    property clientX: Integer read Get_clientX write Set_clientX;
    property clientY: Integer read Get_clientY write Set_clientY;
    property offsetX: Integer read Get_offsetX write Set_offsetX;
    property offsetY: Integer read Get_offsetY write Set_offsetY;
    property screenX: Integer read Get_screenX write Set_screenX;
    property screenY: Integer read Get_screenY write Set_screenY;
    property srcFilter: IDispatch read Get_srcFilter write _Set_srcFilter;
    property dataTransfer: IHTMLDataTransfer read Get_dataTransfer;
  end;

// *********************************************************************//
// DispIntf:  IHTMLEventObj2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F48B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEventObj2Disp = dispinterface
    ['{3050F48B-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property propertyName: WideString dispid 1027;
    property bookmarks: IHTMLBookmarkCollection dispid 1031;
    property recordset: IDispatch dispid 1032;
    property dataFld: WideString dispid 1033;
    property boundElements: IHTMLElementCollection dispid 1034;
    property repeat_: WordBool dispid 1035;
    property srcUrn: WideString dispid 1036;
    property srcElement: IHTMLElement dispid 1001;
    property altKey: WordBool dispid 1002;
    property ctrlKey: WordBool dispid 1003;
    property shiftKey: WordBool dispid 1004;
    property fromElement: IHTMLElement dispid 1009;
    property toElement: IHTMLElement dispid 1010;
    property button: Integer dispid 1012;
    property type_: WideString dispid 1013;
    property qualifier: WideString dispid 1014;
    property reason: Integer dispid 1015;
    property x: Integer dispid 1005;
    property y: Integer dispid 1006;
    property clientX: Integer dispid 1020;
    property clientY: Integer dispid 1021;
    property offsetX: Integer dispid 1022;
    property offsetY: Integer dispid 1023;
    property screenX: Integer dispid 1024;
    property screenY: Integer dispid 1025;
    property srcFilter: IDispatch dispid 1026;
    property dataTransfer: IHTMLDataTransfer readonly dispid 1037;
  end;

// *********************************************************************//
// Interface: IHTMLEventObj3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F680-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEventObj3 = interface(IDispatch)
    ['{3050F680-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_contentOverflow: WordBool; safecall;
    procedure Set_shiftLeft(p: WordBool); safecall;
    function Get_shiftLeft: WordBool; safecall;
    procedure Set_altLeft(p: WordBool); safecall;
    function Get_altLeft: WordBool; safecall;
    procedure Set_ctrlLeft(p: WordBool); safecall;
    function Get_ctrlLeft: WordBool; safecall;
    function Get_imeCompositionChange: LONG_PTR; safecall;
    function Get_imeNotifyCommand: LONG_PTR; safecall;
    function Get_imeNotifyData: LONG_PTR; safecall;
    function Get_imeRequest: LONG_PTR; safecall;
    function Get_imeRequestData: LONG_PTR; safecall;
    function Get_keyboardLayout: LONG_PTR; safecall;
    function Get_behaviorCookie: Integer; safecall;
    function Get_behaviorPart: Integer; safecall;
    function Get_nextPage: WideString; safecall;
    property contentOverflow: WordBool read Get_contentOverflow;
    property shiftLeft: WordBool read Get_shiftLeft write Set_shiftLeft;
    property altLeft: WordBool read Get_altLeft write Set_altLeft;
    property ctrlLeft: WordBool read Get_ctrlLeft write Set_ctrlLeft;
    property imeCompositionChange: LONG_PTR read Get_imeCompositionChange;
    property imeNotifyCommand: LONG_PTR read Get_imeNotifyCommand;
    property imeNotifyData: LONG_PTR read Get_imeNotifyData;
    property imeRequest: LONG_PTR read Get_imeRequest;
    property imeRequestData: LONG_PTR read Get_imeRequestData;
    property keyboardLayout: LONG_PTR read Get_keyboardLayout;
    property behaviorCookie: Integer read Get_behaviorCookie;
    property behaviorPart: Integer read Get_behaviorPart;
    property nextPage: WideString read Get_nextPage;
  end;

// *********************************************************************//
// DispIntf:  IHTMLEventObj3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F680-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEventObj3Disp = dispinterface
    ['{3050F680-98B5-11CF-BB82-00AA00BDCE0B}']
    property contentOverflow: WordBool readonly dispid 1038;
    property shiftLeft: WordBool dispid 1039;
    property altLeft: WordBool dispid 1040;
    property ctrlLeft: WordBool dispid 1041;
    property imeCompositionChange: LONG_PTR readonly dispid 1042;
    property imeNotifyCommand: LONG_PTR readonly dispid 1043;
    property imeNotifyData: LONG_PTR readonly dispid 1044;
    property imeRequest: LONG_PTR readonly dispid 1046;
    property imeRequestData: LONG_PTR readonly dispid 1047;
    property keyboardLayout: LONG_PTR readonly dispid 1045;
    property behaviorCookie: Integer readonly dispid 1048;
    property behaviorPart: Integer readonly dispid 1049;
    property nextPage: WideString readonly dispid 1050;
  end;

// *********************************************************************//
// Interface: IHTMLEventObj4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F814-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEventObj4 = interface(IDispatch)
    ['{3050F814-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_wheelDelta: Integer; safecall;
    property wheelDelta: Integer read Get_wheelDelta;
  end;

// *********************************************************************//
// DispIntf:  IHTMLEventObj4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F814-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEventObj4Disp = dispinterface
    ['{3050F814-98B5-11CF-BB82-00AA00BDCE0B}']
    property wheelDelta: Integer readonly dispid 1051;
  end;

// *********************************************************************//
// Interface: IHTMLEventObj5
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510478-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEventObj5 = interface(IDispatch)
    ['{30510478-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_url(const p: WideString); safecall;
    function Get_url: WideString; safecall;
    procedure Set_data(const p: WideString); safecall;
    function Get_data: WideString; safecall;
    function Get_source: IDispatch; safecall;
    procedure Set_origin(const p: WideString); safecall;
    function Get_origin: WideString; safecall;
    procedure Set_issession(p: WordBool); safecall;
    function Get_issession: WordBool; safecall;
    property url: WideString read Get_url write Set_url;
    property data: WideString read Get_data write Set_data;
    property source: IDispatch read Get_source;
    property origin: WideString read Get_origin write Set_origin;
    property issession: WordBool read Get_issession write Set_issession;
  end;

// *********************************************************************//
// DispIntf:  IHTMLEventObj5Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510478-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEventObj5Disp = dispinterface
    ['{30510478-98B5-11CF-BB82-00AA00BDCE0B}']
    property url: WideString dispid 1052;
    property data: WideString dispid 1054;
    property source: IDispatch readonly dispid 1055;
    property origin: WideString dispid 1053;
    property issession: WordBool dispid 1056;
  end;

// *********************************************************************//
// Interface: IHTMLEventObj6
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510734-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEventObj6 = interface(IDispatch)
    ['{30510734-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_actionURL: WideString; safecall;
    function Get_buttonID: Integer; safecall;
    property actionURL: WideString read Get_actionURL;
    property buttonID: Integer read Get_buttonID;
  end;

// *********************************************************************//
// DispIntf:  IHTMLEventObj6Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510734-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEventObj6Disp = dispinterface
    ['{30510734-98B5-11CF-BB82-00AA00BDCE0B}']
    property actionURL: WideString readonly dispid 1058;
    property buttonID: Integer readonly dispid 1057;
  end;

// *********************************************************************//
// DispIntf:  DispCEventObj
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F558-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispCEventObj = dispinterface
    ['{3050F558-98B5-11CF-BB82-00AA00BDCE0B}']
    property returnValue: OleVariant dispid 1007;
    property cancelBubble: WordBool dispid 1008;
    property keyCode: Integer dispid 1011;
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property propertyName: WideString dispid 1027;
    property bookmarks: IHTMLBookmarkCollection dispid 1031;
    property recordset: IDispatch dispid 1032;
    property dataFld: WideString dispid 1033;
    property boundElements: IHTMLElementCollection dispid 1034;
    property repeat_: WordBool dispid 1035;
    property srcUrn: WideString dispid 1036;
    property srcElement: IHTMLElement dispid 1001;
    property altKey: WordBool dispid 1002;
    property ctrlKey: WordBool dispid 1003;
    property shiftKey: WordBool dispid 1004;
    property fromElement: IHTMLElement dispid 1009;
    property toElement: IHTMLElement dispid 1010;
    property button: Integer dispid 1012;
    property type_: WideString dispid 1013;
    property qualifier: WideString dispid 1014;
    property reason: Integer dispid 1015;
    property x: Integer dispid 1005;
    property y: Integer dispid 1006;
    property clientX: Integer dispid 1020;
    property clientY: Integer dispid 1021;
    property offsetX: Integer dispid 1022;
    property offsetY: Integer dispid 1023;
    property screenX: Integer dispid 1024;
    property screenY: Integer dispid 1025;
    property srcFilter: IDispatch dispid 1026;
    property dataTransfer: IHTMLDataTransfer readonly dispid 1037;
    property contentOverflow: WordBool readonly dispid 1038;
    property shiftLeft: WordBool dispid 1039;
    property altLeft: WordBool dispid 1040;
    property ctrlLeft: WordBool dispid 1041;
    property imeCompositionChange: LONG_PTR readonly dispid 1042;
    property imeNotifyCommand: LONG_PTR readonly dispid 1043;
    property imeNotifyData: LONG_PTR readonly dispid 1044;
    property imeRequest: LONG_PTR readonly dispid 1046;
    property imeRequestData: LONG_PTR readonly dispid 1047;
    property keyboardLayout: LONG_PTR readonly dispid 1045;
    property behaviorCookie: Integer readonly dispid 1048;
    property behaviorPart: Integer readonly dispid 1049;
    property nextPage: WideString readonly dispid 1050;
    property wheelDelta: Integer readonly dispid 1051;
    property url: WideString dispid 1052;
    property data: WideString dispid 1054;
    property source: IDispatch readonly dispid 1055;
    property origin: WideString dispid 1053;
    property issession: WordBool dispid 1056;
    property actionURL: WideString readonly dispid 1058;
    property buttonID: Integer readonly dispid 1057;
    property constructor_: IDispatch readonly dispid -2147417603;
  end;

// *********************************************************************//
// Interface: IHTMLStyleMedia
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051074B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleMedia = interface(IDispatch)
    ['{3051074B-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_type_: WideString; safecall;
    function matchMedium(const mediaQuery: WideString): WordBool; safecall;
    property type_: WideString read Get_type_;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleMediaDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051074B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleMediaDisp = dispinterface
    ['{3051074B-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString readonly dispid 1001;
    function matchMedium(const mediaQuery: WideString): WordBool; dispid 1002;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLStyleMedia
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059009E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLStyleMedia = dispinterface
    ['{3059009E-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString readonly dispid 1001;
    function matchMedium(const mediaQuery: WideString): WordBool; dispid 1002;
  end;

// *********************************************************************//
// DispIntf:  HTMLWindowEvents3
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F5A1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLWindowEvents3 = dispinterface
    ['{3050F5A1-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure onhashchange(const pEvtObj: IHTMLEventObj); dispid 1066;
    procedure onmessage(const pEvtObj: IHTMLEventObj); dispid 1067;
  end;

// *********************************************************************//
// DispIntf:  HTMLWindowEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F625-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLWindowEvents2 = dispinterface
    ['{3050F625-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure onload(const pEvtObj: IHTMLEventObj); dispid 1003;
    procedure onunload(const pEvtObj: IHTMLEventObj); dispid 1008;
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onerror(const description: WideString; const url: WideString; line: Integer); dispid 1002;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onbeforeunload(const pEvtObj: IHTMLEventObj); dispid 1017;
    procedure onbeforeprint(const pEvtObj: IHTMLEventObj); dispid 1024;
    procedure onafterprint(const pEvtObj: IHTMLEventObj); dispid 1025;
  end;

// *********************************************************************//
// DispIntf:  HTMLWindowEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {96A0A4E0-D062-11CF-94B6-00AA0060275C}
// *********************************************************************//
  HTMLWindowEvents = dispinterface
    ['{96A0A4E0-D062-11CF-94B6-00AA0060275C}']
    procedure onload; dispid 1003;
    procedure onunload; dispid 1008;
    function onhelp: WordBool; dispid -2147418102;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onerror(const description: WideString; const url: WideString; line: Integer); dispid 1002;
    procedure onresize; dispid 1016;
    procedure onscroll; dispid 1014;
    procedure onbeforeunload; dispid 1017;
    procedure onbeforeprint; dispid 1024;
    procedure onafterprint; dispid 1025;
  end;

// *********************************************************************//
// Interface: IHTMLWindow3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4AE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLWindow3 = interface(IDispatch)
    ['{3050F4AE-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_screenLeft: Integer; safecall;
    function Get_screenTop: Integer; safecall;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; safecall;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); safecall;
    function setTimeout(const expression: OleVariant; msec: Integer; const language: OleVariant): Integer; safecall;
    function setInterval(const expression: OleVariant; msec: Integer; const language: OleVariant): Integer; safecall;
    procedure print; safecall;
    procedure Set_onbeforeprint(p: OleVariant); safecall;
    function Get_onbeforeprint: OleVariant; safecall;
    procedure Set_onafterprint(p: OleVariant); safecall;
    function Get_onafterprint: OleVariant; safecall;
    function Get_clipboardData: IHTMLDataTransfer; safecall;
    function showModelessDialog(const url: WideString; const varArgIn: OleVariant; 
                                const options: OleVariant): IHTMLWindow2; safecall;
    property screenLeft: Integer read Get_screenLeft;
    property screenTop: Integer read Get_screenTop;
    property onbeforeprint: OleVariant read Get_onbeforeprint write Set_onbeforeprint;
    property onafterprint: OleVariant read Get_onafterprint write Set_onafterprint;
    property clipboardData: IHTMLDataTransfer read Get_clipboardData;
  end;

// *********************************************************************//
// DispIntf:  IHTMLWindow3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4AE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLWindow3Disp = dispinterface
    ['{3050F4AE-98B5-11CF-BB82-00AA00BDCE0B}']
    property screenLeft: Integer readonly dispid 1170;
    property screenTop: Integer readonly dispid 1171;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    function setTimeout(const expression: OleVariant; msec: Integer; const language: OleVariant): Integer; dispid 1103;
    function setInterval(const expression: OleVariant; msec: Integer; const language: OleVariant): Integer; dispid 1162;
    procedure print; dispid 1174;
    property onbeforeprint: OleVariant dispid -2147412046;
    property onafterprint: OleVariant dispid -2147412045;
    property clipboardData: IHTMLDataTransfer readonly dispid 1175;
    function showModelessDialog(const url: WideString; const varArgIn: OleVariant; 
                                const options: OleVariant): IHTMLWindow2; dispid 1176;
  end;

// *********************************************************************//
// Interface: IHTMLFrameBase
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F311-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameBase = interface(IDispatch)
    ['{3050F311-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_src(const p: WideString); safecall;
    function Get_src: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_border(p: OleVariant); safecall;
    function Get_border: OleVariant; safecall;
    procedure Set_frameBorder(const p: WideString); safecall;
    function Get_frameBorder: WideString; safecall;
    procedure Set_frameSpacing(p: OleVariant); safecall;
    function Get_frameSpacing: OleVariant; safecall;
    procedure Set_marginWidth(p: OleVariant); safecall;
    function Get_marginWidth: OleVariant; safecall;
    procedure Set_marginHeight(p: OleVariant); safecall;
    function Get_marginHeight: OleVariant; safecall;
    procedure Set_noResize(p: WordBool); safecall;
    function Get_noResize: WordBool; safecall;
    procedure Set_scrolling(const p: WideString); safecall;
    function Get_scrolling: WideString; safecall;
    property src: WideString read Get_src write Set_src;
    property name: WideString read Get_name write Set_name;
    property border: OleVariant read Get_border write Set_border;
    property frameBorder: WideString read Get_frameBorder write Set_frameBorder;
    property frameSpacing: OleVariant read Get_frameSpacing write Set_frameSpacing;
    property marginWidth: OleVariant read Get_marginWidth write Set_marginWidth;
    property marginHeight: OleVariant read Get_marginHeight write Set_marginHeight;
    property noResize: WordBool read Get_noResize write Set_noResize;
    property scrolling: WideString read Get_scrolling write Set_scrolling;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFrameBaseDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F311-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameBaseDisp = dispinterface
    ['{3050F311-98B5-11CF-BB82-00AA00BDCE0B}']
    property src: WideString dispid -2147415112;
    property name: WideString dispid -2147418112;
    property border: OleVariant dispid -2147415110;
    property frameBorder: WideString dispid -2147415109;
    property frameSpacing: OleVariant dispid -2147415108;
    property marginWidth: OleVariant dispid -2147415107;
    property marginHeight: OleVariant dispid -2147415106;
    property noResize: WordBool dispid -2147415105;
    property scrolling: WideString dispid -2147415104;
  end;

// *********************************************************************//
// Interface: IHTMLStorage
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510474-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStorage = interface(IDispatch)
    ['{30510474-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    function Get_remainingSpace: Integer; safecall;
    function key(lIndex: Integer): WideString; safecall;
    function getItem(const bstrKey: WideString): OleVariant; safecall;
    procedure setItem(const bstrKey: WideString; const bstrValue: WideString); safecall;
    procedure removeItem(const bstrKey: WideString); safecall;
    procedure clear; safecall;
    property length: Integer read Get_length;
    property remainingSpace: Integer read Get_remainingSpace;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStorageDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510474-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStorageDisp = dispinterface
    ['{30510474-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1001;
    property remainingSpace: Integer readonly dispid 1002;
    function key(lIndex: Integer): WideString; dispid 1006;
    function getItem(const bstrKey: WideString): OleVariant; dispid 1003;
    procedure setItem(const bstrKey: WideString; const bstrValue: WideString); dispid 1004;
    procedure removeItem(const bstrKey: WideString); dispid 1005;
    procedure clear; dispid 1007;
  end;

// *********************************************************************//
// Interface: IHTMLPerformance
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051074E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLPerformance = interface(IDispatch)
    ['{3051074E-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_navigation: IHTMLPerformanceNavigation; safecall;
    function Get_timing: IHTMLPerformanceTiming; safecall;
    function toString: WideString; safecall;
    function toJSON: OleVariant; safecall;
    property navigation: IHTMLPerformanceNavigation read Get_navigation;
    property timing: IHTMLPerformanceTiming read Get_timing;
  end;

// *********************************************************************//
// DispIntf:  IHTMLPerformanceDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051074E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLPerformanceDisp = dispinterface
    ['{3051074E-98B5-11CF-BB82-00AA00BDCE0B}']
    property navigation: IHTMLPerformanceNavigation readonly dispid 1000;
    property timing: IHTMLPerformanceTiming readonly dispid 1001;
    function toString: WideString; dispid 1002;
    function toJSON: OleVariant; dispid 1003;
  end;

// *********************************************************************//
// Interface: IHTMLPerformanceNavigation
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510750-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLPerformanceNavigation = interface(IDispatch)
    ['{30510750-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_type_: LongWord; safecall;
    function Get_redirectCount: LongWord; safecall;
    function toString: WideString; safecall;
    function toJSON: OleVariant; safecall;
    property type_: LongWord read Get_type_;
    property redirectCount: LongWord read Get_redirectCount;
  end;

// *********************************************************************//
// DispIntf:  IHTMLPerformanceNavigationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510750-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLPerformanceNavigationDisp = dispinterface
    ['{30510750-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: LongWord readonly dispid 1000;
    property redirectCount: LongWord readonly dispid 1001;
    function toString: WideString; dispid 1002;
    function toJSON: OleVariant; dispid 1003;
  end;

// *********************************************************************//
// Interface: IHTMLPerformanceTiming
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510752-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLPerformanceTiming = interface(IDispatch)
    ['{30510752-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_navigationStart: Largeuint; safecall;
    function Get_unloadEventStart: Largeuint; safecall;
    function Get_unloadEventEnd: Largeuint; safecall;
    function Get_redirectStart: Largeuint; safecall;
    function Get_redirectEnd: Largeuint; safecall;
    function Get_fetchStart: Largeuint; safecall;
    function Get_domainLookupStart: Largeuint; safecall;
    function Get_domainLookupEnd: Largeuint; safecall;
    function Get_connectStart: Largeuint; safecall;
    function Get_connectEnd: Largeuint; safecall;
    function Get_requestStart: Largeuint; safecall;
    function Get_responseStart: Largeuint; safecall;
    function Get_responseEnd: Largeuint; safecall;
    function Get_domLoading: Largeuint; safecall;
    function Get_domInteractive: Largeuint; safecall;
    function Get_domContentLoadedEventStart: Largeuint; safecall;
    function Get_domContentLoadedEventEnd: Largeuint; safecall;
    function Get_domComplete: Largeuint; safecall;
    function Get_loadEventStart: Largeuint; safecall;
    function Get_loadEventEnd: Largeuint; safecall;
    function Get_msFirstPaint: Largeuint; safecall;
    function toString: WideString; safecall;
    function toJSON: OleVariant; safecall;
    property navigationStart: Largeuint read Get_navigationStart;
    property unloadEventStart: Largeuint read Get_unloadEventStart;
    property unloadEventEnd: Largeuint read Get_unloadEventEnd;
    property redirectStart: Largeuint read Get_redirectStart;
    property redirectEnd: Largeuint read Get_redirectEnd;
    property fetchStart: Largeuint read Get_fetchStart;
    property domainLookupStart: Largeuint read Get_domainLookupStart;
    property domainLookupEnd: Largeuint read Get_domainLookupEnd;
    property connectStart: Largeuint read Get_connectStart;
    property connectEnd: Largeuint read Get_connectEnd;
    property requestStart: Largeuint read Get_requestStart;
    property responseStart: Largeuint read Get_responseStart;
    property responseEnd: Largeuint read Get_responseEnd;
    property domLoading: Largeuint read Get_domLoading;
    property domInteractive: Largeuint read Get_domInteractive;
    property domContentLoadedEventStart: Largeuint read Get_domContentLoadedEventStart;
    property domContentLoadedEventEnd: Largeuint read Get_domContentLoadedEventEnd;
    property domComplete: Largeuint read Get_domComplete;
    property loadEventStart: Largeuint read Get_loadEventStart;
    property loadEventEnd: Largeuint read Get_loadEventEnd;
    property msFirstPaint: Largeuint read Get_msFirstPaint;
  end;

// *********************************************************************//
// DispIntf:  IHTMLPerformanceTimingDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510752-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLPerformanceTimingDisp = dispinterface
    ['{30510752-98B5-11CF-BB82-00AA00BDCE0B}']
    property navigationStart: Largeuint readonly dispid 1000;
    property unloadEventStart: Largeuint readonly dispid 1001;
    property unloadEventEnd: Largeuint readonly dispid 1002;
    property redirectStart: Largeuint readonly dispid 1003;
    property redirectEnd: Largeuint readonly dispid 1004;
    property fetchStart: Largeuint readonly dispid 1005;
    property domainLookupStart: Largeuint readonly dispid 1006;
    property domainLookupEnd: Largeuint readonly dispid 1007;
    property connectStart: Largeuint readonly dispid 1008;
    property connectEnd: Largeuint readonly dispid 1009;
    property requestStart: Largeuint readonly dispid 1010;
    property responseStart: Largeuint readonly dispid 1011;
    property responseEnd: Largeuint readonly dispid 1012;
    property domLoading: Largeuint readonly dispid 1013;
    property domInteractive: Largeuint readonly dispid 1014;
    property domContentLoadedEventStart: Largeuint readonly dispid 1015;
    property domContentLoadedEventEnd: Largeuint readonly dispid 1016;
    property domComplete: Largeuint readonly dispid 1017;
    property loadEventStart: Largeuint readonly dispid 1018;
    property loadEventEnd: Largeuint readonly dispid 1019;
    property msFirstPaint: Largeuint readonly dispid 1020;
    function toString: WideString; dispid 1021;
    function toJSON: OleVariant; dispid 1022;
  end;

// *********************************************************************//
// Interface: IHTMLApplicationCache
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510828-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLApplicationCache = interface(IDispatch)
    ['{30510828-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_status: Integer; safecall;
    procedure Set_onchecking(p: OleVariant); safecall;
    function Get_onchecking: OleVariant; safecall;
    procedure Set_onerror(p: OleVariant); safecall;
    function Get_onerror: OleVariant; safecall;
    procedure Set_onnoupdate(p: OleVariant); safecall;
    function Get_onnoupdate: OleVariant; safecall;
    procedure Set_ondownloading(p: OleVariant); safecall;
    function Get_ondownloading: OleVariant; safecall;
    procedure Set_onprogress(p: OleVariant); safecall;
    function Get_onprogress: OleVariant; safecall;
    procedure Set_onupdateready(p: OleVariant); safecall;
    function Get_onupdateready: OleVariant; safecall;
    procedure Set_oncached(p: OleVariant); safecall;
    function Get_oncached: OleVariant; safecall;
    procedure Set_onobsolete(p: OleVariant); safecall;
    function Get_onobsolete: OleVariant; safecall;
    procedure update; safecall;
    procedure swapCache; safecall;
    procedure abort; safecall;
    property status: Integer read Get_status;
    property onchecking: OleVariant read Get_onchecking write Set_onchecking;
    property onerror: OleVariant read Get_onerror write Set_onerror;
    property onnoupdate: OleVariant read Get_onnoupdate write Set_onnoupdate;
    property ondownloading: OleVariant read Get_ondownloading write Set_ondownloading;
    property onprogress: OleVariant read Get_onprogress write Set_onprogress;
    property onupdateready: OleVariant read Get_onupdateready write Set_onupdateready;
    property oncached: OleVariant read Get_oncached write Set_oncached;
    property onobsolete: OleVariant read Get_onobsolete write Set_onobsolete;
  end;

// *********************************************************************//
// DispIntf:  IHTMLApplicationCacheDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510828-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLApplicationCacheDisp = dispinterface
    ['{30510828-98B5-11CF-BB82-00AA00BDCE0B}']
    property status: Integer readonly dispid 1001;
    property onchecking: OleVariant dispid -2147411931;
    property onerror: OleVariant dispid -2147412083;
    property onnoupdate: OleVariant dispid -2147411930;
    property ondownloading: OleVariant dispid -2147411929;
    property onprogress: OleVariant dispid -2147411967;
    property onupdateready: OleVariant dispid -2147411928;
    property oncached: OleVariant dispid -2147411927;
    property onobsolete: OleVariant dispid -2147411926;
    procedure update; dispid 1002;
    procedure swapCache; dispid 1003;
    procedure abort; dispid 1004;
  end;

// *********************************************************************//
// Interface: IHTMLScreen2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F84A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLScreen2 = interface(IDispatch)
    ['{3050F84A-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_logicalXDPI: Integer; safecall;
    function Get_logicalYDPI: Integer; safecall;
    function Get_deviceXDPI: Integer; safecall;
    function Get_deviceYDPI: Integer; safecall;
    property logicalXDPI: Integer read Get_logicalXDPI;
    property logicalYDPI: Integer read Get_logicalYDPI;
    property deviceXDPI: Integer read Get_deviceXDPI;
    property deviceYDPI: Integer read Get_deviceYDPI;
  end;

// *********************************************************************//
// DispIntf:  IHTMLScreen2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F84A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLScreen2Disp = dispinterface
    ['{3050F84A-98B5-11CF-BB82-00AA00BDCE0B}']
    property logicalXDPI: Integer readonly dispid 1009;
    property logicalYDPI: Integer readonly dispid 1010;
    property deviceXDPI: Integer readonly dispid 1011;
    property deviceYDPI: Integer readonly dispid 1012;
  end;

// *********************************************************************//
// Interface: IHTMLScreen3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104A1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLScreen3 = interface(IDispatch)
    ['{305104A1-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_systemXDPI: Integer; safecall;
    function Get_systemYDPI: Integer; safecall;
    property systemXDPI: Integer read Get_systemXDPI;
    property systemYDPI: Integer read Get_systemYDPI;
  end;

// *********************************************************************//
// DispIntf:  IHTMLScreen3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104A1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLScreen3Disp = dispinterface
    ['{305104A1-98B5-11CF-BB82-00AA00BDCE0B}']
    property systemXDPI: Integer readonly dispid 1013;
    property systemYDPI: Integer readonly dispid 1014;
  end;

// *********************************************************************//
// Interface: IHTMLScreen4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051076B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLScreen4 = interface(IDispatch)
    ['{3051076B-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_pixelDepth: Integer; safecall;
    property pixelDepth: Integer read Get_pixelDepth;
  end;

// *********************************************************************//
// DispIntf:  IHTMLScreen4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051076B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLScreen4Disp = dispinterface
    ['{3051076B-98B5-11CF-BB82-00AA00BDCE0B}']
    property pixelDepth: Integer readonly dispid 1015;
  end;

// *********************************************************************//
// Interface: IHTMLWindow4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F6CF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLWindow4 = interface(IDispatch)
    ['{3050F6CF-98B5-11CF-BB82-00AA00BDCE0B}']
    function createPopup(const varArgIn: OleVariant): IDispatch; safecall;
    function Get_frameElement: IHTMLFrameBase; safecall;
    property frameElement: IHTMLFrameBase read Get_frameElement;
  end;

// *********************************************************************//
// DispIntf:  IHTMLWindow4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F6CF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLWindow4Disp = dispinterface
    ['{3050F6CF-98B5-11CF-BB82-00AA00BDCE0B}']
    function createPopup(const varArgIn: OleVariant): IDispatch; dispid 1180;
    property frameElement: IHTMLFrameBase readonly dispid 1181;
  end;

// *********************************************************************//
// Interface: IHTMLWindow5
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051040E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLWindow5 = interface(IDispatch)
    ['{3051040E-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_XMLHttpRequest(p: OleVariant); safecall;
    function Get_XMLHttpRequest: OleVariant; safecall;
    property XMLHttpRequest: OleVariant read Get_XMLHttpRequest write Set_XMLHttpRequest;
  end;

// *********************************************************************//
// DispIntf:  IHTMLWindow5Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051040E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLWindow5Disp = dispinterface
    ['{3051040E-98B5-11CF-BB82-00AA00BDCE0B}']
    property XMLHttpRequest: OleVariant dispid 1190;
  end;

// *********************************************************************//
// Interface: IHTMLWindow6
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510453-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLWindow6 = interface(IDispatch)
    ['{30510453-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_XDomainRequest(p: OleVariant); safecall;
    function Get_XDomainRequest: OleVariant; safecall;
    function Get_sessionStorage: IHTMLStorage; safecall;
    function Get_localStorage: IHTMLStorage; safecall;
    procedure Set_onhashchange(p: OleVariant); safecall;
    function Get_onhashchange: OleVariant; safecall;
    function Get_maxConnectionsPerServer: Integer; safecall;
    procedure postMessage(const msg: WideString; targetOrigin: OleVariant); safecall;
    function toStaticHTML(const bstrHTML: WideString): WideString; safecall;
    procedure Set_onmessage(p: OleVariant); safecall;
    function Get_onmessage: OleVariant; safecall;
    procedure msWriteProfilerMark(const bstrProfilerMarkName: WideString); safecall;
    property XDomainRequest: OleVariant read Get_XDomainRequest write Set_XDomainRequest;
    property sessionStorage: IHTMLStorage read Get_sessionStorage;
    property localStorage: IHTMLStorage read Get_localStorage;
    property onhashchange: OleVariant read Get_onhashchange write Set_onhashchange;
    property maxConnectionsPerServer: Integer read Get_maxConnectionsPerServer;
    property onmessage: OleVariant read Get_onmessage write Set_onmessage;
  end;

// *********************************************************************//
// DispIntf:  IHTMLWindow6Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510453-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLWindow6Disp = dispinterface
    ['{30510453-98B5-11CF-BB82-00AA00BDCE0B}']
    property XDomainRequest: OleVariant dispid 1191;
    property sessionStorage: IHTMLStorage readonly dispid 1192;
    property localStorage: IHTMLStorage readonly dispid 1193;
    property onhashchange: OleVariant dispid -2147412003;
    property maxConnectionsPerServer: Integer readonly dispid 1194;
    procedure postMessage(const msg: WideString; targetOrigin: OleVariant); dispid 1196;
    function toStaticHTML(const bstrHTML: WideString): WideString; dispid 1197;
    property onmessage: OleVariant dispid -2147412002;
    procedure msWriteProfilerMark(const bstrProfilerMarkName: WideString); dispid 1198;
  end;

// *********************************************************************//
// Interface: IHTMLWindow7
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104B7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLWindow7 = interface(IDispatch)
    ['{305104B7-98B5-11CF-BB82-00AA00BDCE0B}']
    function getSelection: IHTMLSelection; safecall;
    function getComputedStyle(const varArgIn: IHTMLDOMNode; const bstrPseudoElt: WideString): IHTMLCSSStyleDeclaration; safecall;
    function Get_styleMedia: IHTMLStyleMedia; safecall;
    procedure Set_performance(p: OleVariant); safecall;
    function Get_performance: OleVariant; safecall;
    function Get_innerWidth: Integer; safecall;
    function Get_innerHeight: Integer; safecall;
    function Get_pageXOffset: Integer; safecall;
    function Get_pageYOffset: Integer; safecall;
    function Get_screenX: Integer; safecall;
    function Get_screenY: Integer; safecall;
    function Get_outerWidth: Integer; safecall;
    function Get_outerHeight: Integer; safecall;
    procedure Set_onabort(p: OleVariant); safecall;
    function Get_onabort: OleVariant; safecall;
    procedure Set_oncanplay(p: OleVariant); safecall;
    function Get_oncanplay: OleVariant; safecall;
    procedure Set_oncanplaythrough(p: OleVariant); safecall;
    function Get_oncanplaythrough: OleVariant; safecall;
    procedure Set_onchange(p: OleVariant); safecall;
    function Get_onchange: OleVariant; safecall;
    procedure Set_onclick(p: OleVariant); safecall;
    function Get_onclick: OleVariant; safecall;
    procedure Set_oncontextmenu(p: OleVariant); safecall;
    function Get_oncontextmenu: OleVariant; safecall;
    procedure Set_ondblclick(p: OleVariant); safecall;
    function Get_ondblclick: OleVariant; safecall;
    procedure Set_ondrag(p: OleVariant); safecall;
    function Get_ondrag: OleVariant; safecall;
    procedure Set_ondragend(p: OleVariant); safecall;
    function Get_ondragend: OleVariant; safecall;
    procedure Set_ondragenter(p: OleVariant); safecall;
    function Get_ondragenter: OleVariant; safecall;
    procedure Set_ondragleave(p: OleVariant); safecall;
    function Get_ondragleave: OleVariant; safecall;
    procedure Set_ondragover(p: OleVariant); safecall;
    function Get_ondragover: OleVariant; safecall;
    procedure Set_ondragstart(p: OleVariant); safecall;
    function Get_ondragstart: OleVariant; safecall;
    procedure Set_ondrop(p: OleVariant); safecall;
    function Get_ondrop: OleVariant; safecall;
    procedure Set_ondurationchange(p: OleVariant); safecall;
    function Get_ondurationchange: OleVariant; safecall;
    procedure Set_onfocusin(p: OleVariant); safecall;
    function Get_onfocusin: OleVariant; safecall;
    procedure Set_onfocusout(p: OleVariant); safecall;
    function Get_onfocusout: OleVariant; safecall;
    procedure Set_oninput(p: OleVariant); safecall;
    function Get_oninput: OleVariant; safecall;
    procedure Set_onemptied(p: OleVariant); safecall;
    function Get_onemptied: OleVariant; safecall;
    procedure Set_onended(p: OleVariant); safecall;
    function Get_onended: OleVariant; safecall;
    procedure Set_onkeydown(p: OleVariant); safecall;
    function Get_onkeydown: OleVariant; safecall;
    procedure Set_onkeypress(p: OleVariant); safecall;
    function Get_onkeypress: OleVariant; safecall;
    procedure Set_onkeyup(p: OleVariant); safecall;
    function Get_onkeyup: OleVariant; safecall;
    procedure Set_onloadeddata(p: OleVariant); safecall;
    function Get_onloadeddata: OleVariant; safecall;
    procedure Set_onloadedmetadata(p: OleVariant); safecall;
    function Get_onloadedmetadata: OleVariant; safecall;
    procedure Set_onloadstart(p: OleVariant); safecall;
    function Get_onloadstart: OleVariant; safecall;
    procedure Set_onmousedown(p: OleVariant); safecall;
    function Get_onmousedown: OleVariant; safecall;
    procedure Set_onmouseenter(p: OleVariant); safecall;
    function Get_onmouseenter: OleVariant; safecall;
    procedure Set_onmouseleave(p: OleVariant); safecall;
    function Get_onmouseleave: OleVariant; safecall;
    procedure Set_onmousemove(p: OleVariant); safecall;
    function Get_onmousemove: OleVariant; safecall;
    procedure Set_onmouseout(p: OleVariant); safecall;
    function Get_onmouseout: OleVariant; safecall;
    procedure Set_onmouseover(p: OleVariant); safecall;
    function Get_onmouseover: OleVariant; safecall;
    procedure Set_onmouseup(p: OleVariant); safecall;
    function Get_onmouseup: OleVariant; safecall;
    procedure Set_onmousewheel(p: OleVariant); safecall;
    function Get_onmousewheel: OleVariant; safecall;
    procedure Set_onoffline(p: OleVariant); safecall;
    function Get_onoffline: OleVariant; safecall;
    procedure Set_ononline(p: OleVariant); safecall;
    function Get_ononline: OleVariant; safecall;
    procedure Set_onprogress(p: OleVariant); safecall;
    function Get_onprogress: OleVariant; safecall;
    procedure Set_onratechange(p: OleVariant); safecall;
    function Get_onratechange: OleVariant; safecall;
    procedure Set_onreadystatechange(p: OleVariant); safecall;
    function Get_onreadystatechange: OleVariant; safecall;
    procedure Set_onreset(p: OleVariant); safecall;
    function Get_onreset: OleVariant; safecall;
    procedure Set_onseeked(p: OleVariant); safecall;
    function Get_onseeked: OleVariant; safecall;
    procedure Set_onseeking(p: OleVariant); safecall;
    function Get_onseeking: OleVariant; safecall;
    procedure Set_onselect(p: OleVariant); safecall;
    function Get_onselect: OleVariant; safecall;
    procedure Set_onstalled(p: OleVariant); safecall;
    function Get_onstalled: OleVariant; safecall;
    procedure Set_onstorage(p: OleVariant); safecall;
    function Get_onstorage: OleVariant; safecall;
    procedure Set_onsubmit(p: OleVariant); safecall;
    function Get_onsubmit: OleVariant; safecall;
    procedure Set_onsuspend(p: OleVariant); safecall;
    function Get_onsuspend: OleVariant; safecall;
    procedure Set_ontimeupdate(p: OleVariant); safecall;
    function Get_ontimeupdate: OleVariant; safecall;
    procedure Set_onpause(p: OleVariant); safecall;
    function Get_onpause: OleVariant; safecall;
    procedure Set_onplay(p: OleVariant); safecall;
    function Get_onplay: OleVariant; safecall;
    procedure Set_onplaying(p: OleVariant); safecall;
    function Get_onplaying: OleVariant; safecall;
    procedure Set_onvolumechange(p: OleVariant); safecall;
    function Get_onvolumechange: OleVariant; safecall;
    procedure Set_onwaiting(p: OleVariant); safecall;
    function Get_onwaiting: OleVariant; safecall;
    property styleMedia: IHTMLStyleMedia read Get_styleMedia;
    property performance: OleVariant read Get_performance write Set_performance;
    property innerWidth: Integer read Get_innerWidth;
    property innerHeight: Integer read Get_innerHeight;
    property pageXOffset: Integer read Get_pageXOffset;
    property pageYOffset: Integer read Get_pageYOffset;
    property screenX: Integer read Get_screenX;
    property screenY: Integer read Get_screenY;
    property outerWidth: Integer read Get_outerWidth;
    property outerHeight: Integer read Get_outerHeight;
    property onabort: OleVariant read Get_onabort write Set_onabort;
    property oncanplay: OleVariant read Get_oncanplay write Set_oncanplay;
    property oncanplaythrough: OleVariant read Get_oncanplaythrough write Set_oncanplaythrough;
    property onchange: OleVariant read Get_onchange write Set_onchange;
    property onclick: OleVariant read Get_onclick write Set_onclick;
    property oncontextmenu: OleVariant read Get_oncontextmenu write Set_oncontextmenu;
    property ondblclick: OleVariant read Get_ondblclick write Set_ondblclick;
    property ondrag: OleVariant read Get_ondrag write Set_ondrag;
    property ondragend: OleVariant read Get_ondragend write Set_ondragend;
    property ondragenter: OleVariant read Get_ondragenter write Set_ondragenter;
    property ondragleave: OleVariant read Get_ondragleave write Set_ondragleave;
    property ondragover: OleVariant read Get_ondragover write Set_ondragover;
    property ondragstart: OleVariant read Get_ondragstart write Set_ondragstart;
    property ondrop: OleVariant read Get_ondrop write Set_ondrop;
    property ondurationchange: OleVariant read Get_ondurationchange write Set_ondurationchange;
    property onfocusin: OleVariant read Get_onfocusin write Set_onfocusin;
    property onfocusout: OleVariant read Get_onfocusout write Set_onfocusout;
    property oninput: OleVariant read Get_oninput write Set_oninput;
    property onemptied: OleVariant read Get_onemptied write Set_onemptied;
    property onended: OleVariant read Get_onended write Set_onended;
    property onkeydown: OleVariant read Get_onkeydown write Set_onkeydown;
    property onkeypress: OleVariant read Get_onkeypress write Set_onkeypress;
    property onkeyup: OleVariant read Get_onkeyup write Set_onkeyup;
    property onloadeddata: OleVariant read Get_onloadeddata write Set_onloadeddata;
    property onloadedmetadata: OleVariant read Get_onloadedmetadata write Set_onloadedmetadata;
    property onloadstart: OleVariant read Get_onloadstart write Set_onloadstart;
    property onmousedown: OleVariant read Get_onmousedown write Set_onmousedown;
    property onmouseenter: OleVariant read Get_onmouseenter write Set_onmouseenter;
    property onmouseleave: OleVariant read Get_onmouseleave write Set_onmouseleave;
    property onmousemove: OleVariant read Get_onmousemove write Set_onmousemove;
    property onmouseout: OleVariant read Get_onmouseout write Set_onmouseout;
    property onmouseover: OleVariant read Get_onmouseover write Set_onmouseover;
    property onmouseup: OleVariant read Get_onmouseup write Set_onmouseup;
    property onmousewheel: OleVariant read Get_onmousewheel write Set_onmousewheel;
    property onoffline: OleVariant read Get_onoffline write Set_onoffline;
    property ononline: OleVariant read Get_ononline write Set_ononline;
    property onprogress: OleVariant read Get_onprogress write Set_onprogress;
    property onratechange: OleVariant read Get_onratechange write Set_onratechange;
    property onreadystatechange: OleVariant read Get_onreadystatechange write Set_onreadystatechange;
    property onreset: OleVariant read Get_onreset write Set_onreset;
    property onseeked: OleVariant read Get_onseeked write Set_onseeked;
    property onseeking: OleVariant read Get_onseeking write Set_onseeking;
    property onselect: OleVariant read Get_onselect write Set_onselect;
    property onstalled: OleVariant read Get_onstalled write Set_onstalled;
    property onstorage: OleVariant read Get_onstorage write Set_onstorage;
    property onsubmit: OleVariant read Get_onsubmit write Set_onsubmit;
    property onsuspend: OleVariant read Get_onsuspend write Set_onsuspend;
    property ontimeupdate: OleVariant read Get_ontimeupdate write Set_ontimeupdate;
    property onpause: OleVariant read Get_onpause write Set_onpause;
    property onplay: OleVariant read Get_onplay write Set_onplay;
    property onplaying: OleVariant read Get_onplaying write Set_onplaying;
    property onvolumechange: OleVariant read Get_onvolumechange write Set_onvolumechange;
    property onwaiting: OleVariant read Get_onwaiting write Set_onwaiting;
  end;

// *********************************************************************//
// DispIntf:  IHTMLWindow7Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104B7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLWindow7Disp = dispinterface
    ['{305104B7-98B5-11CF-BB82-00AA00BDCE0B}']
    function getSelection: IHTMLSelection; dispid 1199;
    function getComputedStyle(const varArgIn: IHTMLDOMNode; const bstrPseudoElt: WideString): IHTMLCSSStyleDeclaration; dispid 1200;
    property styleMedia: IHTMLStyleMedia readonly dispid 1202;
    property performance: OleVariant dispid 1203;
    property innerWidth: Integer readonly dispid 1204;
    property innerHeight: Integer readonly dispid 1205;
    property pageXOffset: Integer readonly dispid 1206;
    property pageYOffset: Integer readonly dispid 1207;
    property screenX: Integer readonly dispid 1208;
    property screenY: Integer readonly dispid 1209;
    property outerWidth: Integer readonly dispid 1210;
    property outerHeight: Integer readonly dispid 1211;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property onclick: OleVariant dispid -2147412104;
    property oncontextmenu: OleVariant dispid -2147412047;
    property ondblclick: OleVariant dispid -2147412103;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragleave: OleVariant dispid -2147412059;
    property ondragover: OleVariant dispid -2147412060;
    property ondragstart: OleVariant dispid -2147412077;
    property ondrop: OleVariant dispid -2147412058;
    property ondurationchange: OleVariant dispid -2147411976;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property oninput: OleVariant dispid -2147411985;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeypress: OleVariant dispid -2147412105;
    property onkeyup: OleVariant dispid -2147412106;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onmousemove: OleVariant dispid -2147412108;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmouseup: OleVariant dispid -2147412109;
    property onmousewheel: OleVariant dispid -2147412036;
    property onoffline: OleVariant dispid -2147412004;
    property ononline: OleVariant dispid -2147412005;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onstorage: OleVariant dispid -2147412012;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
  end;

// *********************************************************************//
// Interface: IHTMLWindow8
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305107AB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLWindow8 = interface(IDispatch)
    ['{305107AB-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_onmspointerdown(p: OleVariant); safecall;
    function Get_onmspointerdown: OleVariant; safecall;
    procedure Set_onmspointermove(p: OleVariant); safecall;
    function Get_onmspointermove: OleVariant; safecall;
    procedure Set_onmspointerup(p: OleVariant); safecall;
    function Get_onmspointerup: OleVariant; safecall;
    procedure Set_onmspointerover(p: OleVariant); safecall;
    function Get_onmspointerover: OleVariant; safecall;
    procedure Set_onmspointerout(p: OleVariant); safecall;
    function Get_onmspointerout: OleVariant; safecall;
    procedure Set_onmspointercancel(p: OleVariant); safecall;
    function Get_onmspointercancel: OleVariant; safecall;
    procedure Set_onmspointerhover(p: OleVariant); safecall;
    function Get_onmspointerhover: OleVariant; safecall;
    procedure Set_onmsgesturestart(p: OleVariant); safecall;
    function Get_onmsgesturestart: OleVariant; safecall;
    procedure Set_onmsgesturechange(p: OleVariant); safecall;
    function Get_onmsgesturechange: OleVariant; safecall;
    procedure Set_onmsgestureend(p: OleVariant); safecall;
    function Get_onmsgestureend: OleVariant; safecall;
    procedure Set_onmsgesturehold(p: OleVariant); safecall;
    function Get_onmsgesturehold: OleVariant; safecall;
    procedure Set_onmsgesturetap(p: OleVariant); safecall;
    function Get_onmsgesturetap: OleVariant; safecall;
    procedure Set_onmsgesturedoubletap(p: OleVariant); safecall;
    function Get_onmsgesturedoubletap: OleVariant; safecall;
    procedure Set_onmsinertiastart(p: OleVariant); safecall;
    function Get_onmsinertiastart: OleVariant; safecall;
    function Get_applicationCache: IHTMLApplicationCache; safecall;
    procedure Set_onpopstate(p: OleVariant); safecall;
    function Get_onpopstate: OleVariant; safecall;
    property onmspointerdown: OleVariant read Get_onmspointerdown write Set_onmspointerdown;
    property onmspointermove: OleVariant read Get_onmspointermove write Set_onmspointermove;
    property onmspointerup: OleVariant read Get_onmspointerup write Set_onmspointerup;
    property onmspointerover: OleVariant read Get_onmspointerover write Set_onmspointerover;
    property onmspointerout: OleVariant read Get_onmspointerout write Set_onmspointerout;
    property onmspointercancel: OleVariant read Get_onmspointercancel write Set_onmspointercancel;
    property onmspointerhover: OleVariant read Get_onmspointerhover write Set_onmspointerhover;
    property onmsgesturestart: OleVariant read Get_onmsgesturestart write Set_onmsgesturestart;
    property onmsgesturechange: OleVariant read Get_onmsgesturechange write Set_onmsgesturechange;
    property onmsgestureend: OleVariant read Get_onmsgestureend write Set_onmsgestureend;
    property onmsgesturehold: OleVariant read Get_onmsgesturehold write Set_onmsgesturehold;
    property onmsgesturetap: OleVariant read Get_onmsgesturetap write Set_onmsgesturetap;
    property onmsgesturedoubletap: OleVariant read Get_onmsgesturedoubletap write Set_onmsgesturedoubletap;
    property onmsinertiastart: OleVariant read Get_onmsinertiastart write Set_onmsinertiastart;
    property applicationCache: IHTMLApplicationCache read Get_applicationCache;
    property onpopstate: OleVariant read Get_onpopstate write Set_onpopstate;
  end;

// *********************************************************************//
// DispIntf:  IHTMLWindow8Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305107AB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLWindow8Disp = dispinterface
    ['{305107AB-98B5-11CF-BB82-00AA00BDCE0B}']
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    property applicationCache: IHTMLApplicationCache readonly dispid 1213;
    property onpopstate: OleVariant dispid -2147411920;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLScreen
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F591-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLScreen = dispinterface
    ['{3050F591-98B5-11CF-BB82-00AA00BDCE0B}']
    property colorDepth: Integer readonly dispid 1001;
    property bufferDepth: Integer dispid 1002;
    property width: Integer readonly dispid 1003;
    property height: Integer readonly dispid 1004;
    property updateInterval: Integer dispid 1005;
    property availHeight: Integer readonly dispid 1006;
    property availWidth: Integer readonly dispid 1007;
    property fontSmoothingEnabled: WordBool readonly dispid 1008;
    property logicalXDPI: Integer readonly dispid 1009;
    property logicalYDPI: Integer readonly dispid 1010;
    property deviceXDPI: Integer readonly dispid 1011;
    property deviceYDPI: Integer readonly dispid 1012;
    property systemXDPI: Integer readonly dispid 1013;
    property systemYDPI: Integer readonly dispid 1014;
    property pixelDepth: Integer readonly dispid 1015;
    property constructor_: IDispatch readonly dispid -2147417603;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLWindow2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F55D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLWindow2 = dispinterface
    ['{3050F55D-98B5-11CF-BB82-00AA00BDCE0B}']
    function item(const pvarIndex: OleVariant): OleVariant; dispid 0;
    property length: Integer readonly dispid 1001;
    property frames: IHTMLFramesCollection2 readonly dispid 1100;
    property defaultStatus: WideString dispid 1101;
    property status: WideString dispid 1102;
    procedure clearTimeout(timerID: Integer); dispid 1104;
    procedure alert(const message: WideString); dispid 1105;
    function confirm(const message: WideString): WordBool; dispid 1110;
    function prompt(const message: WideString; const defstr: WideString): OleVariant; dispid 1111;
    property location: IHTMLLocation readonly dispid 14;
    property history: IOmHistory readonly dispid 2;
    procedure close; dispid 3;
    property opener: OleVariant dispid 4;
    property navigator: IOmNavigator readonly dispid 5;
    property name: WideString dispid 11;
    property parent: IHTMLWindow2 readonly dispid 12;
    function open(const url: WideString; const name: WideString; const features: WideString; 
                  replace: WordBool): IHTMLWindow2; dispid 13;
    property self: IHTMLWindow2 readonly dispid 20;
    property top: IHTMLWindow2 readonly dispid 21;
    property window: IHTMLWindow2 readonly dispid 22;
    procedure navigate(const url: WideString); dispid 25;
    property onfocus: OleVariant dispid -2147412098;
    property onblur: OleVariant dispid -2147412097;
    property onload: OleVariant dispid -2147412080;
    property onbeforeunload: OleVariant dispid -2147412073;
    property onunload: OleVariant dispid -2147412079;
    property onhelp: OleVariant dispid -2147412099;
    property onerror: OleVariant dispid -2147412083;
    property onresize: OleVariant dispid -2147412076;
    property onscroll: OleVariant dispid -2147412081;
    property document: IHTMLDocument2 readonly dispid 1151;
    property event: IHTMLEventObj readonly dispid 1152;
    property _newEnum: IUnknown readonly dispid 1153;
    function showModalDialog(const dialog: WideString; const varArgIn: OleVariant; 
                             const varOptions: OleVariant): OleVariant; dispid 1154;
    procedure showHelp(const helpURL: WideString; helpArg: OleVariant; const features: WideString); dispid 1155;
    property screen: IHTMLScreen readonly dispid 1156;
    procedure focus; dispid 1158;
    property closed: WordBool readonly dispid 23;
    procedure blur; dispid 1159;
    procedure scroll(x: Integer; y: Integer); dispid 1160;
    property clientInformation: IOmNavigator readonly dispid 1161;
    procedure clearInterval(timerID: Integer); dispid 1163;
    property offscreenBuffering: OleVariant dispid 1164;
    function execScript(const code: WideString; const language: WideString): OleVariant; dispid 1165;
    function toString: WideString; dispid 1166;
    procedure scrollBy(x: Integer; y: Integer); dispid 1167;
    procedure scrollTo(x: Integer; y: Integer); dispid 1168;
    procedure moveTo(x: Integer; y: Integer); dispid 6;
    procedure moveBy(x: Integer; y: Integer); dispid 7;
    procedure resizeTo(x: Integer; y: Integer); dispid 9;
    procedure resizeBy(x: Integer; y: Integer); dispid 8;
    property external: IDispatch readonly dispid 1169;
    property screenLeft: Integer readonly dispid 1170;
    property screenTop: Integer readonly dispid 1171;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    function setTimeout(const expression: OleVariant; msec: Integer; const language: OleVariant): Integer; dispid 1103;
    function setInterval(const expression: OleVariant; msec: Integer; const language: OleVariant): Integer; dispid 1162;
    procedure print; dispid 1174;
    property onbeforeprint: OleVariant dispid -2147412046;
    property onafterprint: OleVariant dispid -2147412045;
    property clipboardData: IHTMLDataTransfer readonly dispid 1175;
    function showModelessDialog(const url: WideString; const varArgIn: OleVariant; 
                                const options: OleVariant): IHTMLWindow2; dispid 1176;
    function createPopup(const varArgIn: OleVariant): IDispatch; dispid 1180;
    property frameElement: IHTMLFrameBase readonly dispid 1181;
    property sessionStorage: IHTMLStorage readonly dispid 1192;
    property localStorage: IHTMLStorage readonly dispid 1193;
    property onhashchange: OleVariant dispid -2147412003;
    property maxConnectionsPerServer: Integer readonly dispid 1194;
    procedure postMessage(const msg: WideString; targetOrigin: OleVariant); dispid 1196;
    function toStaticHTML(const bstrHTML: WideString): WideString; dispid 1197;
    property onmessage: OleVariant dispid -2147412002;
    procedure msWriteProfilerMark(const bstrProfilerMarkName: WideString); dispid 1198;
    function getSelection: IHTMLSelection; dispid 1199;
    function getComputedStyle(const varArgIn: IHTMLDOMNode; const bstrPseudoElt: WideString): IHTMLCSSStyleDeclaration; dispid 1200;
    property styleMedia: IHTMLStyleMedia readonly dispid 1202;
    property performance: OleVariant dispid 1203;
    property innerWidth: Integer readonly dispid 1204;
    property innerHeight: Integer readonly dispid 1205;
    property pageXOffset: Integer readonly dispid 1206;
    property pageYOffset: Integer readonly dispid 1207;
    property screenX: Integer readonly dispid 1208;
    property screenY: Integer readonly dispid 1209;
    property outerWidth: Integer readonly dispid 1210;
    property outerHeight: Integer readonly dispid 1211;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property onclick: OleVariant dispid -2147412104;
    property oncontextmenu: OleVariant dispid -2147412047;
    property ondblclick: OleVariant dispid -2147412103;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragleave: OleVariant dispid -2147412059;
    property ondragover: OleVariant dispid -2147412060;
    property ondragstart: OleVariant dispid -2147412077;
    property ondrop: OleVariant dispid -2147412058;
    property ondurationchange: OleVariant dispid -2147411976;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property oninput: OleVariant dispid -2147411985;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeypress: OleVariant dispid -2147412105;
    property onkeyup: OleVariant dispid -2147412106;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onmousemove: OleVariant dispid -2147412108;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmouseup: OleVariant dispid -2147412109;
    property onmousewheel: OleVariant dispid -2147412036;
    property onoffline: OleVariant dispid -2147412004;
    property ononline: OleVariant dispid -2147412005;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onstorage: OleVariant dispid -2147412012;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    property applicationCache: IHTMLApplicationCache readonly dispid 1213;
    property onpopstate: OleVariant dispid -2147411920;
    property constructor_: IDispatch readonly dispid -2147417603;
    procedure addEventListener(const type_: WideString; const listener: IDispatch; 
                               useCapture: WordBool); dispid -2147417602;
    procedure removeEventListener(const type_: WideString; const listener: IDispatch; 
                                  useCapture: WordBool); dispid -2147417601;
    function dispatchEvent(const evt: IDOMEvent): WordBool; dispid -2147417600;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLWindowProxy
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F55E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLWindowProxy = dispinterface
    ['{3050F55E-98B5-11CF-BB82-00AA00BDCE0B}']
    function item(const pvarIndex: OleVariant): OleVariant; dispid 0;
    property length: Integer readonly dispid 1001;
    property frames: IHTMLFramesCollection2 readonly dispid 1100;
    property defaultStatus: WideString dispid 1101;
    property status: WideString dispid 1102;
    procedure clearTimeout(timerID: Integer); dispid 1104;
    procedure alert(const message: WideString); dispid 1105;
    function confirm(const message: WideString): WordBool; dispid 1110;
    function prompt(const message: WideString; const defstr: WideString): OleVariant; dispid 1111;
    property location: IHTMLLocation readonly dispid 14;
    property history: IOmHistory readonly dispid 2;
    procedure close; dispid 3;
    property opener: OleVariant dispid 4;
    property navigator: IOmNavigator readonly dispid 5;
    property name: WideString dispid 11;
    property parent: IHTMLWindow2 readonly dispid 12;
    function open(const url: WideString; const name: WideString; const features: WideString; 
                  replace: WordBool): IHTMLWindow2; dispid 13;
    property self: IHTMLWindow2 readonly dispid 20;
    property top: IHTMLWindow2 readonly dispid 21;
    property window: IHTMLWindow2 readonly dispid 22;
    procedure navigate(const url: WideString); dispid 25;
    property onfocus: OleVariant dispid -2147412098;
    property onblur: OleVariant dispid -2147412097;
    property onload: OleVariant dispid -2147412080;
    property onbeforeunload: OleVariant dispid -2147412073;
    property onunload: OleVariant dispid -2147412079;
    property onhelp: OleVariant dispid -2147412099;
    property onerror: OleVariant dispid -2147412083;
    property onresize: OleVariant dispid -2147412076;
    property onscroll: OleVariant dispid -2147412081;
    property document: IHTMLDocument2 readonly dispid 1151;
    property event: IHTMLEventObj readonly dispid 1152;
    property _newEnum: IUnknown readonly dispid 1153;
    function showModalDialog(const dialog: WideString; const varArgIn: OleVariant; 
                             const varOptions: OleVariant): OleVariant; dispid 1154;
    procedure showHelp(const helpURL: WideString; helpArg: OleVariant; const features: WideString); dispid 1155;
    property screen: IHTMLScreen readonly dispid 1156;
    procedure focus; dispid 1158;
    property closed: WordBool readonly dispid 23;
    procedure blur; dispid 1159;
    procedure scroll(x: Integer; y: Integer); dispid 1160;
    property clientInformation: IOmNavigator readonly dispid 1161;
    procedure clearInterval(timerID: Integer); dispid 1163;
    property offscreenBuffering: OleVariant dispid 1164;
    function execScript(const code: WideString; const language: WideString): OleVariant; dispid 1165;
    function toString: WideString; dispid 1166;
    procedure scrollBy(x: Integer; y: Integer); dispid 1167;
    procedure scrollTo(x: Integer; y: Integer); dispid 1168;
    procedure moveTo(x: Integer; y: Integer); dispid 6;
    procedure moveBy(x: Integer; y: Integer); dispid 7;
    procedure resizeTo(x: Integer; y: Integer); dispid 9;
    procedure resizeBy(x: Integer; y: Integer); dispid 8;
    property external: IDispatch readonly dispid 1169;
    property screenLeft: Integer readonly dispid 1170;
    property screenTop: Integer readonly dispid 1171;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    function setTimeout(const expression: OleVariant; msec: Integer; const language: OleVariant): Integer; dispid 1103;
    function setInterval(const expression: OleVariant; msec: Integer; const language: OleVariant): Integer; dispid 1162;
    procedure print; dispid 1174;
    property onbeforeprint: OleVariant dispid -2147412046;
    property onafterprint: OleVariant dispid -2147412045;
    property clipboardData: IHTMLDataTransfer readonly dispid 1175;
    function showModelessDialog(const url: WideString; const varArgIn: OleVariant; 
                                const options: OleVariant): IHTMLWindow2; dispid 1176;
    function createPopup(const varArgIn: OleVariant): IDispatch; dispid 1180;
    property frameElement: IHTMLFrameBase readonly dispid 1181;
    property sessionStorage: IHTMLStorage readonly dispid 1192;
    property localStorage: IHTMLStorage readonly dispid 1193;
    property onhashchange: OleVariant dispid -2147412003;
    property maxConnectionsPerServer: Integer readonly dispid 1194;
    procedure postMessage(const msg: WideString; targetOrigin: OleVariant); dispid 1196;
    function toStaticHTML(const bstrHTML: WideString): WideString; dispid 1197;
    property onmessage: OleVariant dispid -2147412002;
    procedure msWriteProfilerMark(const bstrProfilerMarkName: WideString); dispid 1198;
    function getSelection: IHTMLSelection; dispid 1199;
    function getComputedStyle(const varArgIn: IHTMLDOMNode; const bstrPseudoElt: WideString): IHTMLCSSStyleDeclaration; dispid 1200;
    property styleMedia: IHTMLStyleMedia readonly dispid 1202;
    property performance: OleVariant dispid 1203;
    property innerWidth: Integer readonly dispid 1204;
    property innerHeight: Integer readonly dispid 1205;
    property pageXOffset: Integer readonly dispid 1206;
    property pageYOffset: Integer readonly dispid 1207;
    property screenX: Integer readonly dispid 1208;
    property screenY: Integer readonly dispid 1209;
    property outerWidth: Integer readonly dispid 1210;
    property outerHeight: Integer readonly dispid 1211;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property onclick: OleVariant dispid -2147412104;
    property oncontextmenu: OleVariant dispid -2147412047;
    property ondblclick: OleVariant dispid -2147412103;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragleave: OleVariant dispid -2147412059;
    property ondragover: OleVariant dispid -2147412060;
    property ondragstart: OleVariant dispid -2147412077;
    property ondrop: OleVariant dispid -2147412058;
    property ondurationchange: OleVariant dispid -2147411976;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property oninput: OleVariant dispid -2147411985;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeypress: OleVariant dispid -2147412105;
    property onkeyup: OleVariant dispid -2147412106;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onmousemove: OleVariant dispid -2147412108;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmouseup: OleVariant dispid -2147412109;
    property onmousewheel: OleVariant dispid -2147412036;
    property onoffline: OleVariant dispid -2147412004;
    property ononline: OleVariant dispid -2147412005;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onstorage: OleVariant dispid -2147412012;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    property applicationCache: IHTMLApplicationCache readonly dispid 1213;
    property onpopstate: OleVariant dispid -2147411920;
    property constructor_: IDispatch readonly dispid -2147417603;
    procedure addEventListener(const type_: WideString; const listener: IDispatch; 
                               useCapture: WordBool); dispid -2147417602;
    procedure removeEventListener(const type_: WideString; const listener: IDispatch; 
                                  useCapture: WordBool); dispid -2147417601;
    function dispatchEvent(const evt: IDOMEvent): WordBool; dispid -2147417600;
  end;

// *********************************************************************//
// Interface: IHTMLDocumentCompatibleInfo
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051041A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDocumentCompatibleInfo = interface(IDispatch)
    ['{3051041A-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_userAgent: WideString; safecall;
    function Get_version: WideString; safecall;
    property userAgent: WideString read Get_userAgent;
    property version: WideString read Get_version;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDocumentCompatibleInfoDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051041A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDocumentCompatibleInfoDisp = dispinterface
    ['{3051041A-98B5-11CF-BB82-00AA00BDCE0B}']
    property userAgent: WideString readonly dispid 1001;
    property version: WideString readonly dispid 1002;
  end;

// *********************************************************************//
// Interface: IHTMLDocumentCompatibleInfoCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510418-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDocumentCompatibleInfoCollection = interface(IDispatch)
    ['{30510418-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    function item(index: Integer): IHTMLDocumentCompatibleInfo; safecall;
    property length: Integer read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDocumentCompatibleInfoCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510418-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDocumentCompatibleInfoCollectionDisp = dispinterface
    ['{30510418-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1001;
    function item(index: Integer): IHTMLDocumentCompatibleInfo; dispid 0;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLDocumentCompatibleInfo
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F53E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLDocumentCompatibleInfo = dispinterface
    ['{3050F53E-98B5-11CF-BB82-00AA00BDCE0B}']
    property constructor_: IDispatch readonly dispid -2147417603;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLDocumentCompatibleInfoCollection
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F53F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLDocumentCompatibleInfoCollection = dispinterface
    ['{3050F53F-98B5-11CF-BB82-00AA00BDCE0B}']
    property constructor_: IDispatch readonly dispid -2147417603;
  end;

// *********************************************************************//
// DispIntf:  HTMLDocumentEvents4
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30510737-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLDocumentEvents4 = dispinterface
    ['{30510737-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure onmsthumbnailclick(const pEvtObj: IHTMLEventObj); dispid -2147411991;
    procedure onmssitemodejumplistitemremoved(const pEvtObj: IHTMLEventObj); dispid -2147411982;
  end;

// *********************************************************************//
// DispIntf:  HTMLDocumentEvents3
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F5A0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLDocumentEvents3 = dispinterface
    ['{3050F5A0-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure onstorage(const pEvtObj: IHTMLEventObj); dispid 1057;
    procedure onstoragecommit(const pEvtObj: IHTMLEventObj); dispid 1058;
  end;

// *********************************************************************//
// DispIntf:  HTMLDocumentEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F613-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLDocumentEvents2 = dispinterface
    ['{3050F613-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    function onstop(const pEvtObj: IHTMLEventObj): WordBool; dispid 1026;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onbeforeeditfocus(const pEvtObj: IHTMLEventObj); dispid 1027;
    procedure onselectionchange(const pEvtObj: IHTMLEventObj); dispid 1037;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
  end;

// *********************************************************************//
// DispIntf:  HTMLDocumentEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F260-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLDocumentEvents = dispinterface
    ['{3050F260-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid -2147418102;
    function onclick: WordBool; dispid -600;
    function ondblclick: WordBool; dispid -601;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    function onkeypress: WordBool; dispid -603;
    procedure onmousedown; dispid -605;
    procedure onmousemove; dispid -606;
    procedure onmouseup; dispid -607;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onreadystatechange; dispid -609;
    function onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    function ondragstart: WordBool; dispid -2147418101;
    function onselectstart: WordBool; dispid -2147418100;
    function onerrorupdate: WordBool; dispid -2147418099;
    function oncontextmenu: WordBool; dispid 1023;
    function onstop: WordBool; dispid 1026;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onpropertychange; dispid -2147418093;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onselectionchange; dispid 1037;
    function oncontrolselect: WordBool; dispid 1036;
    function onmousewheel: WordBool; dispid 1033;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    function onbeforeactivate: WordBool; dispid 1047;
    function onbeforedeactivate: WordBool; dispid 1034;
  end;

// *********************************************************************//
// Interface: ISVGSVGElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104E7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGSVGElement = interface(IDispatch)
    ['{305104E7-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure _Set_x(const p: ISVGAnimatedLength); safecall;
    function Get_x: ISVGAnimatedLength; safecall;
    procedure _Set_y(const p: ISVGAnimatedLength); safecall;
    function Get_y: ISVGAnimatedLength; safecall;
    procedure _Set_width(const p: ISVGAnimatedLength); safecall;
    function Get_width: ISVGAnimatedLength; safecall;
    procedure _Set_height(const p: ISVGAnimatedLength); safecall;
    function Get_height: ISVGAnimatedLength; safecall;
    procedure Set_contentScriptType(const p: WideString); safecall;
    function Get_contentScriptType: WideString; safecall;
    procedure Set_contentStyleType(const p: WideString); safecall;
    function Get_contentStyleType: WideString; safecall;
    procedure _Set_viewport(const p: ISVGRect); safecall;
    function Get_viewport: ISVGRect; safecall;
    procedure Set_pixelUnitToMillimeterX(p: Single); safecall;
    function Get_pixelUnitToMillimeterX: Single; safecall;
    procedure Set_pixelUnitToMillimeterY(p: Single); safecall;
    function Get_pixelUnitToMillimeterY: Single; safecall;
    procedure Set_screenPixelToMillimeterX(p: Single); safecall;
    function Get_screenPixelToMillimeterX: Single; safecall;
    procedure Set_screenPixelToMillimeterY(p: Single); safecall;
    function Get_screenPixelToMillimeterY: Single; safecall;
    procedure Set_useCurrentView(p: WordBool); safecall;
    function Get_useCurrentView: WordBool; safecall;
    procedure _Set_currentView(const p: ISVGViewSpec); safecall;
    function Get_currentView: ISVGViewSpec; safecall;
    procedure Set_currentScale(p: Single); safecall;
    function Get_currentScale: Single; safecall;
    procedure _Set_currentTranslate(const p: ISVGPoint); safecall;
    function Get_currentTranslate: ISVGPoint; safecall;
    function suspendRedraw(maxWaitMilliseconds: LongWord): LongWord; safecall;
    procedure unsuspendRedraw(suspendHandeID: LongWord); safecall;
    procedure unsuspendRedrawAll; safecall;
    procedure forceRedraw; safecall;
    procedure pauseAnimations; safecall;
    procedure unpauseAnimations; safecall;
    function animationsPaused: WordBool; safecall;
    function getCurrentTime: Single; safecall;
    procedure setCurrentTime(seconds: Single); safecall;
    function getIntersectionList(const rect: ISVGRect; const referenceElement: ISVGElement): OleVariant; safecall;
    function getEnclosureList(const rect: ISVGRect; const referenceElement: ISVGElement): OleVariant; safecall;
    function checkIntersection(const element: ISVGElement; const rect: ISVGRect): WordBool; safecall;
    function checkEnclosure(const element: ISVGElement; const rect: ISVGRect): WordBool; safecall;
    procedure deselectAll; safecall;
    function createSVGNumber: ISVGNumber; safecall;
    function createSVGLength: ISVGLength; safecall;
    function createSVGAngle: ISVGAngle; safecall;
    function createSVGPoint: ISVGPoint; safecall;
    function createSVGMatrix: ISVGMatrix; safecall;
    function createSVGRect: ISVGRect; safecall;
    function createSVGTransform: ISVGTransform; safecall;
    function createSVGTransformFromMatrix(const matrix: ISVGMatrix): ISVGTransform; safecall;
    function getElementById(const elementId: WideString): IHTMLElement; safecall;
    property x: ISVGAnimatedLength read Get_x write _Set_x;
    property y: ISVGAnimatedLength read Get_y write _Set_y;
    property width: ISVGAnimatedLength read Get_width write _Set_width;
    property height: ISVGAnimatedLength read Get_height write _Set_height;
    property contentScriptType: WideString read Get_contentScriptType write Set_contentScriptType;
    property contentStyleType: WideString read Get_contentStyleType write Set_contentStyleType;
    property viewport: ISVGRect read Get_viewport write _Set_viewport;
    property pixelUnitToMillimeterX: Single read Get_pixelUnitToMillimeterX write Set_pixelUnitToMillimeterX;
    property pixelUnitToMillimeterY: Single read Get_pixelUnitToMillimeterY write Set_pixelUnitToMillimeterY;
    property screenPixelToMillimeterX: Single read Get_screenPixelToMillimeterX write Set_screenPixelToMillimeterX;
    property screenPixelToMillimeterY: Single read Get_screenPixelToMillimeterY write Set_screenPixelToMillimeterY;
    property useCurrentView: WordBool read Get_useCurrentView write Set_useCurrentView;
    property currentView: ISVGViewSpec read Get_currentView write _Set_currentView;
    property currentScale: Single read Get_currentScale write Set_currentScale;
    property currentTranslate: ISVGPoint read Get_currentTranslate write _Set_currentTranslate;
  end;

// *********************************************************************//
// DispIntf:  ISVGSVGElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104E7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGSVGElementDisp = dispinterface
    ['{305104E7-98B5-11CF-BB82-00AA00BDCE0B}']
    property x: ISVGAnimatedLength dispid 1052;
    property y: ISVGAnimatedLength dispid 1054;
    property width: ISVGAnimatedLength dispid 1056;
    property height: ISVGAnimatedLength dispid 1058;
    property contentScriptType: WideString dispid 1059;
    property contentStyleType: WideString dispid 1060;
    property viewport: ISVGRect dispid 1061;
    property pixelUnitToMillimeterX: Single dispid 1062;
    property pixelUnitToMillimeterY: Single dispid 1063;
    property screenPixelToMillimeterX: Single dispid 1064;
    property screenPixelToMillimeterY: Single dispid 1065;
    property useCurrentView: WordBool dispid 1066;
    property currentView: ISVGViewSpec dispid 1067;
    property currentScale: Single dispid 1068;
    property currentTranslate: ISVGPoint dispid 1069;
    function suspendRedraw(maxWaitMilliseconds: LongWord): LongWord; dispid 1070;
    procedure unsuspendRedraw(suspendHandeID: LongWord); dispid 1071;
    procedure unsuspendRedrawAll; dispid 1072;
    procedure forceRedraw; dispid 1073;
    procedure pauseAnimations; dispid 1074;
    procedure unpauseAnimations; dispid 1075;
    function animationsPaused: WordBool; dispid 1076;
    function getCurrentTime: Single; dispid 1077;
    procedure setCurrentTime(seconds: Single); dispid 1078;
    function getIntersectionList(const rect: ISVGRect; const referenceElement: ISVGElement): OleVariant; dispid 1079;
    function getEnclosureList(const rect: ISVGRect; const referenceElement: ISVGElement): OleVariant; dispid 1080;
    function checkIntersection(const element: ISVGElement; const rect: ISVGRect): WordBool; dispid 1081;
    function checkEnclosure(const element: ISVGElement; const rect: ISVGRect): WordBool; dispid 1082;
    procedure deselectAll; dispid 1083;
    function createSVGNumber: ISVGNumber; dispid 1084;
    function createSVGLength: ISVGLength; dispid 1085;
    function createSVGAngle: ISVGAngle; dispid 1086;
    function createSVGPoint: ISVGPoint; dispid 1087;
    function createSVGMatrix: ISVGMatrix; dispid 1088;
    function createSVGRect: ISVGRect; dispid 1089;
    function createSVGTransform: ISVGTransform; dispid 1090;
    function createSVGTransformFromMatrix(const matrix: ISVGMatrix): ISVGTransform; dispid 1091;
    function getElementById(const elementId: WideString): IHTMLElement; dispid 1092;
  end;

// *********************************************************************//
// Interface: ISVGAnimatedLength
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104D0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGAnimatedLength = interface(IDispatch)
    ['{305104D0-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure _Set_baseVal(const p: ISVGLength); safecall;
    function Get_baseVal: ISVGLength; safecall;
    procedure _Set_animVal(const p: ISVGLength); safecall;
    function Get_animVal: ISVGLength; safecall;
    property baseVal: ISVGLength read Get_baseVal write _Set_baseVal;
    property animVal: ISVGLength read Get_animVal write _Set_animVal;
  end;

// *********************************************************************//
// DispIntf:  ISVGAnimatedLengthDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104D0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGAnimatedLengthDisp = dispinterface
    ['{305104D0-98B5-11CF-BB82-00AA00BDCE0B}']
    property baseVal: ISVGLength dispid 1000;
    property animVal: ISVGLength dispid 1001;
  end;

// *********************************************************************//
// Interface: ISVGLength
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104CF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGLength = interface(IDispatch)
    ['{305104CF-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_unitType(p: Smallint); safecall;
    function Get_unitType: Smallint; safecall;
    procedure Set_value(p: Single); safecall;
    function Get_value: Single; safecall;
    procedure Set_valueInSpecifiedUnits(p: Single); safecall;
    function Get_valueInSpecifiedUnits: Single; safecall;
    procedure Set_valueAsString(const p: WideString); safecall;
    function Get_valueAsString: WideString; safecall;
    procedure newValueSpecifiedUnits(unitType: Smallint; valueInSpecifiedUnits: Single); safecall;
    procedure convertToSpecifiedUnits(unitType: Smallint); safecall;
    property unitType: Smallint read Get_unitType write Set_unitType;
    property value: Single read Get_value write Set_value;
    property valueInSpecifiedUnits: Single read Get_valueInSpecifiedUnits write Set_valueInSpecifiedUnits;
    property valueAsString: WideString read Get_valueAsString write Set_valueAsString;
  end;

// *********************************************************************//
// DispIntf:  ISVGLengthDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104CF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGLengthDisp = dispinterface
    ['{305104CF-98B5-11CF-BB82-00AA00BDCE0B}']
    property unitType: Smallint dispid 1000;
    property value: Single dispid 1001;
    property valueInSpecifiedUnits: Single dispid 1002;
    property valueAsString: WideString dispid 1003;
    procedure newValueSpecifiedUnits(unitType: Smallint; valueInSpecifiedUnits: Single); dispid 1004;
    procedure convertToSpecifiedUnits(unitType: Smallint); dispid 1005;
  end;

// *********************************************************************//
// Interface: ISVGRect
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104D7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGRect = interface(IDispatch)
    ['{305104D7-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_x(p: Single); safecall;
    function Get_x: Single; safecall;
    procedure Set_y(p: Single); safecall;
    function Get_y: Single; safecall;
    procedure Set_width(p: Single); safecall;
    function Get_width: Single; safecall;
    procedure Set_height(p: Single); safecall;
    function Get_height: Single; safecall;
    property x: Single read Get_x write Set_x;
    property y: Single read Get_y write Set_y;
    property width: Single read Get_width write Set_width;
    property height: Single read Get_height write Set_height;
  end;

// *********************************************************************//
// DispIntf:  ISVGRectDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104D7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGRectDisp = dispinterface
    ['{305104D7-98B5-11CF-BB82-00AA00BDCE0B}']
    property x: Single dispid 1000;
    property y: Single dispid 1001;
    property width: Single dispid 1002;
    property height: Single dispid 1003;
  end;

// *********************************************************************//
// Interface: ISVGViewSpec
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104E2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGViewSpec = interface(IDispatch)
    ['{305104E2-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  ISVGViewSpecDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104E2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGViewSpecDisp = dispinterface
    ['{305104E2-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// Interface: ISVGPoint
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104F4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPoint = interface(IDispatch)
    ['{305104F4-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_x(p: Single); safecall;
    function Get_x: Single; safecall;
    procedure Set_y(p: Single); safecall;
    function Get_y: Single; safecall;
    function matrixTransform(const pMatrix: ISVGMatrix): ISVGPoint; safecall;
    property x: Single read Get_x write Set_x;
    property y: Single read Get_y write Set_y;
  end;

// *********************************************************************//
// DispIntf:  ISVGPointDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104F4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPointDisp = dispinterface
    ['{305104F4-98B5-11CF-BB82-00AA00BDCE0B}']
    property x: Single dispid 1000;
    property y: Single dispid 1001;
    function matrixTransform(const pMatrix: ISVGMatrix): ISVGPoint; dispid 1002;
  end;

// *********************************************************************//
// Interface: ISVGMatrix
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104F6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGMatrix = interface(IDispatch)
    ['{305104F6-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_a(p: Single); safecall;
    function Get_a: Single; safecall;
    procedure Set_b(p: Single); safecall;
    function Get_b: Single; safecall;
    procedure Set_c(p: Single); safecall;
    function Get_c: Single; safecall;
    procedure Set_d(p: Single); safecall;
    function Get_d: Single; safecall;
    procedure Set_e(p: Single); safecall;
    function Get_e: Single; safecall;
    procedure Set_f(p: Single); safecall;
    function Get_f: Single; safecall;
    function multiply(const secondMatrix: ISVGMatrix): ISVGMatrix; safecall;
    function inverse: ISVGMatrix; safecall;
    function translate(x: Single; y: Single): ISVGMatrix; safecall;
    function scale(scaleFactor: Single): ISVGMatrix; safecall;
    function scaleNonUniform(scaleFactorX: Single; scaleFactorY: Single): ISVGMatrix; safecall;
    function rotate(angle: Single): ISVGMatrix; safecall;
    function rotateFromVector(x: Single; y: Single): ISVGMatrix; safecall;
    function flipX: ISVGMatrix; safecall;
    function flipY: ISVGMatrix; safecall;
    function skewX(angle: Single): ISVGMatrix; safecall;
    function skewY(angle: Single): ISVGMatrix; safecall;
    property a: Single read Get_a write Set_a;
    property b: Single read Get_b write Set_b;
    property c: Single read Get_c write Set_c;
    property d: Single read Get_d write Set_d;
    property e: Single read Get_e write Set_e;
    property f: Single read Get_f write Set_f;
  end;

// *********************************************************************//
// DispIntf:  ISVGMatrixDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104F6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGMatrixDisp = dispinterface
    ['{305104F6-98B5-11CF-BB82-00AA00BDCE0B}']
    property a: Single dispid 1000;
    property b: Single dispid 1001;
    property c: Single dispid 1002;
    property d: Single dispid 1003;
    property e: Single dispid 1004;
    property f: Single dispid 1005;
    function multiply(const secondMatrix: ISVGMatrix): ISVGMatrix; dispid 1006;
    function inverse: ISVGMatrix; dispid 1007;
    function translate(x: Single; y: Single): ISVGMatrix; dispid 1008;
    function scale(scaleFactor: Single): ISVGMatrix; dispid 1009;
    function scaleNonUniform(scaleFactorX: Single; scaleFactorY: Single): ISVGMatrix; dispid 1010;
    function rotate(angle: Single): ISVGMatrix; dispid 1011;
    function rotateFromVector(x: Single; y: Single): ISVGMatrix; dispid 1012;
    function flipX: ISVGMatrix; dispid 1013;
    function flipY: ISVGMatrix; dispid 1014;
    function skewX(angle: Single): ISVGMatrix; dispid 1015;
    function skewY(angle: Single): ISVGMatrix; dispid 1016;
  end;

// *********************************************************************//
// Interface: ISVGElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104C5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGElement = interface(IDispatch)
    ['{305104C5-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_xmlbase(const p: WideString); safecall;
    function Get_xmlbase: WideString; safecall;
    procedure _Set_ownerSVGElement(const p: ISVGSVGElement); safecall;
    function Get_ownerSVGElement: ISVGSVGElement; safecall;
    procedure _Set_viewportElement(const p: ISVGElement); safecall;
    function Get_viewportElement: ISVGElement; safecall;
    procedure _Set_focusable(const p: ISVGAnimatedEnumeration); safecall;
    function Get_focusable: ISVGAnimatedEnumeration; safecall;
    property xmlbase: WideString read Get_xmlbase write Set_xmlbase;
    property ownerSVGElement: ISVGSVGElement read Get_ownerSVGElement write _Set_ownerSVGElement;
    property viewportElement: ISVGElement read Get_viewportElement write _Set_viewportElement;
    property focusable: ISVGAnimatedEnumeration read Get_focusable write _Set_focusable;
  end;

// *********************************************************************//
// DispIntf:  ISVGElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104C5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGElementDisp = dispinterface
    ['{305104C5-98B5-11CF-BB82-00AA00BDCE0B}']
    property xmlbase: WideString dispid 1032;
    property ownerSVGElement: ISVGSVGElement dispid 1033;
    property viewportElement: ISVGElement dispid 1034;
    property focusable: ISVGAnimatedEnumeration dispid 1036;
  end;

// *********************************************************************//
// Interface: ISVGAnimatedEnumeration
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104C9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGAnimatedEnumeration = interface(IDispatch)
    ['{305104C9-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_baseVal(p: Word); safecall;
    function Get_baseVal: Word; safecall;
    procedure Set_animVal(p: Word); safecall;
    function Get_animVal: Word; safecall;
    property baseVal: Word read Get_baseVal write Set_baseVal;
    property animVal: Word read Get_animVal write Set_animVal;
  end;

// *********************************************************************//
// DispIntf:  ISVGAnimatedEnumerationDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104C9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGAnimatedEnumerationDisp = dispinterface
    ['{305104C9-98B5-11CF-BB82-00AA00BDCE0B}']
    property baseVal: Word dispid 1000;
    property animVal: Word dispid 1001;
  end;

// *********************************************************************//
// Interface: ISVGNumber
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104CB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGNumber = interface(IDispatch)
    ['{305104CB-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_value(p: Single); safecall;
    function Get_value: Single; safecall;
    property value: Single read Get_value write Set_value;
  end;

// *********************************************************************//
// DispIntf:  ISVGNumberDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104CB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGNumberDisp = dispinterface
    ['{305104CB-98B5-11CF-BB82-00AA00BDCE0B}']
    property value: Single dispid 1000;
  end;

// *********************************************************************//
// Interface: ISVGAngle
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104D3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGAngle = interface(IDispatch)
    ['{305104D3-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_unitType(p: Smallint); safecall;
    function Get_unitType: Smallint; safecall;
    procedure Set_value(p: Single); safecall;
    function Get_value: Single; safecall;
    procedure Set_valueInSpecifiedUnits(p: Single); safecall;
    function Get_valueInSpecifiedUnits: Single; safecall;
    procedure Set_valueAsString(const p: WideString); safecall;
    function Get_valueAsString: WideString; safecall;
    procedure newValueSpecifiedUnits(unitType: Smallint; valueInSpecifiedUnits: Single); safecall;
    procedure convertToSpecifiedUnits(unitType: Smallint); safecall;
    property unitType: Smallint read Get_unitType write Set_unitType;
    property value: Single read Get_value write Set_value;
    property valueInSpecifiedUnits: Single read Get_valueInSpecifiedUnits write Set_valueInSpecifiedUnits;
    property valueAsString: WideString read Get_valueAsString write Set_valueAsString;
  end;

// *********************************************************************//
// DispIntf:  ISVGAngleDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104D3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGAngleDisp = dispinterface
    ['{305104D3-98B5-11CF-BB82-00AA00BDCE0B}']
    property unitType: Smallint dispid 1000;
    property value: Single dispid 1001;
    property valueInSpecifiedUnits: Single dispid 1002;
    property valueAsString: WideString dispid 1003;
    procedure newValueSpecifiedUnits(unitType: Smallint; valueInSpecifiedUnits: Single); dispid 1004;
    procedure convertToSpecifiedUnits(unitType: Smallint); dispid 1005;
  end;

// *********************************************************************//
// Interface: ISVGTransform
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104F7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGTransform = interface(IDispatch)
    ['{305104F7-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_type_(p: Smallint); safecall;
    function Get_type_: Smallint; safecall;
    procedure _Set_matrix(const p: ISVGMatrix); safecall;
    function Get_matrix: ISVGMatrix; safecall;
    procedure Set_angle(p: Single); safecall;
    function Get_angle: Single; safecall;
    procedure setMatrix(const matrix: ISVGMatrix); safecall;
    procedure setTranslate(tx: Single; ty: Single); safecall;
    procedure setScale(sx: Single; sy: Single); safecall;
    procedure setRotate(angle: Single; cx: Single; cy: Single); safecall;
    procedure setSkewX(angle: Single); safecall;
    procedure setSkewY(angle: Single); safecall;
    property type_: Smallint read Get_type_ write Set_type_;
    property matrix: ISVGMatrix read Get_matrix write _Set_matrix;
    property angle: Single read Get_angle write Set_angle;
  end;

// *********************************************************************//
// DispIntf:  ISVGTransformDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104F7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGTransformDisp = dispinterface
    ['{305104F7-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: Smallint dispid 1000;
    property matrix: ISVGMatrix dispid 1001;
    property angle: Single dispid 1002;
    procedure setMatrix(const matrix: ISVGMatrix); dispid 1003;
    procedure setTranslate(tx: Single; ty: Single); dispid 1004;
    procedure setScale(sx: Single; sy: Single); dispid 1005;
    procedure setRotate(angle: Single; cx: Single; cy: Single); dispid 1006;
    procedure setSkewX(angle: Single); dispid 1007;
    procedure setSkewY(angle: Single); dispid 1008;
  end;

// *********************************************************************//
// Interface: IDOMNodeIterator
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510746-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMNodeIterator = interface(IDispatch)
    ['{30510746-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_root: IDispatch; safecall;
    function Get_whatToShow: LongWord; safecall;
    function Get_filter: IDispatch; safecall;
    function Get_expandEntityReferences: WordBool; safecall;
    function nextNode: IDispatch; safecall;
    function previousNode: IDispatch; safecall;
    procedure Detach; safecall;
    property root: IDispatch read Get_root;
    property whatToShow: LongWord read Get_whatToShow;
    property filter: IDispatch read Get_filter;
    property expandEntityReferences: WordBool read Get_expandEntityReferences;
  end;

// *********************************************************************//
// DispIntf:  IDOMNodeIteratorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510746-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMNodeIteratorDisp = dispinterface
    ['{30510746-98B5-11CF-BB82-00AA00BDCE0B}']
    property root: IDispatch readonly dispid 1000;
    property whatToShow: LongWord readonly dispid 1001;
    property filter: IDispatch readonly dispid 1002;
    property expandEntityReferences: WordBool readonly dispid 1003;
    function nextNode: IDispatch; dispid 1010;
    function previousNode: IDispatch; dispid 1011;
    procedure Detach; dispid 1012;
  end;

// *********************************************************************//
// Interface: IDOMTreeWalker
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510748-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMTreeWalker = interface(IDispatch)
    ['{30510748-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_root: IDispatch; safecall;
    function Get_whatToShow: LongWord; safecall;
    function Get_filter: IDispatch; safecall;
    function Get_expandEntityReferences: WordBool; safecall;
    procedure _Set_currentNode(const p: IDispatch); safecall;
    function Get_currentNode: IDispatch; safecall;
    function parentNode: IDispatch; safecall;
    function firstChild: IDispatch; safecall;
    function lastChild: IDispatch; safecall;
    function previousSibling: IDispatch; safecall;
    function nextSibling: IDispatch; safecall;
    function previousNode: IDispatch; safecall;
    function nextNode: IDispatch; safecall;
    property root: IDispatch read Get_root;
    property whatToShow: LongWord read Get_whatToShow;
    property filter: IDispatch read Get_filter;
    property expandEntityReferences: WordBool read Get_expandEntityReferences;
    property currentNode: IDispatch read Get_currentNode write _Set_currentNode;
  end;

// *********************************************************************//
// DispIntf:  IDOMTreeWalkerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510748-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMTreeWalkerDisp = dispinterface
    ['{30510748-98B5-11CF-BB82-00AA00BDCE0B}']
    property root: IDispatch readonly dispid 1000;
    property whatToShow: LongWord readonly dispid 1001;
    property filter: IDispatch readonly dispid 1002;
    property expandEntityReferences: WordBool readonly dispid 1003;
    property currentNode: IDispatch dispid 1020;
    function parentNode: IDispatch; dispid 1021;
    function firstChild: IDispatch; dispid 1022;
    function lastChild: IDispatch; dispid 1023;
    function previousSibling: IDispatch; dispid 1024;
    function nextSibling: IDispatch; dispid 1025;
    function previousNode: IDispatch; dispid 1026;
    function nextNode: IDispatch; dispid 1027;
  end;

// *********************************************************************//
// Interface: IHTMLDocument3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F485-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDocument3 = interface(IDispatch)
    ['{3050F485-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure releaseCapture; safecall;
    procedure recalc(fForce: WordBool); safecall;
    function createTextNode(const text: WideString): IHTMLDOMNode; safecall;
    function Get_documentElement: IHTMLElement; safecall;
    function Get_uniqueID: WideString; safecall;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; safecall;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); safecall;
    procedure Set_onrowsdelete(p: OleVariant); safecall;
    function Get_onrowsdelete: OleVariant; safecall;
    procedure Set_onrowsinserted(p: OleVariant); safecall;
    function Get_onrowsinserted: OleVariant; safecall;
    procedure Set_oncellchange(p: OleVariant); safecall;
    function Get_oncellchange: OleVariant; safecall;
    procedure Set_ondatasetchanged(p: OleVariant); safecall;
    function Get_ondatasetchanged: OleVariant; safecall;
    procedure Set_ondataavailable(p: OleVariant); safecall;
    function Get_ondataavailable: OleVariant; safecall;
    procedure Set_ondatasetcomplete(p: OleVariant); safecall;
    function Get_ondatasetcomplete: OleVariant; safecall;
    procedure Set_onpropertychange(p: OleVariant); safecall;
    function Get_onpropertychange: OleVariant; safecall;
    procedure Set_dir(const p: WideString); safecall;
    function Get_dir: WideString; safecall;
    procedure Set_oncontextmenu(p: OleVariant); safecall;
    function Get_oncontextmenu: OleVariant; safecall;
    procedure Set_onstop(p: OleVariant); safecall;
    function Get_onstop: OleVariant; safecall;
    function createDocumentFragment: IHTMLDocument2; safecall;
    function Get_parentDocument: IHTMLDocument2; safecall;
    procedure Set_enableDownload(p: WordBool); safecall;
    function Get_enableDownload: WordBool; safecall;
    procedure Set_baseUrl(const p: WideString); safecall;
    function Get_baseUrl: WideString; safecall;
    function Get_childNodes: IDispatch; safecall;
    procedure Set_inheritStyleSheets(p: WordBool); safecall;
    function Get_inheritStyleSheets: WordBool; safecall;
    procedure Set_onbeforeeditfocus(p: OleVariant); safecall;
    function Get_onbeforeeditfocus: OleVariant; safecall;
    function getElementsByName(const v: WideString): IHTMLElementCollection; safecall;
    function getElementById(const v: WideString): IHTMLElement; safecall;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; safecall;
    property documentElement: IHTMLElement read Get_documentElement;
    property uniqueID: WideString read Get_uniqueID;
    property onrowsdelete: OleVariant read Get_onrowsdelete write Set_onrowsdelete;
    property onrowsinserted: OleVariant read Get_onrowsinserted write Set_onrowsinserted;
    property oncellchange: OleVariant read Get_oncellchange write Set_oncellchange;
    property ondatasetchanged: OleVariant read Get_ondatasetchanged write Set_ondatasetchanged;
    property ondataavailable: OleVariant read Get_ondataavailable write Set_ondataavailable;
    property ondatasetcomplete: OleVariant read Get_ondatasetcomplete write Set_ondatasetcomplete;
    property onpropertychange: OleVariant read Get_onpropertychange write Set_onpropertychange;
    property dir: WideString read Get_dir write Set_dir;
    property oncontextmenu: OleVariant read Get_oncontextmenu write Set_oncontextmenu;
    property onstop: OleVariant read Get_onstop write Set_onstop;
    property parentDocument: IHTMLDocument2 read Get_parentDocument;
    property enableDownload: WordBool read Get_enableDownload write Set_enableDownload;
    property baseUrl: WideString read Get_baseUrl write Set_baseUrl;
    property childNodes: IDispatch read Get_childNodes;
    property inheritStyleSheets: WordBool read Get_inheritStyleSheets write Set_inheritStyleSheets;
    property onbeforeeditfocus: OleVariant read Get_onbeforeeditfocus write Set_onbeforeeditfocus;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDocument3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F485-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDocument3Disp = dispinterface
    ['{3050F485-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure releaseCapture; dispid 1072;
    procedure recalc(fForce: WordBool); dispid 1073;
    function createTextNode(const text: WideString): IHTMLDOMNode; dispid 1074;
    property documentElement: IHTMLElement readonly dispid 1075;
    property uniqueID: WideString readonly dispid 1077;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onpropertychange: OleVariant dispid -2147412065;
    property dir: WideString dispid -2147412995;
    property oncontextmenu: OleVariant dispid -2147412047;
    property onstop: OleVariant dispid -2147412044;
    function createDocumentFragment: IHTMLDocument2; dispid 1076;
    property parentDocument: IHTMLDocument2 readonly dispid 1078;
    property enableDownload: WordBool dispid 1079;
    property baseUrl: WideString dispid 1080;
    property childNodes: IDispatch readonly dispid -2147417063;
    property inheritStyleSheets: WordBool dispid 1082;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    function getElementsByName(const v: WideString): IHTMLElementCollection; dispid 1086;
    function getElementById(const v: WideString): IHTMLElement; dispid 1088;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid 1087;
  end;

// *********************************************************************//
// Interface: IHTMLDocument4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F69A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDocument4 = interface(IDispatch)
    ['{3050F69A-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure focus; safecall;
    function hasFocus: WordBool; safecall;
    procedure Set_onselectionchange(p: OleVariant); safecall;
    function Get_onselectionchange: OleVariant; safecall;
    function Get_namespaces: IDispatch; safecall;
    function createDocumentFromUrl(const bstrURL: WideString; const bstrOptions: WideString): IHTMLDocument2; safecall;
    procedure Set_media(const p: WideString); safecall;
    function Get_media: WideString; safecall;
    function CreateEventObject(const pvarEventObject: OleVariant): IHTMLEventObj; safecall;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; safecall;
    function createRenderStyle(const v: WideString): IHTMLRenderStyle; safecall;
    procedure Set_oncontrolselect(p: OleVariant); safecall;
    function Get_oncontrolselect: OleVariant; safecall;
    function Get_URLUnencoded: WideString; safecall;
    property onselectionchange: OleVariant read Get_onselectionchange write Set_onselectionchange;
    property namespaces: IDispatch read Get_namespaces;
    property media: WideString read Get_media write Set_media;
    property oncontrolselect: OleVariant read Get_oncontrolselect write Set_oncontrolselect;
    property URLUnencoded: WideString read Get_URLUnencoded;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDocument4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F69A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDocument4Disp = dispinterface
    ['{3050F69A-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure focus; dispid 1089;
    function hasFocus: WordBool; dispid 1090;
    property onselectionchange: OleVariant dispid -2147412032;
    property namespaces: IDispatch readonly dispid 1091;
    function createDocumentFromUrl(const bstrURL: WideString; const bstrOptions: WideString): IHTMLDocument2; dispid 1092;
    property media: WideString dispid 1093;
    function CreateEventObject(const pvarEventObject: OleVariant): IHTMLEventObj; dispid 1094;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid 1095;
    function createRenderStyle(const v: WideString): IHTMLRenderStyle; dispid 1096;
    property oncontrolselect: OleVariant dispid -2147412033;
    property URLUnencoded: WideString readonly dispid 1097;
  end;

// *********************************************************************//
// Interface: IHTMLDocument5
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F80C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDocument5 = interface(IDispatch)
    ['{3050F80C-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_onmousewheel(p: OleVariant); safecall;
    function Get_onmousewheel: OleVariant; safecall;
    function Get_doctype: IHTMLDOMNode; safecall;
    function Get_implementation_: IHTMLDOMImplementation; safecall;
    function createAttribute(const bstrAttrName: WideString): IHTMLDOMAttribute; safecall;
    function createComment(const bstrData: WideString): IHTMLDOMNode; safecall;
    procedure Set_onfocusin(p: OleVariant); safecall;
    function Get_onfocusin: OleVariant; safecall;
    procedure Set_onfocusout(p: OleVariant); safecall;
    function Get_onfocusout: OleVariant; safecall;
    procedure Set_onactivate(p: OleVariant); safecall;
    function Get_onactivate: OleVariant; safecall;
    procedure Set_ondeactivate(p: OleVariant); safecall;
    function Get_ondeactivate: OleVariant; safecall;
    procedure Set_onbeforeactivate(p: OleVariant); safecall;
    function Get_onbeforeactivate: OleVariant; safecall;
    procedure Set_onbeforedeactivate(p: OleVariant); safecall;
    function Get_onbeforedeactivate: OleVariant; safecall;
    function Get_compatMode: WideString; safecall;
    property onmousewheel: OleVariant read Get_onmousewheel write Set_onmousewheel;
    property doctype: IHTMLDOMNode read Get_doctype;
    property implementation_: IHTMLDOMImplementation read Get_implementation_;
    property onfocusin: OleVariant read Get_onfocusin write Set_onfocusin;
    property onfocusout: OleVariant read Get_onfocusout write Set_onfocusout;
    property onactivate: OleVariant read Get_onactivate write Set_onactivate;
    property ondeactivate: OleVariant read Get_ondeactivate write Set_ondeactivate;
    property onbeforeactivate: OleVariant read Get_onbeforeactivate write Set_onbeforeactivate;
    property onbeforedeactivate: OleVariant read Get_onbeforedeactivate write Set_onbeforedeactivate;
    property compatMode: WideString read Get_compatMode;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDocument5Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F80C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDocument5Disp = dispinterface
    ['{3050F80C-98B5-11CF-BB82-00AA00BDCE0B}']
    property onmousewheel: OleVariant dispid -2147412036;
    property doctype: IHTMLDOMNode readonly dispid 1098;
    property implementation_: IHTMLDOMImplementation readonly dispid 1099;
    function createAttribute(const bstrAttrName: WideString): IHTMLDOMAttribute; dispid 1100;
    function createComment(const bstrData: WideString): IHTMLDOMNode; dispid 1101;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    property compatMode: WideString readonly dispid 1102;
  end;

// *********************************************************************//
// Interface: IHTMLDocument6
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510417-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDocument6 = interface(IDispatch)
    ['{30510417-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_compatible: IHTMLDocumentCompatibleInfoCollection; safecall;
    function Get_documentMode: OleVariant; safecall;
    procedure Set_onstorage(p: OleVariant); safecall;
    function Get_onstorage: OleVariant; safecall;
    procedure Set_onstoragecommit(p: OleVariant); safecall;
    function Get_onstoragecommit: OleVariant; safecall;
    function getElementById(const bstrId: WideString): IHTMLElement2; safecall;
    procedure updateSettings; safecall;
    property compatible: IHTMLDocumentCompatibleInfoCollection read Get_compatible;
    property documentMode: OleVariant read Get_documentMode;
    property onstorage: OleVariant read Get_onstorage write Set_onstorage;
    property onstoragecommit: OleVariant read Get_onstoragecommit write Set_onstoragecommit;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDocument6Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510417-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDocument6Disp = dispinterface
    ['{30510417-98B5-11CF-BB82-00AA00BDCE0B}']
    property compatible: IHTMLDocumentCompatibleInfoCollection readonly dispid 1103;
    property documentMode: OleVariant readonly dispid 1104;
    property onstorage: OleVariant dispid -2147412012;
    property onstoragecommit: OleVariant dispid -2147412011;
    function getElementById(const bstrId: WideString): IHTMLElement2; dispid 1107;
    procedure updateSettings; dispid 1109;
  end;

// *********************************************************************//
// Interface: IHTMLDocument8
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305107D0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDocument8 = interface(IDispatch)
    ['{305107D0-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_onmscontentzoom(p: OleVariant); safecall;
    function Get_onmscontentzoom: OleVariant; safecall;
    procedure Set_onmspointerdown(p: OleVariant); safecall;
    function Get_onmspointerdown: OleVariant; safecall;
    procedure Set_onmspointermove(p: OleVariant); safecall;
    function Get_onmspointermove: OleVariant; safecall;
    procedure Set_onmspointerup(p: OleVariant); safecall;
    function Get_onmspointerup: OleVariant; safecall;
    procedure Set_onmspointerover(p: OleVariant); safecall;
    function Get_onmspointerover: OleVariant; safecall;
    procedure Set_onmspointerout(p: OleVariant); safecall;
    function Get_onmspointerout: OleVariant; safecall;
    procedure Set_onmspointercancel(p: OleVariant); safecall;
    function Get_onmspointercancel: OleVariant; safecall;
    procedure Set_onmspointerhover(p: OleVariant); safecall;
    function Get_onmspointerhover: OleVariant; safecall;
    procedure Set_onmsgesturestart(p: OleVariant); safecall;
    function Get_onmsgesturestart: OleVariant; safecall;
    procedure Set_onmsgesturechange(p: OleVariant); safecall;
    function Get_onmsgesturechange: OleVariant; safecall;
    procedure Set_onmsgestureend(p: OleVariant); safecall;
    function Get_onmsgestureend: OleVariant; safecall;
    procedure Set_onmsgesturehold(p: OleVariant); safecall;
    function Get_onmsgesturehold: OleVariant; safecall;
    procedure Set_onmsgesturetap(p: OleVariant); safecall;
    function Get_onmsgesturetap: OleVariant; safecall;
    procedure Set_onmsgesturedoubletap(p: OleVariant); safecall;
    function Get_onmsgesturedoubletap: OleVariant; safecall;
    procedure Set_onmsinertiastart(p: OleVariant); safecall;
    function Get_onmsinertiastart: OleVariant; safecall;
    function elementsFromPoint(x: Single; y: Single): IHTMLDOMChildrenCollection; safecall;
    function elementsFromRect(left: Single; top: Single; width: Single; height: Single): IHTMLDOMChildrenCollection; safecall;
    procedure Set_onmsmanipulationstatechanged(p: OleVariant); safecall;
    function Get_onmsmanipulationstatechanged: OleVariant; safecall;
    procedure Set_msCapsLockWarningOff(p: WordBool); safecall;
    function Get_msCapsLockWarningOff: WordBool; safecall;
    property onmscontentzoom: OleVariant read Get_onmscontentzoom write Set_onmscontentzoom;
    property onmspointerdown: OleVariant read Get_onmspointerdown write Set_onmspointerdown;
    property onmspointermove: OleVariant read Get_onmspointermove write Set_onmspointermove;
    property onmspointerup: OleVariant read Get_onmspointerup write Set_onmspointerup;
    property onmspointerover: OleVariant read Get_onmspointerover write Set_onmspointerover;
    property onmspointerout: OleVariant read Get_onmspointerout write Set_onmspointerout;
    property onmspointercancel: OleVariant read Get_onmspointercancel write Set_onmspointercancel;
    property onmspointerhover: OleVariant read Get_onmspointerhover write Set_onmspointerhover;
    property onmsgesturestart: OleVariant read Get_onmsgesturestart write Set_onmsgesturestart;
    property onmsgesturechange: OleVariant read Get_onmsgesturechange write Set_onmsgesturechange;
    property onmsgestureend: OleVariant read Get_onmsgestureend write Set_onmsgestureend;
    property onmsgesturehold: OleVariant read Get_onmsgesturehold write Set_onmsgesturehold;
    property onmsgesturetap: OleVariant read Get_onmsgesturetap write Set_onmsgesturetap;
    property onmsgesturedoubletap: OleVariant read Get_onmsgesturedoubletap write Set_onmsgesturedoubletap;
    property onmsinertiastart: OleVariant read Get_onmsinertiastart write Set_onmsinertiastart;
    property onmsmanipulationstatechanged: OleVariant read Get_onmsmanipulationstatechanged write Set_onmsmanipulationstatechanged;
    property msCapsLockWarningOff: WordBool read Get_msCapsLockWarningOff write Set_msCapsLockWarningOff;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDocument8Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305107D0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDocument8Disp = dispinterface
    ['{305107D0-98B5-11CF-BB82-00AA00BDCE0B}']
    property onmscontentzoom: OleVariant dispid -2147411940;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    function elementsFromPoint(x: Single; y: Single): IHTMLDOMChildrenCollection; dispid 1139;
    function elementsFromRect(left: Single; top: Single; width: Single; height: Single): IHTMLDOMChildrenCollection; dispid 1140;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property msCapsLockWarningOff: WordBool dispid 1141;
  end;

// *********************************************************************//
// Interface: IDocumentEvent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104BC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDocumentEvent = interface(IDispatch)
    ['{305104BC-98B5-11CF-BB82-00AA00BDCE0B}']
    function createEvent(const eventType: WideString): IDOMEvent; safecall;
  end;

// *********************************************************************//
// DispIntf:  IDocumentEventDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104BC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDocumentEventDisp = dispinterface
    ['{305104BC-98B5-11CF-BB82-00AA00BDCE0B}']
    function createEvent(const eventType: WideString): IDOMEvent; dispid 1108;
  end;

// *********************************************************************//
// Interface: IDocumentRange
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104AF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDocumentRange = interface(IDispatch)
    ['{305104AF-98B5-11CF-BB82-00AA00BDCE0B}']
    function createRange: IHTMLDOMRange; safecall;
  end;

// *********************************************************************//
// DispIntf:  IDocumentRangeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104AF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDocumentRangeDisp = dispinterface
    ['{305104AF-98B5-11CF-BB82-00AA00BDCE0B}']
    function createRange: IHTMLDOMRange; dispid 1111;
  end;

// *********************************************************************//
// Interface: IDocumentSelector
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510462-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDocumentSelector = interface(IDispatch)
    ['{30510462-98B5-11CF-BB82-00AA00BDCE0B}']
    function querySelector(const v: WideString): IHTMLElement; safecall;
    function querySelectorAll(const v: WideString): IHTMLDOMChildrenCollection; safecall;
  end;

// *********************************************************************//
// DispIntf:  IDocumentSelectorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510462-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDocumentSelectorDisp = dispinterface
    ['{30510462-98B5-11CF-BB82-00AA00BDCE0B}']
    function querySelector(const v: WideString): IHTMLElement; dispid 1105;
    function querySelectorAll(const v: WideString): IHTMLDOMChildrenCollection; dispid 1106;
  end;

// *********************************************************************//
// Interface: IDocumentTraversal
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510744-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDocumentTraversal = interface(IDispatch)
    ['{30510744-98B5-11CF-BB82-00AA00BDCE0B}']
    function createNodeIterator(const pRootNode: IDispatch; ulWhatToShow: Integer; 
                                const pFilter: OleVariant; fEntityReferenceExpansion: WordBool): IDOMNodeIterator; safecall;
    function createTreeWalker(const pRootNode: IDispatch; ulWhatToShow: Integer; 
                              const pFilter: OleVariant; fEntityReferenceExpansion: WordBool): IDOMTreeWalker; safecall;
  end;

// *********************************************************************//
// DispIntf:  IDocumentTraversalDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510744-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDocumentTraversalDisp = dispinterface
    ['{30510744-98B5-11CF-BB82-00AA00BDCE0B}']
    function createNodeIterator(const pRootNode: IDispatch; ulWhatToShow: Integer; 
                                const pFilter: OleVariant; fEntityReferenceExpansion: WordBool): IDOMNodeIterator; dispid 1121;
    function createTreeWalker(const pRootNode: IDispatch; ulWhatToShow: Integer; 
                              const pFilter: OleVariant; fEntityReferenceExpansion: WordBool): IDOMTreeWalker; dispid 1122;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLDocument
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F55F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLDocument = dispinterface
    ['{3050F55F-98B5-11CF-BB82-00AA00BDCE0B}']
    property Script: IDispatch readonly dispid 1001;
    property all: IHTMLElementCollection readonly dispid 1003;
    property body: IHTMLElement readonly dispid 1004;
    property activeElement: IHTMLElement readonly dispid 1005;
    property images: IHTMLElementCollection readonly dispid 1011;
    property applets: IHTMLElementCollection readonly dispid 1008;
    property links: IHTMLElementCollection readonly dispid 1009;
    property forms: IHTMLElementCollection readonly dispid 1010;
    property anchors: IHTMLElementCollection readonly dispid 1007;
    property title: WideString dispid 1012;
    property scripts: IHTMLElementCollection readonly dispid 1013;
    property designMode: WideString dispid 1014;
    property selection: IHTMLSelectionObject readonly dispid 1017;
    property readyState: WideString readonly dispid 1018;
    property frames: IHTMLFramesCollection2 readonly dispid 1019;
    property embeds: IHTMLElementCollection readonly dispid 1015;
    property plugins: IHTMLElementCollection readonly dispid 1021;
    property alinkColor: OleVariant dispid 1022;
    property bgColor: OleVariant dispid -501;
    property fgColor: OleVariant dispid -2147413110;
    property linkColor: OleVariant dispid 1024;
    property vlinkColor: OleVariant dispid 1023;
    property referrer: WideString readonly dispid 1027;
    property location: IHTMLLocation readonly dispid 1026;
    property lastModified: WideString readonly dispid 1028;
    property url: WideString dispid 1025;
    property domain: WideString dispid 1029;
    property cookie: WideString dispid 1030;
    property expando: WordBool dispid 1031;
    property charset: WideString dispid 1032;
    property defaultCharset: WideString dispid 1033;
    property mimeType: WideString readonly dispid 1041;
    property fileSize: WideString readonly dispid 1042;
    property fileCreatedDate: WideString readonly dispid 1043;
    property fileModifiedDate: WideString readonly dispid 1044;
    property fileUpdatedDate: WideString readonly dispid 1045;
    property security: WideString readonly dispid 1046;
    property protocol: WideString readonly dispid 1047;
    property nameProp: WideString readonly dispid 1048;
    procedure write(psarray: {NOT_OLEAUTO(PSafeArray)}OleVariant); dispid 1054;
    procedure writeln(psarray: {NOT_OLEAUTO(PSafeArray)}OleVariant); dispid 1055;
    function open(const url: WideString; name: OleVariant; features: OleVariant; replace: OleVariant): IDispatch; dispid 1056;
    procedure close; dispid 1057;
    procedure clear; dispid 1058;
    function queryCommandSupported(const cmdID: WideString): WordBool; dispid 1059;
    function queryCommandEnabled(const cmdID: WideString): WordBool; dispid 1060;
    function queryCommandState(const cmdID: WideString): WordBool; dispid 1061;
    function queryCommandIndeterm(const cmdID: WideString): WordBool; dispid 1062;
    function queryCommandText(const cmdID: WideString): WideString; dispid 1063;
    function queryCommandValue(const cmdID: WideString): OleVariant; dispid 1064;
    function execCommand(const cmdID: WideString; showUI: WordBool; value: OleVariant): WordBool; dispid 1065;
    function execCommandShowHelp(const cmdID: WideString): WordBool; dispid 1066;
    function createElement(const eTag: WideString): IHTMLElement; dispid 1067;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseup: OleVariant dispid -2147412109;
    property onmousedown: OleVariant dispid -2147412110;
    property onmousemove: OleVariant dispid -2147412108;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onafterupdate: OleVariant dispid -2147412090;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondragstart: OleVariant dispid -2147412077;
    property onselectstart: OleVariant dispid -2147412075;
    function elementFromPoint(x: Integer; y: Integer): IHTMLElement; dispid 1068;
    property parentWindow: IHTMLWindow2 readonly dispid 1034;
    property styleSheets: IHTMLStyleSheetsCollection readonly dispid 1069;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onerrorupdate: OleVariant dispid -2147412074;
    function toString: WideString; dispid 1070;
    function createStyleSheet(const bstrHref: WideString; lIndex: Integer): IHTMLStyleSheet; dispid 1071;
    procedure releaseCapture; dispid 1072;
    procedure recalc(fForce: WordBool); dispid 1073;
    function createTextNode(const text: WideString): IHTMLDOMNode; dispid 1074;
    property documentElement: IHTMLElement readonly dispid 1075;
    property uniqueID: WideString readonly dispid 1077;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onpropertychange: OleVariant dispid -2147412065;
    property dir: WideString dispid -2147412995;
    property oncontextmenu: OleVariant dispid -2147412047;
    property onstop: OleVariant dispid -2147412044;
    function createDocumentFragment: IHTMLDocument2; dispid 1076;
    property parentDocument: IHTMLDocument2 readonly dispid 1078;
    property enableDownload: WordBool dispid 1079;
    property baseUrl: WideString dispid 1080;
    property inheritStyleSheets: WordBool dispid 1082;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    function getElementsByName(const v: WideString): IHTMLElementCollection; dispid 1086;
    function getElementById(const v: WideString): IHTMLElement; dispid 1088;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid 1087;
    procedure focus; dispid 1089;
    function hasFocus: WordBool; dispid 1090;
    property onselectionchange: OleVariant dispid -2147412032;
    property namespaces: IDispatch readonly dispid 1091;
    function createDocumentFromUrl(const bstrURL: WideString; const bstrOptions: WideString): IHTMLDocument2; dispid 1092;
    property media: WideString dispid 1093;
    function CreateEventObject(const pvarEventObject: OleVariant): IHTMLEventObj; dispid 1094;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid 1095;
    function createRenderStyle(const v: WideString): IHTMLRenderStyle; dispid 1096;
    property oncontrolselect: OleVariant dispid -2147412033;
    property URLUnencoded: WideString readonly dispid 1097;
    property onmousewheel: OleVariant dispid -2147412036;
    property doctype: IHTMLDOMNode readonly dispid 1098;
    property implementation_: IHTMLDOMImplementation readonly dispid 1099;
    function createAttribute(const bstrAttrName: WideString): IHTMLDOMAttribute; dispid 1100;
    function createComment(const bstrData: WideString): IHTMLDOMNode; dispid 1101;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    property compatMode: WideString readonly dispid 1102;
    property compatible: IHTMLDocumentCompatibleInfoCollection readonly dispid 1103;
    property documentMode: OleVariant readonly dispid 1104;
    property onstorage: OleVariant dispid -2147412012;
    property onstoragecommit: OleVariant dispid -2147412011;
    function ie8_getElementById(const bstrId: WideString): IHTMLElement2; dispid 1107;
    procedure updateSettings; dispid 1109;
    property defaultView: IHTMLWindow2 readonly dispid 1110;
    function createCDATASection(const text: WideString): IHTMLDOMNode; dispid 1123;
    function getSelection: IHTMLSelection; dispid 1112;
    function getElementsByTagNameNS(const pvarNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid 1113;
    function createElementNS(const pvarNS: OleVariant; const bstrTag: WideString): IHTMLElement; dispid 1114;
    function createAttributeNS(const pvarNS: OleVariant; const bstrAttrName: WideString): IHTMLDOMAttribute; dispid 1115;
    property onmsthumbnailclick: OleVariant dispid -2147411991;
    property characterSet: WideString readonly dispid 1117;
    function ie9_createElement(const bstrTag: WideString): IHTMLElement; dispid 1118;
    function ie9_createAttribute(const bstrAttrName: WideString): IHTMLDOMAttribute; dispid 1119;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid 1120;
    function createProcessingInstruction(const bstrTarget: WideString; const bstrData: WideString): IDOMProcessingInstruction; dispid 1124;
    function adoptNode(const pNodeSource: IHTMLDOMNode): IHTMLDOMNode3; dispid 1125;
    property onmssitemodejumplistitemremoved: OleVariant dispid -2147411982;
    property ie9_all: IHTMLElementCollection readonly dispid 1126;
    property inputEncoding: WideString readonly dispid 1127;
    property xmlEncoding: WideString readonly dispid 1128;
    property xmlStandalone: WordBool dispid 1129;
    property xmlVersion: WideString dispid 1130;
    function hasAttributes: WordBool; dispid 1132;
    property onabort: OleVariant dispid -2147412084;
    property onblur: OleVariant dispid -2147412097;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragleave: OleVariant dispid -2147412059;
    property ondragover: OleVariant dispid -2147412060;
    property ondrop: OleVariant dispid -2147412058;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property onfocus: OleVariant dispid -2147412098;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onscroll: OleVariant dispid -2147412081;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    procedure normalize; dispid 1134;
    function importNode(const pNodeSource: IHTMLDOMNode; fDeep: WordBool): IHTMLDOMNode3; dispid 1135;
    property ie9_parentWindow: IHTMLWindow2 readonly dispid 1136;
    property ie9_body: IHTMLElement dispid 1137;
    property head: IHTMLElement readonly dispid 1138;
    property onmscontentzoom: OleVariant dispid -2147411940;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    function elementsFromPoint(x: Single; y: Single): IHTMLDOMChildrenCollection; dispid 1139;
    function elementsFromRect(left: Single; top: Single; width: Single; height: Single): IHTMLDOMChildrenCollection; dispid 1140;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property msCapsLockWarningOff: WordBool dispid 1141;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    property prefix: OleVariant dispid -2147416992;
    property localName: OleVariant readonly dispid -2147416994;
    property namespaceURI: OleVariant readonly dispid -2147416993;
    property textContent: OleVariant dispid -2147416985;
    function isEqualNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416991;
    function lookupNamespaceURI(const pvarPrefix: OleVariant): OleVariant; dispid -2147416990;
    function lookupPrefix(const pvarNamespaceURI: OleVariant): OleVariant; dispid -2147416989;
    function isDefaultNamespace(const pvarNamespace: OleVariant): WordBool; dispid -2147416988;
    function ie9_appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416844;
    function ie9_insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147416843;
    function ie9_removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416842;
    function ie9_replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416841;
    function isSameNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416987;
    function compareDocumentPosition(const otherNode: IHTMLDOMNode): Word; dispid -2147416986;
    function isSupported(const feature: WideString; version: OleVariant): WordBool; dispid -2147416835;
    function querySelector(const v: WideString): IHTMLElement; dispid 1105;
    function querySelectorAll(const v: WideString): IHTMLDOMChildrenCollection; dispid 1106;
    function createNodeIterator(const pRootNode: IDispatch; ulWhatToShow: Integer; 
                                const pFilter: OleVariant; fEntityReferenceExpansion: WordBool): IDOMNodeIterator; dispid 1121;
    function createTreeWalker(const pRootNode: IDispatch; ulWhatToShow: Integer; 
                              const pFilter: OleVariant; fEntityReferenceExpansion: WordBool): IDOMTreeWalker; dispid 1122;
    property constructor_: IDispatch readonly dispid -2147417603;
    function createEvent(const eventType: WideString): IDOMEvent; dispid 1108;
    function createRange: IHTMLDOMRange; dispid 1111;
    procedure addEventListener(const type_: WideString; const listener: IDispatch; 
                               useCapture: WordBool); dispid -2147417602;
    procedure removeEventListener(const type_: WideString; const listener: IDispatch; 
                                  useCapture: WordBool); dispid -2147417601;
    function dispatchEvent(const evt: IDOMEvent): WordBool; dispid -2147417600;
    property rootElement: ISVGSVGElement readonly dispid 1116;
  end;

// *********************************************************************//
// Interface: ISVGDocument
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104E6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGDocument = interface(IDispatch)
    ['{305104E6-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_rootElement: ISVGSVGElement; safecall;
    property rootElement: ISVGSVGElement read Get_rootElement;
  end;

// *********************************************************************//
// DispIntf:  ISVGDocumentDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104E6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGDocumentDisp = dispinterface
    ['{305104E6-98B5-11CF-BB82-00AA00BDCE0B}']
    property rootElement: ISVGSVGElement readonly dispid 1116;
  end;

// *********************************************************************//
// DispIntf:  DWebBridgeEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {A6D897FF-0A95-11D1-B0BA-006008166E11}
// *********************************************************************//
  DWebBridgeEvents = dispinterface
    ['{A6D897FF-0A95-11D1-B0BA-006008166E11}']
    procedure onscriptletevent(const name: WideString; eventData: OleVariant); dispid 1;
    procedure onreadystatechange; dispid -609;
    function onclick: WordBool; dispid -600;
    function ondblclick: WordBool; dispid -601;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    function onkeypress: WordBool; dispid -603;
    procedure onmousedown; dispid -605;
    procedure onmousemove; dispid -606;
    procedure onmouseup; dispid -607;
  end;

// *********************************************************************//
// Interface: IWebBridge
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AE24FDAD-03C6-11D1-8B76-0080C744F389}
// *********************************************************************//
  IWebBridge = interface(IDispatch)
    ['{AE24FDAD-03C6-11D1-8B76-0080C744F389}']
    procedure Set_url(const p: WideString); safecall;
    function Get_url: WideString; safecall;
    procedure Set_Scrollbar(p: WordBool); safecall;
    function Get_Scrollbar: WordBool; safecall;
    procedure Set_embed(p: WordBool); safecall;
    function Get_embed: WordBool; safecall;
    function Get_event: IDispatch; safecall;
    function Get_readyState: Integer; safecall;
    procedure AboutBox; safecall;
    property url: WideString read Get_url write Set_url;
    property Scrollbar: WordBool read Get_Scrollbar write Set_Scrollbar;
    property embed: WordBool read Get_embed write Set_embed;
    property event: IDispatch read Get_event;
    property readyState: Integer read Get_readyState;
  end;

// *********************************************************************//
// DispIntf:  IWebBridgeDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {AE24FDAD-03C6-11D1-8B76-0080C744F389}
// *********************************************************************//
  IWebBridgeDisp = dispinterface
    ['{AE24FDAD-03C6-11D1-8B76-0080C744F389}']
    property url: WideString dispid 1;
    property Scrollbar: WordBool dispid 2;
    property embed: WordBool dispid 3;
    property event: IDispatch readonly dispid 1152;
    property readyState: Integer readonly dispid -525;
    procedure AboutBox; dispid -552;
  end;

// *********************************************************************//
// Interface: IWBScriptControl
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A5170870-0CF8-11D1-8B91-0080C744F389}
// *********************************************************************//
  IWBScriptControl = interface(IDispatch)
    ['{A5170870-0CF8-11D1-8B91-0080C744F389}']
    procedure raiseEvent(const name: WideString; eventData: OleVariant); safecall;
    procedure bubbleEvent; safecall;
    procedure setContextMenu(menuItemPairs: OleVariant); safecall;
    procedure Set_selectableContent(p: WordBool); safecall;
    function Get_selectableContent: WordBool; safecall;
    function Get_frozen: WordBool; safecall;
    procedure Set_Scrollbar(p: WordBool); safecall;
    function Get_Scrollbar: WordBool; safecall;
    function Get_version: WideString; safecall;
    function Get_visibility: WordBool; safecall;
    procedure Set_onvisibilitychange(p: OleVariant); safecall;
    function Get_onvisibilitychange: OleVariant; safecall;
    property selectableContent: WordBool read Get_selectableContent write Set_selectableContent;
    property frozen: WordBool read Get_frozen;
    property Scrollbar: WordBool read Get_Scrollbar write Set_Scrollbar;
    property version: WideString read Get_version;
    property visibility: WordBool read Get_visibility;
    property onvisibilitychange: OleVariant read Get_onvisibilitychange write Set_onvisibilitychange;
  end;

// *********************************************************************//
// DispIntf:  IWBScriptControlDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {A5170870-0CF8-11D1-8B91-0080C744F389}
// *********************************************************************//
  IWBScriptControlDisp = dispinterface
    ['{A5170870-0CF8-11D1-8B91-0080C744F389}']
    procedure raiseEvent(const name: WideString; eventData: OleVariant); dispid 1;
    procedure bubbleEvent; dispid 2;
    procedure setContextMenu(menuItemPairs: OleVariant); dispid 3;
    property selectableContent: WordBool dispid 4;
    property frozen: WordBool readonly dispid 5;
    property Scrollbar: WordBool dispid 7;
    property version: WideString readonly dispid 8;
    property visibility: WordBool readonly dispid 9;
    property onvisibilitychange: OleVariant dispid 10;
  end;

// *********************************************************************//
// Interface: IHTMLEmbedElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F25F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEmbedElement = interface(IDispatch)
    ['{3050F25F-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_hidden(const p: WideString); safecall;
    function Get_hidden: WideString; safecall;
    function Get_palette: WideString; safecall;
    function Get_pluginspage: WideString; safecall;
    procedure Set_src(const p: WideString); safecall;
    function Get_src: WideString; safecall;
    procedure Set_units(const p: WideString); safecall;
    function Get_units: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_width(p: OleVariant); safecall;
    function Get_width: OleVariant; safecall;
    procedure Set_height(p: OleVariant); safecall;
    function Get_height: OleVariant; safecall;
    property hidden: WideString read Get_hidden write Set_hidden;
    property palette: WideString read Get_palette;
    property pluginspage: WideString read Get_pluginspage;
    property src: WideString read Get_src write Set_src;
    property units: WideString read Get_units write Set_units;
    property name: WideString read Get_name write Set_name;
    property width: OleVariant read Get_width write Set_width;
    property height: OleVariant read Get_height write Set_height;
  end;

// *********************************************************************//
// DispIntf:  IHTMLEmbedElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F25F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEmbedElementDisp = dispinterface
    ['{3050F25F-98B5-11CF-BB82-00AA00BDCE0B}']
    property hidden: WideString dispid -2147415102;
    property palette: WideString readonly dispid -2147415108;
    property pluginspage: WideString readonly dispid -2147415107;
    property src: WideString dispid -2147415106;
    property units: WideString dispid -2147415104;
    property name: WideString dispid -2147418112;
    property width: OleVariant dispid -2147418107;
    property height: OleVariant dispid -2147418106;
  end;

// *********************************************************************//
// Interface: IHTMLEmbedElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510493-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEmbedElement2 = interface(IDispatch)
    ['{30510493-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_src(const p: WideString); safecall;
    function Get_src: WideString; safecall;
    function Get_pluginspage: WideString; safecall;
    property src: WideString read Get_src write Set_src;
    property pluginspage: WideString read Get_pluginspage;
  end;

// *********************************************************************//
// DispIntf:  IHTMLEmbedElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510493-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEmbedElement2Disp = dispinterface
    ['{30510493-98B5-11CF-BB82-00AA00BDCE0B}']
    property src: WideString dispid 1150;
    property pluginspage: WideString readonly dispid 1151;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLEmbed
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F52E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLEmbed = dispinterface
    ['{3050F52E-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property hidden: WideString dispid -2147415102;
    property palette: WideString readonly dispid -2147415108;
    property pluginspage: WideString readonly dispid -2147415107;
    property src: WideString dispid -2147415106;
    property units: WideString dispid -2147415104;
    property name: WideString dispid -2147418112;
    property width: OleVariant dispid -2147418107;
    property height: OleVariant dispid -2147418106;
    property ie8_src: WideString dispid 1150;
    property ie8_pluginspage: WideString readonly dispid 1151;
    function getSVGDocument: IDispatch; dispid -2147418033;
  end;

// *********************************************************************//
// Interface: IGetSVGDocument
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305105AB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IGetSVGDocument = interface(IDispatch)
    ['{305105AB-98B5-11CF-BB82-00AA00BDCE0B}']
    function getSVGDocument: IDispatch; safecall;
  end;

// *********************************************************************//
// DispIntf:  IGetSVGDocumentDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305105AB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IGetSVGDocumentDisp = dispinterface
    ['{305105AB-98B5-11CF-BB82-00AA00BDCE0B}']
    function getSVGDocument: IDispatch; dispid -2147418033;
  end;

// *********************************************************************//
// DispIntf:  HTMLMapEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F61E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLMapEvents2 = dispinterface
    ['{3050F61E-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
  end;

// *********************************************************************//
// DispIntf:  HTMLMapEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F3BA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLMapEvents = dispinterface
    ['{3050F3BA-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid -2147418102;
    function onclick: WordBool; dispid -600;
    function ondblclick: WordBool; dispid -601;
    function onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function ondragstart: WordBool; dispid -2147418101;
    function onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function onerrorupdate: WordBool; dispid -2147418099;
    function onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function ondragenter: WordBool; dispid -2147418090;
    function ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function ondrop: WordBool; dispid -2147418087;
    function onbeforecut: WordBool; dispid -2147418083;
    function oncut: WordBool; dispid -2147418086;
    function onbeforecopy: WordBool; dispid -2147418082;
    function oncopy: WordBool; dispid -2147418085;
    function onbeforepaste: WordBool; dispid -2147418081;
    function onpaste: WordBool; dispid -2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
  end;

// *********************************************************************//
// Interface: IHTMLAreasCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F383-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAreasCollection = interface(IDispatch)
    ['{3050F383-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_length(p: Integer); safecall;
    function Get_length: Integer; safecall;
    function Get__newEnum: IUnknown; safecall;
    function item(name: OleVariant; index: OleVariant): IDispatch; safecall;
    function tags(tagName: OleVariant): IDispatch; safecall;
    procedure add(const element: IHTMLElement; before: OleVariant); safecall;
    procedure remove(index: Integer); safecall;
    property length: Integer read Get_length write Set_length;
    property _newEnum: IUnknown read Get__newEnum;
  end;

// *********************************************************************//
// DispIntf:  IHTMLAreasCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F383-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAreasCollectionDisp = dispinterface
    ['{3050F383-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer dispid 1500;
    property _newEnum: IUnknown readonly dispid -4;
    function item(name: OleVariant; index: OleVariant): IDispatch; dispid 0;
    function tags(tagName: OleVariant): IDispatch; dispid 1502;
    procedure add(const element: IHTMLElement; before: OleVariant); dispid 1503;
    procedure remove(index: Integer); dispid 1504;
  end;

// *********************************************************************//
// Interface: IHTMLAreasCollection2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5EC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAreasCollection2 = interface(IDispatch)
    ['{3050F5EC-98B5-11CF-BB82-00AA00BDCE0B}']
    function urns(urn: OleVariant): IDispatch; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLAreasCollection2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5EC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAreasCollection2Disp = dispinterface
    ['{3050F5EC-98B5-11CF-BB82-00AA00BDCE0B}']
    function urns(urn: OleVariant): IDispatch; dispid 1505;
  end;

// *********************************************************************//
// Interface: IHTMLAreasCollection3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F837-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAreasCollection3 = interface(IDispatch)
    ['{3050F837-98B5-11CF-BB82-00AA00BDCE0B}']
    function namedItem(const name: WideString): IDispatch; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLAreasCollection3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F837-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAreasCollection3Disp = dispinterface
    ['{3050F837-98B5-11CF-BB82-00AA00BDCE0B}']
    function namedItem(const name: WideString): IDispatch; dispid 1506;
  end;

// *********************************************************************//
// Interface: IHTMLAreasCollection4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510492-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAreasCollection4 = interface(IDispatch)
    ['{30510492-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    function item(index: Integer): IHTMLElement2; safecall;
    function namedItem(const name: WideString): IHTMLElement2; safecall;
    property length: Integer read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IHTMLAreasCollection4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510492-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAreasCollection4Disp = dispinterface
    ['{30510492-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1150;
    function item(index: Integer): IHTMLElement2; dispid 1152;
    function namedItem(const name: WideString): IHTMLElement2; dispid 1153;
  end;

// *********************************************************************//
// Interface: IHTMLMapElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F266-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMapElement = interface(IDispatch)
    ['{3050F266-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_areas: IHTMLAreasCollection; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    property areas: IHTMLAreasCollection read Get_areas;
    property name: WideString read Get_name write Set_name;
  end;

// *********************************************************************//
// DispIntf:  IHTMLMapElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F266-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMapElementDisp = dispinterface
    ['{3050F266-98B5-11CF-BB82-00AA00BDCE0B}']
    property areas: IHTMLAreasCollection readonly dispid 1002;
    property name: WideString dispid -2147418112;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLAreasCollection
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F56A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLAreasCollection = dispinterface
    ['{3050F56A-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer dispid 1500;
    property _newEnum: IUnknown readonly dispid -4;
    function item(name: OleVariant; index: OleVariant): IDispatch; dispid 0;
    function tags(tagName: OleVariant): IDispatch; dispid 1502;
    procedure add(const element: IHTMLElement; before: OleVariant); dispid 1503;
    procedure remove(index: Integer); dispid 1504;
    function urns(urn: OleVariant): IDispatch; dispid 1505;
    function namedItem(const name: WideString): IDispatch; dispid 1506;
    property ie8_length: Integer readonly dispid 1150;
    function ie8_item(index: Integer): IHTMLElement2; dispid 1152;
    function ie8_namedItem(const name: WideString): IHTMLElement2; dispid 1153;
    property constructor_: IDispatch readonly dispid -2147417603;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLMapElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F526-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLMapElement = dispinterface
    ['{3050F526-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property areas: IHTMLAreasCollection readonly dispid 1002;
    property name: WideString dispid -2147418112;
  end;

// *********************************************************************//
// DispIntf:  HTMLAreaEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F611-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLAreaEvents2 = dispinterface
    ['{3050F611-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
  end;

// *********************************************************************//
// DispIntf:  HTMLAreaEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F366-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLAreaEvents = dispinterface
    ['{3050F366-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid -2147418102;
    function onclick: WordBool; dispid -600;
    function ondblclick: WordBool; dispid -601;
    function onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function ondragstart: WordBool; dispid -2147418101;
    function onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function onerrorupdate: WordBool; dispid -2147418099;
    function onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function ondragenter: WordBool; dispid -2147418090;
    function ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function ondrop: WordBool; dispid -2147418087;
    function onbeforecut: WordBool; dispid -2147418083;
    function oncut: WordBool; dispid -2147418086;
    function onbeforecopy: WordBool; dispid -2147418082;
    function oncopy: WordBool; dispid -2147418085;
    function onbeforepaste: WordBool; dispid -2147418081;
    function onpaste: WordBool; dispid -2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
  end;

// *********************************************************************//
// Interface: IHTMLAreaElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F265-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAreaElement = interface(IDispatch)
    ['{3050F265-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_shape(const p: WideString); safecall;
    function Get_shape: WideString; safecall;
    procedure Set_coords(const p: WideString); safecall;
    function Get_coords: WideString; safecall;
    procedure Set_href(const p: WideString); safecall;
    function Get_href: WideString; safecall;
    procedure Set_target(const p: WideString); safecall;
    function Get_target: WideString; safecall;
    procedure Set_alt(const p: WideString); safecall;
    function Get_alt: WideString; safecall;
    procedure Set_noHref(p: WordBool); safecall;
    function Get_noHref: WordBool; safecall;
    procedure Set_host(const p: WideString); safecall;
    function Get_host: WideString; safecall;
    procedure Set_hostname(const p: WideString); safecall;
    function Get_hostname: WideString; safecall;
    procedure Set_pathname(const p: WideString); safecall;
    function Get_pathname: WideString; safecall;
    procedure Set_port(const p: WideString); safecall;
    function Get_port: WideString; safecall;
    procedure Set_protocol(const p: WideString); safecall;
    function Get_protocol: WideString; safecall;
    procedure Set_search(const p: WideString); safecall;
    function Get_search: WideString; safecall;
    procedure Set_hash(const p: WideString); safecall;
    function Get_hash: WideString; safecall;
    procedure Set_onblur(p: OleVariant); safecall;
    function Get_onblur: OleVariant; safecall;
    procedure Set_onfocus(p: OleVariant); safecall;
    function Get_onfocus: OleVariant; safecall;
    procedure Set_tabIndex(p: Smallint); safecall;
    function Get_tabIndex: Smallint; safecall;
    procedure focus; safecall;
    procedure blur; safecall;
    property shape: WideString read Get_shape write Set_shape;
    property coords: WideString read Get_coords write Set_coords;
    property href: WideString read Get_href write Set_href;
    property target: WideString read Get_target write Set_target;
    property alt: WideString read Get_alt write Set_alt;
    property noHref: WordBool read Get_noHref write Set_noHref;
    property host: WideString read Get_host write Set_host;
    property hostname: WideString read Get_hostname write Set_hostname;
    property pathname: WideString read Get_pathname write Set_pathname;
    property port: WideString read Get_port write Set_port;
    property protocol: WideString read Get_protocol write Set_protocol;
    property search: WideString read Get_search write Set_search;
    property hash: WideString read Get_hash write Set_hash;
    property onblur: OleVariant read Get_onblur write Set_onblur;
    property onfocus: OleVariant read Get_onfocus write Set_onfocus;
    property tabIndex: Smallint read Get_tabIndex write Set_tabIndex;
  end;

// *********************************************************************//
// DispIntf:  IHTMLAreaElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F265-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAreaElementDisp = dispinterface
    ['{3050F265-98B5-11CF-BB82-00AA00BDCE0B}']
    property shape: WideString dispid 1001;
    property coords: WideString dispid 1002;
    property href: WideString dispid 0;
    property target: WideString dispid 1004;
    property alt: WideString dispid 1005;
    property noHref: WordBool dispid 1006;
    property host: WideString dispid 1007;
    property hostname: WideString dispid 1008;
    property pathname: WideString dispid 1009;
    property port: WideString dispid 1010;
    property protocol: WideString dispid 1011;
    property search: WideString dispid 1012;
    property hash: WideString dispid 1013;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    procedure blur; dispid -2147416110;
  end;

// *********************************************************************//
// Interface: IHTMLAreaElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051041F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAreaElement2 = interface(IDispatch)
    ['{3051041F-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_shape(const p: WideString); safecall;
    function Get_shape: WideString; safecall;
    procedure Set_coords(const p: WideString); safecall;
    function Get_coords: WideString; safecall;
    procedure Set_href(const p: WideString); safecall;
    function Get_href: WideString; safecall;
    property shape: WideString read Get_shape write Set_shape;
    property coords: WideString read Get_coords write Set_coords;
    property href: WideString read Get_href write Set_href;
  end;

// *********************************************************************//
// DispIntf:  IHTMLAreaElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051041F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAreaElement2Disp = dispinterface
    ['{3051041F-98B5-11CF-BB82-00AA00BDCE0B}']
    property shape: WideString dispid 1151;
    property coords: WideString dispid 1152;
    property href: WideString dispid 1153;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLAreaElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F503-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLAreaElement = dispinterface
    ['{3050F503-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property shape: WideString dispid 1001;
    property coords: WideString dispid 1002;
    property href: WideString dispid 0;
    property target: WideString dispid 1004;
    property alt: WideString dispid 1005;
    property noHref: WordBool dispid 1006;
    property host: WideString dispid 1007;
    property hostname: WideString dispid 1008;
    property pathname: WideString dispid 1009;
    property port: WideString dispid 1010;
    property protocol: WideString dispid 1011;
    property search: WideString dispid 1012;
    property hash: WideString dispid 1013;
    property ie8_shape: WideString dispid 1151;
    property ie8_coords: WideString dispid 1152;
    property ie8_href: WideString dispid 1153;
  end;

// *********************************************************************//
// Interface: IHTMLTableCaption
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2EB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableCaption = interface(IDispatch)
    ['{3050F2EB-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    procedure Set_vAlign(const p: WideString); safecall;
    function Get_vAlign: WideString; safecall;
    property align: WideString read Get_align write Set_align;
    property vAlign: WideString read Get_vAlign write Set_vAlign;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableCaptionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2EB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableCaptionDisp = dispinterface
    ['{3050F2EB-98B5-11CF-BB82-00AA00BDCE0B}']
    property align: WideString dispid -2147418040;
    property vAlign: WideString dispid -2147413081;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLTableCaption
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F508-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLTableCaption = dispinterface
    ['{3050F508-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property align: WideString dispid -2147418040;
    property vAlign: WideString dispid -2147413081;
  end;

// *********************************************************************//
// Interface: IHTMLCommentElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F20C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCommentElement = interface(IDispatch)
    ['{3050F20C-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_text(const p: WideString); safecall;
    function Get_text: WideString; safecall;
    procedure Set_atomic(p: Integer); safecall;
    function Get_atomic: Integer; safecall;
    property text: WideString read Get_text write Set_text;
    property atomic: Integer read Get_atomic write Set_atomic;
  end;

// *********************************************************************//
// DispIntf:  IHTMLCommentElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F20C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCommentElementDisp = dispinterface
    ['{3050F20C-98B5-11CF-BB82-00AA00BDCE0B}']
    property text: WideString dispid 1001;
    property atomic: Integer dispid 1002;
  end;

// *********************************************************************//
// Interface: IHTMLCommentElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F813-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCommentElement2 = interface(IDispatch)
    ['{3050F813-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_data(const p: WideString); safecall;
    function Get_data: WideString; safecall;
    function Get_length: Integer; safecall;
    function substringData(offset: Integer; Count: Integer): WideString; safecall;
    procedure appendData(const bstrstring: WideString); safecall;
    procedure insertData(offset: Integer; const bstrstring: WideString); safecall;
    procedure deleteData(offset: Integer; Count: Integer); safecall;
    procedure replaceData(offset: Integer; Count: Integer; const bstrstring: WideString); safecall;
    property data: WideString read Get_data write Set_data;
    property length: Integer read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IHTMLCommentElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F813-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCommentElement2Disp = dispinterface
    ['{3050F813-98B5-11CF-BB82-00AA00BDCE0B}']
    property data: WideString dispid 1003;
    property length: Integer readonly dispid 1004;
    function substringData(offset: Integer; Count: Integer): WideString; dispid 1005;
    procedure appendData(const bstrstring: WideString); dispid 1006;
    procedure insertData(offset: Integer; const bstrstring: WideString); dispid 1007;
    procedure deleteData(offset: Integer; Count: Integer); dispid 1008;
    procedure replaceData(offset: Integer; Count: Integer; const bstrstring: WideString); dispid 1009;
  end;

// *********************************************************************//
// Interface: IHTMLCommentElement3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051073F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCommentElement3 = interface(IDispatch)
    ['{3051073F-98B5-11CF-BB82-00AA00BDCE0B}']
    function substringData(offset: Integer; Count: Integer): WideString; safecall;
    procedure insertData(offset: Integer; const bstrstring: WideString); safecall;
    procedure deleteData(offset: Integer; Count: Integer); safecall;
    procedure replaceData(offset: Integer; Count: Integer; const bstrstring: WideString); safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLCommentElement3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051073F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCommentElement3Disp = dispinterface
    ['{3051073F-98B5-11CF-BB82-00AA00BDCE0B}']
    function substringData(offset: Integer; Count: Integer): WideString; dispid 1010;
    procedure insertData(offset: Integer; const bstrstring: WideString); dispid 1011;
    procedure deleteData(offset: Integer; Count: Integer); dispid 1012;
    procedure replaceData(offset: Integer; Count: Integer; const bstrstring: WideString); dispid 1013;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLCommentElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F50A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLCommentElement = dispinterface
    ['{3050F50A-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property text: WideString dispid 1001;
    property atomic: Integer dispid 1002;
    property data: WideString dispid 1003;
    property length: Integer readonly dispid 1004;
    function substringData(offset: Integer; Count: Integer): WideString; dispid 1005;
    procedure appendData(const bstrstring: WideString); dispid 1006;
    procedure insertData(offset: Integer; const bstrstring: WideString); dispid 1007;
    procedure deleteData(offset: Integer; Count: Integer); dispid 1008;
    procedure replaceData(offset: Integer; Count: Integer; const bstrstring: WideString); dispid 1009;
    function ie9_substringData(offset: Integer; Count: Integer): WideString; dispid 1010;
    procedure ie9_insertData(offset: Integer; const bstrstring: WideString); dispid 1011;
    procedure ie9_deleteData(offset: Integer; Count: Integer); dispid 1012;
    procedure ie9_replaceData(offset: Integer; Count: Integer; const bstrstring: WideString); dispid 1013;
  end;

// *********************************************************************//
// Interface: IHTMLPhraseElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F20A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLPhraseElement = interface(IDispatch)
    ['{3050F20A-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  IHTMLPhraseElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F20A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLPhraseElementDisp = dispinterface
    ['{3050F20A-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// Interface: IHTMLPhraseElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F824-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLPhraseElement2 = interface(IDispatch)
    ['{3050F824-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_cite(const p: WideString); safecall;
    function Get_cite: WideString; safecall;
    procedure Set_dateTime(const p: WideString); safecall;
    function Get_dateTime: WideString; safecall;
    property cite: WideString read Get_cite write Set_cite;
    property dateTime: WideString read Get_dateTime write Set_dateTime;
  end;

// *********************************************************************//
// DispIntf:  IHTMLPhraseElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F824-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLPhraseElement2Disp = dispinterface
    ['{3050F824-98B5-11CF-BB82-00AA00BDCE0B}']
    property cite: WideString dispid 1001;
    property dateTime: WideString dispid 1002;
  end;

// *********************************************************************//
// Interface: IHTMLPhraseElement3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051043D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLPhraseElement3 = interface(IDispatch)
    ['{3051043D-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_cite(const p: WideString); safecall;
    function Get_cite: WideString; safecall;
    property cite: WideString read Get_cite write Set_cite;
  end;

// *********************************************************************//
// DispIntf:  IHTMLPhraseElement3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051043D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLPhraseElement3Disp = dispinterface
    ['{3051043D-98B5-11CF-BB82-00AA00BDCE0B}']
    property cite: WideString dispid 1150;
  end;

// *********************************************************************//
// Interface: IHTMLSpanElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3F3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSpanElement = interface(IDispatch)
    ['{3050F3F3-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  IHTMLSpanElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3F3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSpanElementDisp = dispinterface
    ['{3050F3F3-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  DispHTMLPhraseElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F52D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLPhraseElement = dispinterface
    ['{3050F52D-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property cite: WideString dispid 1001;
    property dateTime: WideString dispid 1002;
    property ie8_cite: WideString dispid 1150;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLSpanElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F548-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLSpanElement = dispinterface
    ['{3050F548-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    property prefix: OleVariant dispid -2147416992;
    property localName: OleVariant readonly dispid -2147416994;
    property namespaceURI: OleVariant readonly dispid -2147416993;
    property textContent: OleVariant dispid -2147416985;
    function isEqualNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416991;
    function lookupNamespaceURI(const pvarPrefix: OleVariant): OleVariant; dispid -2147416990;
    function lookupPrefix(const pvarNamespaceURI: OleVariant): OleVariant; dispid -2147416989;
    function isDefaultNamespace(const pvarNamespace: OleVariant): WordBool; dispid -2147416988;
    function ie9_appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416844;
    function ie9_insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147416843;
    function ie9_removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416842;
    function ie9_replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416841;
    function isSameNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416987;
    function compareDocumentPosition(const otherNode: IHTMLDOMNode): Word; dispid -2147416986;
    function isSupported(const feature: WideString; version: OleVariant): WordBool; dispid -2147416835;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    function querySelector(const v: WideString): IHTMLElement; dispid -2147416998;
    function querySelectorAll(const v: WideString): IHTMLDOMChildrenCollection; dispid -2147416997;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
  end;

// *********************************************************************//
// DispIntf:  HTMLTableEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F623-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLTableEvents2 = dispinterface
    ['{3050F623-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
  end;

// *********************************************************************//
// DispIntf:  HTMLTableEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F407-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLTableEvents = dispinterface
    ['{3050F407-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid -2147418102;
    function onclick: WordBool; dispid -600;
    function ondblclick: WordBool; dispid -601;
    function onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function ondragstart: WordBool; dispid -2147418101;
    function onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function onerrorupdate: WordBool; dispid -2147418099;
    function onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function ondragenter: WordBool; dispid -2147418090;
    function ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function ondrop: WordBool; dispid -2147418087;
    function onbeforecut: WordBool; dispid -2147418083;
    function oncut: WordBool; dispid -2147418086;
    function onbeforecopy: WordBool; dispid -2147418082;
    function oncopy: WordBool; dispid -2147418085;
    function onbeforepaste: WordBool; dispid -2147418081;
    function onpaste: WordBool; dispid -2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
  end;

// *********************************************************************//
// Interface: IHTMLTableSection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F23B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableSection = interface(IDispatch)
    ['{3050F23B-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    procedure Set_vAlign(const p: WideString); safecall;
    function Get_vAlign: WideString; safecall;
    procedure Set_bgColor(p: OleVariant); safecall;
    function Get_bgColor: OleVariant; safecall;
    function Get_rows: IHTMLElementCollection; safecall;
    function insertRow(index: Integer): IDispatch; safecall;
    procedure deleteRow(index: Integer); safecall;
    property align: WideString read Get_align write Set_align;
    property vAlign: WideString read Get_vAlign write Set_vAlign;
    property bgColor: OleVariant read Get_bgColor write Set_bgColor;
    property rows: IHTMLElementCollection read Get_rows;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableSectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F23B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableSectionDisp = dispinterface
    ['{3050F23B-98B5-11CF-BB82-00AA00BDCE0B}']
    property align: WideString dispid -2147418040;
    property vAlign: WideString dispid -2147413081;
    property bgColor: OleVariant dispid -501;
    property rows: IHTMLElementCollection readonly dispid 1000;
    function insertRow(index: Integer): IDispatch; dispid 1001;
    procedure deleteRow(index: Integer); dispid 1002;
  end;

// *********************************************************************//
// Interface: IHTMLTable
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F21E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTable = interface(IDispatch)
    ['{3050F21E-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_cols(p: Integer); safecall;
    function Get_cols: Integer; safecall;
    procedure Set_border(p: OleVariant); safecall;
    function Get_border: OleVariant; safecall;
    procedure Set_frame(const p: WideString); safecall;
    function Get_frame: WideString; safecall;
    procedure Set_rules(const p: WideString); safecall;
    function Get_rules: WideString; safecall;
    procedure Set_cellSpacing(p: OleVariant); safecall;
    function Get_cellSpacing: OleVariant; safecall;
    procedure Set_cellPadding(p: OleVariant); safecall;
    function Get_cellPadding: OleVariant; safecall;
    procedure Set_background(const p: WideString); safecall;
    function Get_background: WideString; safecall;
    procedure Set_bgColor(p: OleVariant); safecall;
    function Get_bgColor: OleVariant; safecall;
    procedure Set_borderColor(p: OleVariant); safecall;
    function Get_borderColor: OleVariant; safecall;
    procedure Set_borderColorLight(p: OleVariant); safecall;
    function Get_borderColorLight: OleVariant; safecall;
    procedure Set_borderColorDark(p: OleVariant); safecall;
    function Get_borderColorDark: OleVariant; safecall;
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    procedure refresh; safecall;
    function Get_rows: IHTMLElementCollection; safecall;
    procedure Set_width(p: OleVariant); safecall;
    function Get_width: OleVariant; safecall;
    procedure Set_height(p: OleVariant); safecall;
    function Get_height: OleVariant; safecall;
    procedure Set_dataPageSize(p: Integer); safecall;
    function Get_dataPageSize: Integer; safecall;
    procedure nextPage; safecall;
    procedure previousPage; safecall;
    function Get_tHead: IHTMLTableSection; safecall;
    function Get_tFoot: IHTMLTableSection; safecall;
    function Get_tBodies: IHTMLElementCollection; safecall;
    function Get_caption: IHTMLTableCaption; safecall;
    function createTHead: IDispatch; safecall;
    procedure deleteTHead; safecall;
    function createTFoot: IDispatch; safecall;
    procedure deleteTFoot; safecall;
    function createCaption: IHTMLTableCaption; safecall;
    procedure deleteCaption; safecall;
    function insertRow(index: Integer): IDispatch; safecall;
    procedure deleteRow(index: Integer); safecall;
    function Get_readyState: WideString; safecall;
    procedure Set_onreadystatechange(p: OleVariant); safecall;
    function Get_onreadystatechange: OleVariant; safecall;
    property cols: Integer read Get_cols write Set_cols;
    property border: OleVariant read Get_border write Set_border;
    property frame: WideString read Get_frame write Set_frame;
    property rules: WideString read Get_rules write Set_rules;
    property cellSpacing: OleVariant read Get_cellSpacing write Set_cellSpacing;
    property cellPadding: OleVariant read Get_cellPadding write Set_cellPadding;
    property background: WideString read Get_background write Set_background;
    property bgColor: OleVariant read Get_bgColor write Set_bgColor;
    property borderColor: OleVariant read Get_borderColor write Set_borderColor;
    property borderColorLight: OleVariant read Get_borderColorLight write Set_borderColorLight;
    property borderColorDark: OleVariant read Get_borderColorDark write Set_borderColorDark;
    property align: WideString read Get_align write Set_align;
    property rows: IHTMLElementCollection read Get_rows;
    property width: OleVariant read Get_width write Set_width;
    property height: OleVariant read Get_height write Set_height;
    property dataPageSize: Integer read Get_dataPageSize write Set_dataPageSize;
    property tHead: IHTMLTableSection read Get_tHead;
    property tFoot: IHTMLTableSection read Get_tFoot;
    property tBodies: IHTMLElementCollection read Get_tBodies;
    property caption: IHTMLTableCaption read Get_caption;
    property readyState: WideString read Get_readyState;
    property onreadystatechange: OleVariant read Get_onreadystatechange write Set_onreadystatechange;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F21E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableDisp = dispinterface
    ['{3050F21E-98B5-11CF-BB82-00AA00BDCE0B}']
    property cols: Integer dispid 1001;
    property border: OleVariant dispid 1002;
    property frame: WideString dispid 1004;
    property rules: WideString dispid 1003;
    property cellSpacing: OleVariant dispid 1005;
    property cellPadding: OleVariant dispid 1006;
    property background: WideString dispid -2147413111;
    property bgColor: OleVariant dispid -501;
    property borderColor: OleVariant dispid -2147413084;
    property borderColorLight: OleVariant dispid -2147413083;
    property borderColorDark: OleVariant dispid -2147413082;
    property align: WideString dispid -2147418039;
    procedure refresh; dispid 1015;
    property rows: IHTMLElementCollection readonly dispid 1016;
    property width: OleVariant dispid -2147418107;
    property height: OleVariant dispid -2147418106;
    property dataPageSize: Integer dispid 1017;
    procedure nextPage; dispid 1018;
    procedure previousPage; dispid 1019;
    property tHead: IHTMLTableSection readonly dispid 1020;
    property tFoot: IHTMLTableSection readonly dispid 1021;
    property tBodies: IHTMLElementCollection readonly dispid 1024;
    property caption: IHTMLTableCaption readonly dispid 1025;
    function createTHead: IDispatch; dispid 1026;
    procedure deleteTHead; dispid 1027;
    function createTFoot: IDispatch; dispid 1028;
    procedure deleteTFoot; dispid 1029;
    function createCaption: IHTMLTableCaption; dispid 1030;
    procedure deleteCaption; dispid 1031;
    function insertRow(index: Integer): IDispatch; dispid 1032;
    procedure deleteRow(index: Integer); dispid 1033;
    property readyState: WideString readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
  end;

// *********************************************************************//
// Interface: IHTMLTable2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4AD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTable2 = interface(IDispatch)
    ['{3050F4AD-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure firstPage; safecall;
    procedure lastPage; safecall;
    function Get_cells: IHTMLElementCollection; safecall;
    function moveRow(indexFrom: Integer; indexTo: Integer): IDispatch; safecall;
    property cells: IHTMLElementCollection read Get_cells;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTable2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4AD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTable2Disp = dispinterface
    ['{3050F4AD-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure firstPage; dispid 1035;
    procedure lastPage; dispid 1036;
    property cells: IHTMLElementCollection readonly dispid 1037;
    function moveRow(indexFrom: Integer; indexTo: Integer): IDispatch; dispid 1038;
  end;

// *********************************************************************//
// Interface: IHTMLTable3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F829-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTable3 = interface(IDispatch)
    ['{3050F829-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_summary(const p: WideString); safecall;
    function Get_summary: WideString; safecall;
    property summary: WideString read Get_summary write Set_summary;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTable3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F829-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTable3Disp = dispinterface
    ['{3050F829-98B5-11CF-BB82-00AA00BDCE0B}']
    property summary: WideString dispid 1039;
  end;

// *********************************************************************//
// Interface: IHTMLTable4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106C2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTable4 = interface(IDispatch)
    ['{305106C2-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure _Set_tHead(const p: IHTMLTableSection); safecall;
    function Get_tHead: IHTMLTableSection; safecall;
    procedure _Set_tFoot(const p: IHTMLTableSection); safecall;
    function Get_tFoot: IHTMLTableSection; safecall;
    procedure _Set_caption(const p: IHTMLTableCaption); safecall;
    function Get_caption: IHTMLTableCaption; safecall;
    function insertRow(index: Integer): IDispatch; safecall;
    procedure deleteRow(index: Integer); safecall;
    function createTBody: IHTMLTableSection; safecall;
    property tHead: IHTMLTableSection read Get_tHead write _Set_tHead;
    property tFoot: IHTMLTableSection read Get_tFoot write _Set_tFoot;
    property caption: IHTMLTableCaption read Get_caption write _Set_caption;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTable4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106C2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTable4Disp = dispinterface
    ['{305106C2-98B5-11CF-BB82-00AA00BDCE0B}']
    property tHead: IHTMLTableSection dispid 1040;
    property tFoot: IHTMLTableSection dispid 1041;
    property caption: IHTMLTableCaption dispid 1042;
    function insertRow(index: Integer): IDispatch; dispid 1043;
    procedure deleteRow(index: Integer); dispid 1044;
    function createTBody: IHTMLTableSection; dispid 1045;
  end;

// *********************************************************************//
// Interface: IHTMLTableCol
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F23A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableCol = interface(IDispatch)
    ['{3050F23A-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_span(p: Integer); safecall;
    function Get_span: Integer; safecall;
    procedure Set_width(p: OleVariant); safecall;
    function Get_width: OleVariant; safecall;
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    procedure Set_vAlign(const p: WideString); safecall;
    function Get_vAlign: WideString; safecall;
    property span: Integer read Get_span write Set_span;
    property width: OleVariant read Get_width write Set_width;
    property align: WideString read Get_align write Set_align;
    property vAlign: WideString read Get_vAlign write Set_vAlign;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableColDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F23A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableColDisp = dispinterface
    ['{3050F23A-98B5-11CF-BB82-00AA00BDCE0B}']
    property span: Integer dispid 1001;
    property width: OleVariant dispid -2147418107;
    property align: WideString dispid -2147418040;
    property vAlign: WideString dispid -2147413081;
  end;

// *********************************************************************//
// Interface: IHTMLTableCol2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F82A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableCol2 = interface(IDispatch)
    ['{3050F82A-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_ch(const p: WideString); safecall;
    function Get_ch: WideString; safecall;
    procedure Set_chOff(const p: WideString); safecall;
    function Get_chOff: WideString; safecall;
    property ch: WideString read Get_ch write Set_ch;
    property chOff: WideString read Get_chOff write Set_chOff;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableCol2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F82A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableCol2Disp = dispinterface
    ['{3050F82A-98B5-11CF-BB82-00AA00BDCE0B}']
    property ch: WideString dispid 1002;
    property chOff: WideString dispid 1003;
  end;

// *********************************************************************//
// Interface: IHTMLTableCol3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106C4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableCol3 = interface(IDispatch)
    ['{305106C4-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_ch(const p: WideString); safecall;
    function Get_ch: WideString; safecall;
    procedure Set_chOff(const p: WideString); safecall;
    function Get_chOff: WideString; safecall;
    property ch: WideString read Get_ch write Set_ch;
    property chOff: WideString read Get_chOff write Set_chOff;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableCol3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106C4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableCol3Disp = dispinterface
    ['{305106C4-98B5-11CF-BB82-00AA00BDCE0B}']
    property ch: WideString dispid 1004;
    property chOff: WideString dispid 1005;
  end;

// *********************************************************************//
// Interface: IHTMLTableSection2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5C7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableSection2 = interface(IDispatch)
    ['{3050F5C7-98B5-11CF-BB82-00AA00BDCE0B}']
    function moveRow(indexFrom: Integer; indexTo: Integer): IDispatch; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableSection2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5C7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableSection2Disp = dispinterface
    ['{3050F5C7-98B5-11CF-BB82-00AA00BDCE0B}']
    function moveRow(indexFrom: Integer; indexTo: Integer): IDispatch; dispid 1003;
  end;

// *********************************************************************//
// Interface: IHTMLTableSection3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F82B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableSection3 = interface(IDispatch)
    ['{3050F82B-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_ch(const p: WideString); safecall;
    function Get_ch: WideString; safecall;
    procedure Set_chOff(const p: WideString); safecall;
    function Get_chOff: WideString; safecall;
    property ch: WideString read Get_ch write Set_ch;
    property chOff: WideString read Get_chOff write Set_chOff;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableSection3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F82B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableSection3Disp = dispinterface
    ['{3050F82B-98B5-11CF-BB82-00AA00BDCE0B}']
    property ch: WideString dispid 1004;
    property chOff: WideString dispid 1005;
  end;

// *********************************************************************//
// Interface: IHTMLTableSection4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106C5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableSection4 = interface(IDispatch)
    ['{305106C5-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_ch(const p: WideString); safecall;
    function Get_ch: WideString; safecall;
    procedure Set_chOff(const p: WideString); safecall;
    function Get_chOff: WideString; safecall;
    function insertRow(index: Integer): IDispatch; safecall;
    procedure deleteRow(index: Integer); safecall;
    property ch: WideString read Get_ch write Set_ch;
    property chOff: WideString read Get_chOff write Set_chOff;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableSection4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106C5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableSection4Disp = dispinterface
    ['{305106C5-98B5-11CF-BB82-00AA00BDCE0B}']
    property ch: WideString dispid 1006;
    property chOff: WideString dispid 1007;
    function insertRow(index: Integer): IDispatch; dispid 1008;
    procedure deleteRow(index: Integer); dispid 1009;
  end;

// *********************************************************************//
// Interface: IHTMLTableRow
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F23C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableRow = interface(IDispatch)
    ['{3050F23C-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    procedure Set_vAlign(const p: WideString); safecall;
    function Get_vAlign: WideString; safecall;
    procedure Set_bgColor(p: OleVariant); safecall;
    function Get_bgColor: OleVariant; safecall;
    procedure Set_borderColor(p: OleVariant); safecall;
    function Get_borderColor: OleVariant; safecall;
    procedure Set_borderColorLight(p: OleVariant); safecall;
    function Get_borderColorLight: OleVariant; safecall;
    procedure Set_borderColorDark(p: OleVariant); safecall;
    function Get_borderColorDark: OleVariant; safecall;
    function Get_rowIndex: Integer; safecall;
    function Get_sectionRowIndex: Integer; safecall;
    function Get_cells: IHTMLElementCollection; safecall;
    function insertCell(index: Integer): IDispatch; safecall;
    procedure deleteCell(index: Integer); safecall;
    property align: WideString read Get_align write Set_align;
    property vAlign: WideString read Get_vAlign write Set_vAlign;
    property bgColor: OleVariant read Get_bgColor write Set_bgColor;
    property borderColor: OleVariant read Get_borderColor write Set_borderColor;
    property borderColorLight: OleVariant read Get_borderColorLight write Set_borderColorLight;
    property borderColorDark: OleVariant read Get_borderColorDark write Set_borderColorDark;
    property rowIndex: Integer read Get_rowIndex;
    property sectionRowIndex: Integer read Get_sectionRowIndex;
    property cells: IHTMLElementCollection read Get_cells;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableRowDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F23C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableRowDisp = dispinterface
    ['{3050F23C-98B5-11CF-BB82-00AA00BDCE0B}']
    property align: WideString dispid -2147418040;
    property vAlign: WideString dispid -2147413081;
    property bgColor: OleVariant dispid -501;
    property borderColor: OleVariant dispid -2147413084;
    property borderColorLight: OleVariant dispid -2147413083;
    property borderColorDark: OleVariant dispid -2147413082;
    property rowIndex: Integer readonly dispid 1000;
    property sectionRowIndex: Integer readonly dispid 1001;
    property cells: IHTMLElementCollection readonly dispid 1002;
    function insertCell(index: Integer): IDispatch; dispid 1003;
    procedure deleteCell(index: Integer); dispid 1004;
  end;

// *********************************************************************//
// Interface: IHTMLTableRow2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4A1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableRow2 = interface(IDispatch)
    ['{3050F4A1-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_height(p: OleVariant); safecall;
    function Get_height: OleVariant; safecall;
    property height: OleVariant read Get_height write Set_height;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableRow2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4A1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableRow2Disp = dispinterface
    ['{3050F4A1-98B5-11CF-BB82-00AA00BDCE0B}']
    property height: OleVariant dispid -2147418106;
  end;

// *********************************************************************//
// Interface: IHTMLTableRow3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F82C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableRow3 = interface(IDispatch)
    ['{3050F82C-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_ch(const p: WideString); safecall;
    function Get_ch: WideString; safecall;
    procedure Set_chOff(const p: WideString); safecall;
    function Get_chOff: WideString; safecall;
    property ch: WideString read Get_ch write Set_ch;
    property chOff: WideString read Get_chOff write Set_chOff;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableRow3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F82C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableRow3Disp = dispinterface
    ['{3050F82C-98B5-11CF-BB82-00AA00BDCE0B}']
    property ch: WideString dispid 1009;
    property chOff: WideString dispid 1010;
  end;

// *********************************************************************//
// Interface: IHTMLTableRow4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106C6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableRow4 = interface(IDispatch)
    ['{305106C6-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_ch(const p: WideString); safecall;
    function Get_ch: WideString; safecall;
    procedure Set_chOff(const p: WideString); safecall;
    function Get_chOff: WideString; safecall;
    function insertCell(index: Integer): IDispatch; safecall;
    procedure deleteCell(index: Integer); safecall;
    property ch: WideString read Get_ch write Set_ch;
    property chOff: WideString read Get_chOff write Set_chOff;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableRow4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106C6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableRow4Disp = dispinterface
    ['{305106C6-98B5-11CF-BB82-00AA00BDCE0B}']
    property ch: WideString dispid 1011;
    property chOff: WideString dispid 1012;
    function insertCell(index: Integer): IDispatch; dispid 1013;
    procedure deleteCell(index: Integer); dispid 1014;
  end;

// *********************************************************************//
// Interface: IHTMLTableRowMetrics
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F413-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableRowMetrics = interface(IDispatch)
    ['{3050F413-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_clientHeight: Integer; safecall;
    function Get_clientWidth: Integer; safecall;
    function Get_clientTop: Integer; safecall;
    function Get_clientLeft: Integer; safecall;
    property clientHeight: Integer read Get_clientHeight;
    property clientWidth: Integer read Get_clientWidth;
    property clientTop: Integer read Get_clientTop;
    property clientLeft: Integer read Get_clientLeft;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableRowMetricsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F413-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableRowMetricsDisp = dispinterface
    ['{3050F413-98B5-11CF-BB82-00AA00BDCE0B}']
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
  end;

// *********************************************************************//
// Interface: IHTMLTableCell
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F23D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableCell = interface(IDispatch)
    ['{3050F23D-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_rowSpan(p: Integer); safecall;
    function Get_rowSpan: Integer; safecall;
    procedure Set_colSpan(p: Integer); safecall;
    function Get_colSpan: Integer; safecall;
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    procedure Set_vAlign(const p: WideString); safecall;
    function Get_vAlign: WideString; safecall;
    procedure Set_bgColor(p: OleVariant); safecall;
    function Get_bgColor: OleVariant; safecall;
    procedure Set_noWrap(p: WordBool); safecall;
    function Get_noWrap: WordBool; safecall;
    procedure Set_background(const p: WideString); safecall;
    function Get_background: WideString; safecall;
    procedure Set_borderColor(p: OleVariant); safecall;
    function Get_borderColor: OleVariant; safecall;
    procedure Set_borderColorLight(p: OleVariant); safecall;
    function Get_borderColorLight: OleVariant; safecall;
    procedure Set_borderColorDark(p: OleVariant); safecall;
    function Get_borderColorDark: OleVariant; safecall;
    procedure Set_width(p: OleVariant); safecall;
    function Get_width: OleVariant; safecall;
    procedure Set_height(p: OleVariant); safecall;
    function Get_height: OleVariant; safecall;
    function Get_cellIndex: Integer; safecall;
    property rowSpan: Integer read Get_rowSpan write Set_rowSpan;
    property colSpan: Integer read Get_colSpan write Set_colSpan;
    property align: WideString read Get_align write Set_align;
    property vAlign: WideString read Get_vAlign write Set_vAlign;
    property bgColor: OleVariant read Get_bgColor write Set_bgColor;
    property noWrap: WordBool read Get_noWrap write Set_noWrap;
    property background: WideString read Get_background write Set_background;
    property borderColor: OleVariant read Get_borderColor write Set_borderColor;
    property borderColorLight: OleVariant read Get_borderColorLight write Set_borderColorLight;
    property borderColorDark: OleVariant read Get_borderColorDark write Set_borderColorDark;
    property width: OleVariant read Get_width write Set_width;
    property height: OleVariant read Get_height write Set_height;
    property cellIndex: Integer read Get_cellIndex;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableCellDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F23D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableCellDisp = dispinterface
    ['{3050F23D-98B5-11CF-BB82-00AA00BDCE0B}']
    property rowSpan: Integer dispid 2001;
    property colSpan: Integer dispid 2002;
    property align: WideString dispid -2147418040;
    property vAlign: WideString dispid -2147413081;
    property bgColor: OleVariant dispid -501;
    property noWrap: WordBool dispid -2147413107;
    property background: WideString dispid -2147413111;
    property borderColor: OleVariant dispid -2147413084;
    property borderColorLight: OleVariant dispid -2147413083;
    property borderColorDark: OleVariant dispid -2147413082;
    property width: OleVariant dispid -2147418107;
    property height: OleVariant dispid -2147418106;
    property cellIndex: Integer readonly dispid 2003;
  end;

// *********************************************************************//
// Interface: IHTMLTableCell2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F82D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableCell2 = interface(IDispatch)
    ['{3050F82D-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_abbr(const p: WideString); safecall;
    function Get_abbr: WideString; safecall;
    procedure Set_axis(const p: WideString); safecall;
    function Get_axis: WideString; safecall;
    procedure Set_ch(const p: WideString); safecall;
    function Get_ch: WideString; safecall;
    procedure Set_chOff(const p: WideString); safecall;
    function Get_chOff: WideString; safecall;
    procedure Set_headers(const p: WideString); safecall;
    function Get_headers: WideString; safecall;
    procedure Set_scope(const p: WideString); safecall;
    function Get_scope: WideString; safecall;
    property abbr: WideString read Get_abbr write Set_abbr;
    property axis: WideString read Get_axis write Set_axis;
    property ch: WideString read Get_ch write Set_ch;
    property chOff: WideString read Get_chOff write Set_chOff;
    property headers: WideString read Get_headers write Set_headers;
    property scope: WideString read Get_scope write Set_scope;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableCell2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F82D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableCell2Disp = dispinterface
    ['{3050F82D-98B5-11CF-BB82-00AA00BDCE0B}']
    property abbr: WideString dispid 2004;
    property axis: WideString dispid 2005;
    property ch: WideString dispid 2006;
    property chOff: WideString dispid 2007;
    property headers: WideString dispid 2008;
    property scope: WideString dispid 2009;
  end;

// *********************************************************************//
// Interface: IHTMLTableCell3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106C7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableCell3 = interface(IDispatch)
    ['{305106C7-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_ch(const p: WideString); safecall;
    function Get_ch: WideString; safecall;
    procedure Set_chOff(const p: WideString); safecall;
    function Get_chOff: WideString; safecall;
    property ch: WideString read Get_ch write Set_ch;
    property chOff: WideString read Get_chOff write Set_chOff;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTableCell3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106C7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTableCell3Disp = dispinterface
    ['{305106C7-98B5-11CF-BB82-00AA00BDCE0B}']
    property ch: WideString dispid 2010;
    property chOff: WideString dispid 2011;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLTable
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F532-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLTable = dispinterface
    ['{3050F532-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    property prefix: OleVariant dispid -2147416992;
    property localName: OleVariant readonly dispid -2147416994;
    property namespaceURI: OleVariant readonly dispid -2147416993;
    property textContent: OleVariant dispid -2147416985;
    function isEqualNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416991;
    function lookupNamespaceURI(const pvarPrefix: OleVariant): OleVariant; dispid -2147416990;
    function lookupPrefix(const pvarNamespaceURI: OleVariant): OleVariant; dispid -2147416989;
    function isDefaultNamespace(const pvarNamespace: OleVariant): WordBool; dispid -2147416988;
    function ie9_appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416844;
    function ie9_insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147416843;
    function ie9_removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416842;
    function ie9_replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416841;
    function isSameNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416987;
    function compareDocumentPosition(const otherNode: IHTMLDOMNode): Word; dispid -2147416986;
    function isSupported(const feature: WideString; version: OleVariant): WordBool; dispid -2147416835;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    function querySelector(const v: WideString): IHTMLElement; dispid -2147416998;
    function querySelectorAll(const v: WideString): IHTMLDOMChildrenCollection; dispid -2147416997;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property cols: Integer dispid 1001;
    property border: OleVariant dispid 1002;
    property frame: WideString dispid 1004;
    property rules: WideString dispid 1003;
    property cellSpacing: OleVariant dispid 1005;
    property cellPadding: OleVariant dispid 1006;
    property background: WideString dispid -2147413111;
    property bgColor: OleVariant dispid -501;
    property borderColor: OleVariant dispid -2147413084;
    property borderColorLight: OleVariant dispid -2147413083;
    property borderColorDark: OleVariant dispid -2147413082;
    property align: WideString dispid -2147418039;
    procedure refresh; dispid 1015;
    property rows: IHTMLElementCollection readonly dispid 1016;
    property width: OleVariant dispid -2147418107;
    property height: OleVariant dispid -2147418106;
    property dataPageSize: Integer dispid 1017;
    procedure nextPage; dispid 1018;
    procedure previousPage; dispid 1019;
    property tHead: IHTMLTableSection readonly dispid 1020;
    property tFoot: IHTMLTableSection readonly dispid 1021;
    property tBodies: IHTMLElementCollection readonly dispid 1024;
    property caption: IHTMLTableCaption readonly dispid 1025;
    function createTHead: IDispatch; dispid 1026;
    procedure deleteTHead; dispid 1027;
    function createTFoot: IDispatch; dispid 1028;
    procedure deleteTFoot; dispid 1029;
    function createCaption: IHTMLTableCaption; dispid 1030;
    procedure deleteCaption; dispid 1031;
    function insertRow(index: Integer): IDispatch; dispid 1032;
    procedure deleteRow(index: Integer); dispid 1033;
    procedure firstPage; dispid 1035;
    procedure lastPage; dispid 1036;
    property cells: IHTMLElementCollection readonly dispid 1037;
    function moveRow(indexFrom: Integer; indexTo: Integer): IDispatch; dispid 1038;
    property summary: WideString dispid 1039;
    property ie9_tHead: IHTMLTableSection dispid 1040;
    property ie9_tFoot: IHTMLTableSection dispid 1041;
    property ie9_caption: IHTMLTableCaption dispid 1042;
    function ie9_insertRow(index: Integer): IDispatch; dispid 1043;
    procedure ie9_deleteRow(index: Integer); dispid 1044;
    function createTBody: IHTMLTableSection; dispid 1045;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLTableCol
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F533-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLTableCol = dispinterface
    ['{3050F533-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property span: Integer dispid 1001;
    property width: OleVariant dispid -2147418107;
    property align: WideString dispid -2147418040;
    property vAlign: WideString dispid -2147413081;
    property ch: WideString dispid 1002;
    property chOff: WideString dispid 1003;
    property ie9_ch: WideString dispid 1004;
    property ie9_chOff: WideString dispid 1005;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLTableSection
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F534-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLTableSection = dispinterface
    ['{3050F534-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property align: WideString dispid -2147418040;
    property vAlign: WideString dispid -2147413081;
    property bgColor: OleVariant dispid -501;
    property rows: IHTMLElementCollection readonly dispid 1000;
    function insertRow(index: Integer): IDispatch; dispid 1001;
    procedure deleteRow(index: Integer); dispid 1002;
    function moveRow(indexFrom: Integer; indexTo: Integer): IDispatch; dispid 1003;
    property ch: WideString dispid 1004;
    property chOff: WideString dispid 1005;
    property ie9_ch: WideString dispid 1006;
    property ie9_chOff: WideString dispid 1007;
    function ie9_insertRow(index: Integer): IDispatch; dispid 1008;
    procedure ie9_deleteRow(index: Integer); dispid 1009;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLTableRow
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F535-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLTableRow = dispinterface
    ['{3050F535-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property align: WideString dispid -2147418040;
    property vAlign: WideString dispid -2147413081;
    property bgColor: OleVariant dispid -501;
    property borderColor: OleVariant dispid -2147413084;
    property borderColorLight: OleVariant dispid -2147413083;
    property borderColorDark: OleVariant dispid -2147413082;
    property rowIndex: Integer readonly dispid 1000;
    property sectionRowIndex: Integer readonly dispid 1001;
    property cells: IHTMLElementCollection readonly dispid 1002;
    function insertCell(index: Integer): IDispatch; dispid 1003;
    procedure deleteCell(index: Integer); dispid 1004;
    property height: OleVariant dispid -2147418106;
    property ch: WideString dispid 1009;
    property chOff: WideString dispid 1010;
    property ie9_ch: WideString dispid 1011;
    property ie9_chOff: WideString dispid 1012;
    function ie9_insertCell(index: Integer): IDispatch; dispid 1013;
    procedure ie9_deleteCell(index: Integer); dispid 1014;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLTableCell
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F536-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLTableCell = dispinterface
    ['{3050F536-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property rowSpan: Integer dispid 2001;
    property colSpan: Integer dispid 2002;
    property align: WideString dispid -2147418040;
    property vAlign: WideString dispid -2147413081;
    property bgColor: OleVariant dispid -501;
    property noWrap: WordBool dispid -2147413107;
    property background: WideString dispid -2147413111;
    property borderColor: OleVariant dispid -2147413084;
    property borderColorLight: OleVariant dispid -2147413083;
    property borderColorDark: OleVariant dispid -2147413082;
    property width: OleVariant dispid -2147418107;
    property height: OleVariant dispid -2147418106;
    property cellIndex: Integer readonly dispid 2003;
    property abbr: WideString dispid 2004;
    property axis: WideString dispid 2005;
    property ch: WideString dispid 2006;
    property chOff: WideString dispid 2007;
    property headers: WideString dispid 2008;
    property scope: WideString dispid 2009;
    property ie9_ch: WideString dispid 2010;
    property ie9_chOff: WideString dispid 2011;
  end;

// *********************************************************************//
// DispIntf:  HTMLScriptEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F621-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLScriptEvents2 = dispinterface
    ['{3050F621-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
    procedure onerror(const pEvtObj: IHTMLEventObj); dispid 1002;
  end;

// *********************************************************************//
// DispIntf:  HTMLScriptEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F3E2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLScriptEvents = dispinterface
    ['{3050F3E2-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid -2147418102;
    function onclick: WordBool; dispid -600;
    function ondblclick: WordBool; dispid -601;
    function onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function ondragstart: WordBool; dispid -2147418101;
    function onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function onerrorupdate: WordBool; dispid -2147418099;
    function onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function ondragenter: WordBool; dispid -2147418090;
    function ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function ondrop: WordBool; dispid -2147418087;
    function onbeforecut: WordBool; dispid -2147418083;
    function oncut: WordBool; dispid -2147418086;
    function onbeforecopy: WordBool; dispid -2147418082;
    function oncopy: WordBool; dispid -2147418085;
    function onbeforepaste: WordBool; dispid -2147418081;
    function onpaste: WordBool; dispid -2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
    procedure onerror; dispid 1002;
  end;

// *********************************************************************//
// Interface: IHTMLScriptElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F28B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLScriptElement = interface(IDispatch)
    ['{3050F28B-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_src(const p: WideString); safecall;
    function Get_src: WideString; safecall;
    procedure Set_htmlFor(const p: WideString); safecall;
    function Get_htmlFor: WideString; safecall;
    procedure Set_event(const p: WideString); safecall;
    function Get_event: WideString; safecall;
    procedure Set_text(const p: WideString); safecall;
    function Get_text: WideString; safecall;
    procedure Set_defer(p: WordBool); safecall;
    function Get_defer: WordBool; safecall;
    function Get_readyState: WideString; safecall;
    procedure Set_onerror(p: OleVariant); safecall;
    function Get_onerror: OleVariant; safecall;
    procedure Set_type_(const p: WideString); safecall;
    function Get_type_: WideString; safecall;
    property src: WideString read Get_src write Set_src;
    property htmlFor: WideString read Get_htmlFor write Set_htmlFor;
    property event: WideString read Get_event write Set_event;
    property text: WideString read Get_text write Set_text;
    property defer: WordBool read Get_defer write Set_defer;
    property readyState: WideString read Get_readyState;
    property onerror: OleVariant read Get_onerror write Set_onerror;
    property type_: WideString read Get_type_ write Set_type_;
  end;

// *********************************************************************//
// DispIntf:  IHTMLScriptElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F28B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLScriptElementDisp = dispinterface
    ['{3050F28B-98B5-11CF-BB82-00AA00BDCE0B}']
    property src: WideString dispid 1001;
    property htmlFor: WideString dispid 1004;
    property event: WideString dispid 1005;
    property text: WideString dispid 1006;
    property defer: WordBool dispid 1007;
    property readyState: WideString readonly dispid -2147412996;
    property onerror: OleVariant dispid -2147412083;
    property type_: WideString dispid 1009;
  end;

// *********************************************************************//
// Interface: IHTMLScriptElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F828-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLScriptElement2 = interface(IDispatch)
    ['{3050F828-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_charset(const p: WideString); safecall;
    function Get_charset: WideString; safecall;
    property charset: WideString read Get_charset write Set_charset;
  end;

// *********************************************************************//
// DispIntf:  IHTMLScriptElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F828-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLScriptElement2Disp = dispinterface
    ['{3050F828-98B5-11CF-BB82-00AA00BDCE0B}']
    property charset: WideString dispid 1010;
  end;

// *********************************************************************//
// Interface: IHTMLScriptElement3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510447-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLScriptElement3 = interface(IDispatch)
    ['{30510447-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_src(const p: WideString); safecall;
    function Get_src: WideString; safecall;
    property src: WideString read Get_src write Set_src;
  end;

// *********************************************************************//
// DispIntf:  IHTMLScriptElement3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510447-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLScriptElement3Disp = dispinterface
    ['{30510447-98B5-11CF-BB82-00AA00BDCE0B}']
    property src: WideString dispid 1150;
  end;

// *********************************************************************//
// Interface: IHTMLScriptElement4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510801-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLScriptElement4 = interface(IDispatch)
    ['{30510801-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_usedCharset: WideString; safecall;
    property usedCharset: WideString read Get_usedCharset;
  end;

// *********************************************************************//
// DispIntf:  IHTMLScriptElement4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510801-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLScriptElement4Disp = dispinterface
    ['{30510801-98B5-11CF-BB82-00AA00BDCE0B}']
    property usedCharset: WideString readonly dispid 1011;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLScriptElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F530-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLScriptElement = dispinterface
    ['{3050F530-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property src: WideString dispid 1001;
    property htmlFor: WideString dispid 1004;
    property event: WideString dispid 1005;
    property text: WideString dispid 1006;
    property defer: WordBool dispid 1007;
    property type_: WideString dispid 1009;
    property charset: WideString dispid 1010;
    property ie8_src: WideString dispid 1150;
    property usedCharset: WideString readonly dispid 1011;
  end;

// *********************************************************************//
// Interface: IHTMLNoShowElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F38A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLNoShowElement = interface(IDispatch)
    ['{3050F38A-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  IHTMLNoShowElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F38A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLNoShowElementDisp = dispinterface
    ['{3050F38A-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  DispHTMLNoShowElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F528-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLNoShowElement = dispinterface
    ['{3050F528-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
  end;

// *********************************************************************//
// DispIntf:  HTMLObjectElementEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F620-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLObjectElementEvents2 = dispinterface
    ['{3050F620-98B5-11CF-BB82-00AA00BDCE0B}']
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    function onerror(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418093;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -2147418092;
  end;

// *********************************************************************//
// DispIntf:  HTMLObjectElementEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F3C4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLObjectElementEvents = dispinterface
    ['{3050F3C4-98B5-11CF-BB82-00AA00BDCE0B}']
    function onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function onerrorupdate: WordBool; dispid -2147418099;
    function onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    function onerror: WordBool; dispid -2147418093;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -2147418092;
  end;

// *********************************************************************//
// Interface: IHTMLObjectElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F24F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLObjectElement = interface(IDispatch)
    ['{3050F24F-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_object_: IDispatch; safecall;
    function Get_classid: WideString; safecall;
    function Get_data: WideString; safecall;
    procedure _Set_recordset(const p: IDispatch); safecall;
    function Get_recordset: IDispatch; safecall;
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_codeBase(const p: WideString); safecall;
    function Get_codeBase: WideString; safecall;
    procedure Set_codeType(const p: WideString); safecall;
    function Get_codeType: WideString; safecall;
    procedure Set_code(const p: WideString); safecall;
    function Get_code: WideString; safecall;
    function Get_BaseHref: WideString; safecall;
    procedure Set_type_(const p: WideString); safecall;
    function Get_type_: WideString; safecall;
    function Get_form: IHTMLFormElement; safecall;
    procedure Set_width(p: OleVariant); safecall;
    function Get_width: OleVariant; safecall;
    procedure Set_height(p: OleVariant); safecall;
    function Get_height: OleVariant; safecall;
    function Get_readyState: Integer; safecall;
    procedure Set_onreadystatechange(p: OleVariant); safecall;
    function Get_onreadystatechange: OleVariant; safecall;
    procedure Set_onerror(p: OleVariant); safecall;
    function Get_onerror: OleVariant; safecall;
    procedure Set_altHtml(const p: WideString); safecall;
    function Get_altHtml: WideString; safecall;
    procedure Set_vspace(p: Integer); safecall;
    function Get_vspace: Integer; safecall;
    procedure Set_hspace(p: Integer); safecall;
    function Get_hspace: Integer; safecall;
    property object_: IDispatch read Get_object_;
    property classid: WideString read Get_classid;
    property data: WideString read Get_data;
    property recordset: IDispatch read Get_recordset write _Set_recordset;
    property align: WideString read Get_align write Set_align;
    property name: WideString read Get_name write Set_name;
    property codeBase: WideString read Get_codeBase write Set_codeBase;
    property codeType: WideString read Get_codeType write Set_codeType;
    property code: WideString read Get_code write Set_code;
    property BaseHref: WideString read Get_BaseHref;
    property type_: WideString read Get_type_ write Set_type_;
    property form: IHTMLFormElement read Get_form;
    property width: OleVariant read Get_width write Set_width;
    property height: OleVariant read Get_height write Set_height;
    property readyState: Integer read Get_readyState;
    property onreadystatechange: OleVariant read Get_onreadystatechange write Set_onreadystatechange;
    property onerror: OleVariant read Get_onerror write Set_onerror;
    property altHtml: WideString read Get_altHtml write Set_altHtml;
    property vspace: Integer read Get_vspace write Set_vspace;
    property hspace: Integer read Get_hspace write Set_hspace;
  end;

// *********************************************************************//
// DispIntf:  IHTMLObjectElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F24F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLObjectElementDisp = dispinterface
    ['{3050F24F-98B5-11CF-BB82-00AA00BDCE0B}']
    property object_: IDispatch readonly dispid -2147415111;
    property classid: WideString readonly dispid -2147415110;
    property data: WideString readonly dispid -2147415109;
    property recordset: IDispatch dispid -2147415107;
    property align: WideString dispid -2147418039;
    property name: WideString dispid -2147418112;
    property codeBase: WideString dispid -2147415106;
    property codeType: WideString dispid -2147415105;
    property code: WideString dispid -2147415104;
    property BaseHref: WideString readonly dispid -2147418110;
    property type_: WideString dispid -2147415103;
    property form: IHTMLFormElement readonly dispid -2147416108;
    property width: OleVariant dispid -2147418107;
    property height: OleVariant dispid -2147418106;
    property readyState: Integer readonly dispid -2147415102;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onerror: OleVariant dispid -2147412083;
    property altHtml: WideString dispid -2147415101;
    property vspace: Integer dispid -2147415100;
    property hspace: Integer dispid -2147415099;
  end;

// *********************************************************************//
// Interface: IHTMLObjectElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4CD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLObjectElement2 = interface(IDispatch)
    ['{3050F4CD-98B5-11CF-BB82-00AA00BDCE0B}']
    function namedRecordset(const dataMember: WideString; const hierarchy: OleVariant): IDispatch; safecall;
    procedure Set_classid(const p: WideString); safecall;
    function Get_classid: WideString; safecall;
    procedure Set_data(const p: WideString); safecall;
    function Get_data: WideString; safecall;
    property classid: WideString read Get_classid write Set_classid;
    property data: WideString read Get_data write Set_data;
  end;

// *********************************************************************//
// DispIntf:  IHTMLObjectElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4CD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLObjectElement2Disp = dispinterface
    ['{3050F4CD-98B5-11CF-BB82-00AA00BDCE0B}']
    function namedRecordset(const dataMember: WideString; const hierarchy: OleVariant): IDispatch; dispid -2147415098;
    property classid: WideString dispid -2147415110;
    property data: WideString dispid -2147415109;
  end;

// *********************************************************************//
// Interface: IHTMLObjectElement3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F827-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLObjectElement3 = interface(IDispatch)
    ['{3050F827-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_archive(const p: WideString); safecall;
    function Get_archive: WideString; safecall;
    procedure Set_alt(const p: WideString); safecall;
    function Get_alt: WideString; safecall;
    procedure Set_declare(p: WordBool); safecall;
    function Get_declare: WordBool; safecall;
    procedure Set_standby(const p: WideString); safecall;
    function Get_standby: WideString; safecall;
    procedure Set_border(p: OleVariant); safecall;
    function Get_border: OleVariant; safecall;
    procedure Set_useMap(const p: WideString); safecall;
    function Get_useMap: WideString; safecall;
    property archive: WideString read Get_archive write Set_archive;
    property alt: WideString read Get_alt write Set_alt;
    property declare: WordBool read Get_declare write Set_declare;
    property standby: WideString read Get_standby write Set_standby;
    property border: OleVariant read Get_border write Set_border;
    property useMap: WideString read Get_useMap write Set_useMap;
  end;

// *********************************************************************//
// DispIntf:  IHTMLObjectElement3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F827-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLObjectElement3Disp = dispinterface
    ['{3050F827-98B5-11CF-BB82-00AA00BDCE0B}']
    property archive: WideString dispid -2147415097;
    property alt: WideString dispid -2147415096;
    property declare: WordBool dispid -2147415095;
    property standby: WideString dispid -2147415094;
    property border: OleVariant dispid -2147415093;
    property useMap: WideString dispid -2147415092;
  end;

// *********************************************************************//
// Interface: IHTMLObjectElement4
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051043E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLObjectElement4 = interface(IDispatch)
    ['{3051043E-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_contentDocument: IDispatch; safecall;
    procedure Set_codeBase(const p: WideString); safecall;
    function Get_codeBase: WideString; safecall;
    procedure Set_data(const p: WideString); safecall;
    function Get_data: WideString; safecall;
    property contentDocument: IDispatch read Get_contentDocument;
    property codeBase: WideString read Get_codeBase write Set_codeBase;
    property data: WideString read Get_data write Set_data;
  end;

// *********************************************************************//
// DispIntf:  IHTMLObjectElement4Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051043E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLObjectElement4Disp = dispinterface
    ['{3051043E-98B5-11CF-BB82-00AA00BDCE0B}']
    property contentDocument: IDispatch readonly dispid -2147415082;
    property codeBase: WideString dispid -2147415081;
    property data: WideString dispid -2147415080;
  end;

// *********************************************************************//
// Interface: IHTMLObjectElement5
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104B5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLObjectElement5 = interface(IDispatch)
    ['{305104B5-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_object_(const p: WideString); safecall;
    function Get_object_: WideString; safecall;
    property object_: WideString read Get_object_ write Set_object_;
  end;

// *********************************************************************//
// DispIntf:  IHTMLObjectElement5Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104B5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLObjectElement5Disp = dispinterface
    ['{305104B5-98B5-11CF-BB82-00AA00BDCE0B}']
    property object_: WideString dispid -2147415079;
  end;

// *********************************************************************//
// Interface: IHTMLParamElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F83D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLParamElement = interface(IDispatch)
    ['{3050F83D-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_value(const p: WideString); safecall;
    function Get_value: WideString; safecall;
    procedure Set_type_(const p: WideString); safecall;
    function Get_type_: WideString; safecall;
    procedure Set_valueType(const p: WideString); safecall;
    function Get_valueType: WideString; safecall;
    property name: WideString read Get_name write Set_name;
    property value: WideString read Get_value write Set_value;
    property type_: WideString read Get_type_ write Set_type_;
    property valueType: WideString read Get_valueType write Set_valueType;
  end;

// *********************************************************************//
// DispIntf:  IHTMLParamElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F83D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLParamElementDisp = dispinterface
    ['{3050F83D-98B5-11CF-BB82-00AA00BDCE0B}']
    property name: WideString dispid 1001;
    property value: WideString dispid 1002;
    property type_: WideString dispid 1003;
    property valueType: WideString dispid 1004;
  end;

// *********************************************************************//
// Interface: IHTMLParamElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510444-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLParamElement2 = interface(IDispatch)
    ['{30510444-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_type_(const p: WideString); safecall;
    function Get_type_: WideString; safecall;
    procedure Set_value(const p: WideString); safecall;
    function Get_value: WideString; safecall;
    procedure Set_valueType(const p: WideString); safecall;
    function Get_valueType: WideString; safecall;
    property name: WideString read Get_name write Set_name;
    property type_: WideString read Get_type_ write Set_type_;
    property value: WideString read Get_value write Set_value;
    property valueType: WideString read Get_valueType write Set_valueType;
  end;

// *********************************************************************//
// DispIntf:  IHTMLParamElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510444-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLParamElement2Disp = dispinterface
    ['{30510444-98B5-11CF-BB82-00AA00BDCE0B}']
    property name: WideString dispid 1001;
    property type_: WideString dispid 1003;
    property value: WideString dispid 1002;
    property valueType: WideString dispid 1150;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLObjectElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F529-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLObjectElement = dispinterface
    ['{3050F529-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    property prefix: OleVariant dispid -2147416992;
    property localName: OleVariant readonly dispid -2147416994;
    property namespaceURI: OleVariant readonly dispid -2147416993;
    property textContent: OleVariant dispid -2147416985;
    function isEqualNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416991;
    function lookupNamespaceURI(const pvarPrefix: OleVariant): OleVariant; dispid -2147416990;
    function lookupPrefix(const pvarNamespaceURI: OleVariant): OleVariant; dispid -2147416989;
    function isDefaultNamespace(const pvarNamespace: OleVariant): WordBool; dispid -2147416988;
    function ie9_appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416844;
    function ie9_insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147416843;
    function ie9_removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416842;
    function ie9_replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416841;
    function isSameNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416987;
    function compareDocumentPosition(const otherNode: IHTMLDOMNode): Word; dispid -2147416986;
    function isSupported(const feature: WideString; version: OleVariant): WordBool; dispid -2147416835;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    function querySelector(const v: WideString): IHTMLElement; dispid -2147416998;
    function querySelectorAll(const v: WideString): IHTMLDOMChildrenCollection; dispid -2147416997;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property object_: IDispatch readonly dispid -2147415111;
    property recordset: IDispatch dispid -2147415107;
    property align: WideString dispid -2147418039;
    property name: WideString dispid -2147418112;
    property codeBase: WideString dispid -2147415106;
    property codeType: WideString dispid -2147415105;
    property code: WideString dispid -2147415104;
    property BaseHref: WideString readonly dispid -2147418110;
    property type_: WideString dispid -2147415103;
    property form: IHTMLFormElement readonly dispid -2147416108;
    property width: OleVariant dispid -2147418107;
    property height: OleVariant dispid -2147418106;
    property altHtml: WideString dispid -2147415101;
    property vspace: Integer dispid -2147415100;
    property hspace: Integer dispid -2147415099;
    function namedRecordset(const dataMember: WideString; const hierarchy: OleVariant): IDispatch; dispid -2147415098;
    property classid: WideString dispid -2147415110;
    property data: WideString dispid -2147415109;
    property archive: WideString dispid -2147415097;
    property alt: WideString dispid -2147415096;
    property declare: WordBool dispid -2147415095;
    property standby: WideString dispid -2147415094;
    property border: OleVariant dispid -2147415093;
    property useMap: WideString dispid -2147415092;
    property contentDocument: IDispatch readonly dispid -2147415082;
    property ie8_codeBase: WideString dispid -2147415081;
    property ie8_data: WideString dispid -2147415080;
    function getSVGDocument: IDispatch; dispid -2147418033;
    property ie9_object: WideString dispid -2147415079;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLParamElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F590-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLParamElement = dispinterface
    ['{3050F590-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property name: WideString dispid 1001;
    property value: WideString dispid 1002;
    property type_: WideString dispid 1003;
    property valueType: WideString dispid 1004;
    property ie8_valueType: WideString dispid 1150;
  end;

// *********************************************************************//
// DispIntf:  HTMLFrameSiteEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F7FF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLFrameSiteEvents2 = dispinterface
    ['{3050F7FF-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
    procedure onload(const pEvtObj: IHTMLEventObj); dispid 1003;
  end;

// *********************************************************************//
// DispIntf:  HTMLFrameSiteEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F800-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLFrameSiteEvents = dispinterface
    ['{3050F800-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid -2147418102;
    function onclick: WordBool; dispid -600;
    function ondblclick: WordBool; dispid -601;
    function onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function ondragstart: WordBool; dispid -2147418101;
    function onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function onerrorupdate: WordBool; dispid -2147418099;
    function onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function ondragenter: WordBool; dispid -2147418090;
    function ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function ondrop: WordBool; dispid -2147418087;
    function onbeforecut: WordBool; dispid -2147418083;
    function oncut: WordBool; dispid -2147418086;
    function onbeforecopy: WordBool; dispid -2147418082;
    function oncopy: WordBool; dispid -2147418085;
    function onbeforepaste: WordBool; dispid -2147418081;
    function onpaste: WordBool; dispid -2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
    procedure onload; dispid 1003;
  end;

// *********************************************************************//
// Interface: IHTMLFrameBase2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F6DB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameBase2 = interface(IDispatch)
    ['{3050F6DB-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_contentWindow: IHTMLWindow2; safecall;
    procedure Set_onload(p: OleVariant); safecall;
    function Get_onload: OleVariant; safecall;
    procedure Set_onreadystatechange(p: OleVariant); safecall;
    function Get_onreadystatechange: OleVariant; safecall;
    function Get_readyState: WideString; safecall;
    procedure Set_allowTransparency(p: WordBool); safecall;
    function Get_allowTransparency: WordBool; safecall;
    property contentWindow: IHTMLWindow2 read Get_contentWindow;
    property onload: OleVariant read Get_onload write Set_onload;
    property onreadystatechange: OleVariant read Get_onreadystatechange write Set_onreadystatechange;
    property readyState: WideString read Get_readyState;
    property allowTransparency: WordBool read Get_allowTransparency write Set_allowTransparency;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFrameBase2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F6DB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameBase2Disp = dispinterface
    ['{3050F6DB-98B5-11CF-BB82-00AA00BDCE0B}']
    property contentWindow: IHTMLWindow2 readonly dispid -2147415103;
    property onload: OleVariant dispid -2147412080;
    property onreadystatechange: OleVariant dispid -2147412087;
    property readyState: WideString readonly dispid -2147412996;
    property allowTransparency: WordBool dispid -2147412906;
  end;

// *********************************************************************//
// Interface: IHTMLFrameBase3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F82E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameBase3 = interface(IDispatch)
    ['{3050F82E-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_longDesc(const p: WideString); safecall;
    function Get_longDesc: WideString; safecall;
    property longDesc: WideString read Get_longDesc write Set_longDesc;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFrameBase3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F82E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameBase3Disp = dispinterface
    ['{3050F82E-98B5-11CF-BB82-00AA00BDCE0B}']
    property longDesc: WideString dispid -2147415102;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLFrameBase
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F541-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLFrameBase = dispinterface
    ['{3050F541-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property src: WideString dispid -2147415112;
    property name: WideString dispid -2147418112;
    property border: OleVariant dispid -2147415110;
    property frameBorder: WideString dispid -2147415109;
    property frameSpacing: OleVariant dispid -2147415108;
    property marginWidth: OleVariant dispid -2147415107;
    property marginHeight: OleVariant dispid -2147415106;
    property noResize: WordBool dispid -2147415105;
    property scrolling: WideString dispid -2147415104;
    property contentWindow: IHTMLWindow2 readonly dispid -2147415103;
    property allowTransparency: WordBool dispid -2147412906;
    property longDesc: WideString dispid -2147415102;
  end;

// *********************************************************************//
// Interface: IHTMLFrameElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F313-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameElement = interface(IDispatch)
    ['{3050F313-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_borderColor(p: OleVariant); safecall;
    function Get_borderColor: OleVariant; safecall;
    property borderColor: OleVariant read Get_borderColor write Set_borderColor;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFrameElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F313-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameElementDisp = dispinterface
    ['{3050F313-98B5-11CF-BB82-00AA00BDCE0B}']
    property borderColor: OleVariant dispid -2147414111;
  end;

// *********************************************************************//
// Interface: IHTMLFrameElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F7F5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameElement2 = interface(IDispatch)
    ['{3050F7F5-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_height(p: OleVariant); safecall;
    function Get_height: OleVariant; safecall;
    procedure Set_width(p: OleVariant); safecall;
    function Get_width: OleVariant; safecall;
    property height: OleVariant read Get_height write Set_height;
    property width: OleVariant read Get_width write Set_width;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFrameElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F7F5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameElement2Disp = dispinterface
    ['{3050F7F5-98B5-11CF-BB82-00AA00BDCE0B}']
    property height: OleVariant dispid -2147418106;
    property width: OleVariant dispid -2147418107;
  end;

// *********************************************************************//
// Interface: IHTMLFrameElement3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051042D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameElement3 = interface(IDispatch)
    ['{3051042D-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_contentDocument: IDispatch; safecall;
    procedure Set_src(const p: WideString); safecall;
    function Get_src: WideString; safecall;
    procedure Set_longDesc(const p: WideString); safecall;
    function Get_longDesc: WideString; safecall;
    procedure Set_frameBorder(const p: WideString); safecall;
    function Get_frameBorder: WideString; safecall;
    property contentDocument: IDispatch read Get_contentDocument;
    property src: WideString read Get_src write Set_src;
    property longDesc: WideString read Get_longDesc write Set_longDesc;
    property frameBorder: WideString read Get_frameBorder write Set_frameBorder;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFrameElement3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051042D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameElement3Disp = dispinterface
    ['{3051042D-98B5-11CF-BB82-00AA00BDCE0B}']
    property contentDocument: IDispatch readonly dispid -2147413992;
    property src: WideString dispid -2147413991;
    property longDesc: WideString dispid -2147413990;
    property frameBorder: WideString dispid -2147413989;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLFrameElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F513-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLFrameElement = dispinterface
    ['{3050F513-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    property prefix: OleVariant dispid -2147416992;
    property localName: OleVariant readonly dispid -2147416994;
    property namespaceURI: OleVariant readonly dispid -2147416993;
    property textContent: OleVariant dispid -2147416985;
    function isEqualNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416991;
    function lookupNamespaceURI(const pvarPrefix: OleVariant): OleVariant; dispid -2147416990;
    function lookupPrefix(const pvarNamespaceURI: OleVariant): OleVariant; dispid -2147416989;
    function isDefaultNamespace(const pvarNamespace: OleVariant): WordBool; dispid -2147416988;
    function ie9_appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416844;
    function ie9_insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147416843;
    function ie9_removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416842;
    function ie9_replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416841;
    function isSameNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416987;
    function compareDocumentPosition(const otherNode: IHTMLDOMNode): Word; dispid -2147416986;
    function isSupported(const feature: WideString; version: OleVariant): WordBool; dispid -2147416835;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    function querySelector(const v: WideString): IHTMLElement; dispid -2147416998;
    function querySelectorAll(const v: WideString): IHTMLDOMChildrenCollection; dispid -2147416997;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property src: WideString dispid -2147415112;
    property name: WideString dispid -2147418112;
    property border: OleVariant dispid -2147415110;
    property frameBorder: WideString dispid -2147415109;
    property frameSpacing: OleVariant dispid -2147415108;
    property marginWidth: OleVariant dispid -2147415107;
    property marginHeight: OleVariant dispid -2147415106;
    property noResize: WordBool dispid -2147415105;
    property scrolling: WideString dispid -2147415104;
    property contentWindow: IHTMLWindow2 readonly dispid -2147415103;
    property allowTransparency: WordBool dispid -2147412906;
    property longDesc: WideString dispid -2147415102;
    property borderColor: OleVariant dispid -2147414111;
    property height: OleVariant dispid -2147418106;
    property width: OleVariant dispid -2147418107;
    property contentDocument: IDispatch readonly dispid -2147413992;
    property ie8_src: WideString dispid -2147413991;
    property ie8_longDesc: WideString dispid -2147413990;
    property ie8_frameBorder: WideString dispid -2147413989;
    function getSVGDocument: IDispatch; dispid -2147418033;
  end;

// *********************************************************************//
// Interface: IHTMLIFrameElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F315-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLIFrameElement = interface(IDispatch)
    ['{3050F315-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_vspace(p: Integer); safecall;
    function Get_vspace: Integer; safecall;
    procedure Set_hspace(p: Integer); safecall;
    function Get_hspace: Integer; safecall;
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    property vspace: Integer read Get_vspace write Set_vspace;
    property hspace: Integer read Get_hspace write Set_hspace;
    property align: WideString read Get_align write Set_align;
  end;

// *********************************************************************//
// DispIntf:  IHTMLIFrameElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F315-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLIFrameElementDisp = dispinterface
    ['{3050F315-98B5-11CF-BB82-00AA00BDCE0B}']
    property vspace: Integer dispid -2147414111;
    property hspace: Integer dispid -2147414110;
    property align: WideString dispid -2147418039;
  end;

// *********************************************************************//
// Interface: IHTMLIFrameElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4E6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLIFrameElement2 = interface(IDispatch)
    ['{3050F4E6-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_height(p: OleVariant); safecall;
    function Get_height: OleVariant; safecall;
    procedure Set_width(p: OleVariant); safecall;
    function Get_width: OleVariant; safecall;
    property height: OleVariant read Get_height write Set_height;
    property width: OleVariant read Get_width write Set_width;
  end;

// *********************************************************************//
// DispIntf:  IHTMLIFrameElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F4E6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLIFrameElement2Disp = dispinterface
    ['{3050F4E6-98B5-11CF-BB82-00AA00BDCE0B}']
    property height: OleVariant dispid -2147418106;
    property width: OleVariant dispid -2147418107;
  end;

// *********************************************************************//
// Interface: IHTMLIFrameElement3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510433-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLIFrameElement3 = interface(IDispatch)
    ['{30510433-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_contentDocument: IDispatch; safecall;
    procedure Set_src(const p: WideString); safecall;
    function Get_src: WideString; safecall;
    procedure Set_longDesc(const p: WideString); safecall;
    function Get_longDesc: WideString; safecall;
    procedure Set_frameBorder(const p: WideString); safecall;
    function Get_frameBorder: WideString; safecall;
    property contentDocument: IDispatch read Get_contentDocument;
    property src: WideString read Get_src write Set_src;
    property longDesc: WideString read Get_longDesc write Set_longDesc;
    property frameBorder: WideString read Get_frameBorder write Set_frameBorder;
  end;

// *********************************************************************//
// DispIntf:  IHTMLIFrameElement3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510433-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLIFrameElement3Disp = dispinterface
    ['{30510433-98B5-11CF-BB82-00AA00BDCE0B}']
    property contentDocument: IDispatch readonly dispid -2147413992;
    property src: WideString dispid -2147413991;
    property longDesc: WideString dispid -2147413990;
    property frameBorder: WideString dispid -2147413989;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLIFrame
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F51B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLIFrame = dispinterface
    ['{3050F51B-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    property prefix: OleVariant dispid -2147416992;
    property localName: OleVariant readonly dispid -2147416994;
    property namespaceURI: OleVariant readonly dispid -2147416993;
    property textContent: OleVariant dispid -2147416985;
    function isEqualNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416991;
    function lookupNamespaceURI(const pvarPrefix: OleVariant): OleVariant; dispid -2147416990;
    function lookupPrefix(const pvarNamespaceURI: OleVariant): OleVariant; dispid -2147416989;
    function isDefaultNamespace(const pvarNamespace: OleVariant): WordBool; dispid -2147416988;
    function ie9_appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416844;
    function ie9_insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147416843;
    function ie9_removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416842;
    function ie9_replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416841;
    function isSameNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416987;
    function compareDocumentPosition(const otherNode: IHTMLDOMNode): Word; dispid -2147416986;
    function isSupported(const feature: WideString; version: OleVariant): WordBool; dispid -2147416835;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    function querySelector(const v: WideString): IHTMLElement; dispid -2147416998;
    function querySelectorAll(const v: WideString): IHTMLDOMChildrenCollection; dispid -2147416997;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property src: WideString dispid -2147415112;
    property name: WideString dispid -2147418112;
    property border: OleVariant dispid -2147415110;
    property frameBorder: WideString dispid -2147415109;
    property frameSpacing: OleVariant dispid -2147415108;
    property marginWidth: OleVariant dispid -2147415107;
    property marginHeight: OleVariant dispid -2147415106;
    property noResize: WordBool dispid -2147415105;
    property scrolling: WideString dispid -2147415104;
    property contentWindow: IHTMLWindow2 readonly dispid -2147415103;
    property allowTransparency: WordBool dispid -2147412906;
    property longDesc: WideString dispid -2147415102;
    property vspace: Integer dispid -2147414111;
    property hspace: Integer dispid -2147414110;
    property align: WideString dispid -2147418039;
    property height: OleVariant dispid -2147418106;
    property width: OleVariant dispid -2147418107;
    property contentDocument: IDispatch readonly dispid -2147413992;
    property ie8_src: WideString dispid -2147413991;
    property ie8_longDesc: WideString dispid -2147413990;
    property ie8_frameBorder: WideString dispid -2147413989;
    function getSVGDocument: IDispatch; dispid -2147418033;
  end;

// *********************************************************************//
// Interface: IHTMLDivPosition
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F212-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDivPosition = interface(IDispatch)
    ['{3050F212-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    property align: WideString read Get_align write Set_align;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDivPositionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F212-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDivPositionDisp = dispinterface
    ['{3050F212-98B5-11CF-BB82-00AA00BDCE0B}']
    property align: WideString dispid -2147418039;
  end;

// *********************************************************************//
// Interface: IHTMLFieldSetElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3E7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFieldSetElement = interface(IDispatch)
    ['{3050F3E7-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    property align: WideString read Get_align write Set_align;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFieldSetElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3E7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFieldSetElementDisp = dispinterface
    ['{3050F3E7-98B5-11CF-BB82-00AA00BDCE0B}']
    property align: WideString dispid -2147418039;
  end;

// *********************************************************************//
// Interface: IHTMLFieldSetElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F833-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFieldSetElement2 = interface(IDispatch)
    ['{3050F833-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_form: IHTMLFormElement; safecall;
    property form: IHTMLFormElement read Get_form;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFieldSetElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F833-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFieldSetElement2Disp = dispinterface
    ['{3050F833-98B5-11CF-BB82-00AA00BDCE0B}']
    property form: IHTMLFormElement readonly dispid -2147416108;
  end;

// *********************************************************************//
// Interface: IHTMLLegendElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3EA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLegendElement = interface(IDispatch)
    ['{3050F3EA-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    property align: WideString read Get_align write Set_align;
  end;

// *********************************************************************//
// DispIntf:  IHTMLLegendElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3EA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLegendElementDisp = dispinterface
    ['{3050F3EA-98B5-11CF-BB82-00AA00BDCE0B}']
    property align: WideString dispid -2147418039;
  end;

// *********************************************************************//
// Interface: IHTMLLegendElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F834-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLegendElement2 = interface(IDispatch)
    ['{3050F834-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_form: IHTMLFormElement; safecall;
    property form: IHTMLFormElement read Get_form;
  end;

// *********************************************************************//
// DispIntf:  IHTMLLegendElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F834-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLLegendElement2Disp = dispinterface
    ['{3050F834-98B5-11CF-BB82-00AA00BDCE0B}']
    property form: IHTMLFormElement readonly dispid -2147416108;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLDivPosition
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F50F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLDivPosition = dispinterface
    ['{3050F50F-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    property prefix: OleVariant dispid -2147416992;
    property localName: OleVariant readonly dispid -2147416994;
    property namespaceURI: OleVariant readonly dispid -2147416993;
    property textContent: OleVariant dispid -2147416985;
    function isEqualNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416991;
    function lookupNamespaceURI(const pvarPrefix: OleVariant): OleVariant; dispid -2147416990;
    function lookupPrefix(const pvarNamespaceURI: OleVariant): OleVariant; dispid -2147416989;
    function isDefaultNamespace(const pvarNamespace: OleVariant): WordBool; dispid -2147416988;
    function ie9_appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416844;
    function ie9_insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147416843;
    function ie9_removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416842;
    function ie9_replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416841;
    function isSameNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416987;
    function compareDocumentPosition(const otherNode: IHTMLDOMNode): Word; dispid -2147416986;
    function isSupported(const feature: WideString; version: OleVariant): WordBool; dispid -2147416835;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    function querySelector(const v: WideString): IHTMLElement; dispid -2147416998;
    function querySelectorAll(const v: WideString): IHTMLDOMChildrenCollection; dispid -2147416997;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property align: WideString dispid -2147418039;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLFieldSetElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F545-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLFieldSetElement = dispinterface
    ['{3050F545-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property align: WideString dispid -2147418039;
    property form: IHTMLFormElement readonly dispid -2147416108;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLLegendElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F546-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLLegendElement = dispinterface
    ['{3050F546-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    property prefix: OleVariant dispid -2147416992;
    property localName: OleVariant readonly dispid -2147416994;
    property namespaceURI: OleVariant readonly dispid -2147416993;
    property textContent: OleVariant dispid -2147416985;
    function isEqualNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416991;
    function lookupNamespaceURI(const pvarPrefix: OleVariant): OleVariant; dispid -2147416990;
    function lookupPrefix(const pvarNamespaceURI: OleVariant): OleVariant; dispid -2147416989;
    function isDefaultNamespace(const pvarNamespace: OleVariant): WordBool; dispid -2147416988;
    function ie9_appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416844;
    function ie9_insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147416843;
    function ie9_removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416842;
    function ie9_replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416841;
    function isSameNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416987;
    function compareDocumentPosition(const otherNode: IHTMLDOMNode): Word; dispid -2147416986;
    function isSupported(const feature: WideString; version: OleVariant): WordBool; dispid -2147416835;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    function querySelector(const v: WideString): IHTMLElement; dispid -2147416998;
    function querySelectorAll(const v: WideString): IHTMLDOMChildrenCollection; dispid -2147416997;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property align: WideString dispid -2147418039;
    property form: IHTMLFormElement readonly dispid -2147416108;
  end;

// *********************************************************************//
// Interface: IHTMLSpanFlow
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3E5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSpanFlow = interface(IDispatch)
    ['{3050F3E5-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_align(const p: WideString); safecall;
    function Get_align: WideString; safecall;
    property align: WideString read Get_align write Set_align;
  end;

// *********************************************************************//
// DispIntf:  IHTMLSpanFlowDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3E5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSpanFlowDisp = dispinterface
    ['{3050F3E5-98B5-11CF-BB82-00AA00BDCE0B}']
    property align: WideString dispid -2147418039;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLSpanFlow
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F544-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLSpanFlow = dispinterface
    ['{3050F544-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    property prefix: OleVariant dispid -2147416992;
    property localName: OleVariant readonly dispid -2147416994;
    property namespaceURI: OleVariant readonly dispid -2147416993;
    property textContent: OleVariant dispid -2147416985;
    function isEqualNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416991;
    function lookupNamespaceURI(const pvarPrefix: OleVariant): OleVariant; dispid -2147416990;
    function lookupPrefix(const pvarNamespaceURI: OleVariant): OleVariant; dispid -2147416989;
    function isDefaultNamespace(const pvarNamespace: OleVariant): WordBool; dispid -2147416988;
    function ie9_appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416844;
    function ie9_insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147416843;
    function ie9_removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416842;
    function ie9_replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416841;
    function isSameNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416987;
    function compareDocumentPosition(const otherNode: IHTMLDOMNode): Word; dispid -2147416986;
    function isSupported(const feature: WideString; version: OleVariant): WordBool; dispid -2147416835;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    function querySelector(const v: WideString): IHTMLElement; dispid -2147416998;
    function querySelectorAll(const v: WideString): IHTMLDOMChildrenCollection; dispid -2147416997;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property align: WideString dispid -2147418039;
  end;

// *********************************************************************//
// Interface: IHTMLFrameSetElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F319-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameSetElement = interface(IDispatch)
    ['{3050F319-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_rows(const p: WideString); safecall;
    function Get_rows: WideString; safecall;
    procedure Set_cols(const p: WideString); safecall;
    function Get_cols: WideString; safecall;
    procedure Set_border(p: OleVariant); safecall;
    function Get_border: OleVariant; safecall;
    procedure Set_borderColor(p: OleVariant); safecall;
    function Get_borderColor: OleVariant; safecall;
    procedure Set_frameBorder(const p: WideString); safecall;
    function Get_frameBorder: WideString; safecall;
    procedure Set_frameSpacing(p: OleVariant); safecall;
    function Get_frameSpacing: OleVariant; safecall;
    procedure Set_name(const p: WideString); safecall;
    function Get_name: WideString; safecall;
    procedure Set_onload(p: OleVariant); safecall;
    function Get_onload: OleVariant; safecall;
    procedure Set_onunload(p: OleVariant); safecall;
    function Get_onunload: OleVariant; safecall;
    procedure Set_onbeforeunload(p: OleVariant); safecall;
    function Get_onbeforeunload: OleVariant; safecall;
    property rows: WideString read Get_rows write Set_rows;
    property cols: WideString read Get_cols write Set_cols;
    property border: OleVariant read Get_border write Set_border;
    property borderColor: OleVariant read Get_borderColor write Set_borderColor;
    property frameBorder: WideString read Get_frameBorder write Set_frameBorder;
    property frameSpacing: OleVariant read Get_frameSpacing write Set_frameSpacing;
    property name: WideString read Get_name write Set_name;
    property onload: OleVariant read Get_onload write Set_onload;
    property onunload: OleVariant read Get_onunload write Set_onunload;
    property onbeforeunload: OleVariant read Get_onbeforeunload write Set_onbeforeunload;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFrameSetElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F319-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameSetElementDisp = dispinterface
    ['{3050F319-98B5-11CF-BB82-00AA00BDCE0B}']
    property rows: WideString dispid 1000;
    property cols: WideString dispid 1001;
    property border: OleVariant dispid 1002;
    property borderColor: OleVariant dispid 1003;
    property frameBorder: WideString dispid 1004;
    property frameSpacing: OleVariant dispid 1005;
    property name: WideString dispid -2147418112;
    property onload: OleVariant dispid -2147412080;
    property onunload: OleVariant dispid -2147412079;
    property onbeforeunload: OleVariant dispid -2147412073;
  end;

// *********************************************************************//
// Interface: IHTMLFrameSetElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5C6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameSetElement2 = interface(IDispatch)
    ['{3050F5C6-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_onbeforeprint(p: OleVariant); safecall;
    function Get_onbeforeprint: OleVariant; safecall;
    procedure Set_onafterprint(p: OleVariant); safecall;
    function Get_onafterprint: OleVariant; safecall;
    property onbeforeprint: OleVariant read Get_onbeforeprint write Set_onbeforeprint;
    property onafterprint: OleVariant read Get_onafterprint write Set_onafterprint;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFrameSetElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5C6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameSetElement2Disp = dispinterface
    ['{3050F5C6-98B5-11CF-BB82-00AA00BDCE0B}']
    property onbeforeprint: OleVariant dispid -2147412046;
    property onafterprint: OleVariant dispid -2147412045;
  end;

// *********************************************************************//
// Interface: IHTMLFrameSetElement3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510796-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameSetElement3 = interface(IDispatch)
    ['{30510796-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_onhashchange(p: OleVariant); safecall;
    function Get_onhashchange: OleVariant; safecall;
    procedure Set_onmessage(p: OleVariant); safecall;
    function Get_onmessage: OleVariant; safecall;
    procedure Set_onoffline(p: OleVariant); safecall;
    function Get_onoffline: OleVariant; safecall;
    procedure Set_ononline(p: OleVariant); safecall;
    function Get_ononline: OleVariant; safecall;
    procedure Set_onstorage(p: OleVariant); safecall;
    function Get_onstorage: OleVariant; safecall;
    property onhashchange: OleVariant read Get_onhashchange write Set_onhashchange;
    property onmessage: OleVariant read Get_onmessage write Set_onmessage;
    property onoffline: OleVariant read Get_onoffline write Set_onoffline;
    property ononline: OleVariant read Get_ononline write Set_ononline;
    property onstorage: OleVariant read Get_onstorage write Set_onstorage;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFrameSetElement3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510796-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFrameSetElement3Disp = dispinterface
    ['{30510796-98B5-11CF-BB82-00AA00BDCE0B}']
    property onhashchange: OleVariant dispid -2147412003;
    property onmessage: OleVariant dispid -2147412002;
    property onoffline: OleVariant dispid -2147412004;
    property ononline: OleVariant dispid -2147412005;
    property onstorage: OleVariant dispid -2147412012;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLFrameSetSite
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F514-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLFrameSetSite = dispinterface
    ['{3050F514-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property rows: WideString dispid 1000;
    property cols: WideString dispid 1001;
    property border: OleVariant dispid 1002;
    property borderColor: OleVariant dispid 1003;
    property frameBorder: WideString dispid 1004;
    property frameSpacing: OleVariant dispid 1005;
    property name: WideString dispid -2147418112;
    property onunload: OleVariant dispid -2147412079;
    property onbeforeunload: OleVariant dispid -2147412073;
    property onbeforeprint: OleVariant dispid -2147412046;
    property onafterprint: OleVariant dispid -2147412045;
    property onhashchange: OleVariant dispid -2147412003;
    property onmessage: OleVariant dispid -2147412002;
    property onoffline: OleVariant dispid -2147412004;
    property ononline: OleVariant dispid -2147412005;
    property onstorage: OleVariant dispid -2147412012;
  end;

// *********************************************************************//
// Interface: IHTMLBGsound
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F369-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBGsound = interface(IDispatch)
    ['{3050F369-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_src(const p: WideString); safecall;
    function Get_src: WideString; safecall;
    procedure Set_loop(p: OleVariant); safecall;
    function Get_loop: OleVariant; safecall;
    procedure Set_volume(p: OleVariant); safecall;
    function Get_volume: OleVariant; safecall;
    procedure Set_balance(p: OleVariant); safecall;
    function Get_balance: OleVariant; safecall;
    property src: WideString read Get_src write Set_src;
    property loop: OleVariant read Get_loop write Set_loop;
    property volume: OleVariant read Get_volume write Set_volume;
    property balance: OleVariant read Get_balance write Set_balance;
  end;

// *********************************************************************//
// DispIntf:  IHTMLBGsoundDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F369-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLBGsoundDisp = dispinterface
    ['{3050F369-98B5-11CF-BB82-00AA00BDCE0B}']
    property src: WideString dispid 1001;
    property loop: OleVariant dispid 1002;
    property volume: OleVariant dispid 1003;
    property balance: OleVariant dispid 1004;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLBGsound
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F53C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLBGsound = dispinterface
    ['{3050F53C-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property src: WideString dispid 1001;
    property loop: OleVariant dispid 1002;
    property volume: OleVariant dispid 1003;
    property balance: OleVariant dispid 1004;
  end;

// *********************************************************************//
// Interface: IHTMLFontNamesCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F376-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFontNamesCollection = interface(IDispatch)
    ['{3050F376-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    function Get__newEnum: IUnknown; safecall;
    function item(index: Integer): WideString; safecall;
    property length: Integer read Get_length;
    property _newEnum: IUnknown read Get__newEnum;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFontNamesCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F376-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFontNamesCollectionDisp = dispinterface
    ['{3050F376-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1501;
    property _newEnum: IUnknown readonly dispid -4;
    function item(index: Integer): WideString; dispid 0;
  end;

// *********************************************************************//
// Interface: IHTMLFontSizesCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F377-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFontSizesCollection = interface(IDispatch)
    ['{3050F377-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    function Get__newEnum: IUnknown; safecall;
    function Get_forFont: WideString; safecall;
    function item(index: Integer): Integer; safecall;
    property length: Integer read Get_length;
    property _newEnum: IUnknown read Get__newEnum;
    property forFont: WideString read Get_forFont;
  end;

// *********************************************************************//
// DispIntf:  IHTMLFontSizesCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F377-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLFontSizesCollectionDisp = dispinterface
    ['{3050F377-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1502;
    property _newEnum: IUnknown readonly dispid -4;
    property forFont: WideString readonly dispid 1503;
    function item(index: Integer): Integer; dispid 0;
  end;

// *********************************************************************//
// Interface: IHTMLOptionsHolder
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F378-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOptionsHolder = interface(IDispatch)
    ['{3050F378-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_document: IHTMLDocument2; safecall;
    function Get_fonts: IHTMLFontNamesCollection; safecall;
    procedure Set_execArg(p: OleVariant); safecall;
    function Get_execArg: OleVariant; safecall;
    procedure Set_errorLine(p: Integer); safecall;
    function Get_errorLine: Integer; safecall;
    procedure Set_errorCharacter(p: Integer); safecall;
    function Get_errorCharacter: Integer; safecall;
    procedure Set_errorCode(p: Integer); safecall;
    function Get_errorCode: Integer; safecall;
    procedure Set_errorMessage(const p: WideString); safecall;
    function Get_errorMessage: WideString; safecall;
    procedure Set_errorDebug(p: WordBool); safecall;
    function Get_errorDebug: WordBool; safecall;
    function Get_unsecuredWindowOfDocument: IHTMLWindow2; safecall;
    procedure Set_findText(const p: WideString); safecall;
    function Get_findText: WideString; safecall;
    procedure Set_anythingAfterFrameset(p: WordBool); safecall;
    function Get_anythingAfterFrameset: WordBool; safecall;
    function sizes(const fontName: WideString): IHTMLFontSizesCollection; safecall;
    function openfiledlg(initFile: OleVariant; initDir: OleVariant; filter: OleVariant; 
                         title: OleVariant): WideString; safecall;
    function savefiledlg(initFile: OleVariant; initDir: OleVariant; filter: OleVariant; 
                         title: OleVariant): WideString; safecall;
    function choosecolordlg(initColor: OleVariant): Integer; safecall;
    procedure showSecurityInfo; safecall;
    function isApartmentModel(const object_: IHTMLObjectElement): WordBool; safecall;
    function getCharset(const fontName: WideString): Integer; safecall;
    function Get_secureConnectionInfo: WideString; safecall;
    property document: IHTMLDocument2 read Get_document;
    property fonts: IHTMLFontNamesCollection read Get_fonts;
    property execArg: OleVariant read Get_execArg write Set_execArg;
    property errorLine: Integer read Get_errorLine write Set_errorLine;
    property errorCharacter: Integer read Get_errorCharacter write Set_errorCharacter;
    property errorCode: Integer read Get_errorCode write Set_errorCode;
    property errorMessage: WideString read Get_errorMessage write Set_errorMessage;
    property errorDebug: WordBool read Get_errorDebug write Set_errorDebug;
    property unsecuredWindowOfDocument: IHTMLWindow2 read Get_unsecuredWindowOfDocument;
    property findText: WideString read Get_findText write Set_findText;
    property anythingAfterFrameset: WordBool read Get_anythingAfterFrameset write Set_anythingAfterFrameset;
    property secureConnectionInfo: WideString read Get_secureConnectionInfo;
  end;

// *********************************************************************//
// DispIntf:  IHTMLOptionsHolderDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F378-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLOptionsHolderDisp = dispinterface
    ['{3050F378-98B5-11CF-BB82-00AA00BDCE0B}']
    property document: IHTMLDocument2 readonly dispid 1503;
    property fonts: IHTMLFontNamesCollection readonly dispid 1504;
    property execArg: OleVariant dispid 1505;
    property errorLine: Integer dispid 1506;
    property errorCharacter: Integer dispid 1507;
    property errorCode: Integer dispid 1508;
    property errorMessage: WideString dispid 1509;
    property errorDebug: WordBool dispid 1510;
    property unsecuredWindowOfDocument: IHTMLWindow2 readonly dispid 1511;
    property findText: WideString dispid 1512;
    property anythingAfterFrameset: WordBool dispid 1513;
    function sizes(const fontName: WideString): IHTMLFontSizesCollection; dispid 1514;
    function openfiledlg(initFile: OleVariant; initDir: OleVariant; filter: OleVariant; 
                         title: OleVariant): WideString; dispid 1515;
    function savefiledlg(initFile: OleVariant; initDir: OleVariant; filter: OleVariant; 
                         title: OleVariant): WideString; dispid 1516;
    function choosecolordlg(initColor: OleVariant): Integer; dispid 1517;
    procedure showSecurityInfo; dispid 1518;
    function isApartmentModel(const object_: IHTMLObjectElement): WordBool; dispid 1519;
    function getCharset(const fontName: WideString): Integer; dispid 1520;
    property secureConnectionInfo: WideString readonly dispid 1521;
  end;

// *********************************************************************//
// DispIntf:  HTMLStyleElementEvents2
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F615-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLStyleElementEvents2 = dispinterface
    ['{3050F615-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418102;
    function onclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -600;
    function ondblclick(const pEvtObj: IHTMLEventObj): WordBool; dispid -601;
    function onkeypress(const pEvtObj: IHTMLEventObj): WordBool; dispid -603;
    procedure onkeydown(const pEvtObj: IHTMLEventObj); dispid -602;
    procedure onkeyup(const pEvtObj: IHTMLEventObj); dispid -604;
    procedure onmouseout(const pEvtObj: IHTMLEventObj); dispid -2147418103;
    procedure onmouseover(const pEvtObj: IHTMLEventObj); dispid -2147418104;
    procedure onmousemove(const pEvtObj: IHTMLEventObj); dispid -606;
    procedure onmousedown(const pEvtObj: IHTMLEventObj); dispid -605;
    procedure onmouseup(const pEvtObj: IHTMLEventObj); dispid -607;
    function onselectstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418100;
    procedure onfilterchange(const pEvtObj: IHTMLEventObj); dispid -2147418095;
    function ondragstart(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418101;
    function onbeforeupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418108;
    procedure onafterupdate(const pEvtObj: IHTMLEventObj); dispid -2147418107;
    function onerrorupdate(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418099;
    function onrowexit(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418106;
    procedure onrowenter(const pEvtObj: IHTMLEventObj); dispid -2147418105;
    procedure ondatasetchanged(const pEvtObj: IHTMLEventObj); dispid -2147418098;
    procedure ondataavailable(const pEvtObj: IHTMLEventObj); dispid -2147418097;
    procedure ondatasetcomplete(const pEvtObj: IHTMLEventObj); dispid -2147418096;
    procedure onlosecapture(const pEvtObj: IHTMLEventObj); dispid -2147418094;
    procedure onpropertychange(const pEvtObj: IHTMLEventObj); dispid -2147418093;
    procedure onscroll(const pEvtObj: IHTMLEventObj); dispid 1014;
    procedure onfocus(const pEvtObj: IHTMLEventObj); dispid -2147418111;
    procedure onblur(const pEvtObj: IHTMLEventObj); dispid -2147418112;
    procedure onresize(const pEvtObj: IHTMLEventObj); dispid 1016;
    function ondrag(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418092;
    procedure ondragend(const pEvtObj: IHTMLEventObj); dispid -2147418091;
    function ondragenter(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418090;
    function ondragover(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418089;
    procedure ondragleave(const pEvtObj: IHTMLEventObj); dispid -2147418088;
    function ondrop(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418087;
    function onbeforecut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418083;
    function oncut(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418086;
    function onbeforecopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418082;
    function oncopy(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418085;
    function onbeforepaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418081;
    function onpaste(const pEvtObj: IHTMLEventObj): WordBool; dispid -2147418084;
    function oncontextmenu(const pEvtObj: IHTMLEventObj): WordBool; dispid 1023;
    procedure onrowsdelete(const pEvtObj: IHTMLEventObj); dispid -2147418080;
    procedure onrowsinserted(const pEvtObj: IHTMLEventObj); dispid -2147418079;
    procedure oncellchange(const pEvtObj: IHTMLEventObj); dispid -2147418078;
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
    procedure onlayoutcomplete(const pEvtObj: IHTMLEventObj); dispid 1030;
    procedure onpage(const pEvtObj: IHTMLEventObj); dispid 1031;
    procedure onmouseenter(const pEvtObj: IHTMLEventObj); dispid 1042;
    procedure onmouseleave(const pEvtObj: IHTMLEventObj); dispid 1043;
    procedure onactivate(const pEvtObj: IHTMLEventObj); dispid 1044;
    procedure ondeactivate(const pEvtObj: IHTMLEventObj); dispid 1045;
    function onbeforedeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1034;
    function onbeforeactivate(const pEvtObj: IHTMLEventObj): WordBool; dispid 1047;
    procedure onfocusin(const pEvtObj: IHTMLEventObj); dispid 1048;
    procedure onfocusout(const pEvtObj: IHTMLEventObj); dispid 1049;
    procedure onmove(const pEvtObj: IHTMLEventObj); dispid 1035;
    function oncontrolselect(const pEvtObj: IHTMLEventObj): WordBool; dispid 1036;
    function onmovestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1038;
    procedure onmoveend(const pEvtObj: IHTMLEventObj); dispid 1039;
    function onresizestart(const pEvtObj: IHTMLEventObj): WordBool; dispid 1040;
    procedure onresizeend(const pEvtObj: IHTMLEventObj); dispid 1041;
    function onmousewheel(const pEvtObj: IHTMLEventObj): WordBool; dispid 1033;
    procedure onload(const pEvtObj: IHTMLEventObj); dispid 1003;
    procedure onerror(const pEvtObj: IHTMLEventObj); dispid 1002;
  end;

// *********************************************************************//
// DispIntf:  HTMLStyleElementEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F3CB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLStyleElementEvents = dispinterface
    ['{3050F3CB-98B5-11CF-BB82-00AA00BDCE0B}']
    function onhelp: WordBool; dispid -2147418102;
    function onclick: WordBool; dispid -600;
    function ondblclick: WordBool; dispid -601;
    function onkeypress: WordBool; dispid -603;
    procedure onkeydown; dispid -602;
    procedure onkeyup; dispid -604;
    procedure onmouseout; dispid -2147418103;
    procedure onmouseover; dispid -2147418104;
    procedure onmousemove; dispid -606;
    procedure onmousedown; dispid -605;
    procedure onmouseup; dispid -607;
    function onselectstart: WordBool; dispid -2147418100;
    procedure onfilterchange; dispid -2147418095;
    function ondragstart: WordBool; dispid -2147418101;
    function onbeforeupdate: WordBool; dispid -2147418108;
    procedure onafterupdate; dispid -2147418107;
    function onerrorupdate: WordBool; dispid -2147418099;
    function onrowexit: WordBool; dispid -2147418106;
    procedure onrowenter; dispid -2147418105;
    procedure ondatasetchanged; dispid -2147418098;
    procedure ondataavailable; dispid -2147418097;
    procedure ondatasetcomplete; dispid -2147418096;
    procedure onlosecapture; dispid -2147418094;
    procedure onpropertychange; dispid -2147418093;
    procedure onscroll; dispid 1014;
    procedure onfocus; dispid -2147418111;
    procedure onblur; dispid -2147418112;
    procedure onresize; dispid 1016;
    function ondrag: WordBool; dispid -2147418092;
    procedure ondragend; dispid -2147418091;
    function ondragenter: WordBool; dispid -2147418090;
    function ondragover: WordBool; dispid -2147418089;
    procedure ondragleave; dispid -2147418088;
    function ondrop: WordBool; dispid -2147418087;
    function onbeforecut: WordBool; dispid -2147418083;
    function oncut: WordBool; dispid -2147418086;
    function onbeforecopy: WordBool; dispid -2147418082;
    function oncopy: WordBool; dispid -2147418085;
    function onbeforepaste: WordBool; dispid -2147418081;
    function onpaste: WordBool; dispid -2147418084;
    function oncontextmenu: WordBool; dispid 1023;
    procedure onrowsdelete; dispid -2147418080;
    procedure onrowsinserted; dispid -2147418079;
    procedure oncellchange; dispid -2147418078;
    procedure onreadystatechange; dispid -609;
    procedure onbeforeeditfocus; dispid 1027;
    procedure onlayoutcomplete; dispid 1030;
    procedure onpage; dispid 1031;
    function onbeforedeactivate: WordBool; dispid 1034;
    function onbeforeactivate: WordBool; dispid 1047;
    procedure onmove; dispid 1035;
    function oncontrolselect: WordBool; dispid 1036;
    function onmovestart: WordBool; dispid 1038;
    procedure onmoveend; dispid 1039;
    function onresizestart: WordBool; dispid 1040;
    procedure onresizeend; dispid 1041;
    procedure onmouseenter; dispid 1042;
    procedure onmouseleave; dispid 1043;
    function onmousewheel: WordBool; dispid 1033;
    procedure onactivate; dispid 1044;
    procedure ondeactivate; dispid 1045;
    procedure onfocusin; dispid 1048;
    procedure onfocusout; dispid 1049;
    procedure onload; dispid 1003;
    procedure onerror; dispid 1002;
  end;

// *********************************************************************//
// Interface: IHTMLStyleElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F375-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleElement = interface(IDispatch)
    ['{3050F375-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_type_(const p: WideString); safecall;
    function Get_type_: WideString; safecall;
    function Get_readyState: WideString; safecall;
    procedure Set_onreadystatechange(p: OleVariant); safecall;
    function Get_onreadystatechange: OleVariant; safecall;
    procedure Set_onload(p: OleVariant); safecall;
    function Get_onload: OleVariant; safecall;
    procedure Set_onerror(p: OleVariant); safecall;
    function Get_onerror: OleVariant; safecall;
    function Get_styleSheet: IHTMLStyleSheet; safecall;
    procedure Set_disabled(p: WordBool); safecall;
    function Get_disabled: WordBool; safecall;
    procedure Set_media(const p: WideString); safecall;
    function Get_media: WideString; safecall;
    property type_: WideString read Get_type_ write Set_type_;
    property readyState: WideString read Get_readyState;
    property onreadystatechange: OleVariant read Get_onreadystatechange write Set_onreadystatechange;
    property onload: OleVariant read Get_onload write Set_onload;
    property onerror: OleVariant read Get_onerror write Set_onerror;
    property styleSheet: IHTMLStyleSheet read Get_styleSheet;
    property disabled: WordBool read Get_disabled write Set_disabled;
    property media: WideString read Get_media write Set_media;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F375-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleElementDisp = dispinterface
    ['{3050F375-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString dispid 1002;
    property readyState: WideString readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onload: OleVariant dispid -2147412080;
    property onerror: OleVariant dispid -2147412083;
    property styleSheet: IHTMLStyleSheet readonly dispid 1004;
    property disabled: WordBool dispid -2147418036;
    property media: WideString dispid 1006;
  end;

// *********************************************************************//
// Interface: IHTMLStyleElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051072A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleElement2 = interface(IDispatch)
    ['{3051072A-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_sheet: IHTMLStyleSheet; safecall;
    property sheet: IHTMLStyleSheet read Get_sheet;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051072A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleElement2Disp = dispinterface
    ['{3051072A-98B5-11CF-BB82-00AA00BDCE0B}']
    property sheet: IHTMLStyleSheet readonly dispid 1007;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLStyleElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F511-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLStyleElement = dispinterface
    ['{3050F511-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property type_: WideString dispid 1002;
    property styleSheet: IHTMLStyleSheet readonly dispid 1004;
    property media: WideString dispid 1006;
    property sheet: IHTMLStyleSheet readonly dispid 1007;
  end;

// *********************************************************************//
// Interface: IHTMLStyleFontFace
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3D5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleFontFace = interface(IDispatch)
    ['{3050F3D5-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_fontsrc(const p: WideString); safecall;
    function Get_fontsrc: WideString; safecall;
    property fontsrc: WideString read Get_fontsrc write Set_fontsrc;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleFontFaceDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F3D5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleFontFaceDisp = dispinterface
    ['{3050F3D5-98B5-11CF-BB82-00AA00BDCE0B}']
    property fontsrc: WideString dispid -2147413015;
  end;

// *********************************************************************//
// Interface: IHTMLStyleFontFace2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106EC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleFontFace2 = interface(IDispatch)
    ['{305106EC-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_style: IHTMLRuleStyle; safecall;
    property style: IHTMLRuleStyle read Get_style;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStyleFontFace2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106EC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStyleFontFace2Disp = dispinterface
    ['{305106EC-98B5-11CF-BB82-00AA00BDCE0B}']
    property style: IHTMLRuleStyle readonly dispid -2147418038;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLStyleFontFace
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590081-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLStyleFontFace = dispinterface
    ['{30590081-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: Word readonly dispid 1101;
    property cssText: WideString dispid 1102;
    property parentRule: IHTMLCSSRule readonly dispid 1103;
    property parentStyleSheet: IHTMLStyleSheet readonly dispid 1104;
    property fontsrc: WideString dispid -2147413015;
    property style: IHTMLRuleStyle readonly dispid -2147418038;
  end;

// *********************************************************************//
// Interface: IHTMLXDomainRequest
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510454-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLXDomainRequest = interface(IDispatch)
    ['{30510454-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_responseText: WideString; safecall;
    procedure Set_timeout(p: Integer); safecall;
    function Get_timeout: Integer; safecall;
    function Get_contentType: WideString; safecall;
    procedure Set_onprogress(p: OleVariant); safecall;
    function Get_onprogress: OleVariant; safecall;
    procedure Set_onerror(p: OleVariant); safecall;
    function Get_onerror: OleVariant; safecall;
    procedure Set_ontimeout(p: OleVariant); safecall;
    function Get_ontimeout: OleVariant; safecall;
    procedure Set_onload(p: OleVariant); safecall;
    function Get_onload: OleVariant; safecall;
    procedure abort; safecall;
    procedure open(const bstrMethod: WideString; const bstrURL: WideString); safecall;
    procedure send(varBody: OleVariant); safecall;
    property responseText: WideString read Get_responseText;
    property timeout: Integer read Get_timeout write Set_timeout;
    property contentType: WideString read Get_contentType;
    property onprogress: OleVariant read Get_onprogress write Set_onprogress;
    property onerror: OleVariant read Get_onerror write Set_onerror;
    property ontimeout: OleVariant read Get_ontimeout write Set_ontimeout;
    property onload: OleVariant read Get_onload write Set_onload;
  end;

// *********************************************************************//
// DispIntf:  IHTMLXDomainRequestDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510454-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLXDomainRequestDisp = dispinterface
    ['{30510454-98B5-11CF-BB82-00AA00BDCE0B}']
    property responseText: WideString readonly dispid 1003;
    property timeout: Integer dispid 1004;
    property contentType: WideString readonly dispid 1005;
    property onprogress: OleVariant dispid 1006;
    property onerror: OleVariant dispid -2147412083;
    property ontimeout: OleVariant dispid -2147412000;
    property onload: OleVariant dispid -2147412080;
    procedure abort; dispid 1010;
    procedure open(const bstrMethod: WideString; const bstrURL: WideString); dispid 1011;
    procedure send(varBody: OleVariant); dispid 1012;
  end;

// *********************************************************************//
// Interface: IHTMLXDomainRequestFactory
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510456-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLXDomainRequestFactory = interface(IDispatch)
    ['{30510456-98B5-11CF-BB82-00AA00BDCE0B}']
    function create: IHTMLXDomainRequest; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLXDomainRequestFactoryDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510456-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLXDomainRequestFactoryDisp = dispinterface
    ['{30510456-98B5-11CF-BB82-00AA00BDCE0B}']
    function create: IHTMLXDomainRequest; dispid 0;
  end;

// *********************************************************************//
// DispIntf:  DispXDomainRequest
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F599-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispXDomainRequest = dispinterface
    ['{3050F599-98B5-11CF-BB82-00AA00BDCE0B}']
    property constructor_: IDispatch readonly dispid -2147417603;
  end;

// *********************************************************************//
// Interface: IHTMLStorage2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510799-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStorage2 = interface(IDispatch)
    ['{30510799-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setItem(const bstrKey: WideString; const bstrValue: WideString); safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLStorage2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510799-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLStorage2Disp = dispinterface
    ['{30510799-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setItem(const bstrKey: WideString; const bstrValue: WideString); dispid 1008;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLStorage
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F59D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLStorage = dispinterface
    ['{3050F59D-98B5-11CF-BB82-00AA00BDCE0B}']
    property constructor_: IDispatch readonly dispid -2147417603;
    property length: Integer readonly dispid 1001;
    property remainingSpace: Integer readonly dispid 1002;
    function key(lIndex: Integer): WideString; dispid 1006;
    function getItem(const bstrKey: WideString): OleVariant; dispid 1003;
    procedure setItem(const bstrKey: WideString; const bstrValue: WideString); dispid 1004;
    procedure removeItem(const bstrKey: WideString); dispid 1005;
    procedure clear; dispid 1007;
    procedure ie9_setItem(const bstrKey: WideString; const bstrValue: WideString); dispid 1008;
  end;

// *********************************************************************//
// DispIntf:  DispDOMEvent
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F5A2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispDOMEvent = dispinterface
    ['{3050F5A2-98B5-11CF-BB82-00AA00BDCE0B}']
    property bubbles: WordBool readonly dispid 1001;
    property cancelable: WordBool readonly dispid 1002;
    property currentTarget: IEventTarget readonly dispid 1003;
    property defaultPrevented: WordBool readonly dispid 1004;
    property eventPhase: Word readonly dispid 1005;
    property target: IEventTarget readonly dispid 1006;
    property timeStamp: Largeuint readonly dispid 1007;
    property type_: WideString readonly dispid 1008;
    procedure initEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool); dispid 1009;
    procedure preventDefault; dispid 1010;
    procedure stopPropagation; dispid 1011;
    procedure stopImmediatePropagation; dispid 1012;
    property isTrusted: WordBool readonly dispid 1013;
    property cancelBubble: WordBool dispid 1014;
    property srcElement: IHTMLElement readonly dispid 1015;
  end;

// *********************************************************************//
// Interface: IDOMUIEvent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106CA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMUIEvent = interface(IDispatch)
    ['{305106CA-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_view: IHTMLWindow2; safecall;
    function Get_detail: Integer; safecall;
    procedure initUIEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool; 
                          const view: IHTMLWindow2; detail: Integer); safecall;
    property view: IHTMLWindow2 read Get_view;
    property detail: Integer read Get_detail;
  end;

// *********************************************************************//
// DispIntf:  IDOMUIEventDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106CA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMUIEventDisp = dispinterface
    ['{305106CA-98B5-11CF-BB82-00AA00BDCE0B}']
    property view: IHTMLWindow2 readonly dispid 1026;
    property detail: Integer readonly dispid 1027;
    procedure initUIEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool; 
                          const view: IHTMLWindow2; detail: Integer); dispid 1028;
  end;

// *********************************************************************//
// DispIntf:  DispDOMUIEvent
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590072-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispDOMUIEvent = dispinterface
    ['{30590072-98B5-11CF-BB82-00AA00BDCE0B}']
    property bubbles: WordBool readonly dispid 1001;
    property cancelable: WordBool readonly dispid 1002;
    property currentTarget: IEventTarget readonly dispid 1003;
    property defaultPrevented: WordBool readonly dispid 1004;
    property eventPhase: Word readonly dispid 1005;
    property target: IEventTarget readonly dispid 1006;
    property timeStamp: Largeuint readonly dispid 1007;
    property type_: WideString readonly dispid 1008;
    procedure initEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool); dispid 1009;
    procedure preventDefault; dispid 1010;
    procedure stopPropagation; dispid 1011;
    procedure stopImmediatePropagation; dispid 1012;
    property isTrusted: WordBool readonly dispid 1013;
    property cancelBubble: WordBool dispid 1014;
    property srcElement: IHTMLElement readonly dispid 1015;
    property view: IHTMLWindow2 readonly dispid 1026;
    property detail: Integer readonly dispid 1027;
    procedure initUIEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool; 
                          const view: IHTMLWindow2; detail: Integer); dispid 1028;
  end;

// *********************************************************************//
// Interface: IDOMMouseEvent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106CE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMMouseEvent = interface(IDispatch)
    ['{305106CE-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_screenX: Integer; safecall;
    function Get_screenY: Integer; safecall;
    function Get_clientX: Integer; safecall;
    function Get_clientY: Integer; safecall;
    function Get_ctrlKey: WordBool; safecall;
    function Get_shiftKey: WordBool; safecall;
    function Get_altKey: WordBool; safecall;
    function Get_metaKey: WordBool; safecall;
    function Get_button: Word; safecall;
    function Get_relatedTarget: IEventTarget; safecall;
    procedure initMouseEvent(const eventType: WideString; canBubble: WordBool; 
                             cancelable: WordBool; const viewArg: IHTMLWindow2; detailArg: Integer; 
                             screenXArg: Integer; screenYArg: Integer; clientXArg: Integer; 
                             clientYArg: Integer; ctrlKeyArg: WordBool; altKeyArg: WordBool; 
                             shiftKeyArg: WordBool; metaKeyArg: WordBool; buttonArg: Word; 
                             const relatedTargetArg: IEventTarget); safecall;
    function getModifierState(const keyArg: WideString): WordBool; safecall;
    function Get_buttons: Word; safecall;
    function Get_fromElement: IHTMLElement; safecall;
    function Get_toElement: IHTMLElement; safecall;
    function Get_x: Integer; safecall;
    function Get_y: Integer; safecall;
    function Get_offsetX: Integer; safecall;
    function Get_offsetY: Integer; safecall;
    function Get_pageX: Integer; safecall;
    function Get_pageY: Integer; safecall;
    function Get_layerX: Integer; safecall;
    function Get_layerY: Integer; safecall;
    function Get_which: Word; safecall;
    property screenX: Integer read Get_screenX;
    property screenY: Integer read Get_screenY;
    property clientX: Integer read Get_clientX;
    property clientY: Integer read Get_clientY;
    property ctrlKey: WordBool read Get_ctrlKey;
    property shiftKey: WordBool read Get_shiftKey;
    property altKey: WordBool read Get_altKey;
    property metaKey: WordBool read Get_metaKey;
    property button: Word read Get_button;
    property relatedTarget: IEventTarget read Get_relatedTarget;
    property buttons: Word read Get_buttons;
    property fromElement: IHTMLElement read Get_fromElement;
    property toElement: IHTMLElement read Get_toElement;
    property x: Integer read Get_x;
    property y: Integer read Get_y;
    property offsetX: Integer read Get_offsetX;
    property offsetY: Integer read Get_offsetY;
    property pageX: Integer read Get_pageX;
    property pageY: Integer read Get_pageY;
    property layerX: Integer read Get_layerX;
    property layerY: Integer read Get_layerY;
    property which: Word read Get_which;
  end;

// *********************************************************************//
// DispIntf:  IDOMMouseEventDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106CE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMMouseEventDisp = dispinterface
    ['{305106CE-98B5-11CF-BB82-00AA00BDCE0B}']
    property screenX: Integer readonly dispid 1051;
    property screenY: Integer readonly dispid 1052;
    property clientX: Integer readonly dispid 1053;
    property clientY: Integer readonly dispid 1054;
    property ctrlKey: WordBool readonly dispid 1055;
    property shiftKey: WordBool readonly dispid 1056;
    property altKey: WordBool readonly dispid 1057;
    property metaKey: WordBool readonly dispid 1058;
    property button: Word readonly dispid 1059;
    property relatedTarget: IEventTarget readonly dispid 1060;
    procedure initMouseEvent(const eventType: WideString; canBubble: WordBool; 
                             cancelable: WordBool; const viewArg: IHTMLWindow2; detailArg: Integer; 
                             screenXArg: Integer; screenYArg: Integer; clientXArg: Integer; 
                             clientYArg: Integer; ctrlKeyArg: WordBool; altKeyArg: WordBool; 
                             shiftKeyArg: WordBool; metaKeyArg: WordBool; buttonArg: Word; 
                             const relatedTargetArg: IEventTarget); dispid 1061;
    function getModifierState(const keyArg: WideString): WordBool; dispid 1062;
    property buttons: Word readonly dispid 1063;
    property fromElement: IHTMLElement readonly dispid 1064;
    property toElement: IHTMLElement readonly dispid 1065;
    property x: Integer readonly dispid 1066;
    property y: Integer readonly dispid 1067;
    property offsetX: Integer readonly dispid 1068;
    property offsetY: Integer readonly dispid 1069;
    property pageX: Integer readonly dispid 1070;
    property pageY: Integer readonly dispid 1071;
    property layerX: Integer readonly dispid 1072;
    property layerY: Integer readonly dispid 1073;
    property which: Word readonly dispid 1074;
  end;

// *********************************************************************//
// DispIntf:  DispDOMMouseEvent
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590073-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispDOMMouseEvent = dispinterface
    ['{30590073-98B5-11CF-BB82-00AA00BDCE0B}']
    property bubbles: WordBool readonly dispid 1001;
    property cancelable: WordBool readonly dispid 1002;
    property currentTarget: IEventTarget readonly dispid 1003;
    property defaultPrevented: WordBool readonly dispid 1004;
    property eventPhase: Word readonly dispid 1005;
    property target: IEventTarget readonly dispid 1006;
    property timeStamp: Largeuint readonly dispid 1007;
    property type_: WideString readonly dispid 1008;
    procedure initEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool); dispid 1009;
    procedure preventDefault; dispid 1010;
    procedure stopPropagation; dispid 1011;
    procedure stopImmediatePropagation; dispid 1012;
    property isTrusted: WordBool readonly dispid 1013;
    property cancelBubble: WordBool dispid 1014;
    property srcElement: IHTMLElement readonly dispid 1015;
    property view: IHTMLWindow2 readonly dispid 1026;
    property detail: Integer readonly dispid 1027;
    procedure initUIEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool; 
                          const view: IHTMLWindow2; detail: Integer); dispid 1028;
    property screenX: Integer readonly dispid 1051;
    property screenY: Integer readonly dispid 1052;
    property clientX: Integer readonly dispid 1053;
    property clientY: Integer readonly dispid 1054;
    property ctrlKey: WordBool readonly dispid 1055;
    property shiftKey: WordBool readonly dispid 1056;
    property altKey: WordBool readonly dispid 1057;
    property metaKey: WordBool readonly dispid 1058;
    property button: Word readonly dispid 1059;
    property relatedTarget: IEventTarget readonly dispid 1060;
    procedure initMouseEvent(const eventType: WideString; canBubble: WordBool; 
                             cancelable: WordBool; const viewArg: IHTMLWindow2; detailArg: Integer; 
                             screenXArg: Integer; screenYArg: Integer; clientXArg: Integer; 
                             clientYArg: Integer; ctrlKeyArg: WordBool; altKeyArg: WordBool; 
                             shiftKeyArg: WordBool; metaKeyArg: WordBool; buttonArg: Word; 
                             const relatedTargetArg: IEventTarget); dispid 1061;
    function getModifierState(const keyArg: WideString): WordBool; dispid 1062;
    property buttons: Word readonly dispid 1063;
    property fromElement: IHTMLElement readonly dispid 1064;
    property toElement: IHTMLElement readonly dispid 1065;
    property x: Integer readonly dispid 1066;
    property y: Integer readonly dispid 1067;
    property offsetX: Integer readonly dispid 1068;
    property offsetY: Integer readonly dispid 1069;
    property pageX: Integer readonly dispid 1070;
    property pageY: Integer readonly dispid 1071;
    property layerX: Integer readonly dispid 1072;
    property layerY: Integer readonly dispid 1073;
    property which: Word readonly dispid 1074;
  end;

// *********************************************************************//
// Interface: IDOMDragEvent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510761-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMDragEvent = interface(IDispatch)
    ['{30510761-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_dataTransfer: IHTMLDataTransfer; safecall;
    procedure initDragEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool; 
                            const viewArg: IHTMLWindow2; detailArg: Integer; screenXArg: Integer; 
                            screenYArg: Integer; clientXArg: Integer; clientYArg: Integer; 
                            ctrlKeyArg: WordBool; altKeyArg: WordBool; shiftKeyArg: WordBool; 
                            metaKeyArg: WordBool; buttonArg: Word; 
                            const relatedTargetArg: IEventTarget; 
                            const dataTransferArg: IHTMLDataTransfer); safecall;
    property dataTransfer: IHTMLDataTransfer read Get_dataTransfer;
  end;

// *********************************************************************//
// DispIntf:  IDOMDragEventDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510761-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMDragEventDisp = dispinterface
    ['{30510761-98B5-11CF-BB82-00AA00BDCE0B}']
    property dataTransfer: IHTMLDataTransfer readonly dispid 1401;
    procedure initDragEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool; 
                            const viewArg: IHTMLWindow2; detailArg: Integer; screenXArg: Integer; 
                            screenYArg: Integer; clientXArg: Integer; clientYArg: Integer; 
                            ctrlKeyArg: WordBool; altKeyArg: WordBool; shiftKeyArg: WordBool; 
                            metaKeyArg: WordBool; buttonArg: Word; 
                            const relatedTargetArg: IEventTarget; 
                            const dataTransferArg: IHTMLDataTransfer); dispid 1402;
  end;

// *********************************************************************//
// DispIntf:  DispDOMDragEvent
// Flags:     (4112) Hidden Dispatchable
// GUID:      {305900A7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispDOMDragEvent = dispinterface
    ['{305900A7-98B5-11CF-BB82-00AA00BDCE0B}']
    property bubbles: WordBool readonly dispid 1001;
    property cancelable: WordBool readonly dispid 1002;
    property currentTarget: IEventTarget readonly dispid 1003;
    property defaultPrevented: WordBool readonly dispid 1004;
    property eventPhase: Word readonly dispid 1005;
    property target: IEventTarget readonly dispid 1006;
    property timeStamp: Largeuint readonly dispid 1007;
    property type_: WideString readonly dispid 1008;
    procedure initEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool); dispid 1009;
    procedure preventDefault; dispid 1010;
    procedure stopPropagation; dispid 1011;
    procedure stopImmediatePropagation; dispid 1012;
    property isTrusted: WordBool readonly dispid 1013;
    property cancelBubble: WordBool dispid 1014;
    property srcElement: IHTMLElement readonly dispid 1015;
    property view: IHTMLWindow2 readonly dispid 1026;
    property detail: Integer readonly dispid 1027;
    procedure initUIEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool; 
                          const view: IHTMLWindow2; detail: Integer); dispid 1028;
    property screenX: Integer readonly dispid 1051;
    property screenY: Integer readonly dispid 1052;
    property clientX: Integer readonly dispid 1053;
    property clientY: Integer readonly dispid 1054;
    property ctrlKey: WordBool readonly dispid 1055;
    property shiftKey: WordBool readonly dispid 1056;
    property altKey: WordBool readonly dispid 1057;
    property metaKey: WordBool readonly dispid 1058;
    property button: Word readonly dispid 1059;
    property relatedTarget: IEventTarget readonly dispid 1060;
    procedure initMouseEvent(const eventType: WideString; canBubble: WordBool; 
                             cancelable: WordBool; const viewArg: IHTMLWindow2; detailArg: Integer; 
                             screenXArg: Integer; screenYArg: Integer; clientXArg: Integer; 
                             clientYArg: Integer; ctrlKeyArg: WordBool; altKeyArg: WordBool; 
                             shiftKeyArg: WordBool; metaKeyArg: WordBool; buttonArg: Word; 
                             const relatedTargetArg: IEventTarget); dispid 1061;
    function getModifierState(const keyArg: WideString): WordBool; dispid 1062;
    property buttons: Word readonly dispid 1063;
    property fromElement: IHTMLElement readonly dispid 1064;
    property toElement: IHTMLElement readonly dispid 1065;
    property x: Integer readonly dispid 1066;
    property y: Integer readonly dispid 1067;
    property offsetX: Integer readonly dispid 1068;
    property offsetY: Integer readonly dispid 1069;
    property pageX: Integer readonly dispid 1070;
    property pageY: Integer readonly dispid 1071;
    property layerX: Integer readonly dispid 1072;
    property layerY: Integer readonly dispid 1073;
    property which: Word readonly dispid 1074;
    property dataTransfer: IHTMLDataTransfer readonly dispid 1401;
    procedure initDragEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool; 
                            const viewArg: IHTMLWindow2; detailArg: Integer; screenXArg: Integer; 
                            screenYArg: Integer; clientXArg: Integer; clientYArg: Integer; 
                            ctrlKeyArg: WordBool; altKeyArg: WordBool; shiftKeyArg: WordBool; 
                            metaKeyArg: WordBool; buttonArg: Word; 
                            const relatedTargetArg: IEventTarget; 
                            const dataTransferArg: IHTMLDataTransfer); dispid 1402;
  end;

// *********************************************************************//
// Interface: IDOMMouseWheelEvent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106D0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMMouseWheelEvent = interface(IDispatch)
    ['{305106D0-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_wheelDelta: Integer; safecall;
    procedure initMouseWheelEvent(const eventType: WideString; canBubble: WordBool; 
                                  cancelable: WordBool; const viewArg: IHTMLWindow2; 
                                  detailArg: Integer; screenXArg: Integer; screenYArg: Integer; 
                                  clientXArg: Integer; clientYArg: Integer; buttonArg: Word; 
                                  const relatedTargetArg: IEventTarget; 
                                  const modifiersListArg: WideString; wheelDeltaArg: Integer); safecall;
    property wheelDelta: Integer read Get_wheelDelta;
  end;

// *********************************************************************//
// DispIntf:  IDOMMouseWheelEventDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106D0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMMouseWheelEventDisp = dispinterface
    ['{305106D0-98B5-11CF-BB82-00AA00BDCE0B}']
    property wheelDelta: Integer readonly dispid 1076;
    procedure initMouseWheelEvent(const eventType: WideString; canBubble: WordBool; 
                                  cancelable: WordBool; const viewArg: IHTMLWindow2; 
                                  detailArg: Integer; screenXArg: Integer; screenYArg: Integer; 
                                  clientXArg: Integer; clientYArg: Integer; buttonArg: Word; 
                                  const relatedTargetArg: IEventTarget; 
                                  const modifiersListArg: WideString; wheelDeltaArg: Integer); dispid 1077;
  end;

// *********************************************************************//
// DispIntf:  DispDOMMouseWheelEvent
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590074-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispDOMMouseWheelEvent = dispinterface
    ['{30590074-98B5-11CF-BB82-00AA00BDCE0B}']
    property bubbles: WordBool readonly dispid 1001;
    property cancelable: WordBool readonly dispid 1002;
    property currentTarget: IEventTarget readonly dispid 1003;
    property defaultPrevented: WordBool readonly dispid 1004;
    property eventPhase: Word readonly dispid 1005;
    property target: IEventTarget readonly dispid 1006;
    property timeStamp: Largeuint readonly dispid 1007;
    property type_: WideString readonly dispid 1008;
    procedure initEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool); dispid 1009;
    procedure preventDefault; dispid 1010;
    procedure stopPropagation; dispid 1011;
    procedure stopImmediatePropagation; dispid 1012;
    property isTrusted: WordBool readonly dispid 1013;
    property cancelBubble: WordBool dispid 1014;
    property srcElement: IHTMLElement readonly dispid 1015;
    property view: IHTMLWindow2 readonly dispid 1026;
    property detail: Integer readonly dispid 1027;
    procedure initUIEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool; 
                          const view: IHTMLWindow2; detail: Integer); dispid 1028;
    property screenX: Integer readonly dispid 1051;
    property screenY: Integer readonly dispid 1052;
    property clientX: Integer readonly dispid 1053;
    property clientY: Integer readonly dispid 1054;
    property ctrlKey: WordBool readonly dispid 1055;
    property shiftKey: WordBool readonly dispid 1056;
    property altKey: WordBool readonly dispid 1057;
    property metaKey: WordBool readonly dispid 1058;
    property button: Word readonly dispid 1059;
    property relatedTarget: IEventTarget readonly dispid 1060;
    procedure initMouseEvent(const eventType: WideString; canBubble: WordBool; 
                             cancelable: WordBool; const viewArg: IHTMLWindow2; detailArg: Integer; 
                             screenXArg: Integer; screenYArg: Integer; clientXArg: Integer; 
                             clientYArg: Integer; ctrlKeyArg: WordBool; altKeyArg: WordBool; 
                             shiftKeyArg: WordBool; metaKeyArg: WordBool; buttonArg: Word; 
                             const relatedTargetArg: IEventTarget); dispid 1061;
    function getModifierState(const keyArg: WideString): WordBool; dispid 1062;
    property buttons: Word readonly dispid 1063;
    property fromElement: IHTMLElement readonly dispid 1064;
    property toElement: IHTMLElement readonly dispid 1065;
    property x: Integer readonly dispid 1066;
    property y: Integer readonly dispid 1067;
    property offsetX: Integer readonly dispid 1068;
    property offsetY: Integer readonly dispid 1069;
    property pageX: Integer readonly dispid 1070;
    property pageY: Integer readonly dispid 1071;
    property layerX: Integer readonly dispid 1072;
    property layerY: Integer readonly dispid 1073;
    property which: Word readonly dispid 1074;
    property wheelDelta: Integer readonly dispid 1076;
    procedure initMouseWheelEvent(const eventType: WideString; canBubble: WordBool; 
                                  cancelable: WordBool; const viewArg: IHTMLWindow2; 
                                  detailArg: Integer; screenXArg: Integer; screenYArg: Integer; 
                                  clientXArg: Integer; clientYArg: Integer; buttonArg: Word; 
                                  const relatedTargetArg: IEventTarget; 
                                  const modifiersListArg: WideString; wheelDeltaArg: Integer); dispid 1077;
  end;

// *********************************************************************//
// Interface: IDOMWheelEvent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106D2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMWheelEvent = interface(IDispatch)
    ['{305106D2-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_deltaX: Integer; safecall;
    function Get_deltaY: Integer; safecall;
    function Get_deltaZ: Integer; safecall;
    function Get_deltaMode: LongWord; safecall;
    procedure initWheelEvent(const eventType: WideString; canBubble: WordBool; 
                             cancelable: WordBool; const viewArg: IHTMLWindow2; detailArg: Integer; 
                             screenXArg: Integer; screenYArg: Integer; clientXArg: Integer; 
                             clientYArg: Integer; buttonArg: Word; 
                             const relatedTargetArg: IEventTarget; 
                             const modifiersListArg: WideString; deltaX: Integer; deltaY: Integer; 
                             deltaZ: Integer; deltaMode: LongWord); safecall;
    property deltaX: Integer read Get_deltaX;
    property deltaY: Integer read Get_deltaY;
    property deltaZ: Integer read Get_deltaZ;
    property deltaMode: LongWord read Get_deltaMode;
  end;

// *********************************************************************//
// DispIntf:  IDOMWheelEventDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106D2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMWheelEventDisp = dispinterface
    ['{305106D2-98B5-11CF-BB82-00AA00BDCE0B}']
    property deltaX: Integer readonly dispid 1101;
    property deltaY: Integer readonly dispid 1102;
    property deltaZ: Integer readonly dispid 1103;
    property deltaMode: LongWord readonly dispid 1104;
    procedure initWheelEvent(const eventType: WideString; canBubble: WordBool; 
                             cancelable: WordBool; const viewArg: IHTMLWindow2; detailArg: Integer; 
                             screenXArg: Integer; screenYArg: Integer; clientXArg: Integer; 
                             clientYArg: Integer; buttonArg: Word; 
                             const relatedTargetArg: IEventTarget; 
                             const modifiersListArg: WideString; deltaX: Integer; deltaY: Integer; 
                             deltaZ: Integer; deltaMode: LongWord); dispid 1105;
  end;

// *********************************************************************//
// DispIntf:  DispDOMWheelEvent
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590075-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispDOMWheelEvent = dispinterface
    ['{30590075-98B5-11CF-BB82-00AA00BDCE0B}']
    property bubbles: WordBool readonly dispid 1001;
    property cancelable: WordBool readonly dispid 1002;
    property currentTarget: IEventTarget readonly dispid 1003;
    property defaultPrevented: WordBool readonly dispid 1004;
    property eventPhase: Word readonly dispid 1005;
    property target: IEventTarget readonly dispid 1006;
    property timeStamp: Largeuint readonly dispid 1007;
    property type_: WideString readonly dispid 1008;
    procedure initEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool); dispid 1009;
    procedure preventDefault; dispid 1010;
    procedure stopPropagation; dispid 1011;
    procedure stopImmediatePropagation; dispid 1012;
    property isTrusted: WordBool readonly dispid 1013;
    property cancelBubble: WordBool dispid 1014;
    property srcElement: IHTMLElement readonly dispid 1015;
    property view: IHTMLWindow2 readonly dispid 1026;
    property detail: Integer readonly dispid 1027;
    procedure initUIEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool; 
                          const view: IHTMLWindow2; detail: Integer); dispid 1028;
    property screenX: Integer readonly dispid 1051;
    property screenY: Integer readonly dispid 1052;
    property clientX: Integer readonly dispid 1053;
    property clientY: Integer readonly dispid 1054;
    property ctrlKey: WordBool readonly dispid 1055;
    property shiftKey: WordBool readonly dispid 1056;
    property altKey: WordBool readonly dispid 1057;
    property metaKey: WordBool readonly dispid 1058;
    property button: Word readonly dispid 1059;
    property relatedTarget: IEventTarget readonly dispid 1060;
    procedure initMouseEvent(const eventType: WideString; canBubble: WordBool; 
                             cancelable: WordBool; const viewArg: IHTMLWindow2; detailArg: Integer; 
                             screenXArg: Integer; screenYArg: Integer; clientXArg: Integer; 
                             clientYArg: Integer; ctrlKeyArg: WordBool; altKeyArg: WordBool; 
                             shiftKeyArg: WordBool; metaKeyArg: WordBool; buttonArg: Word; 
                             const relatedTargetArg: IEventTarget); dispid 1061;
    function getModifierState(const keyArg: WideString): WordBool; dispid 1062;
    property buttons: Word readonly dispid 1063;
    property fromElement: IHTMLElement readonly dispid 1064;
    property toElement: IHTMLElement readonly dispid 1065;
    property x: Integer readonly dispid 1066;
    property y: Integer readonly dispid 1067;
    property offsetX: Integer readonly dispid 1068;
    property offsetY: Integer readonly dispid 1069;
    property pageX: Integer readonly dispid 1070;
    property pageY: Integer readonly dispid 1071;
    property layerX: Integer readonly dispid 1072;
    property layerY: Integer readonly dispid 1073;
    property which: Word readonly dispid 1074;
    property deltaX: Integer readonly dispid 1101;
    property deltaY: Integer readonly dispid 1102;
    property deltaZ: Integer readonly dispid 1103;
    property deltaMode: LongWord readonly dispid 1104;
    procedure initWheelEvent(const eventType: WideString; canBubble: WordBool; 
                             cancelable: WordBool; const viewArg: IHTMLWindow2; detailArg: Integer; 
                             screenXArg: Integer; screenYArg: Integer; clientXArg: Integer; 
                             clientYArg: Integer; buttonArg: Word; 
                             const relatedTargetArg: IEventTarget; 
                             const modifiersListArg: WideString; deltaX: Integer; deltaY: Integer; 
                             deltaZ: Integer; deltaMode: LongWord); dispid 1105;
  end;

// *********************************************************************//
// Interface: IDOMTextEvent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106D4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMTextEvent = interface(IDispatch)
    ['{305106D4-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_data: WideString; safecall;
    function Get_inputMethod: LongWord; safecall;
    procedure initTextEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool; 
                            const viewArg: IHTMLWindow2; const dataArg: WideString; 
                            inputMethod: LongWord; const locale: WideString); safecall;
    function Get_locale: WideString; safecall;
    property data: WideString read Get_data;
    property inputMethod: LongWord read Get_inputMethod;
    property locale: WideString read Get_locale;
  end;

// *********************************************************************//
// DispIntf:  IDOMTextEventDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106D4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMTextEventDisp = dispinterface
    ['{305106D4-98B5-11CF-BB82-00AA00BDCE0B}']
    property data: WideString readonly dispid 1126;
    property inputMethod: LongWord readonly dispid 1127;
    procedure initTextEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool; 
                            const viewArg: IHTMLWindow2; const dataArg: WideString; 
                            inputMethod: LongWord; const locale: WideString); dispid 1128;
    property locale: WideString readonly dispid 1129;
  end;

// *********************************************************************//
// DispIntf:  DispDOMTextEvent
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590076-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispDOMTextEvent = dispinterface
    ['{30590076-98B5-11CF-BB82-00AA00BDCE0B}']
    property bubbles: WordBool readonly dispid 1001;
    property cancelable: WordBool readonly dispid 1002;
    property currentTarget: IEventTarget readonly dispid 1003;
    property defaultPrevented: WordBool readonly dispid 1004;
    property eventPhase: Word readonly dispid 1005;
    property target: IEventTarget readonly dispid 1006;
    property timeStamp: Largeuint readonly dispid 1007;
    property type_: WideString readonly dispid 1008;
    procedure initEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool); dispid 1009;
    procedure preventDefault; dispid 1010;
    procedure stopPropagation; dispid 1011;
    procedure stopImmediatePropagation; dispid 1012;
    property isTrusted: WordBool readonly dispid 1013;
    property cancelBubble: WordBool dispid 1014;
    property srcElement: IHTMLElement readonly dispid 1015;
    property view: IHTMLWindow2 readonly dispid 1026;
    property detail: Integer readonly dispid 1027;
    procedure initUIEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool; 
                          const view: IHTMLWindow2; detail: Integer); dispid 1028;
    property data: WideString readonly dispid 1126;
    property inputMethod: LongWord readonly dispid 1127;
    procedure initTextEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool; 
                            const viewArg: IHTMLWindow2; const dataArg: WideString; 
                            inputMethod: LongWord; const locale: WideString); dispid 1128;
    property locale: WideString readonly dispid 1129;
  end;

// *********************************************************************//
// Interface: IDOMKeyboardEvent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106D6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMKeyboardEvent = interface(IDispatch)
    ['{305106D6-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_key: WideString; safecall;
    function Get_location: LongWord; safecall;
    function Get_ctrlKey: WordBool; safecall;
    function Get_shiftKey: WordBool; safecall;
    function Get_altKey: WordBool; safecall;
    function Get_metaKey: WordBool; safecall;
    function Get_repeat_: WordBool; safecall;
    function getModifierState(const keyArg: WideString): WordBool; safecall;
    procedure initKeyboardEvent(const eventType: WideString; canBubble: WordBool; 
                                cancelable: WordBool; const viewArg: IHTMLWindow2; 
                                const keyArg: WideString; locationArg: LongWord; 
                                const modifiersListArg: WideString; repeat_: WordBool; 
                                const locale: WideString); safecall;
    function Get_keyCode: Integer; safecall;
    function Get_charCode: Integer; safecall;
    function Get_which: Integer; safecall;
    function Get_ie9_char: OleVariant; safecall;
    function Get_locale: WideString; safecall;
    property key: WideString read Get_key;
    property location: LongWord read Get_location;
    property ctrlKey: WordBool read Get_ctrlKey;
    property shiftKey: WordBool read Get_shiftKey;
    property altKey: WordBool read Get_altKey;
    property metaKey: WordBool read Get_metaKey;
    property repeat_: WordBool read Get_repeat_;
    property keyCode: Integer read Get_keyCode;
    property charCode: Integer read Get_charCode;
    property which: Integer read Get_which;
    property ie9_char: OleVariant read Get_ie9_char;
    property locale: WideString read Get_locale;
  end;

// *********************************************************************//
// DispIntf:  IDOMKeyboardEventDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106D6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMKeyboardEventDisp = dispinterface
    ['{305106D6-98B5-11CF-BB82-00AA00BDCE0B}']
    property key: WideString readonly dispid 1151;
    property location: LongWord readonly dispid 1152;
    property ctrlKey: WordBool readonly dispid 1153;
    property shiftKey: WordBool readonly dispid 1154;
    property altKey: WordBool readonly dispid 1155;
    property metaKey: WordBool readonly dispid 1156;
    property repeat_: WordBool readonly dispid 1157;
    function getModifierState(const keyArg: WideString): WordBool; dispid 1158;
    procedure initKeyboardEvent(const eventType: WideString; canBubble: WordBool; 
                                cancelable: WordBool; const viewArg: IHTMLWindow2; 
                                const keyArg: WideString; locationArg: LongWord; 
                                const modifiersListArg: WideString; repeat_: WordBool; 
                                const locale: WideString); dispid 1159;
    property keyCode: Integer readonly dispid 1160;
    property charCode: Integer readonly dispid 1161;
    property which: Integer readonly dispid 1162;
    property ie9_char: OleVariant readonly dispid 1163;
    property locale: WideString readonly dispid 1164;
  end;

// *********************************************************************//
// DispIntf:  DispDOMKeyboardEvent
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590077-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispDOMKeyboardEvent = dispinterface
    ['{30590077-98B5-11CF-BB82-00AA00BDCE0B}']
    property bubbles: WordBool readonly dispid 1001;
    property cancelable: WordBool readonly dispid 1002;
    property currentTarget: IEventTarget readonly dispid 1003;
    property defaultPrevented: WordBool readonly dispid 1004;
    property eventPhase: Word readonly dispid 1005;
    property target: IEventTarget readonly dispid 1006;
    property timeStamp: Largeuint readonly dispid 1007;
    property type_: WideString readonly dispid 1008;
    procedure initEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool); dispid 1009;
    procedure preventDefault; dispid 1010;
    procedure stopPropagation; dispid 1011;
    procedure stopImmediatePropagation; dispid 1012;
    property isTrusted: WordBool readonly dispid 1013;
    property cancelBubble: WordBool dispid 1014;
    property srcElement: IHTMLElement readonly dispid 1015;
    property view: IHTMLWindow2 readonly dispid 1026;
    property detail: Integer readonly dispid 1027;
    procedure initUIEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool; 
                          const view: IHTMLWindow2; detail: Integer); dispid 1028;
    property key: WideString readonly dispid 1151;
    property location: LongWord readonly dispid 1152;
    property ctrlKey: WordBool readonly dispid 1153;
    property shiftKey: WordBool readonly dispid 1154;
    property altKey: WordBool readonly dispid 1155;
    property metaKey: WordBool readonly dispid 1156;
    property repeat_: WordBool readonly dispid 1157;
    function getModifierState(const keyArg: WideString): WordBool; dispid 1158;
    procedure initKeyboardEvent(const eventType: WideString; canBubble: WordBool; 
                                cancelable: WordBool; const viewArg: IHTMLWindow2; 
                                const keyArg: WideString; locationArg: LongWord; 
                                const modifiersListArg: WideString; repeat_: WordBool; 
                                const locale: WideString); dispid 1159;
    property keyCode: Integer readonly dispid 1160;
    property charCode: Integer readonly dispid 1161;
    property which: Integer readonly dispid 1162;
    property ie9_char: OleVariant readonly dispid 1163;
    property locale: WideString readonly dispid 1164;
  end;

// *********************************************************************//
// Interface: IDOMCompositionEvent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106D8-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMCompositionEvent = interface(IDispatch)
    ['{305106D8-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_data: WideString; safecall;
    procedure initCompositionEvent(const eventType: WideString; canBubble: WordBool; 
                                   cancelable: WordBool; const viewArg: IHTMLWindow2; 
                                   const data: WideString; const locale: WideString); safecall;
    function Get_locale: WideString; safecall;
    property data: WideString read Get_data;
    property locale: WideString read Get_locale;
  end;

// *********************************************************************//
// DispIntf:  IDOMCompositionEventDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106D8-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMCompositionEventDisp = dispinterface
    ['{305106D8-98B5-11CF-BB82-00AA00BDCE0B}']
    property data: WideString readonly dispid 1176;
    procedure initCompositionEvent(const eventType: WideString; canBubble: WordBool; 
                                   cancelable: WordBool; const viewArg: IHTMLWindow2; 
                                   const data: WideString; const locale: WideString); dispid 1177;
    property locale: WideString readonly dispid 1178;
  end;

// *********************************************************************//
// DispIntf:  DispDOMCompositionEvent
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590078-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispDOMCompositionEvent = dispinterface
    ['{30590078-98B5-11CF-BB82-00AA00BDCE0B}']
    property bubbles: WordBool readonly dispid 1001;
    property cancelable: WordBool readonly dispid 1002;
    property currentTarget: IEventTarget readonly dispid 1003;
    property defaultPrevented: WordBool readonly dispid 1004;
    property eventPhase: Word readonly dispid 1005;
    property target: IEventTarget readonly dispid 1006;
    property timeStamp: Largeuint readonly dispid 1007;
    property type_: WideString readonly dispid 1008;
    procedure initEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool); dispid 1009;
    procedure preventDefault; dispid 1010;
    procedure stopPropagation; dispid 1011;
    procedure stopImmediatePropagation; dispid 1012;
    property isTrusted: WordBool readonly dispid 1013;
    property cancelBubble: WordBool dispid 1014;
    property srcElement: IHTMLElement readonly dispid 1015;
    property view: IHTMLWindow2 readonly dispid 1026;
    property detail: Integer readonly dispid 1027;
    procedure initUIEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool; 
                          const view: IHTMLWindow2; detail: Integer); dispid 1028;
    property data: WideString readonly dispid 1176;
    procedure initCompositionEvent(const eventType: WideString; canBubble: WordBool; 
                                   cancelable: WordBool; const viewArg: IHTMLWindow2; 
                                   const data: WideString; const locale: WideString); dispid 1177;
    property locale: WideString readonly dispid 1178;
  end;

// *********************************************************************//
// Interface: IDOMMutationEvent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106DA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMMutationEvent = interface(IDispatch)
    ['{305106DA-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_relatedNode: IDispatch; safecall;
    function Get_prevValue: WideString; safecall;
    function Get_newValue: WideString; safecall;
    function Get_attrName: WideString; safecall;
    function Get_attrChange: Word; safecall;
    procedure initMutationEvent(const eventType: WideString; canBubble: WordBool; 
                                cancelable: WordBool; const relatedNodeArg: IDispatch; 
                                const prevValueArg: WideString; const newValueArg: WideString; 
                                const attrNameArg: WideString; attrChangeArg: Word); safecall;
    property relatedNode: IDispatch read Get_relatedNode;
    property prevValue: WideString read Get_prevValue;
    property newValue: WideString read Get_newValue;
    property attrName: WideString read Get_attrName;
    property attrChange: Word read Get_attrChange;
  end;

// *********************************************************************//
// DispIntf:  IDOMMutationEventDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106DA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMMutationEventDisp = dispinterface
    ['{305106DA-98B5-11CF-BB82-00AA00BDCE0B}']
    property relatedNode: IDispatch readonly dispid 1226;
    property prevValue: WideString readonly dispid 1227;
    property newValue: WideString readonly dispid 1228;
    property attrName: WideString readonly dispid 1229;
    property attrChange: Word readonly dispid 1230;
    procedure initMutationEvent(const eventType: WideString; canBubble: WordBool; 
                                cancelable: WordBool; const relatedNodeArg: IDispatch; 
                                const prevValueArg: WideString; const newValueArg: WideString; 
                                const attrNameArg: WideString; attrChangeArg: Word); dispid 1231;
  end;

// *********************************************************************//
// DispIntf:  DispDOMMutationEvent
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590079-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispDOMMutationEvent = dispinterface
    ['{30590079-98B5-11CF-BB82-00AA00BDCE0B}']
    property bubbles: WordBool readonly dispid 1001;
    property cancelable: WordBool readonly dispid 1002;
    property currentTarget: IEventTarget readonly dispid 1003;
    property defaultPrevented: WordBool readonly dispid 1004;
    property eventPhase: Word readonly dispid 1005;
    property target: IEventTarget readonly dispid 1006;
    property timeStamp: Largeuint readonly dispid 1007;
    property type_: WideString readonly dispid 1008;
    procedure initEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool); dispid 1009;
    procedure preventDefault; dispid 1010;
    procedure stopPropagation; dispid 1011;
    procedure stopImmediatePropagation; dispid 1012;
    property isTrusted: WordBool readonly dispid 1013;
    property cancelBubble: WordBool dispid 1014;
    property srcElement: IHTMLElement readonly dispid 1015;
    property relatedNode: IDispatch readonly dispid 1226;
    property prevValue: WideString readonly dispid 1227;
    property newValue: WideString readonly dispid 1228;
    property attrName: WideString readonly dispid 1229;
    property attrChange: Word readonly dispid 1230;
    procedure initMutationEvent(const eventType: WideString; canBubble: WordBool; 
                                cancelable: WordBool; const relatedNodeArg: IDispatch; 
                                const prevValueArg: WideString; const newValueArg: WideString; 
                                const attrNameArg: WideString; attrChangeArg: Word); dispid 1231;
  end;

// *********************************************************************//
// Interface: IDOMBeforeUnloadEvent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510763-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMBeforeUnloadEvent = interface(IDispatch)
    ['{30510763-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_returnValue(p: OleVariant); safecall;
    function Get_returnValue: OleVariant; safecall;
    property returnValue: OleVariant read Get_returnValue write Set_returnValue;
  end;

// *********************************************************************//
// DispIntf:  IDOMBeforeUnloadEventDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510763-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMBeforeUnloadEventDisp = dispinterface
    ['{30510763-98B5-11CF-BB82-00AA00BDCE0B}']
    property returnValue: OleVariant dispid 1376;
  end;

// *********************************************************************//
// DispIntf:  DispDOMBeforeUnloadEvent
// Flags:     (4112) Hidden Dispatchable
// GUID:      {305900A8-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispDOMBeforeUnloadEvent = dispinterface
    ['{305900A8-98B5-11CF-BB82-00AA00BDCE0B}']
    property bubbles: WordBool readonly dispid 1001;
    property cancelable: WordBool readonly dispid 1002;
    property currentTarget: IEventTarget readonly dispid 1003;
    property defaultPrevented: WordBool readonly dispid 1004;
    property eventPhase: Word readonly dispid 1005;
    property target: IEventTarget readonly dispid 1006;
    property timeStamp: Largeuint readonly dispid 1007;
    property type_: WideString readonly dispid 1008;
    procedure initEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool); dispid 1009;
    procedure preventDefault; dispid 1010;
    procedure stopPropagation; dispid 1011;
    procedure stopImmediatePropagation; dispid 1012;
    property isTrusted: WordBool readonly dispid 1013;
    property cancelBubble: WordBool dispid 1014;
    property srcElement: IHTMLElement readonly dispid 1015;
    property returnValue: OleVariant dispid 1376;
  end;

// *********************************************************************//
// Interface: IDOMFocusEvent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106CC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMFocusEvent = interface(IDispatch)
    ['{305106CC-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_relatedTarget: IEventTarget; safecall;
    procedure initFocusEvent(const eventType: WideString; canBubble: WordBool; 
                             cancelable: WordBool; const view: IHTMLWindow2; detail: Integer; 
                             const relatedTargetArg: IEventTarget); safecall;
    property relatedTarget: IEventTarget read Get_relatedTarget;
  end;

// *********************************************************************//
// DispIntf:  IDOMFocusEventDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106CC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMFocusEventDisp = dispinterface
    ['{305106CC-98B5-11CF-BB82-00AA00BDCE0B}']
    property relatedTarget: IEventTarget readonly dispid 1251;
    procedure initFocusEvent(const eventType: WideString; canBubble: WordBool; 
                             cancelable: WordBool; const view: IHTMLWindow2; detail: Integer; 
                             const relatedTargetArg: IEventTarget); dispid 1252;
  end;

// *********************************************************************//
// DispIntf:  DispDOMFocusEvent
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590071-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispDOMFocusEvent = dispinterface
    ['{30590071-98B5-11CF-BB82-00AA00BDCE0B}']
    property bubbles: WordBool readonly dispid 1001;
    property cancelable: WordBool readonly dispid 1002;
    property currentTarget: IEventTarget readonly dispid 1003;
    property defaultPrevented: WordBool readonly dispid 1004;
    property eventPhase: Word readonly dispid 1005;
    property target: IEventTarget readonly dispid 1006;
    property timeStamp: Largeuint readonly dispid 1007;
    property type_: WideString readonly dispid 1008;
    procedure initEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool); dispid 1009;
    procedure preventDefault; dispid 1010;
    procedure stopPropagation; dispid 1011;
    procedure stopImmediatePropagation; dispid 1012;
    property isTrusted: WordBool readonly dispid 1013;
    property cancelBubble: WordBool dispid 1014;
    property srcElement: IHTMLElement readonly dispid 1015;
    property view: IHTMLWindow2 readonly dispid 1026;
    property detail: Integer readonly dispid 1027;
    procedure initUIEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool; 
                          const view: IHTMLWindow2; detail: Integer); dispid 1028;
    property relatedTarget: IEventTarget readonly dispid 1251;
    procedure initFocusEvent(const eventType: WideString; canBubble: WordBool; 
                             cancelable: WordBool; const view: IHTMLWindow2; detail: Integer; 
                             const relatedTargetArg: IEventTarget); dispid 1252;
  end;

// *********************************************************************//
// Interface: IDOMCustomEvent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106DE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMCustomEvent = interface(IDispatch)
    ['{305106DE-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_detail: OleVariant; safecall;
    procedure initCustomEvent(const eventType: WideString; canBubble: WordBool; 
                              cancelable: WordBool; const detail: OleVariant); safecall;
    property detail: OleVariant read Get_detail;
  end;

// *********************************************************************//
// DispIntf:  IDOMCustomEventDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106DE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMCustomEventDisp = dispinterface
    ['{305106DE-98B5-11CF-BB82-00AA00BDCE0B}']
    property detail: OleVariant readonly dispid 1201;
    procedure initCustomEvent(const eventType: WideString; canBubble: WordBool; 
                              cancelable: WordBool; const detail: OleVariant); dispid 1202;
  end;

// *********************************************************************//
// DispIntf:  DispDOMCustomEvent
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059007C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispDOMCustomEvent = dispinterface
    ['{3059007C-98B5-11CF-BB82-00AA00BDCE0B}']
    property bubbles: WordBool readonly dispid 1001;
    property cancelable: WordBool readonly dispid 1002;
    property currentTarget: IEventTarget readonly dispid 1003;
    property defaultPrevented: WordBool readonly dispid 1004;
    property eventPhase: Word readonly dispid 1005;
    property target: IEventTarget readonly dispid 1006;
    property timeStamp: Largeuint readonly dispid 1007;
    property type_: WideString readonly dispid 1008;
    procedure initEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool); dispid 1009;
    procedure preventDefault; dispid 1010;
    procedure stopPropagation; dispid 1011;
    procedure stopImmediatePropagation; dispid 1012;
    property isTrusted: WordBool readonly dispid 1013;
    property cancelBubble: WordBool dispid 1014;
    property srcElement: IHTMLElement readonly dispid 1015;
    property detail: OleVariant readonly dispid 1201;
    procedure initCustomEvent(const eventType: WideString; canBubble: WordBool; 
                              cancelable: WordBool; const detail: OleVariant); dispid 1202;
  end;

// *********************************************************************//
// Interface: ICanvasGradient
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510714-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ICanvasGradient = interface(IDispatch)
    ['{30510714-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure addColorStop(offset: Single; const color: WideString); safecall;
  end;

// *********************************************************************//
// DispIntf:  ICanvasGradientDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510714-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ICanvasGradientDisp = dispinterface
    ['{30510714-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure addColorStop(offset: Single; const color: WideString); dispid 1000;
  end;

// *********************************************************************//
// Interface: ICanvasPattern
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510716-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ICanvasPattern = interface(IDispatch)
    ['{30510716-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  ICanvasPatternDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510716-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ICanvasPatternDisp = dispinterface
    ['{30510716-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// Interface: ICanvasTextMetrics
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510718-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ICanvasTextMetrics = interface(IDispatch)
    ['{30510718-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_width: Single; safecall;
    property width: Single read Get_width;
  end;

// *********************************************************************//
// DispIntf:  ICanvasTextMetricsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510718-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ICanvasTextMetricsDisp = dispinterface
    ['{30510718-98B5-11CF-BB82-00AA00BDCE0B}']
    property width: Single readonly dispid 1000;
  end;

// *********************************************************************//
// Interface: ICanvasImageData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051071A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ICanvasImageData = interface(IDispatch)
    ['{3051071A-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_width: LongWord; safecall;
    function Get_height: LongWord; safecall;
    function Get_data: OleVariant; safecall;
    property width: LongWord read Get_width;
    property height: LongWord read Get_height;
    property data: OleVariant read Get_data;
  end;

// *********************************************************************//
// DispIntf:  ICanvasImageDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051071A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ICanvasImageDataDisp = dispinterface
    ['{3051071A-98B5-11CF-BB82-00AA00BDCE0B}']
    property width: LongWord readonly dispid 1000;
    property height: LongWord readonly dispid 1001;
    property data: OleVariant readonly dispid 1002;
  end;

// *********************************************************************//
// Interface: ICanvasPixelArray
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051071C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ICanvasPixelArray = interface(IDispatch)
    ['{3051071C-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: LongWord; safecall;
    property length: LongWord read Get_length;
  end;

// *********************************************************************//
// DispIntf:  ICanvasPixelArrayDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051071C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ICanvasPixelArrayDisp = dispinterface
    ['{3051071C-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: LongWord readonly dispid 1000;
  end;

// *********************************************************************//
// Interface: IHTMLCanvasElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106E4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCanvasElement = interface(IDispatch)
    ['{305106E4-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_width(p: Integer); safecall;
    function Get_width: Integer; safecall;
    procedure Set_height(p: Integer); safecall;
    function Get_height: Integer; safecall;
    function getContext(const contextId: WideString): ICanvasRenderingContext2D; safecall;
    function toDataURL(const type_: WideString; jpegquality: OleVariant): WideString; safecall;
    property width: Integer read Get_width write Set_width;
    property height: Integer read Get_height write Set_height;
  end;

// *********************************************************************//
// DispIntf:  IHTMLCanvasElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106E4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCanvasElementDisp = dispinterface
    ['{305106E4-98B5-11CF-BB82-00AA00BDCE0B}']
    property width: Integer dispid -2147418107;
    property height: Integer dispid -2147418106;
    function getContext(const contextId: WideString): ICanvasRenderingContext2D; dispid 1001;
    function toDataURL(const type_: WideString; jpegquality: OleVariant): WideString; dispid 1002;
  end;

// *********************************************************************//
// Interface: ICanvasRenderingContext2D
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106FF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ICanvasRenderingContext2D = interface(IDispatch)
    ['{305106FF-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_canvas: IHTMLCanvasElement; safecall;
    procedure restore; safecall;
    procedure save; safecall;
    procedure rotate(angle: Single); safecall;
    procedure scale(x: Single; y: Single); safecall;
    procedure setTransform(m11: Single; m12: Single; m21: Single; m22: Single; dx: Single; 
                           dy: Single); safecall;
    procedure transform(m11: Single; m12: Single; m21: Single; m22: Single; dx: Single; dy: Single); safecall;
    procedure translate(x: Single; y: Single); safecall;
    procedure Set_globalAlpha(p: Single); safecall;
    function Get_globalAlpha: Single; safecall;
    procedure Set_globalCompositeOperation(const p: WideString); safecall;
    function Get_globalCompositeOperation: WideString; safecall;
    procedure Set_fillStyle(p: OleVariant); safecall;
    function Get_fillStyle: OleVariant; safecall;
    procedure Set_strokeStyle(p: OleVariant); safecall;
    function Get_strokeStyle: OleVariant; safecall;
    function createLinearGradient(x0: Single; y0: Single; x1: Single; y1: Single): ICanvasGradient; safecall;
    function createRadialGradient(x0: Single; y0: Single; r0: Single; x1: Single; y1: Single; 
                                  r1: Single): ICanvasGradient; safecall;
    function createPattern(const Image: IDispatch; repetition: OleVariant): ICanvasPattern; safecall;
    procedure Set_lineCap(const p: WideString); safecall;
    function Get_lineCap: WideString; safecall;
    procedure Set_lineJoin(const p: WideString); safecall;
    function Get_lineJoin: WideString; safecall;
    procedure Set_lineWidth(p: Single); safecall;
    function Get_lineWidth: Single; safecall;
    procedure Set_miterLimit(p: Single); safecall;
    function Get_miterLimit: Single; safecall;
    procedure Set_shadowBlur(p: Single); safecall;
    function Get_shadowBlur: Single; safecall;
    procedure Set_shadowColor(const p: WideString); safecall;
    function Get_shadowColor: WideString; safecall;
    procedure Set_shadowOffsetX(p: Single); safecall;
    function Get_shadowOffsetX: Single; safecall;
    procedure Set_shadowOffsetY(p: Single); safecall;
    function Get_shadowOffsetY: Single; safecall;
    procedure clearRect(x: Single; y: Single; w: Single; h: Single); safecall;
    procedure fillRect(x: Single; y: Single; w: Single; h: Single); safecall;
    procedure strokeRect(x: Single; y: Single; w: Single; h: Single); safecall;
    procedure arc(x: Single; y: Single; radius: Single; startAngle: Single; endAngle: Single; 
                  anticlockwise: Integer); safecall;
    procedure arcTo(x1: Single; y1: Single; x2: Single; y2: Single; radius: Single); safecall;
    procedure beginPath; safecall;
    procedure bezierCurveTo(cp1x: Single; cp1y: Single; cp2x: Single; cp2y: Single; x: Single; 
                            y: Single); safecall;
    procedure clip; safecall;
    procedure closePath; safecall;
    procedure fill; safecall;
    procedure lineTo(x: Single; y: Single); safecall;
    procedure moveTo(x: Single; y: Single); safecall;
    procedure quadraticCurveTo(cpx: Single; cpy: Single; x: Single; y: Single); safecall;
    procedure rect(x: Single; y: Single; w: Single; h: Single); safecall;
    procedure stroke; safecall;
    function isPointInPath(x: Single; y: Single): WordBool; safecall;
    procedure Set_font(const p: WideString); safecall;
    function Get_font: WideString; safecall;
    procedure Set_textAlign(const p: WideString); safecall;
    function Get_textAlign: WideString; safecall;
    procedure Set_textBaseline(const p: WideString); safecall;
    function Get_textBaseline: WideString; safecall;
    procedure fillText(const text: WideString; x: Single; y: Single; maxWidth: OleVariant); safecall;
    function measureText(const text: WideString): ICanvasTextMetrics; safecall;
    procedure strokeText(const text: WideString; x: Single; y: Single; maxWidth: OleVariant); safecall;
    procedure drawImage(const pSrc: IDispatch; a1: OleVariant; a2: OleVariant; a3: OleVariant; 
                        a4: OleVariant; a5: OleVariant; a6: OleVariant; a7: OleVariant; 
                        a8: OleVariant); safecall;
    function createImageData(a1: OleVariant; a2: OleVariant): ICanvasImageData; safecall;
    function getImageData(sx: Single; sy: Single; sw: Single; sh: Single): ICanvasImageData; safecall;
    procedure putImageData(const imagedata: ICanvasImageData; dx: Single; dy: Single; 
                           dirtyX: OleVariant; dirtyY: OleVariant; dirtyWidth: OleVariant; 
                           dirtyHeight: OleVariant); safecall;
    property canvas: IHTMLCanvasElement read Get_canvas;
    property globalAlpha: Single read Get_globalAlpha write Set_globalAlpha;
    property globalCompositeOperation: WideString read Get_globalCompositeOperation write Set_globalCompositeOperation;
    property fillStyle: OleVariant read Get_fillStyle write Set_fillStyle;
    property strokeStyle: OleVariant read Get_strokeStyle write Set_strokeStyle;
    property lineCap: WideString read Get_lineCap write Set_lineCap;
    property lineJoin: WideString read Get_lineJoin write Set_lineJoin;
    property lineWidth: Single read Get_lineWidth write Set_lineWidth;
    property miterLimit: Single read Get_miterLimit write Set_miterLimit;
    property shadowBlur: Single read Get_shadowBlur write Set_shadowBlur;
    property shadowColor: WideString read Get_shadowColor write Set_shadowColor;
    property shadowOffsetX: Single read Get_shadowOffsetX write Set_shadowOffsetX;
    property shadowOffsetY: Single read Get_shadowOffsetY write Set_shadowOffsetY;
    property font: WideString read Get_font write Set_font;
    property textAlign: WideString read Get_textAlign write Set_textAlign;
    property textBaseline: WideString read Get_textBaseline write Set_textBaseline;
  end;

// *********************************************************************//
// DispIntf:  ICanvasRenderingContext2DDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305106FF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ICanvasRenderingContext2DDisp = dispinterface
    ['{305106FF-98B5-11CF-BB82-00AA00BDCE0B}']
    property canvas: IHTMLCanvasElement readonly dispid 1000;
    procedure restore; dispid 1001;
    procedure save; dispid 1002;
    procedure rotate(angle: Single); dispid 1003;
    procedure scale(x: Single; y: Single); dispid 1004;
    procedure setTransform(m11: Single; m12: Single; m21: Single; m22: Single; dx: Single; 
                           dy: Single); dispid 1005;
    procedure transform(m11: Single; m12: Single; m21: Single; m22: Single; dx: Single; dy: Single); dispid 1006;
    procedure translate(x: Single; y: Single); dispid 1007;
    property globalAlpha: Single dispid 1008;
    property globalCompositeOperation: WideString dispid 1009;
    property fillStyle: OleVariant dispid 1010;
    property strokeStyle: OleVariant dispid 1011;
    function createLinearGradient(x0: Single; y0: Single; x1: Single; y1: Single): ICanvasGradient; dispid 1012;
    function createRadialGradient(x0: Single; y0: Single; r0: Single; x1: Single; y1: Single; 
                                  r1: Single): ICanvasGradient; dispid 1013;
    function createPattern(const Image: IDispatch; repetition: OleVariant): ICanvasPattern; dispid 1014;
    property lineCap: WideString dispid 1015;
    property lineJoin: WideString dispid 1016;
    property lineWidth: Single dispid 1017;
    property miterLimit: Single dispid 1018;
    property shadowBlur: Single dispid 1019;
    property shadowColor: WideString dispid 1020;
    property shadowOffsetX: Single dispid 1021;
    property shadowOffsetY: Single dispid 1022;
    procedure clearRect(x: Single; y: Single; w: Single; h: Single); dispid 1023;
    procedure fillRect(x: Single; y: Single; w: Single; h: Single); dispid 1024;
    procedure strokeRect(x: Single; y: Single; w: Single; h: Single); dispid 1025;
    procedure arc(x: Single; y: Single; radius: Single; startAngle: Single; endAngle: Single; 
                  anticlockwise: Integer); dispid 1026;
    procedure arcTo(x1: Single; y1: Single; x2: Single; y2: Single; radius: Single); dispid 1027;
    procedure beginPath; dispid 1028;
    procedure bezierCurveTo(cp1x: Single; cp1y: Single; cp2x: Single; cp2y: Single; x: Single; 
                            y: Single); dispid 1029;
    procedure clip; dispid 1030;
    procedure closePath; dispid 1031;
    procedure fill; dispid 1032;
    procedure lineTo(x: Single; y: Single); dispid 1033;
    procedure moveTo(x: Single; y: Single); dispid 1034;
    procedure quadraticCurveTo(cpx: Single; cpy: Single; x: Single; y: Single); dispid 1035;
    procedure rect(x: Single; y: Single; w: Single; h: Single); dispid 1036;
    procedure stroke; dispid 1037;
    function isPointInPath(x: Single; y: Single): WordBool; dispid 1038;
    property font: WideString dispid 1039;
    property textAlign: WideString dispid 1040;
    property textBaseline: WideString dispid 1041;
    procedure fillText(const text: WideString; x: Single; y: Single; maxWidth: OleVariant); dispid 1042;
    function measureText(const text: WideString): ICanvasTextMetrics; dispid 1043;
    procedure strokeText(const text: WideString; x: Single; y: Single; maxWidth: OleVariant); dispid 1044;
    procedure drawImage(const pSrc: IDispatch; a1: OleVariant; a2: OleVariant; a3: OleVariant; 
                        a4: OleVariant; a5: OleVariant; a6: OleVariant; a7: OleVariant; 
                        a8: OleVariant); dispid 1045;
    function createImageData(a1: OleVariant; a2: OleVariant): ICanvasImageData; dispid 1046;
    function getImageData(sx: Single; sy: Single; sw: Single; sh: Single): ICanvasImageData; dispid 1047;
    procedure putImageData(const imagedata: ICanvasImageData; dx: Single; dy: Single; 
                           dirtyX: OleVariant; dirtyY: OleVariant; dirtyWidth: OleVariant; 
                           dirtyHeight: OleVariant); dispid 1048;
  end;

// *********************************************************************//
// DispIntf:  DispCanvasGradient
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059008C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispCanvasGradient = dispinterface
    ['{3059008C-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure addColorStop(offset: Single; const color: WideString); dispid 1000;
  end;

// *********************************************************************//
// DispIntf:  DispCanvasPattern
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059008D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispCanvasPattern = dispinterface
    ['{3059008D-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  DispCanvasTextMetrics
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059008E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispCanvasTextMetrics = dispinterface
    ['{3059008E-98B5-11CF-BB82-00AA00BDCE0B}']
    property width: Single readonly dispid 1000;
  end;

// *********************************************************************//
// DispIntf:  DispCanvasImageData
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059008F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispCanvasImageData = dispinterface
    ['{3059008F-98B5-11CF-BB82-00AA00BDCE0B}']
    property width: LongWord readonly dispid 1000;
    property height: LongWord readonly dispid 1001;
    property data: OleVariant readonly dispid 1002;
  end;

// *********************************************************************//
// DispIntf:  DispCanvasRenderingContext2D
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590082-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispCanvasRenderingContext2D = dispinterface
    ['{30590082-98B5-11CF-BB82-00AA00BDCE0B}']
    property canvas: IHTMLCanvasElement readonly dispid 1000;
    procedure restore; dispid 1001;
    procedure save; dispid 1002;
    procedure rotate(angle: Single); dispid 1003;
    procedure scale(x: Single; y: Single); dispid 1004;
    procedure setTransform(m11: Single; m12: Single; m21: Single; m22: Single; dx: Single; 
                           dy: Single); dispid 1005;
    procedure transform(m11: Single; m12: Single; m21: Single; m22: Single; dx: Single; dy: Single); dispid 1006;
    procedure translate(x: Single; y: Single); dispid 1007;
    property globalAlpha: Single dispid 1008;
    property globalCompositeOperation: WideString dispid 1009;
    property fillStyle: OleVariant dispid 1010;
    property strokeStyle: OleVariant dispid 1011;
    function createLinearGradient(x0: Single; y0: Single; x1: Single; y1: Single): ICanvasGradient; dispid 1012;
    function createRadialGradient(x0: Single; y0: Single; r0: Single; x1: Single; y1: Single; 
                                  r1: Single): ICanvasGradient; dispid 1013;
    function createPattern(const Image: IDispatch; repetition: OleVariant): ICanvasPattern; dispid 1014;
    property lineCap: WideString dispid 1015;
    property lineJoin: WideString dispid 1016;
    property lineWidth: Single dispid 1017;
    property miterLimit: Single dispid 1018;
    property shadowBlur: Single dispid 1019;
    property shadowColor: WideString dispid 1020;
    property shadowOffsetX: Single dispid 1021;
    property shadowOffsetY: Single dispid 1022;
    procedure clearRect(x: Single; y: Single; w: Single; h: Single); dispid 1023;
    procedure fillRect(x: Single; y: Single; w: Single; h: Single); dispid 1024;
    procedure strokeRect(x: Single; y: Single; w: Single; h: Single); dispid 1025;
    procedure arc(x: Single; y: Single; radius: Single; startAngle: Single; endAngle: Single; 
                  anticlockwise: Integer); dispid 1026;
    procedure arcTo(x1: Single; y1: Single; x2: Single; y2: Single; radius: Single); dispid 1027;
    procedure beginPath; dispid 1028;
    procedure bezierCurveTo(cp1x: Single; cp1y: Single; cp2x: Single; cp2y: Single; x: Single; 
                            y: Single); dispid 1029;
    procedure clip; dispid 1030;
    procedure closePath; dispid 1031;
    procedure fill; dispid 1032;
    procedure lineTo(x: Single; y: Single); dispid 1033;
    procedure moveTo(x: Single; y: Single); dispid 1034;
    procedure quadraticCurveTo(cpx: Single; cpy: Single; x: Single; y: Single); dispid 1035;
    procedure rect(x: Single; y: Single; w: Single; h: Single); dispid 1036;
    procedure stroke; dispid 1037;
    function isPointInPath(x: Single; y: Single): WordBool; dispid 1038;
    property font: WideString dispid 1039;
    property textAlign: WideString dispid 1040;
    property textBaseline: WideString dispid 1041;
    procedure fillText(const text: WideString; x: Single; y: Single; maxWidth: OleVariant); dispid 1042;
    function measureText(const text: WideString): ICanvasTextMetrics; dispid 1043;
    procedure strokeText(const text: WideString; x: Single; y: Single; maxWidth: OleVariant); dispid 1044;
    procedure drawImage(const pSrc: IDispatch; a1: OleVariant; a2: OleVariant; a3: OleVariant; 
                        a4: OleVariant; a5: OleVariant; a6: OleVariant; a7: OleVariant; 
                        a8: OleVariant); dispid 1045;
    function createImageData(a1: OleVariant; a2: OleVariant): ICanvasImageData; dispid 1046;
    function getImageData(sx: Single; sy: Single; sw: Single; sh: Single): ICanvasImageData; dispid 1047;
    procedure putImageData(const imagedata: ICanvasImageData; dx: Single; dy: Single; 
                           dirtyX: OleVariant; dirtyY: OleVariant; dirtyWidth: OleVariant; 
                           dirtyHeight: OleVariant); dispid 1048;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLCanvasElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059007B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLCanvasElement = dispinterface
    ['{3059007B-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property width: Integer dispid -2147418107;
    property height: Integer dispid -2147418106;
    function getContext(const contextId: WideString): ICanvasRenderingContext2D; dispid 1001;
    function toDataURL(const type_: WideString; jpegquality: OleVariant): WideString; dispid 1002;
  end;

// *********************************************************************//
// Interface: IDOMProgressEvent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051071E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMProgressEvent = interface(IDispatch)
    ['{3051071E-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_lengthComputable: WordBool; safecall;
    function Get_loaded: Largeuint; safecall;
    function Get_total: Largeuint; safecall;
    procedure initProgressEvent(const eventType: WideString; canBubble: WordBool; 
                                cancelable: WordBool; lengthComputableArg: WordBool; 
                                loadedArg: Largeuint; totalArg: Largeuint); safecall;
    property lengthComputable: WordBool read Get_lengthComputable;
    property loaded: Largeuint read Get_loaded;
    property total: Largeuint read Get_total;
  end;

// *********************************************************************//
// DispIntf:  IDOMProgressEventDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051071E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMProgressEventDisp = dispinterface
    ['{3051071E-98B5-11CF-BB82-00AA00BDCE0B}']
    property lengthComputable: WordBool readonly dispid 1551;
    property loaded: Largeuint readonly dispid 1552;
    property total: Largeuint readonly dispid 1553;
    procedure initProgressEvent(const eventType: WideString; canBubble: WordBool; 
                                cancelable: WordBool; lengthComputableArg: WordBool; 
                                loadedArg: Largeuint; totalArg: Largeuint); dispid 1554;
  end;

// *********************************************************************//
// DispIntf:  DispDOMProgressEvent
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590091-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispDOMProgressEvent = dispinterface
    ['{30590091-98B5-11CF-BB82-00AA00BDCE0B}']
    property bubbles: WordBool readonly dispid 1001;
    property cancelable: WordBool readonly dispid 1002;
    property currentTarget: IEventTarget readonly dispid 1003;
    property defaultPrevented: WordBool readonly dispid 1004;
    property eventPhase: Word readonly dispid 1005;
    property target: IEventTarget readonly dispid 1006;
    property timeStamp: Largeuint readonly dispid 1007;
    property type_: WideString readonly dispid 1008;
    procedure initEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool); dispid 1009;
    procedure preventDefault; dispid 1010;
    procedure stopPropagation; dispid 1011;
    procedure stopImmediatePropagation; dispid 1012;
    property isTrusted: WordBool readonly dispid 1013;
    property cancelBubble: WordBool dispid 1014;
    property srcElement: IHTMLElement readonly dispid 1015;
    property lengthComputable: WordBool readonly dispid 1551;
    property loaded: Largeuint readonly dispid 1552;
    property total: Largeuint readonly dispid 1553;
    procedure initProgressEvent(const eventType: WideString; canBubble: WordBool; 
                                cancelable: WordBool; lengthComputableArg: WordBool; 
                                loadedArg: Largeuint; totalArg: Largeuint); dispid 1554;
  end;

// *********************************************************************//
// Interface: IDOMMessageEvent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510720-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMMessageEvent = interface(IDispatch)
    ['{30510720-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_data: WideString; safecall;
    function Get_origin: WideString; safecall;
    function Get_source: IHTMLWindow2; safecall;
    procedure initMessageEvent(const eventType: WideString; canBubble: WordBool; 
                               cancelable: WordBool; const data: WideString; 
                               const origin: WideString; const lastEventId: WideString; 
                               const source: IHTMLWindow2); safecall;
    property data: WideString read Get_data;
    property origin: WideString read Get_origin;
    property source: IHTMLWindow2 read Get_source;
  end;

// *********************************************************************//
// DispIntf:  IDOMMessageEventDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510720-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMMessageEventDisp = dispinterface
    ['{30510720-98B5-11CF-BB82-00AA00BDCE0B}']
    property data: WideString readonly dispid 1326;
    property origin: WideString readonly dispid 1327;
    property source: IHTMLWindow2 readonly dispid 1328;
    procedure initMessageEvent(const eventType: WideString; canBubble: WordBool; 
                               cancelable: WordBool; const data: WideString; 
                               const origin: WideString; const lastEventId: WideString; 
                               const source: IHTMLWindow2); dispid 1329;
  end;

// *********************************************************************//
// DispIntf:  DispDOMMessageEvent
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590092-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispDOMMessageEvent = dispinterface
    ['{30590092-98B5-11CF-BB82-00AA00BDCE0B}']
    property bubbles: WordBool readonly dispid 1001;
    property cancelable: WordBool readonly dispid 1002;
    property currentTarget: IEventTarget readonly dispid 1003;
    property defaultPrevented: WordBool readonly dispid 1004;
    property eventPhase: Word readonly dispid 1005;
    property target: IEventTarget readonly dispid 1006;
    property timeStamp: Largeuint readonly dispid 1007;
    property type_: WideString readonly dispid 1008;
    procedure initEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool); dispid 1009;
    procedure preventDefault; dispid 1010;
    procedure stopPropagation; dispid 1011;
    procedure stopImmediatePropagation; dispid 1012;
    property isTrusted: WordBool readonly dispid 1013;
    property cancelBubble: WordBool dispid 1014;
    property srcElement: IHTMLElement readonly dispid 1015;
    property data: WideString readonly dispid 1326;
    property origin: WideString readonly dispid 1327;
    property source: IHTMLWindow2 readonly dispid 1328;
    procedure initMessageEvent(const eventType: WideString; canBubble: WordBool; 
                               cancelable: WordBool; const data: WideString; 
                               const origin: WideString; const lastEventId: WideString; 
                               const source: IHTMLWindow2); dispid 1329;
  end;

// *********************************************************************//
// Interface: IDOMSiteModeEvent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510765-98B6-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMSiteModeEvent = interface(IDispatch)
    ['{30510765-98B6-11CF-BB82-00AA00BDCE0B}']
    function Get_buttonID: Integer; safecall;
    function Get_actionURL: WideString; safecall;
    property buttonID: Integer read Get_buttonID;
    property actionURL: WideString read Get_actionURL;
  end;

// *********************************************************************//
// DispIntf:  IDOMSiteModeEventDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510765-98B6-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMSiteModeEventDisp = dispinterface
    ['{30510765-98B6-11CF-BB82-00AA00BDCE0B}']
    property buttonID: Integer readonly dispid 1301;
    property actionURL: WideString readonly dispid 1302;
  end;

// *********************************************************************//
// DispIntf:  DispDOMSiteModeEvent
// Flags:     (4112) Hidden Dispatchable
// GUID:      {305900A9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispDOMSiteModeEvent = dispinterface
    ['{305900A9-98B5-11CF-BB82-00AA00BDCE0B}']
    property bubbles: WordBool readonly dispid 1001;
    property cancelable: WordBool readonly dispid 1002;
    property currentTarget: IEventTarget readonly dispid 1003;
    property defaultPrevented: WordBool readonly dispid 1004;
    property eventPhase: Word readonly dispid 1005;
    property target: IEventTarget readonly dispid 1006;
    property timeStamp: Largeuint readonly dispid 1007;
    property type_: WideString readonly dispid 1008;
    procedure initEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool); dispid 1009;
    procedure preventDefault; dispid 1010;
    procedure stopPropagation; dispid 1011;
    procedure stopImmediatePropagation; dispid 1012;
    property isTrusted: WordBool readonly dispid 1013;
    property cancelBubble: WordBool dispid 1014;
    property srcElement: IHTMLElement readonly dispid 1015;
    property buttonID: Integer readonly dispid 1301;
    property actionURL: WideString readonly dispid 1302;
  end;

// *********************************************************************//
// Interface: IDOMStorageEvent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510722-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMStorageEvent = interface(IDispatch)
    ['{30510722-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_key: WideString; safecall;
    function Get_oldValue: WideString; safecall;
    function Get_newValue: WideString; safecall;
    function Get_url: WideString; safecall;
    function Get_storageArea: IHTMLStorage; safecall;
    procedure initStorageEvent(const eventType: WideString; canBubble: WordBool; 
                               cancelable: WordBool; const keyArg: WideString; 
                               const oldValueArg: WideString; const newValueArg: WideString; 
                               const urlArg: WideString; const storageAreaArg: IHTMLStorage); safecall;
    property key: WideString read Get_key;
    property oldValue: WideString read Get_oldValue;
    property newValue: WideString read Get_newValue;
    property url: WideString read Get_url;
    property storageArea: IHTMLStorage read Get_storageArea;
  end;

// *********************************************************************//
// DispIntf:  IDOMStorageEventDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510722-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMStorageEventDisp = dispinterface
    ['{30510722-98B5-11CF-BB82-00AA00BDCE0B}']
    property key: WideString readonly dispid 1351;
    property oldValue: WideString readonly dispid 1352;
    property newValue: WideString readonly dispid 1353;
    property url: WideString readonly dispid 1354;
    property storageArea: IHTMLStorage readonly dispid 1355;
    procedure initStorageEvent(const eventType: WideString; canBubble: WordBool; 
                               cancelable: WordBool; const keyArg: WideString; 
                               const oldValueArg: WideString; const newValueArg: WideString; 
                               const urlArg: WideString; const storageAreaArg: IHTMLStorage); dispid 1356;
  end;

// *********************************************************************//
// DispIntf:  DispDOMStorageEvent
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590093-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispDOMStorageEvent = dispinterface
    ['{30590093-98B5-11CF-BB82-00AA00BDCE0B}']
    property bubbles: WordBool readonly dispid 1001;
    property cancelable: WordBool readonly dispid 1002;
    property currentTarget: IEventTarget readonly dispid 1003;
    property defaultPrevented: WordBool readonly dispid 1004;
    property eventPhase: Word readonly dispid 1005;
    property target: IEventTarget readonly dispid 1006;
    property timeStamp: Largeuint readonly dispid 1007;
    property type_: WideString readonly dispid 1008;
    procedure initEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool); dispid 1009;
    procedure preventDefault; dispid 1010;
    procedure stopPropagation; dispid 1011;
    procedure stopImmediatePropagation; dispid 1012;
    property isTrusted: WordBool readonly dispid 1013;
    property cancelBubble: WordBool dispid 1014;
    property srcElement: IHTMLElement readonly dispid 1015;
    property key: WideString readonly dispid 1351;
    property oldValue: WideString readonly dispid 1352;
    property newValue: WideString readonly dispid 1353;
    property url: WideString readonly dispid 1354;
    property storageArea: IHTMLStorage readonly dispid 1355;
    procedure initStorageEvent(const eventType: WideString; canBubble: WordBool; 
                               cancelable: WordBool; const keyArg: WideString; 
                               const oldValueArg: WideString; const newValueArg: WideString; 
                               const urlArg: WideString; const storageAreaArg: IHTMLStorage); dispid 1356;
  end;

// *********************************************************************//
// Interface: IXMLHttpRequestEventTarget
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510830-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IXMLHttpRequestEventTarget = interface(IDispatch)
    ['{30510830-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  IXMLHttpRequestEventTargetDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510830-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IXMLHttpRequestEventTargetDisp = dispinterface
    ['{30510830-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  DispXMLHttpRequestEventTarget
// Flags:     (4112) Hidden Dispatchable
// GUID:      {305900E7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispXMLHttpRequestEventTarget = dispinterface
    ['{305900E7-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure addEventListener(const type_: WideString; const listener: IDispatch; 
                               useCapture: WordBool); dispid -2147417602;
    procedure removeEventListener(const type_: WideString; const listener: IDispatch; 
                                  useCapture: WordBool); dispid -2147417601;
    function dispatchEvent(const evt: IDOMEvent): WordBool; dispid -2147417600;
  end;

// *********************************************************************//
// DispIntf:  HTMLXMLHttpRequestEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30510498-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLXMLHttpRequestEvents = dispinterface
    ['{30510498-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure ontimeout; dispid 1016;
    procedure onreadystatechange; dispid 1008;
  end;

// *********************************************************************//
// Interface: IHTMLXMLHttpRequest
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051040A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLXMLHttpRequest = interface(IDispatch)
    ['{3051040A-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_readyState: Integer; safecall;
    function Get_responseBody: OleVariant; safecall;
    function Get_responseText: WideString; safecall;
    function Get_responseXML: IDispatch; safecall;
    function Get_status: Integer; safecall;
    function Get_statusText: WideString; safecall;
    procedure Set_onreadystatechange(p: OleVariant); safecall;
    function Get_onreadystatechange: OleVariant; safecall;
    procedure abort; safecall;
    procedure open(const bstrMethod: WideString; const bstrURL: WideString; varAsync: OleVariant; 
                   varUser: OleVariant; varPassword: OleVariant); safecall;
    procedure send(varBody: OleVariant); safecall;
    function getAllResponseHeaders: WideString; safecall;
    function getResponseHeader(const bstrHeader: WideString): WideString; safecall;
    procedure setRequestHeader(const bstrHeader: WideString; const bstrValue: WideString); safecall;
    property readyState: Integer read Get_readyState;
    property responseBody: OleVariant read Get_responseBody;
    property responseText: WideString read Get_responseText;
    property responseXML: IDispatch read Get_responseXML;
    property status: Integer read Get_status;
    property statusText: WideString read Get_statusText;
    property onreadystatechange: OleVariant read Get_onreadystatechange write Set_onreadystatechange;
  end;

// *********************************************************************//
// DispIntf:  IHTMLXMLHttpRequestDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051040A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLXMLHttpRequestDisp = dispinterface
    ['{3051040A-98B5-11CF-BB82-00AA00BDCE0B}']
    property readyState: Integer readonly dispid 1002;
    property responseBody: OleVariant readonly dispid 1003;
    property responseText: WideString readonly dispid 1004;
    property responseXML: IDispatch readonly dispid 1005;
    property status: Integer readonly dispid 1006;
    property statusText: WideString readonly dispid 1007;
    property onreadystatechange: OleVariant dispid -2147412087;
    procedure abort; dispid 1009;
    procedure open(const bstrMethod: WideString; const bstrURL: WideString; varAsync: OleVariant; 
                   varUser: OleVariant; varPassword: OleVariant); dispid 1010;
    procedure send(varBody: OleVariant); dispid 1011;
    function getAllResponseHeaders: WideString; dispid 1012;
    function getResponseHeader(const bstrHeader: WideString): WideString; dispid 1013;
    procedure setRequestHeader(const bstrHeader: WideString; const bstrValue: WideString); dispid 1014;
  end;

// *********************************************************************//
// Interface: IHTMLXMLHttpRequest2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510482-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLXMLHttpRequest2 = interface(IDispatch)
    ['{30510482-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_timeout(p: Integer); safecall;
    function Get_timeout: Integer; safecall;
    procedure Set_ontimeout(p: OleVariant); safecall;
    function Get_ontimeout: OleVariant; safecall;
    property timeout: Integer read Get_timeout write Set_timeout;
    property ontimeout: OleVariant read Get_ontimeout write Set_ontimeout;
  end;

// *********************************************************************//
// DispIntf:  IHTMLXMLHttpRequest2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510482-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLXMLHttpRequest2Disp = dispinterface
    ['{30510482-98B5-11CF-BB82-00AA00BDCE0B}']
    property timeout: Integer dispid 1015;
    property ontimeout: OleVariant dispid -2147412000;
  end;

// *********************************************************************//
// Interface: IHTMLXMLHttpRequestFactory
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051040C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLXMLHttpRequestFactory = interface(IDispatch)
    ['{3051040C-98B5-11CF-BB82-00AA00BDCE0B}']
    function create: IHTMLXMLHttpRequest; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLXMLHttpRequestFactoryDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051040C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLXMLHttpRequestFactoryDisp = dispinterface
    ['{3051040C-98B5-11CF-BB82-00AA00BDCE0B}']
    function create: IHTMLXMLHttpRequest; dispid 0;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLXMLHttpRequest
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F596-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLXMLHttpRequest = dispinterface
    ['{3050F596-98B5-11CF-BB82-00AA00BDCE0B}']
    property readyState: Integer readonly dispid 1002;
    property responseBody: OleVariant readonly dispid 1003;
    property responseText: WideString readonly dispid 1004;
    property responseXML: IDispatch readonly dispid 1005;
    property status: Integer readonly dispid 1006;
    property statusText: WideString readonly dispid 1007;
    property onreadystatechange: OleVariant dispid -2147412087;
    procedure abort; dispid 1009;
    procedure open(const bstrMethod: WideString; const bstrURL: WideString; varAsync: OleVariant; 
                   varUser: OleVariant; varPassword: OleVariant); dispid 1010;
    procedure send(varBody: OleVariant); dispid 1011;
    function getAllResponseHeaders: WideString; dispid 1012;
    function getResponseHeader(const bstrHeader: WideString): WideString; dispid 1013;
    procedure setRequestHeader(const bstrHeader: WideString; const bstrValue: WideString); dispid 1014;
    property timeout: Integer dispid 1015;
    property ontimeout: OleVariant dispid -2147412000;
    property constructor_: IDispatch readonly dispid -2147417603;
    procedure addEventListener(const type_: WideString; const listener: IDispatch; 
                               useCapture: WordBool); dispid -2147417602;
    procedure removeEventListener(const type_: WideString; const listener: IDispatch; 
                                  useCapture: WordBool); dispid -2147417601;
    function dispatchEvent(const evt: IDOMEvent): WordBool; dispid -2147417600;
  end;

// *********************************************************************//
// Interface: ISVGStringList
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104C8-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGStringList = interface(IDispatch)
    ['{305104C8-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_numberOfItems(p: Integer); safecall;
    function Get_numberOfItems: Integer; safecall;
    procedure clear; safecall;
    function initialize(const newItem: WideString): WideString; safecall;
    function getItem(index: Integer): WideString; safecall;
    function insertItemBefore(const newItem: WideString; index: Integer): WideString; safecall;
    function replaceItem(const newItem: WideString; index: Integer): WideString; safecall;
    function removeItem(index: Integer): WideString; safecall;
    function appendItem(const newItem: WideString): WideString; safecall;
    property numberOfItems: Integer read Get_numberOfItems write Set_numberOfItems;
  end;

// *********************************************************************//
// DispIntf:  ISVGStringListDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104C8-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGStringListDisp = dispinterface
    ['{305104C8-98B5-11CF-BB82-00AA00BDCE0B}']
    property numberOfItems: Integer dispid 1000;
    procedure clear; dispid 1001;
    function initialize(const newItem: WideString): WideString; dispid 1002;
    function getItem(index: Integer): WideString; dispid 1003;
    function insertItemBefore(const newItem: WideString; index: Integer): WideString; dispid 1004;
    function replaceItem(const newItem: WideString; index: Integer): WideString; dispid 1005;
    function removeItem(index: Integer): WideString; dispid 1006;
    function appendItem(const newItem: WideString): WideString; dispid 1007;
  end;

// *********************************************************************//
// Interface: ISVGAnimatedRect
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104D8-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGAnimatedRect = interface(IDispatch)
    ['{305104D8-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure _Set_baseVal(const p: ISVGRect); safecall;
    function Get_baseVal: ISVGRect; safecall;
    procedure _Set_animVal(const p: ISVGRect); safecall;
    function Get_animVal: ISVGRect; safecall;
    property baseVal: ISVGRect read Get_baseVal write _Set_baseVal;
    property animVal: ISVGRect read Get_animVal write _Set_animVal;
  end;

// *********************************************************************//
// DispIntf:  ISVGAnimatedRectDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104D8-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGAnimatedRectDisp = dispinterface
    ['{305104D8-98B5-11CF-BB82-00AA00BDCE0B}']
    property baseVal: ISVGRect dispid 1000;
    property animVal: ISVGRect dispid 1001;
  end;

// *********************************************************************//
// Interface: ISVGAnimatedString
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104C7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGAnimatedString = interface(IDispatch)
    ['{305104C7-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_baseVal(const p: WideString); safecall;
    function Get_baseVal: WideString; safecall;
    function Get_animVal: WideString; safecall;
    property baseVal: WideString read Get_baseVal write Set_baseVal;
    property animVal: WideString read Get_animVal;
  end;

// *********************************************************************//
// DispIntf:  ISVGAnimatedStringDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104C7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGAnimatedStringDisp = dispinterface
    ['{305104C7-98B5-11CF-BB82-00AA00BDCE0B}']
    property baseVal: WideString dispid 1000;
    property animVal: WideString readonly dispid 1001;
  end;

// *********************************************************************//
// Interface: ISVGAnimatedBoolean
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104C6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGAnimatedBoolean = interface(IDispatch)
    ['{305104C6-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_baseVal(p: WordBool); safecall;
    function Get_baseVal: WordBool; safecall;
    procedure Set_animVal(p: WordBool); safecall;
    function Get_animVal: WordBool; safecall;
    property baseVal: WordBool read Get_baseVal write Set_baseVal;
    property animVal: WordBool read Get_animVal write Set_animVal;
  end;

// *********************************************************************//
// DispIntf:  ISVGAnimatedBooleanDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104C6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGAnimatedBooleanDisp = dispinterface
    ['{305104C6-98B5-11CF-BB82-00AA00BDCE0B}']
    property baseVal: WordBool dispid 1000;
    property animVal: WordBool dispid 1001;
  end;

// *********************************************************************//
// Interface: ISVGAnimatedTransformList
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104F9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGAnimatedTransformList = interface(IDispatch)
    ['{305104F9-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure _Set_baseVal(const p: ISVGTransformList); safecall;
    function Get_baseVal: ISVGTransformList; safecall;
    procedure _Set_animVal(const p: ISVGTransformList); safecall;
    function Get_animVal: ISVGTransformList; safecall;
    property baseVal: ISVGTransformList read Get_baseVal write _Set_baseVal;
    property animVal: ISVGTransformList read Get_animVal write _Set_animVal;
  end;

// *********************************************************************//
// DispIntf:  ISVGAnimatedTransformListDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104F9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGAnimatedTransformListDisp = dispinterface
    ['{305104F9-98B5-11CF-BB82-00AA00BDCE0B}']
    property baseVal: ISVGTransformList dispid 1000;
    property animVal: ISVGTransformList dispid 1001;
  end;

// *********************************************************************//
// Interface: ISVGTransformList
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104F8-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGTransformList = interface(IDispatch)
    ['{305104F8-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_numberOfItems(p: Integer); safecall;
    function Get_numberOfItems: Integer; safecall;
    procedure clear; safecall;
    function initialize(const newItem: ISVGTransform): ISVGTransform; safecall;
    function getItem(index: Integer): ISVGTransform; safecall;
    function insertItemBefore(const newItem: ISVGTransform; index: Integer): ISVGTransform; safecall;
    function replaceItem(const newItem: ISVGTransform; index: Integer): ISVGTransform; safecall;
    function removeItem(index: Integer): ISVGTransform; safecall;
    function appendItem(const newItem: ISVGTransform): ISVGTransform; safecall;
    function createSVGTransformFromMatrix(const newItem: ISVGMatrix): ISVGTransform; safecall;
    function consolidate: ISVGTransform; safecall;
    property numberOfItems: Integer read Get_numberOfItems write Set_numberOfItems;
  end;

// *********************************************************************//
// DispIntf:  ISVGTransformListDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104F8-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGTransformListDisp = dispinterface
    ['{305104F8-98B5-11CF-BB82-00AA00BDCE0B}']
    property numberOfItems: Integer dispid 1000;
    procedure clear; dispid 1001;
    function initialize(const newItem: ISVGTransform): ISVGTransform; dispid 1002;
    function getItem(index: Integer): ISVGTransform; dispid 1003;
    function insertItemBefore(const newItem: ISVGTransform; index: Integer): ISVGTransform; dispid 1004;
    function replaceItem(const newItem: ISVGTransform; index: Integer): ISVGTransform; dispid 1005;
    function removeItem(index: Integer): ISVGTransform; dispid 1006;
    function appendItem(const newItem: ISVGTransform): ISVGTransform; dispid 1007;
    function createSVGTransformFromMatrix(const newItem: ISVGMatrix): ISVGTransform; dispid 1008;
    function consolidate: ISVGTransform; dispid 1009;
  end;

// *********************************************************************//
// Interface: ISVGAnimatedPreserveAspectRatio
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104FB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGAnimatedPreserveAspectRatio = interface(IDispatch)
    ['{305104FB-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure _Set_baseVal(const p: ISVGPreserveAspectRatio); safecall;
    function Get_baseVal: ISVGPreserveAspectRatio; safecall;
    procedure _Set_animVal(const p: ISVGPreserveAspectRatio); safecall;
    function Get_animVal: ISVGPreserveAspectRatio; safecall;
    property baseVal: ISVGPreserveAspectRatio read Get_baseVal write _Set_baseVal;
    property animVal: ISVGPreserveAspectRatio read Get_animVal write _Set_animVal;
  end;

// *********************************************************************//
// DispIntf:  ISVGAnimatedPreserveAspectRatioDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104FB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGAnimatedPreserveAspectRatioDisp = dispinterface
    ['{305104FB-98B5-11CF-BB82-00AA00BDCE0B}']
    property baseVal: ISVGPreserveAspectRatio dispid 1000;
    property animVal: ISVGPreserveAspectRatio dispid 1001;
  end;

// *********************************************************************//
// Interface: ISVGPreserveAspectRatio
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104FA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPreserveAspectRatio = interface(IDispatch)
    ['{305104FA-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_align(p: Smallint); safecall;
    function Get_align: Smallint; safecall;
    procedure Set_meetOrSlice(p: Smallint); safecall;
    function Get_meetOrSlice: Smallint; safecall;
    property align: Smallint read Get_align write Set_align;
    property meetOrSlice: Smallint read Get_meetOrSlice write Set_meetOrSlice;
  end;

// *********************************************************************//
// DispIntf:  ISVGPreserveAspectRatioDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104FA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPreserveAspectRatioDisp = dispinterface
    ['{305104FA-98B5-11CF-BB82-00AA00BDCE0B}']
    property align: Smallint dispid 1000;
    property meetOrSlice: Smallint dispid 1001;
  end;

// *********************************************************************//
// Interface: ISVGStylable
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104DA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGStylable = interface(IDispatch)
    ['{305104DA-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get__className: ISVGAnimatedString; safecall;
    property _className: ISVGAnimatedString read Get__className;
  end;

// *********************************************************************//
// DispIntf:  ISVGStylableDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104DA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGStylableDisp = dispinterface
    ['{305104DA-98B5-11CF-BB82-00AA00BDCE0B}']
    property _className: ISVGAnimatedString readonly dispid 1001;
  end;

// *********************************************************************//
// Interface: ISVGLocatable
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104DB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGLocatable = interface(IDispatch)
    ['{305104DB-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_nearestViewportElement: ISVGElement; safecall;
    function Get_farthestViewportElement: ISVGElement; safecall;
    function getBBox: ISVGRect; safecall;
    function getCTM: ISVGMatrix; safecall;
    function getScreenCTM: ISVGMatrix; safecall;
    function getTransformToElement(const pElement: ISVGElement): ISVGMatrix; safecall;
    property nearestViewportElement: ISVGElement read Get_nearestViewportElement;
    property farthestViewportElement: ISVGElement read Get_farthestViewportElement;
  end;

// *********************************************************************//
// DispIntf:  ISVGLocatableDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104DB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGLocatableDisp = dispinterface
    ['{305104DB-98B5-11CF-BB82-00AA00BDCE0B}']
    property nearestViewportElement: ISVGElement readonly dispid 1002;
    property farthestViewportElement: ISVGElement readonly dispid 1003;
    function getBBox: ISVGRect; dispid 1004;
    function getCTM: ISVGMatrix; dispid 1005;
    function getScreenCTM: ISVGMatrix; dispid 1006;
    function getTransformToElement(const pElement: ISVGElement): ISVGMatrix; dispid 1007;
  end;

// *********************************************************************//
// Interface: ISVGTransformable
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104DC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGTransformable = interface(IDispatch)
    ['{305104DC-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_transform: ISVGAnimatedTransformList; safecall;
    property transform: ISVGAnimatedTransformList read Get_transform;
  end;

// *********************************************************************//
// DispIntf:  ISVGTransformableDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104DC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGTransformableDisp = dispinterface
    ['{305104DC-98B5-11CF-BB82-00AA00BDCE0B}']
    property transform: ISVGAnimatedTransformList readonly dispid 1009;
  end;

// *********************************************************************//
// Interface: ISVGTests
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104DD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGTests = interface(IDispatch)
    ['{305104DD-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_requiredFeatures: ISVGStringList; safecall;
    function Get_requiredExtensions: ISVGStringList; safecall;
    function Get_systemLanguage: ISVGStringList; safecall;
    function hasExtension(const extension: WideString): WordBool; safecall;
    property requiredFeatures: ISVGStringList read Get_requiredFeatures;
    property requiredExtensions: ISVGStringList read Get_requiredExtensions;
    property systemLanguage: ISVGStringList read Get_systemLanguage;
  end;

// *********************************************************************//
// DispIntf:  ISVGTestsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104DD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGTestsDisp = dispinterface
    ['{305104DD-98B5-11CF-BB82-00AA00BDCE0B}']
    property requiredFeatures: ISVGStringList readonly dispid 1011;
    property requiredExtensions: ISVGStringList readonly dispid 1013;
    property systemLanguage: ISVGStringList readonly dispid 1015;
    function hasExtension(const extension: WideString): WordBool; dispid 1016;
  end;

// *********************************************************************//
// Interface: ISVGLangSpace
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104DE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGLangSpace = interface(IDispatch)
    ['{305104DE-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_xmllang(const p: WideString); safecall;
    function Get_xmllang: WideString; safecall;
    procedure Set_xmlspace(const p: WideString); safecall;
    function Get_xmlspace: WideString; safecall;
    property xmllang: WideString read Get_xmllang write Set_xmllang;
    property xmlspace: WideString read Get_xmlspace write Set_xmlspace;
  end;

// *********************************************************************//
// DispIntf:  ISVGLangSpaceDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104DE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGLangSpaceDisp = dispinterface
    ['{305104DE-98B5-11CF-BB82-00AA00BDCE0B}']
    property xmllang: WideString dispid 1017;
    property xmlspace: WideString dispid 1018;
  end;

// *********************************************************************//
// Interface: ISVGExternalResourcesRequired
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104DF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGExternalResourcesRequired = interface(IDispatch)
    ['{305104DF-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_externalResourcesRequired: ISVGAnimatedBoolean; safecall;
    property externalResourcesRequired: ISVGAnimatedBoolean read Get_externalResourcesRequired;
  end;

// *********************************************************************//
// DispIntf:  ISVGExternalResourcesRequiredDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104DF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGExternalResourcesRequiredDisp = dispinterface
    ['{305104DF-98B5-11CF-BB82-00AA00BDCE0B}']
    property externalResourcesRequired: ISVGAnimatedBoolean readonly dispid 1020;
  end;

// *********************************************************************//
// Interface: ISVGFitToViewBox
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104E0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGFitToViewBox = interface(IDispatch)
    ['{305104E0-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_viewBox: ISVGAnimatedRect; safecall;
    procedure _Set_preserveAspectRatio(const p: ISVGAnimatedPreserveAspectRatio); safecall;
    function Get_preserveAspectRatio: ISVGAnimatedPreserveAspectRatio; safecall;
    property viewBox: ISVGAnimatedRect read Get_viewBox;
    property preserveAspectRatio: ISVGAnimatedPreserveAspectRatio read Get_preserveAspectRatio write _Set_preserveAspectRatio;
  end;

// *********************************************************************//
// DispIntf:  ISVGFitToViewBoxDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104E0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGFitToViewBoxDisp = dispinterface
    ['{305104E0-98B5-11CF-BB82-00AA00BDCE0B}']
    property viewBox: ISVGAnimatedRect readonly dispid 1022;
    property preserveAspectRatio: ISVGAnimatedPreserveAspectRatio dispid 1024;
  end;

// *********************************************************************//
// Interface: ISVGZoomAndPan
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104E1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGZoomAndPan = interface(IDispatch)
    ['{305104E1-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_zoomAndPan: Smallint; safecall;
    property zoomAndPan: Smallint read Get_zoomAndPan;
  end;

// *********************************************************************//
// DispIntf:  ISVGZoomAndPanDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104E1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGZoomAndPanDisp = dispinterface
    ['{305104E1-98B5-11CF-BB82-00AA00BDCE0B}']
    property zoomAndPan: Smallint readonly dispid 1025;
  end;

// *********************************************************************//
// Interface: ISVGURIReference
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104E3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGURIReference = interface(IDispatch)
    ['{305104E3-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_href: ISVGAnimatedString; safecall;
    property href: ISVGAnimatedString read Get_href;
  end;

// *********************************************************************//
// DispIntf:  ISVGURIReferenceDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104E3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGURIReferenceDisp = dispinterface
    ['{305104E3-98B5-11CF-BB82-00AA00BDCE0B}']
    property href: ISVGAnimatedString readonly dispid 1026;
  end;

// *********************************************************************//
// Interface: ISVGAnimatedAngle
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104D4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGAnimatedAngle = interface(IDispatch)
    ['{305104D4-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure _Set_baseVal(const p: ISVGAngle); safecall;
    function Get_baseVal: ISVGAngle; safecall;
    procedure _Set_animVal(const p: ISVGAngle); safecall;
    function Get_animVal: ISVGAngle; safecall;
    property baseVal: ISVGAngle read Get_baseVal write _Set_baseVal;
    property animVal: ISVGAngle read Get_animVal write _Set_animVal;
  end;

// *********************************************************************//
// DispIntf:  ISVGAnimatedAngleDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104D4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGAnimatedAngleDisp = dispinterface
    ['{305104D4-98B5-11CF-BB82-00AA00BDCE0B}']
    property baseVal: ISVGAngle dispid 1000;
    property animVal: ISVGAngle dispid 1001;
  end;

// *********************************************************************//
// Interface: ISVGAnimatedInteger
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104CA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGAnimatedInteger = interface(IDispatch)
    ['{305104CA-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_baseVal(p: Integer); safecall;
    function Get_baseVal: Integer; safecall;
    procedure Set_animVal(p: Integer); safecall;
    function Get_animVal: Integer; safecall;
    property baseVal: Integer read Get_baseVal write Set_baseVal;
    property animVal: Integer read Get_animVal write Set_animVal;
  end;

// *********************************************************************//
// DispIntf:  ISVGAnimatedIntegerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104CA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGAnimatedIntegerDisp = dispinterface
    ['{305104CA-98B5-11CF-BB82-00AA00BDCE0B}']
    property baseVal: Integer dispid 1000;
    property animVal: Integer dispid 1001;
  end;

// *********************************************************************//
// Interface: ISVGLengthList
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104D1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGLengthList = interface(IDispatch)
    ['{305104D1-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_numberOfItems(p: Integer); safecall;
    function Get_numberOfItems: Integer; safecall;
    procedure clear; safecall;
    function initialize(const newItem: ISVGLength): ISVGLength; safecall;
    function getItem(index: Integer): ISVGLength; safecall;
    function insertItemBefore(const newItem: ISVGLength; index: Integer): ISVGLength; safecall;
    function replaceItem(const newItem: ISVGLength; index: Integer): ISVGLength; safecall;
    function removeItem(index: Integer): ISVGLength; safecall;
    function appendItem(const newItem: ISVGLength): ISVGLength; safecall;
    property numberOfItems: Integer read Get_numberOfItems write Set_numberOfItems;
  end;

// *********************************************************************//
// DispIntf:  ISVGLengthListDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104D1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGLengthListDisp = dispinterface
    ['{305104D1-98B5-11CF-BB82-00AA00BDCE0B}']
    property numberOfItems: Integer dispid 1000;
    procedure clear; dispid 1001;
    function initialize(const newItem: ISVGLength): ISVGLength; dispid 1002;
    function getItem(index: Integer): ISVGLength; dispid 1003;
    function insertItemBefore(const newItem: ISVGLength; index: Integer): ISVGLength; dispid 1004;
    function replaceItem(const newItem: ISVGLength; index: Integer): ISVGLength; dispid 1005;
    function removeItem(index: Integer): ISVGLength; dispid 1006;
    function appendItem(const newItem: ISVGLength): ISVGLength; dispid 1007;
  end;

// *********************************************************************//
// Interface: ISVGAnimatedLengthList
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104D2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGAnimatedLengthList = interface(IDispatch)
    ['{305104D2-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure _Set_baseVal(const p: ISVGLengthList); safecall;
    function Get_baseVal: ISVGLengthList; safecall;
    procedure _Set_animVal(const p: ISVGLengthList); safecall;
    function Get_animVal: ISVGLengthList; safecall;
    property baseVal: ISVGLengthList read Get_baseVal write _Set_baseVal;
    property animVal: ISVGLengthList read Get_animVal write _Set_animVal;
  end;

// *********************************************************************//
// DispIntf:  ISVGAnimatedLengthListDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104D2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGAnimatedLengthListDisp = dispinterface
    ['{305104D2-98B5-11CF-BB82-00AA00BDCE0B}']
    property baseVal: ISVGLengthList dispid 1000;
    property animVal: ISVGLengthList dispid 1001;
  end;

// *********************************************************************//
// Interface: ISVGAnimatedNumber
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104CC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGAnimatedNumber = interface(IDispatch)
    ['{305104CC-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_baseVal(p: Single); safecall;
    function Get_baseVal: Single; safecall;
    procedure Set_animVal(p: Single); safecall;
    function Get_animVal: Single; safecall;
    property baseVal: Single read Get_baseVal write Set_baseVal;
    property animVal: Single read Get_animVal write Set_animVal;
  end;

// *********************************************************************//
// DispIntf:  ISVGAnimatedNumberDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104CC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGAnimatedNumberDisp = dispinterface
    ['{305104CC-98B5-11CF-BB82-00AA00BDCE0B}']
    property baseVal: Single dispid 1000;
    property animVal: Single dispid 1001;
  end;

// *********************************************************************//
// Interface: ISVGNumberList
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104CD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGNumberList = interface(IDispatch)
    ['{305104CD-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_numberOfItems(p: Integer); safecall;
    function Get_numberOfItems: Integer; safecall;
    procedure clear; safecall;
    function initialize(const newItem: ISVGNumber): ISVGNumber; safecall;
    function getItem(index: Integer): ISVGNumber; safecall;
    function insertItemBefore(const newItem: ISVGNumber; index: Integer): ISVGNumber; safecall;
    function replaceItem(const newItem: ISVGNumber; index: Integer): ISVGNumber; safecall;
    function removeItem(index: Integer): ISVGNumber; safecall;
    function appendItem(const newItem: ISVGNumber): ISVGNumber; safecall;
    property numberOfItems: Integer read Get_numberOfItems write Set_numberOfItems;
  end;

// *********************************************************************//
// DispIntf:  ISVGNumberListDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104CD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGNumberListDisp = dispinterface
    ['{305104CD-98B5-11CF-BB82-00AA00BDCE0B}']
    property numberOfItems: Integer dispid 1000;
    procedure clear; dispid 1001;
    function initialize(const newItem: ISVGNumber): ISVGNumber; dispid 1002;
    function getItem(index: Integer): ISVGNumber; dispid 1003;
    function insertItemBefore(const newItem: ISVGNumber; index: Integer): ISVGNumber; dispid 1004;
    function replaceItem(const newItem: ISVGNumber; index: Integer): ISVGNumber; dispid 1005;
    function removeItem(index: Integer): ISVGNumber; dispid 1006;
    function appendItem(const newItem: ISVGNumber): ISVGNumber; dispid 1007;
  end;

// *********************************************************************//
// Interface: ISVGAnimatedNumberList
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104CE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGAnimatedNumberList = interface(IDispatch)
    ['{305104CE-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure _Set_baseVal(const p: ISVGNumberList); safecall;
    function Get_baseVal: ISVGNumberList; safecall;
    procedure _Set_animVal(const p: ISVGNumberList); safecall;
    function Get_animVal: ISVGNumberList; safecall;
    property baseVal: ISVGNumberList read Get_baseVal write _Set_baseVal;
    property animVal: ISVGNumberList read Get_animVal write _Set_animVal;
  end;

// *********************************************************************//
// DispIntf:  ISVGAnimatedNumberListDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104CE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGAnimatedNumberListDisp = dispinterface
    ['{305104CE-98B5-11CF-BB82-00AA00BDCE0B}']
    property baseVal: ISVGNumberList dispid 1000;
    property animVal: ISVGNumberList dispid 1001;
  end;

// *********************************************************************//
// Interface: ISVGClipPathElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051052D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGClipPathElement = interface(IDispatch)
    ['{3051052D-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure _Set_clipPathUnits(const p: ISVGAnimatedEnumeration); safecall;
    function Get_clipPathUnits: ISVGAnimatedEnumeration; safecall;
    property clipPathUnits: ISVGAnimatedEnumeration read Get_clipPathUnits write _Set_clipPathUnits;
  end;

// *********************************************************************//
// DispIntf:  ISVGClipPathElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051052D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGClipPathElementDisp = dispinterface
    ['{3051052D-98B5-11CF-BB82-00AA00BDCE0B}']
    property clipPathUnits: ISVGAnimatedEnumeration dispid 1051;
  end;

// *********************************************************************//
// DispIntf:  DispSVGClipPathElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059003B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGClipPathElement = dispinterface
    ['{3059003B-98B5-11CF-BB82-00AA00BDCE0B}']
    property clipPathUnits: ISVGAnimatedEnumeration dispid 1051;
    property xmlbase: WideString dispid 1032;
    property ownerSVGElement: ISVGSVGElement dispid 1033;
    property viewportElement: ISVGElement dispid 1034;
    property focusable: ISVGAnimatedEnumeration dispid 1036;
    property requiredFeatures: ISVGStringList readonly dispid 1011;
    property requiredExtensions: ISVGStringList readonly dispid 1013;
    property systemLanguage: ISVGStringList readonly dispid 1015;
    function hasExtension(const extension: WideString): WordBool; dispid 1016;
    property xmllang: WideString dispid 1017;
    property xmlspace: WideString dispid 1018;
    property externalResourcesRequired: ISVGAnimatedBoolean readonly dispid 1020;
    property _className: ISVGAnimatedString readonly dispid 1001;
    property nearestViewportElement: ISVGElement readonly dispid 1002;
    property farthestViewportElement: ISVGElement readonly dispid 1003;
    function getBBox: ISVGRect; dispid 1004;
    function getCTM: ISVGMatrix; dispid 1005;
    function getScreenCTM: ISVGMatrix; dispid 1006;
    function getTransformToElement(const pElement: ISVGElement): ISVGMatrix; dispid 1007;
    property transform: ISVGAnimatedTransformList readonly dispid 1009;
  end;

// *********************************************************************//
// DispIntf:  DispSVGElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590000-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGElement = dispinterface
    ['{30590000-98B5-11CF-BB82-00AA00BDCE0B}']
    property xmlbase: WideString dispid 1032;
    property ownerSVGElement: ISVGSVGElement dispid 1033;
    property viewportElement: ISVGElement dispid 1034;
    property focusable: ISVGAnimatedEnumeration dispid 1036;
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
  end;

// *********************************************************************//
// Interface: IICCSVGColor
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104D6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IICCSVGColor = interface(IDispatch)
    ['{305104D6-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  IICCSVGColorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104D6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IICCSVGColorDisp = dispinterface
    ['{305104D6-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// Interface: ISVGPaint
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510524-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPaint = interface(IDispatch)
    ['{30510524-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  ISVGPaintDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510524-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPaintDisp = dispinterface
    ['{30510524-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// Interface: ISVGPatternElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051052C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPatternElement = interface(IDispatch)
    ['{3051052C-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure _Set_patternUnits(const p: ISVGAnimatedEnumeration); safecall;
    function Get_patternUnits: ISVGAnimatedEnumeration; safecall;
    procedure _Set_patternContentUnits(const p: ISVGAnimatedEnumeration); safecall;
    function Get_patternContentUnits: ISVGAnimatedEnumeration; safecall;
    procedure _Set_patternTransform(const p: ISVGAnimatedTransformList); safecall;
    function Get_patternTransform: ISVGAnimatedTransformList; safecall;
    procedure _Set_x(const p: ISVGAnimatedLength); safecall;
    function Get_x: ISVGAnimatedLength; safecall;
    procedure _Set_y(const p: ISVGAnimatedLength); safecall;
    function Get_y: ISVGAnimatedLength; safecall;
    procedure _Set_width(const p: ISVGAnimatedLength); safecall;
    function Get_width: ISVGAnimatedLength; safecall;
    procedure _Set_height(const p: ISVGAnimatedLength); safecall;
    function Get_height: ISVGAnimatedLength; safecall;
    property patternUnits: ISVGAnimatedEnumeration read Get_patternUnits write _Set_patternUnits;
    property patternContentUnits: ISVGAnimatedEnumeration read Get_patternContentUnits write _Set_patternContentUnits;
    property patternTransform: ISVGAnimatedTransformList read Get_patternTransform write _Set_patternTransform;
    property x: ISVGAnimatedLength read Get_x write _Set_x;
    property y: ISVGAnimatedLength read Get_y write _Set_y;
    property width: ISVGAnimatedLength read Get_width write _Set_width;
    property height: ISVGAnimatedLength read Get_height write _Set_height;
  end;

// *********************************************************************//
// DispIntf:  ISVGPatternElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051052C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPatternElementDisp = dispinterface
    ['{3051052C-98B5-11CF-BB82-00AA00BDCE0B}']
    property patternUnits: ISVGAnimatedEnumeration dispid 1051;
    property patternContentUnits: ISVGAnimatedEnumeration dispid 1053;
    property patternTransform: ISVGAnimatedTransformList dispid 1055;
    property x: ISVGAnimatedLength dispid 1057;
    property y: ISVGAnimatedLength dispid 1059;
    property width: ISVGAnimatedLength dispid 1061;
    property height: ISVGAnimatedLength dispid 1063;
  end;

// *********************************************************************//
// DispIntf:  DispSVGPatternElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059002C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGPatternElement = dispinterface
    ['{3059002C-98B5-11CF-BB82-00AA00BDCE0B}']
    property xmlbase: WideString dispid 1032;
    property ownerSVGElement: ISVGSVGElement dispid 1033;
    property viewportElement: ISVGElement dispid 1034;
    property focusable: ISVGAnimatedEnumeration dispid 1036;
    property patternUnits: ISVGAnimatedEnumeration dispid 1051;
    property patternContentUnits: ISVGAnimatedEnumeration dispid 1053;
    property patternTransform: ISVGAnimatedTransformList dispid 1055;
    property x: ISVGAnimatedLength dispid 1057;
    property y: ISVGAnimatedLength dispid 1059;
    property width: ISVGAnimatedLength dispid 1061;
    property height: ISVGAnimatedLength dispid 1063;
    property href: ISVGAnimatedString readonly dispid 1026;
    property requiredFeatures: ISVGStringList readonly dispid 1011;
    property requiredExtensions: ISVGStringList readonly dispid 1013;
    property systemLanguage: ISVGStringList readonly dispid 1015;
    function hasExtension(const extension: WideString): WordBool; dispid 1016;
    property xmllang: WideString dispid 1017;
    property xmlspace: WideString dispid 1018;
    property externalResourcesRequired: ISVGAnimatedBoolean readonly dispid 1020;
    property _className: ISVGAnimatedString readonly dispid 1001;
    property viewBox: ISVGAnimatedRect readonly dispid 1022;
    property preserveAspectRatio: ISVGAnimatedPreserveAspectRatio dispid 1024;
  end;

// *********************************************************************//
// Interface: ISVGPathSeg
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104FC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSeg = interface(IDispatch)
    ['{305104FC-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_pathSegType(p: Smallint); safecall;
    function Get_pathSegType: Smallint; safecall;
    function Get_pathSegTypeAsLetter: WideString; safecall;
    property pathSegType: Smallint read Get_pathSegType write Set_pathSegType;
    property pathSegTypeAsLetter: WideString read Get_pathSegTypeAsLetter;
  end;

// *********************************************************************//
// DispIntf:  ISVGPathSegDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104FC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegDisp = dispinterface
    ['{305104FC-98B5-11CF-BB82-00AA00BDCE0B}']
    property pathSegType: Smallint dispid 1000;
    property pathSegTypeAsLetter: WideString readonly dispid 1001;
  end;

// *********************************************************************//
// Interface: ISVGPathSegArcAbs
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510506-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegArcAbs = interface(IDispatch)
    ['{30510506-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_x(p: Single); safecall;
    function Get_x: Single; safecall;
    procedure Set_y(p: Single); safecall;
    function Get_y: Single; safecall;
    procedure Set_r1(p: Single); safecall;
    function Get_r1: Single; safecall;
    procedure Set_r2(p: Single); safecall;
    function Get_r2: Single; safecall;
    procedure Set_angle(p: Single); safecall;
    function Get_angle: Single; safecall;
    procedure Set_largeArcFlag(p: WordBool); safecall;
    function Get_largeArcFlag: WordBool; safecall;
    procedure Set_sweepFlag(p: WordBool); safecall;
    function Get_sweepFlag: WordBool; safecall;
    property x: Single read Get_x write Set_x;
    property y: Single read Get_y write Set_y;
    property r1: Single read Get_r1 write Set_r1;
    property r2: Single read Get_r2 write Set_r2;
    property angle: Single read Get_angle write Set_angle;
    property largeArcFlag: WordBool read Get_largeArcFlag write Set_largeArcFlag;
    property sweepFlag: WordBool read Get_sweepFlag write Set_sweepFlag;
  end;

// *********************************************************************//
// DispIntf:  ISVGPathSegArcAbsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510506-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegArcAbsDisp = dispinterface
    ['{30510506-98B5-11CF-BB82-00AA00BDCE0B}']
    property x: Single dispid 1020;
    property y: Single dispid 1021;
    property r1: Single dispid 1022;
    property r2: Single dispid 1023;
    property angle: Single dispid 1024;
    property largeArcFlag: WordBool dispid 1025;
    property sweepFlag: WordBool dispid 1026;
  end;

// *********************************************************************//
// Interface: ISVGPathSegArcRel
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510507-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegArcRel = interface(IDispatch)
    ['{30510507-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_x(p: Single); safecall;
    function Get_x: Single; safecall;
    procedure Set_y(p: Single); safecall;
    function Get_y: Single; safecall;
    procedure Set_r1(p: Single); safecall;
    function Get_r1: Single; safecall;
    procedure Set_r2(p: Single); safecall;
    function Get_r2: Single; safecall;
    procedure Set_angle(p: Single); safecall;
    function Get_angle: Single; safecall;
    procedure Set_largeArcFlag(p: WordBool); safecall;
    function Get_largeArcFlag: WordBool; safecall;
    procedure Set_sweepFlag(p: WordBool); safecall;
    function Get_sweepFlag: WordBool; safecall;
    property x: Single read Get_x write Set_x;
    property y: Single read Get_y write Set_y;
    property r1: Single read Get_r1 write Set_r1;
    property r2: Single read Get_r2 write Set_r2;
    property angle: Single read Get_angle write Set_angle;
    property largeArcFlag: WordBool read Get_largeArcFlag write Set_largeArcFlag;
    property sweepFlag: WordBool read Get_sweepFlag write Set_sweepFlag;
  end;

// *********************************************************************//
// DispIntf:  ISVGPathSegArcRelDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510507-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegArcRelDisp = dispinterface
    ['{30510507-98B5-11CF-BB82-00AA00BDCE0B}']
    property x: Single dispid 1020;
    property y: Single dispid 1021;
    property r1: Single dispid 1022;
    property r2: Single dispid 1023;
    property angle: Single dispid 1024;
    property largeArcFlag: WordBool dispid 1025;
    property sweepFlag: WordBool dispid 1026;
  end;

// *********************************************************************//
// Interface: ISVGPathSegClosePath
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104FD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegClosePath = interface(IDispatch)
    ['{305104FD-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  ISVGPathSegClosePathDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104FD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegClosePathDisp = dispinterface
    ['{305104FD-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// Interface: ISVGPathSegMovetoAbs
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104FE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegMovetoAbs = interface(IDispatch)
    ['{305104FE-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_x(p: Single); safecall;
    function Get_x: Single; safecall;
    procedure Set_y(p: Single); safecall;
    function Get_y: Single; safecall;
    property x: Single read Get_x write Set_x;
    property y: Single read Get_y write Set_y;
  end;

// *********************************************************************//
// DispIntf:  ISVGPathSegMovetoAbsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104FE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegMovetoAbsDisp = dispinterface
    ['{305104FE-98B5-11CF-BB82-00AA00BDCE0B}']
    property x: Single dispid 1020;
    property y: Single dispid 1021;
  end;

// *********************************************************************//
// Interface: ISVGPathSegMovetoRel
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104FF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegMovetoRel = interface(IDispatch)
    ['{305104FF-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_x(p: Single); safecall;
    function Get_x: Single; safecall;
    procedure Set_y(p: Single); safecall;
    function Get_y: Single; safecall;
    property x: Single read Get_x write Set_x;
    property y: Single read Get_y write Set_y;
  end;

// *********************************************************************//
// DispIntf:  ISVGPathSegMovetoRelDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104FF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegMovetoRelDisp = dispinterface
    ['{305104FF-98B5-11CF-BB82-00AA00BDCE0B}']
    property x: Single dispid 1020;
    property y: Single dispid 1021;
  end;

// *********************************************************************//
// Interface: ISVGPathSegLinetoAbs
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510500-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegLinetoAbs = interface(IDispatch)
    ['{30510500-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_x(p: Single); safecall;
    function Get_x: Single; safecall;
    procedure Set_y(p: Single); safecall;
    function Get_y: Single; safecall;
    property x: Single read Get_x write Set_x;
    property y: Single read Get_y write Set_y;
  end;

// *********************************************************************//
// DispIntf:  ISVGPathSegLinetoAbsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510500-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegLinetoAbsDisp = dispinterface
    ['{30510500-98B5-11CF-BB82-00AA00BDCE0B}']
    property x: Single dispid 1020;
    property y: Single dispid 1021;
  end;

// *********************************************************************//
// Interface: ISVGPathSegLinetoRel
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510501-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegLinetoRel = interface(IDispatch)
    ['{30510501-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_x(p: Single); safecall;
    function Get_x: Single; safecall;
    procedure Set_y(p: Single); safecall;
    function Get_y: Single; safecall;
    property x: Single read Get_x write Set_x;
    property y: Single read Get_y write Set_y;
  end;

// *********************************************************************//
// DispIntf:  ISVGPathSegLinetoRelDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510501-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegLinetoRelDisp = dispinterface
    ['{30510501-98B5-11CF-BB82-00AA00BDCE0B}']
    property x: Single dispid 1020;
    property y: Single dispid 1021;
  end;

// *********************************************************************//
// Interface: ISVGPathSegCurvetoCubicAbs
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510502-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegCurvetoCubicAbs = interface(IDispatch)
    ['{30510502-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_x(p: Single); safecall;
    function Get_x: Single; safecall;
    procedure Set_y(p: Single); safecall;
    function Get_y: Single; safecall;
    procedure Set_x1(p: Single); safecall;
    function Get_x1: Single; safecall;
    procedure Set_y1(p: Single); safecall;
    function Get_y1: Single; safecall;
    procedure Set_x2(p: Single); safecall;
    function Get_x2: Single; safecall;
    procedure Set_y2(p: Single); safecall;
    function Get_y2: Single; safecall;
    property x: Single read Get_x write Set_x;
    property y: Single read Get_y write Set_y;
    property x1: Single read Get_x1 write Set_x1;
    property y1: Single read Get_y1 write Set_y1;
    property x2: Single read Get_x2 write Set_x2;
    property y2: Single read Get_y2 write Set_y2;
  end;

// *********************************************************************//
// DispIntf:  ISVGPathSegCurvetoCubicAbsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510502-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegCurvetoCubicAbsDisp = dispinterface
    ['{30510502-98B5-11CF-BB82-00AA00BDCE0B}']
    property x: Single dispid 1020;
    property y: Single dispid 1021;
    property x1: Single dispid 1022;
    property y1: Single dispid 1023;
    property x2: Single dispid 1024;
    property y2: Single dispid 1025;
  end;

// *********************************************************************//
// Interface: ISVGPathSegCurvetoCubicRel
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510503-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegCurvetoCubicRel = interface(IDispatch)
    ['{30510503-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_x(p: Single); safecall;
    function Get_x: Single; safecall;
    procedure Set_y(p: Single); safecall;
    function Get_y: Single; safecall;
    procedure Set_x1(p: Single); safecall;
    function Get_x1: Single; safecall;
    procedure Set_y1(p: Single); safecall;
    function Get_y1: Single; safecall;
    procedure Set_x2(p: Single); safecall;
    function Get_x2: Single; safecall;
    procedure Set_y2(p: Single); safecall;
    function Get_y2: Single; safecall;
    property x: Single read Get_x write Set_x;
    property y: Single read Get_y write Set_y;
    property x1: Single read Get_x1 write Set_x1;
    property y1: Single read Get_y1 write Set_y1;
    property x2: Single read Get_x2 write Set_x2;
    property y2: Single read Get_y2 write Set_y2;
  end;

// *********************************************************************//
// DispIntf:  ISVGPathSegCurvetoCubicRelDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510503-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegCurvetoCubicRelDisp = dispinterface
    ['{30510503-98B5-11CF-BB82-00AA00BDCE0B}']
    property x: Single dispid 1020;
    property y: Single dispid 1021;
    property x1: Single dispid 1022;
    property y1: Single dispid 1023;
    property x2: Single dispid 1024;
    property y2: Single dispid 1025;
  end;

// *********************************************************************//
// Interface: ISVGPathSegCurvetoCubicSmoothAbs
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051050C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegCurvetoCubicSmoothAbs = interface(IDispatch)
    ['{3051050C-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_x(p: Single); safecall;
    function Get_x: Single; safecall;
    procedure Set_y(p: Single); safecall;
    function Get_y: Single; safecall;
    procedure Set_x2(p: Single); safecall;
    function Get_x2: Single; safecall;
    procedure Set_y2(p: Single); safecall;
    function Get_y2: Single; safecall;
    property x: Single read Get_x write Set_x;
    property y: Single read Get_y write Set_y;
    property x2: Single read Get_x2 write Set_x2;
    property y2: Single read Get_y2 write Set_y2;
  end;

// *********************************************************************//
// DispIntf:  ISVGPathSegCurvetoCubicSmoothAbsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051050C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegCurvetoCubicSmoothAbsDisp = dispinterface
    ['{3051050C-98B5-11CF-BB82-00AA00BDCE0B}']
    property x: Single dispid 1020;
    property y: Single dispid 1021;
    property x2: Single dispid 1022;
    property y2: Single dispid 1023;
  end;

// *********************************************************************//
// Interface: ISVGPathSegCurvetoCubicSmoothRel
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051050D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegCurvetoCubicSmoothRel = interface(IDispatch)
    ['{3051050D-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_x(p: Single); safecall;
    function Get_x: Single; safecall;
    procedure Set_y(p: Single); safecall;
    function Get_y: Single; safecall;
    procedure Set_x2(p: Single); safecall;
    function Get_x2: Single; safecall;
    procedure Set_y2(p: Single); safecall;
    function Get_y2: Single; safecall;
    property x: Single read Get_x write Set_x;
    property y: Single read Get_y write Set_y;
    property x2: Single read Get_x2 write Set_x2;
    property y2: Single read Get_y2 write Set_y2;
  end;

// *********************************************************************//
// DispIntf:  ISVGPathSegCurvetoCubicSmoothRelDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051050D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegCurvetoCubicSmoothRelDisp = dispinterface
    ['{3051050D-98B5-11CF-BB82-00AA00BDCE0B}']
    property x: Single dispid 1020;
    property y: Single dispid 1021;
    property x2: Single dispid 1022;
    property y2: Single dispid 1023;
  end;

// *********************************************************************//
// Interface: ISVGPathSegCurvetoQuadraticAbs
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510504-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegCurvetoQuadraticAbs = interface(IDispatch)
    ['{30510504-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_x(p: Single); safecall;
    function Get_x: Single; safecall;
    procedure Set_y(p: Single); safecall;
    function Get_y: Single; safecall;
    procedure Set_x1(p: Single); safecall;
    function Get_x1: Single; safecall;
    procedure Set_y1(p: Single); safecall;
    function Get_y1: Single; safecall;
    property x: Single read Get_x write Set_x;
    property y: Single read Get_y write Set_y;
    property x1: Single read Get_x1 write Set_x1;
    property y1: Single read Get_y1 write Set_y1;
  end;

// *********************************************************************//
// DispIntf:  ISVGPathSegCurvetoQuadraticAbsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510504-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegCurvetoQuadraticAbsDisp = dispinterface
    ['{30510504-98B5-11CF-BB82-00AA00BDCE0B}']
    property x: Single dispid 1020;
    property y: Single dispid 1021;
    property x1: Single dispid 1022;
    property y1: Single dispid 1023;
  end;

// *********************************************************************//
// Interface: ISVGPathSegCurvetoQuadraticRel
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510505-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegCurvetoQuadraticRel = interface(IDispatch)
    ['{30510505-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_x(p: Single); safecall;
    function Get_x: Single; safecall;
    procedure Set_y(p: Single); safecall;
    function Get_y: Single; safecall;
    procedure Set_x1(p: Single); safecall;
    function Get_x1: Single; safecall;
    procedure Set_y1(p: Single); safecall;
    function Get_y1: Single; safecall;
    property x: Single read Get_x write Set_x;
    property y: Single read Get_y write Set_y;
    property x1: Single read Get_x1 write Set_x1;
    property y1: Single read Get_y1 write Set_y1;
  end;

// *********************************************************************//
// DispIntf:  ISVGPathSegCurvetoQuadraticRelDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510505-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegCurvetoQuadraticRelDisp = dispinterface
    ['{30510505-98B5-11CF-BB82-00AA00BDCE0B}']
    property x: Single dispid 1020;
    property y: Single dispid 1021;
    property x1: Single dispid 1022;
    property y1: Single dispid 1023;
  end;

// *********************************************************************//
// Interface: ISVGPathSegCurvetoQuadraticSmoothAbs
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051050E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegCurvetoQuadraticSmoothAbs = interface(IDispatch)
    ['{3051050E-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_x(p: Single); safecall;
    function Get_x: Single; safecall;
    procedure Set_y(p: Single); safecall;
    function Get_y: Single; safecall;
    property x: Single read Get_x write Set_x;
    property y: Single read Get_y write Set_y;
  end;

// *********************************************************************//
// DispIntf:  ISVGPathSegCurvetoQuadraticSmoothAbsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051050E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegCurvetoQuadraticSmoothAbsDisp = dispinterface
    ['{3051050E-98B5-11CF-BB82-00AA00BDCE0B}']
    property x: Single dispid 1020;
    property y: Single dispid 1021;
  end;

// *********************************************************************//
// Interface: ISVGPathSegCurvetoQuadraticSmoothRel
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051050F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegCurvetoQuadraticSmoothRel = interface(IDispatch)
    ['{3051050F-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_x(p: Single); safecall;
    function Get_x: Single; safecall;
    procedure Set_y(p: Single); safecall;
    function Get_y: Single; safecall;
    property x: Single read Get_x write Set_x;
    property y: Single read Get_y write Set_y;
  end;

// *********************************************************************//
// DispIntf:  ISVGPathSegCurvetoQuadraticSmoothRelDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051050F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegCurvetoQuadraticSmoothRelDisp = dispinterface
    ['{3051050F-98B5-11CF-BB82-00AA00BDCE0B}']
    property x: Single dispid 1020;
    property y: Single dispid 1021;
  end;

// *********************************************************************//
// Interface: ISVGPathSegLinetoHorizontalAbs
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510508-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegLinetoHorizontalAbs = interface(IDispatch)
    ['{30510508-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_x(p: Single); safecall;
    function Get_x: Single; safecall;
    property x: Single read Get_x write Set_x;
  end;

// *********************************************************************//
// DispIntf:  ISVGPathSegLinetoHorizontalAbsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510508-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegLinetoHorizontalAbsDisp = dispinterface
    ['{30510508-98B5-11CF-BB82-00AA00BDCE0B}']
    property x: Single dispid 1020;
  end;

// *********************************************************************//
// Interface: ISVGPathSegLinetoHorizontalRel
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510509-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegLinetoHorizontalRel = interface(IDispatch)
    ['{30510509-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_x(p: Single); safecall;
    function Get_x: Single; safecall;
    property x: Single read Get_x write Set_x;
  end;

// *********************************************************************//
// DispIntf:  ISVGPathSegLinetoHorizontalRelDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510509-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegLinetoHorizontalRelDisp = dispinterface
    ['{30510509-98B5-11CF-BB82-00AA00BDCE0B}']
    property x: Single dispid 1020;
  end;

// *********************************************************************//
// Interface: ISVGPathSegLinetoVerticalAbs
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051050A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegLinetoVerticalAbs = interface(IDispatch)
    ['{3051050A-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_y(p: Single); safecall;
    function Get_y: Single; safecall;
    property y: Single read Get_y write Set_y;
  end;

// *********************************************************************//
// DispIntf:  ISVGPathSegLinetoVerticalAbsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051050A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegLinetoVerticalAbsDisp = dispinterface
    ['{3051050A-98B5-11CF-BB82-00AA00BDCE0B}']
    property y: Single dispid 1020;
  end;

// *********************************************************************//
// Interface: ISVGPathSegLinetoVerticalRel
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051050B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegLinetoVerticalRel = interface(IDispatch)
    ['{3051050B-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_y(p: Single); safecall;
    function Get_y: Single; safecall;
    property y: Single read Get_y write Set_y;
  end;

// *********************************************************************//
// DispIntf:  ISVGPathSegLinetoVerticalRelDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051050B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegLinetoVerticalRelDisp = dispinterface
    ['{3051050B-98B5-11CF-BB82-00AA00BDCE0B}']
    property y: Single dispid 1020;
  end;

// *********************************************************************//
// DispIntf:  DispSVGPathSegArcAbs
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590013-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGPathSegArcAbs = dispinterface
    ['{30590013-98B5-11CF-BB82-00AA00BDCE0B}']
    property pathSegType: Smallint dispid 1000;
    property pathSegTypeAsLetter: WideString readonly dispid 1001;
    property x: Single dispid 1020;
    property y: Single dispid 1021;
    property r1: Single dispid 1022;
    property r2: Single dispid 1023;
    property angle: Single dispid 1024;
    property largeArcFlag: WordBool dispid 1025;
    property sweepFlag: WordBool dispid 1026;
  end;

// *********************************************************************//
// DispIntf:  DispSVGPathSegArcRel
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590014-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGPathSegArcRel = dispinterface
    ['{30590014-98B5-11CF-BB82-00AA00BDCE0B}']
    property pathSegType: Smallint dispid 1000;
    property pathSegTypeAsLetter: WideString readonly dispid 1001;
    property x: Single dispid 1020;
    property y: Single dispid 1021;
    property r1: Single dispid 1022;
    property r2: Single dispid 1023;
    property angle: Single dispid 1024;
    property largeArcFlag: WordBool dispid 1025;
    property sweepFlag: WordBool dispid 1026;
  end;

// *********************************************************************//
// DispIntf:  DispSVGPathSegClosePath
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590015-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGPathSegClosePath = dispinterface
    ['{30590015-98B5-11CF-BB82-00AA00BDCE0B}']
    property pathSegType: Smallint dispid 1000;
    property pathSegTypeAsLetter: WideString readonly dispid 1001;
  end;

// *********************************************************************//
// DispIntf:  DispSVGPathSegMovetoAbs
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590024-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGPathSegMovetoAbs = dispinterface
    ['{30590024-98B5-11CF-BB82-00AA00BDCE0B}']
    property pathSegType: Smallint dispid 1000;
    property pathSegTypeAsLetter: WideString readonly dispid 1001;
    property x: Single dispid 1020;
    property y: Single dispid 1021;
  end;

// *********************************************************************//
// DispIntf:  DispSVGPathSegMovetoRel
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590025-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGPathSegMovetoRel = dispinterface
    ['{30590025-98B5-11CF-BB82-00AA00BDCE0B}']
    property pathSegType: Smallint dispid 1000;
    property pathSegTypeAsLetter: WideString readonly dispid 1001;
    property x: Single dispid 1020;
    property y: Single dispid 1021;
  end;

// *********************************************************************//
// DispIntf:  DispSVGPathSegLinetoAbs
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059001E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGPathSegLinetoAbs = dispinterface
    ['{3059001E-98B5-11CF-BB82-00AA00BDCE0B}']
    property pathSegType: Smallint dispid 1000;
    property pathSegTypeAsLetter: WideString readonly dispid 1001;
    property x: Single dispid 1020;
    property y: Single dispid 1021;
  end;

// *********************************************************************//
// DispIntf:  DispSVGPathSegLinetoRel
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590021-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGPathSegLinetoRel = dispinterface
    ['{30590021-98B5-11CF-BB82-00AA00BDCE0B}']
    property pathSegType: Smallint dispid 1000;
    property pathSegTypeAsLetter: WideString readonly dispid 1001;
    property x: Single dispid 1020;
    property y: Single dispid 1021;
  end;

// *********************************************************************//
// DispIntf:  DispSVGPathSegCurvetoCubicAbs
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590016-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGPathSegCurvetoCubicAbs = dispinterface
    ['{30590016-98B5-11CF-BB82-00AA00BDCE0B}']
    property pathSegType: Smallint dispid 1000;
    property pathSegTypeAsLetter: WideString readonly dispid 1001;
    property x: Single dispid 1020;
    property y: Single dispid 1021;
    property x1: Single dispid 1022;
    property y1: Single dispid 1023;
    property x2: Single dispid 1024;
    property y2: Single dispid 1025;
  end;

// *********************************************************************//
// DispIntf:  DispSVGPathSegCurvetoCubicRel
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590017-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGPathSegCurvetoCubicRel = dispinterface
    ['{30590017-98B5-11CF-BB82-00AA00BDCE0B}']
    property pathSegType: Smallint dispid 1000;
    property pathSegTypeAsLetter: WideString readonly dispid 1001;
    property x: Single dispid 1020;
    property y: Single dispid 1021;
    property x1: Single dispid 1022;
    property y1: Single dispid 1023;
    property x2: Single dispid 1024;
    property y2: Single dispid 1025;
  end;

// *********************************************************************//
// DispIntf:  DispSVGPathSegCurvetoCubicSmoothAbs
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590018-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGPathSegCurvetoCubicSmoothAbs = dispinterface
    ['{30590018-98B5-11CF-BB82-00AA00BDCE0B}']
    property pathSegType: Smallint dispid 1000;
    property pathSegTypeAsLetter: WideString readonly dispid 1001;
    property x: Single dispid 1020;
    property y: Single dispid 1021;
    property x2: Single dispid 1022;
    property y2: Single dispid 1023;
  end;

// *********************************************************************//
// DispIntf:  DispSVGPathSegCurvetoCubicSmoothRel
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590019-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGPathSegCurvetoCubicSmoothRel = dispinterface
    ['{30590019-98B5-11CF-BB82-00AA00BDCE0B}']
    property pathSegType: Smallint dispid 1000;
    property pathSegTypeAsLetter: WideString readonly dispid 1001;
    property x: Single dispid 1020;
    property y: Single dispid 1021;
    property x2: Single dispid 1022;
    property y2: Single dispid 1023;
  end;

// *********************************************************************//
// DispIntf:  DispSVGPathSegCurvetoQuadraticAbs
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059001A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGPathSegCurvetoQuadraticAbs = dispinterface
    ['{3059001A-98B5-11CF-BB82-00AA00BDCE0B}']
    property pathSegType: Smallint dispid 1000;
    property pathSegTypeAsLetter: WideString readonly dispid 1001;
    property x: Single dispid 1020;
    property y: Single dispid 1021;
    property x1: Single dispid 1022;
    property y1: Single dispid 1023;
  end;

// *********************************************************************//
// DispIntf:  DispSVGPathSegCurvetoQuadraticRel
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059001B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGPathSegCurvetoQuadraticRel = dispinterface
    ['{3059001B-98B5-11CF-BB82-00AA00BDCE0B}']
    property pathSegType: Smallint dispid 1000;
    property pathSegTypeAsLetter: WideString readonly dispid 1001;
    property x: Single dispid 1020;
    property y: Single dispid 1021;
    property x1: Single dispid 1022;
    property y1: Single dispid 1023;
  end;

// *********************************************************************//
// DispIntf:  DispSVGPathSegCurvetoQuadraticSmoothAbs
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059001C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGPathSegCurvetoQuadraticSmoothAbs = dispinterface
    ['{3059001C-98B5-11CF-BB82-00AA00BDCE0B}']
    property pathSegType: Smallint dispid 1000;
    property pathSegTypeAsLetter: WideString readonly dispid 1001;
    property x: Single dispid 1020;
    property y: Single dispid 1021;
  end;

// *********************************************************************//
// DispIntf:  DispSVGPathSegCurvetoQuadraticSmoothRel
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059001D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGPathSegCurvetoQuadraticSmoothRel = dispinterface
    ['{3059001D-98B5-11CF-BB82-00AA00BDCE0B}']
    property pathSegType: Smallint dispid 1000;
    property pathSegTypeAsLetter: WideString readonly dispid 1001;
    property x: Single dispid 1020;
    property y: Single dispid 1021;
  end;

// *********************************************************************//
// DispIntf:  DispSVGPathSegLinetoHorizontalAbs
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059001F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGPathSegLinetoHorizontalAbs = dispinterface
    ['{3059001F-98B5-11CF-BB82-00AA00BDCE0B}']
    property pathSegType: Smallint dispid 1000;
    property pathSegTypeAsLetter: WideString readonly dispid 1001;
    property x: Single dispid 1020;
  end;

// *********************************************************************//
// DispIntf:  DispSVGPathSegLinetoHorizontalRel
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590020-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGPathSegLinetoHorizontalRel = dispinterface
    ['{30590020-98B5-11CF-BB82-00AA00BDCE0B}']
    property pathSegType: Smallint dispid 1000;
    property pathSegTypeAsLetter: WideString readonly dispid 1001;
    property x: Single dispid 1020;
  end;

// *********************************************************************//
// DispIntf:  DispSVGPathSegLinetoVerticalAbs
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590022-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGPathSegLinetoVerticalAbs = dispinterface
    ['{30590022-98B5-11CF-BB82-00AA00BDCE0B}']
    property pathSegType: Smallint dispid 1000;
    property pathSegTypeAsLetter: WideString readonly dispid 1001;
    property y: Single dispid 1020;
  end;

// *********************************************************************//
// DispIntf:  DispSVGPathSegLinetoVerticalRel
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590023-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGPathSegLinetoVerticalRel = dispinterface
    ['{30590023-98B5-11CF-BB82-00AA00BDCE0B}']
    property pathSegType: Smallint dispid 1000;
    property pathSegTypeAsLetter: WideString readonly dispid 1001;
    property y: Single dispid 1020;
  end;

// *********************************************************************//
// Interface: ISVGPathSegList
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510510-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegList = interface(IDispatch)
    ['{30510510-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_numberOfItems(p: Integer); safecall;
    function Get_numberOfItems: Integer; safecall;
    procedure clear; safecall;
    function initialize(const newItem: ISVGPathSeg): ISVGPathSeg; safecall;
    function getItem(index: Integer): ISVGPathSeg; safecall;
    function insertItemBefore(const newItem: ISVGPathSeg; index: Integer): ISVGPathSeg; safecall;
    function replaceItem(const newItem: ISVGPathSeg; index: Integer): ISVGPathSeg; safecall;
    function removeItem(index: Integer): ISVGPathSeg; safecall;
    function appendItem(const newItem: ISVGPathSeg): ISVGPathSeg; safecall;
    property numberOfItems: Integer read Get_numberOfItems write Set_numberOfItems;
  end;

// *********************************************************************//
// DispIntf:  ISVGPathSegListDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510510-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathSegListDisp = dispinterface
    ['{30510510-98B5-11CF-BB82-00AA00BDCE0B}']
    property numberOfItems: Integer dispid 1000;
    procedure clear; dispid 1001;
    function initialize(const newItem: ISVGPathSeg): ISVGPathSeg; dispid 1002;
    function getItem(index: Integer): ISVGPathSeg; dispid 1003;
    function insertItemBefore(const newItem: ISVGPathSeg; index: Integer): ISVGPathSeg; dispid 1004;
    function replaceItem(const newItem: ISVGPathSeg; index: Integer): ISVGPathSeg; dispid 1005;
    function removeItem(index: Integer): ISVGPathSeg; dispid 1006;
    function appendItem(const newItem: ISVGPathSeg): ISVGPathSeg; dispid 1007;
  end;

// *********************************************************************//
// Interface: ISVGPointList
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104F5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPointList = interface(IDispatch)
    ['{305104F5-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_numberOfItems(p: Integer); safecall;
    function Get_numberOfItems: Integer; safecall;
    procedure clear; safecall;
    function initialize(const pNewItem: ISVGPoint): ISVGPoint; safecall;
    function getItem(index: Integer): ISVGPoint; safecall;
    function insertItemBefore(const pNewItem: ISVGPoint; index: Integer): ISVGPoint; safecall;
    function replaceItem(const pNewItem: ISVGPoint; index: Integer): ISVGPoint; safecall;
    function removeItem(index: Integer): ISVGPoint; safecall;
    function appendItem(const pNewItem: ISVGPoint): ISVGPoint; safecall;
    property numberOfItems: Integer read Get_numberOfItems write Set_numberOfItems;
  end;

// *********************************************************************//
// DispIntf:  ISVGPointListDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104F5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPointListDisp = dispinterface
    ['{305104F5-98B5-11CF-BB82-00AA00BDCE0B}']
    property numberOfItems: Integer dispid 1000;
    procedure clear; dispid 1001;
    function initialize(const pNewItem: ISVGPoint): ISVGPoint; dispid 1002;
    function getItem(index: Integer): ISVGPoint; dispid 1003;
    function insertItemBefore(const pNewItem: ISVGPoint; index: Integer): ISVGPoint; dispid 1004;
    function replaceItem(const pNewItem: ISVGPoint; index: Integer): ISVGPoint; dispid 1005;
    function removeItem(index: Integer): ISVGPoint; dispid 1006;
    function appendItem(const pNewItem: ISVGPoint): ISVGPoint; dispid 1007;
  end;

// *********************************************************************//
// DispIntf:  DispSVGSVGElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590001-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGSVGElement = dispinterface
    ['{30590001-98B5-11CF-BB82-00AA00BDCE0B}']
    property x: ISVGAnimatedLength dispid 1052;
    property y: ISVGAnimatedLength dispid 1054;
    property width: ISVGAnimatedLength dispid 1056;
    property height: ISVGAnimatedLength dispid 1058;
    property contentScriptType: WideString dispid 1059;
    property contentStyleType: WideString dispid 1060;
    property viewport: ISVGRect dispid 1061;
    property pixelUnitToMillimeterX: Single dispid 1062;
    property pixelUnitToMillimeterY: Single dispid 1063;
    property screenPixelToMillimeterX: Single dispid 1064;
    property screenPixelToMillimeterY: Single dispid 1065;
    property useCurrentView: WordBool dispid 1066;
    property currentView: ISVGViewSpec dispid 1067;
    property currentScale: Single dispid 1068;
    property currentTranslate: ISVGPoint dispid 1069;
    function suspendRedraw(maxWaitMilliseconds: LongWord): LongWord; dispid 1070;
    procedure unsuspendRedraw(suspendHandeID: LongWord); dispid 1071;
    procedure unsuspendRedrawAll; dispid 1072;
    procedure forceRedraw; dispid 1073;
    procedure pauseAnimations; dispid 1074;
    procedure unpauseAnimations; dispid 1075;
    function animationsPaused: WordBool; dispid 1076;
    function getCurrentTime: Single; dispid 1077;
    procedure setCurrentTime(seconds: Single); dispid 1078;
    function getIntersectionList(const rect: ISVGRect; const referenceElement: ISVGElement): OleVariant; dispid 1079;
    function getEnclosureList(const rect: ISVGRect; const referenceElement: ISVGElement): OleVariant; dispid 1080;
    function checkIntersection(const element: ISVGElement; const rect: ISVGRect): WordBool; dispid 1081;
    function checkEnclosure(const element: ISVGElement; const rect: ISVGRect): WordBool; dispid 1082;
    procedure deselectAll; dispid 1083;
    function createSVGNumber: ISVGNumber; dispid 1084;
    function createSVGLength: ISVGLength; dispid 1085;
    function createSVGAngle: ISVGAngle; dispid 1086;
    function createSVGPoint: ISVGPoint; dispid 1087;
    function createSVGMatrix: ISVGMatrix; dispid 1088;
    function createSVGRect: ISVGRect; dispid 1089;
    function createSVGTransform: ISVGTransform; dispid 1090;
    function createSVGTransformFromMatrix(const matrix: ISVGMatrix): ISVGTransform; dispid 1091;
    function getElementById(const elementId: WideString): IHTMLElement; dispid 1092;
    property xmlbase: WideString dispid 1032;
    property ownerSVGElement: ISVGSVGElement dispid 1033;
    property viewportElement: ISVGElement dispid 1034;
    property focusable: ISVGAnimatedEnumeration dispid 1036;
    property requiredFeatures: ISVGStringList readonly dispid 1011;
    property requiredExtensions: ISVGStringList readonly dispid 1013;
    property systemLanguage: ISVGStringList readonly dispid 1015;
    function hasExtension(const extension: WideString): WordBool; dispid 1016;
    property xmllang: WideString dispid 1017;
    property xmlspace: WideString dispid 1018;
    property externalResourcesRequired: ISVGAnimatedBoolean readonly dispid 1020;
    property _className: ISVGAnimatedString readonly dispid 1001;
    property nearestViewportElement: ISVGElement readonly dispid 1002;
    property farthestViewportElement: ISVGElement readonly dispid 1003;
    function getBBox: ISVGRect; dispid 1004;
    function getCTM: ISVGMatrix; dispid 1005;
    function getScreenCTM: ISVGMatrix; dispid 1006;
    function getTransformToElement(const pElement: ISVGElement): ISVGMatrix; dispid 1007;
    property viewBox: ISVGAnimatedRect readonly dispid 1022;
    property preserveAspectRatio: ISVGAnimatedPreserveAspectRatio dispid 1024;
    property zoomAndPan: Smallint readonly dispid 1025;
  end;

// *********************************************************************//
// Interface: ISVGElementInstance
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104EE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGElementInstance = interface(IDispatch)
    ['{305104EE-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_correspondingElement: ISVGElement; safecall;
    function Get_correspondingUseElement: ISVGUseElement; safecall;
    function Get_parentNode: ISVGElementInstance; safecall;
    function Get_childNodes: ISVGElementInstanceList; safecall;
    function Get_firstChild: ISVGElementInstance; safecall;
    function Get_lastChild: ISVGElementInstance; safecall;
    function Get_previousSibling: ISVGElementInstance; safecall;
    function Get_nextSibling: ISVGElementInstance; safecall;
    property correspondingElement: ISVGElement read Get_correspondingElement;
    property correspondingUseElement: ISVGUseElement read Get_correspondingUseElement;
    property parentNode: ISVGElementInstance read Get_parentNode;
    property childNodes: ISVGElementInstanceList read Get_childNodes;
    property firstChild: ISVGElementInstance read Get_firstChild;
    property lastChild: ISVGElementInstance read Get_lastChild;
    property previousSibling: ISVGElementInstance read Get_previousSibling;
    property nextSibling: ISVGElementInstance read Get_nextSibling;
  end;

// *********************************************************************//
// DispIntf:  ISVGElementInstanceDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104EE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGElementInstanceDisp = dispinterface
    ['{305104EE-98B5-11CF-BB82-00AA00BDCE0B}']
    property correspondingElement: ISVGElement readonly dispid 1000;
    property correspondingUseElement: ISVGUseElement readonly dispid 1001;
    property parentNode: ISVGElementInstance readonly dispid 1002;
    property childNodes: ISVGElementInstanceList readonly dispid 1003;
    property firstChild: ISVGElementInstance readonly dispid 1004;
    property lastChild: ISVGElementInstance readonly dispid 1005;
    property previousSibling: ISVGElementInstance readonly dispid 1006;
    property nextSibling: ISVGElementInstance readonly dispid 1007;
  end;

// *********************************************************************//
// Interface: ISVGUseElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104ED-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGUseElement = interface(IDispatch)
    ['{305104ED-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure _Set_x(const p: ISVGAnimatedLength); safecall;
    function Get_x: ISVGAnimatedLength; safecall;
    procedure _Set_y(const p: ISVGAnimatedLength); safecall;
    function Get_y: ISVGAnimatedLength; safecall;
    procedure _Set_width(const p: ISVGAnimatedLength); safecall;
    function Get_width: ISVGAnimatedLength; safecall;
    procedure _Set_height(const p: ISVGAnimatedLength); safecall;
    function Get_height: ISVGAnimatedLength; safecall;
    procedure _Set_instanceRoot(const p: ISVGElementInstance); safecall;
    function Get_instanceRoot: ISVGElementInstance; safecall;
    procedure _Set_animatedInstanceRoot(const p: ISVGElementInstance); safecall;
    function Get_animatedInstanceRoot: ISVGElementInstance; safecall;
    property x: ISVGAnimatedLength read Get_x write _Set_x;
    property y: ISVGAnimatedLength read Get_y write _Set_y;
    property width: ISVGAnimatedLength read Get_width write _Set_width;
    property height: ISVGAnimatedLength read Get_height write _Set_height;
    property instanceRoot: ISVGElementInstance read Get_instanceRoot write _Set_instanceRoot;
    property animatedInstanceRoot: ISVGElementInstance read Get_animatedInstanceRoot write _Set_animatedInstanceRoot;
  end;

// *********************************************************************//
// DispIntf:  ISVGUseElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104ED-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGUseElementDisp = dispinterface
    ['{305104ED-98B5-11CF-BB82-00AA00BDCE0B}']
    property x: ISVGAnimatedLength dispid 1052;
    property y: ISVGAnimatedLength dispid 1054;
    property width: ISVGAnimatedLength dispid 1056;
    property height: ISVGAnimatedLength dispid 1058;
    property instanceRoot: ISVGElementInstance dispid 1059;
    property animatedInstanceRoot: ISVGElementInstance dispid 1060;
  end;

// *********************************************************************//
// Interface: ISVGElementInstanceList
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104EF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGElementInstanceList = interface(IDispatch)
    ['{305104EF-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    function item(index: Integer): ISVGElementInstance; safecall;
    property length: Integer read Get_length;
  end;

// *********************************************************************//
// DispIntf:  ISVGElementInstanceListDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104EF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGElementInstanceListDisp = dispinterface
    ['{305104EF-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1000;
    function item(index: Integer): ISVGElementInstance; dispid 1001;
  end;

// *********************************************************************//
// DispIntf:  DispSVGUseElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590010-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGUseElement = dispinterface
    ['{30590010-98B5-11CF-BB82-00AA00BDCE0B}']
    property x: ISVGAnimatedLength dispid 1052;
    property y: ISVGAnimatedLength dispid 1054;
    property width: ISVGAnimatedLength dispid 1056;
    property height: ISVGAnimatedLength dispid 1058;
    property instanceRoot: ISVGElementInstance dispid 1059;
    property animatedInstanceRoot: ISVGElementInstance dispid 1060;
    property transform: ISVGAnimatedTransformList readonly dispid 1009;
    property nearestViewportElement: ISVGElement readonly dispid 1002;
    property farthestViewportElement: ISVGElement readonly dispid 1003;
    function getBBox: ISVGRect; dispid 1004;
    function getCTM: ISVGMatrix; dispid 1005;
    function getScreenCTM: ISVGMatrix; dispid 1006;
    function getTransformToElement(const pElement: ISVGElement): ISVGMatrix; dispid 1007;
    property xmlbase: WideString dispid 1032;
    property ownerSVGElement: ISVGSVGElement dispid 1033;
    property viewportElement: ISVGElement dispid 1034;
    property focusable: ISVGAnimatedEnumeration dispid 1036;
    property requiredFeatures: ISVGStringList readonly dispid 1011;
    property requiredExtensions: ISVGStringList readonly dispid 1013;
    property systemLanguage: ISVGStringList readonly dispid 1015;
    function hasExtension(const extension: WideString): WordBool; dispid 1016;
    property href: ISVGAnimatedString readonly dispid 1026;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLStyleSheetRulesAppliedCollection
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F5A6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLStyleSheetRulesAppliedCollection = dispinterface
    ['{3050F5A6-98B5-11CF-BB82-00AA00BDCE0B}']
    function item(index: Integer): IHTMLStyleSheetRule; dispid 0;
    property length: Integer readonly dispid 1001;
    function propertyAppliedBy(const name: WideString): IHTMLStyleSheetRule; dispid 1002;
    function propertyAppliedTrace(const name: WideString; index: Integer): IHTMLStyleSheetRule; dispid 1004;
    function propertyAppliedTraceLength(const name: WideString): Integer; dispid 1005;
  end;

// *********************************************************************//
// DispIntf:  DispRulesApplied
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F5A5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispRulesApplied = dispinterface
    ['{3050F5A5-98B5-11CF-BB82-00AA00BDCE0B}']
    property element: IHTMLElement readonly dispid 1001;
    property inlineStyles: IHTMLStyle readonly dispid 1002;
    property appliedRules: IHTMLStyleSheetRulesAppliedCollection readonly dispid 1003;
    function propertyIsInline(const name: WideString): WordBool; dispid 1004;
    function propertyIsInheritable(const name: WideString): WordBool; dispid 1005;
    function hasInheritableProperty: WordBool; dispid 1006;
  end;

// *********************************************************************//
// DispIntf:  DispRulesAppliedCollection
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F5A4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispRulesAppliedCollection = dispinterface
    ['{3050F5A4-98B5-11CF-BB82-00AA00BDCE0B}']
    function item(index: Integer): IRulesApplied; dispid 0;
    property length: Integer readonly dispid 1001;
    property element: IHTMLElement readonly dispid 1002;
    function propertyInheritedFrom(const name: WideString): IRulesApplied; dispid 1003;
    property propertyCount: Integer readonly dispid 1004;
    function property_(index: Integer): WideString; dispid 1005;
    function propertyInheritedTrace(const name: WideString; index: Integer): IRulesApplied; dispid 1006;
    function propertyInheritedTraceLength(const name: WideString): Integer; dispid 1007;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLW3CComputedStyle
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590070-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLW3CComputedStyle = dispinterface
    ['{30590070-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid -2147413611;
    property parentRule: OleVariant readonly dispid -2147413610;
    function getPropertyValue(const bstrPropertyName: WideString): WideString; dispid -2147413609;
    function getPropertyPriority(const bstrPropertyName: WideString): WideString; dispid -2147413608;
    function removeProperty(const bstrPropertyName: WideString): WideString; dispid -2147413607;
    procedure setProperty(const bstrPropertyName: WideString; const pvarPropertyValue: OleVariant; 
                          const pvarPropertyPriority: OleVariant); dispid -2147413606;
    function item(index: Integer): WideString; dispid 0;
    property fontFamily: WideString dispid -2147413094;
    property fontStyle: WideString dispid -2147413088;
    property fontVariant: WideString dispid -2147413087;
    property fontWeight: WideString dispid -2147413085;
    property fontSize: OleVariant dispid -2147413093;
    property font: WideString dispid -2147413071;
    property color: OleVariant dispid -2147413110;
    property background: WideString dispid -2147413080;
    property backgroundColor: OleVariant dispid -501;
    property backgroundImage: WideString dispid -2147413111;
    property backgroundRepeat: WideString dispid -2147413068;
    property backgroundAttachment: WideString dispid -2147413067;
    property backgroundPosition: WideString dispid -2147413066;
    property backgroundPositionX: OleVariant dispid -2147413079;
    property backgroundPositionY: OleVariant dispid -2147413078;
    property wordSpacing: OleVariant dispid -2147413065;
    property letterSpacing: OleVariant dispid -2147413104;
    property textDecoration: WideString dispid -2147413077;
    property verticalAlign: OleVariant dispid -2147413064;
    property textTransform: WideString dispid -2147413108;
    property textAlign: WideString dispid -2147418040;
    property textIndent: OleVariant dispid -2147413105;
    property lineHeight: OleVariant dispid -2147413106;
    property marginTop: OleVariant dispid -2147413075;
    property marginRight: OleVariant dispid -2147413074;
    property marginBottom: OleVariant dispid -2147413073;
    property marginLeft: OleVariant dispid -2147413072;
    property margin: WideString dispid -2147413076;
    property paddingTop: OleVariant dispid -2147413100;
    property paddingRight: OleVariant dispid -2147413099;
    property paddingBottom: OleVariant dispid -2147413098;
    property paddingLeft: OleVariant dispid -2147413097;
    property padding: WideString dispid -2147413101;
    property border: WideString dispid -2147413063;
    property borderTop: WideString dispid -2147413062;
    property borderRight: WideString dispid -2147413061;
    property borderBottom: WideString dispid -2147413060;
    property borderLeft: WideString dispid -2147413059;
    property borderColor: WideString dispid -2147413058;
    property borderTopColor: OleVariant dispid -2147413057;
    property borderRightColor: OleVariant dispid -2147413056;
    property borderBottomColor: OleVariant dispid -2147413055;
    property borderLeftColor: OleVariant dispid -2147413054;
    property borderWidth: WideString dispid -2147413053;
    property borderTopWidth: OleVariant dispid -2147413052;
    property borderRightWidth: OleVariant dispid -2147413051;
    property borderBottomWidth: OleVariant dispid -2147413050;
    property borderLeftWidth: OleVariant dispid -2147413049;
    property borderStyle: WideString dispid -2147413048;
    property borderTopStyle: WideString dispid -2147413047;
    property borderRightStyle: WideString dispid -2147413046;
    property borderBottomStyle: WideString dispid -2147413045;
    property borderLeftStyle: WideString dispid -2147413044;
    property width: OleVariant dispid -2147418107;
    property height: OleVariant dispid -2147418106;
    property styleFloat: WideString dispid -2147413042;
    property clear: WideString dispid -2147413096;
    property display: WideString dispid -2147413041;
    property visibility: WideString dispid -2147413032;
    property listStyleType: WideString dispid -2147413040;
    property listStylePosition: WideString dispid -2147413039;
    property listStyleImage: WideString dispid -2147413038;
    property listStyle: WideString dispid -2147413037;
    property whiteSpace: WideString dispid -2147413036;
    property top: OleVariant dispid -2147418108;
    property left: OleVariant dispid -2147418109;
    property zIndex: OleVariant dispid -2147413021;
    property overflow: WideString dispid -2147413102;
    property pageBreakBefore: WideString dispid -2147413035;
    property pageBreakAfter: WideString dispid -2147413034;
    property cssText: WideString dispid -2147413013;
    property cursor: WideString dispid -2147413010;
    property clip: WideString dispid -2147413020;
    property filter: WideString dispid -2147413030;
    property tableLayout: WideString dispid -2147413014;
    property borderCollapse: WideString dispid -2147413028;
    property direction: WideString dispid -2147412993;
    property behavior: WideString dispid -2147412997;
    property position: WideString dispid -2147413022;
    property unicodeBidi: WideString dispid -2147412994;
    property bottom: OleVariant dispid -2147418034;
    property right: OleVariant dispid -2147418035;
    property imeMode: WideString dispid -2147412992;
    property rubyAlign: WideString dispid -2147412991;
    property rubyPosition: WideString dispid -2147412990;
    property rubyOverhang: WideString dispid -2147412989;
    property layoutGridChar: OleVariant dispid -2147412985;
    property layoutGridLine: OleVariant dispid -2147412984;
    property layoutGridMode: WideString dispid -2147412983;
    property layoutGridType: WideString dispid -2147412982;
    property layoutGrid: WideString dispid -2147412981;
    property textAutospace: WideString dispid -2147412980;
    property wordBreak: WideString dispid -2147412978;
    property lineBreak: WideString dispid -2147412979;
    property textJustify: WideString dispid -2147412977;
    property textJustifyTrim: WideString dispid -2147412976;
    property textKashida: OleVariant dispid -2147412975;
    property overflowX: WideString dispid -2147412973;
    property overflowY: WideString dispid -2147412972;
    property accelerator: WideString dispid -2147412965;
    property layoutFlow: WideString dispid -2147412957;
    property zoom: OleVariant dispid -2147412959;
    property wordWrap: WideString dispid -2147412954;
    property textUnderlinePosition: WideString dispid -2147412953;
    property scrollbarBaseColor: OleVariant dispid -2147412932;
    property scrollbarFaceColor: OleVariant dispid -2147412931;
    property scrollbar3dLightColor: OleVariant dispid -2147412930;
    property scrollbarShadowColor: OleVariant dispid -2147412929;
    property scrollbarHighlightColor: OleVariant dispid -2147412928;
    property scrollbarDarkShadowColor: OleVariant dispid -2147412927;
    property scrollbarArrowColor: OleVariant dispid -2147412926;
    property scrollbarTrackColor: OleVariant dispid -2147412916;
    property writingMode: WideString dispid -2147412920;
    property textAlignLast: WideString dispid -2147412909;
    property textKashidaSpace: OleVariant dispid -2147412908;
    property textOverflow: WideString dispid -2147412903;
    property minHeight: OleVariant dispid -2147412901;
    property msInterpolationMode: WideString dispid -2147412899;
    property maxHeight: OleVariant dispid -2147412898;
    property minWidth: OleVariant dispid -2147412897;
    property maxWidth: OleVariant dispid -2147412896;
    property content: WideString dispid -2147412894;
    property captionSide: WideString dispid -2147412893;
    property counterIncrement: WideString dispid -2147412892;
    property counterReset: WideString dispid -2147412891;
    property outline: WideString dispid -2147412890;
    property outlineWidth: OleVariant dispid -2147412889;
    property outlineStyle: WideString dispid -2147412888;
    property outlineColor: OleVariant dispid -2147412887;
    property boxSizing: WideString dispid -2147412886;
    property borderSpacing: WideString dispid -2147412885;
    property orphans: OleVariant dispid -2147412884;
    property widows: OleVariant dispid -2147412883;
    property pageBreakInside: WideString dispid -2147412882;
    property emptyCells: WideString dispid -2147412862;
    property msBlockProgression: WideString dispid -2147412861;
    property quotes: WideString dispid -2147412860;
    property alignmentBaseline: WideString dispid -2147412834;
    property baselineShift: OleVariant dispid -2147412833;
    property dominantBaseline: WideString dispid -2147412832;
    property fontSizeAdjust: OleVariant dispid -2147412831;
    property fontStretch: WideString dispid -2147412830;
    property opacity: OleVariant dispid -2147412829;
    property clipPath: WideString dispid -2147412828;
    property clipRule: WideString dispid -2147412827;
    property fill: WideString dispid -2147412826;
    property fillOpacity: OleVariant dispid -2147412825;
    property fillRule: WideString dispid -2147412824;
    property kerning: OleVariant dispid -2147412823;
    property marker: WideString dispid -2147412822;
    property markerEnd: WideString dispid -2147412821;
    property markerMid: WideString dispid -2147412820;
    property markerStart: WideString dispid -2147412819;
    property mask: WideString dispid -2147412818;
    property pointerEvents: WideString dispid -2147412817;
    property stopColor: OleVariant dispid -2147412816;
    property stopOpacity: OleVariant dispid -2147412815;
    property stroke: WideString dispid -2147412814;
    property strokeDasharray: WideString dispid -2147412813;
    property strokeDashoffset: OleVariant dispid -2147412812;
    property strokeLinecap: WideString dispid -2147412811;
    property strokeLinejoin: WideString dispid -2147412810;
    property strokeMiterlimit: OleVariant dispid -2147412809;
    property strokeOpacity: OleVariant dispid -2147412808;
    property strokeWidth: OleVariant dispid -2147412807;
    property textAnchor: WideString dispid -2147412806;
    property glyphOrientationHorizontal: OleVariant dispid -2147412805;
    property glyphOrientationVertical: OleVariant dispid -2147412804;
    property borderRadius: WideString dispid -2147412802;
    property borderTopLeftRadius: WideString dispid -2147412801;
    property borderTopRightRadius: WideString dispid -2147412800;
    property borderBottomRightRadius: WideString dispid -2147412799;
    property borderBottomLeftRadius: WideString dispid -2147412798;
    property clipTop: OleVariant dispid -2147413019;
    property clipRight: OleVariant dispid -2147413018;
    property clipBottom: OleVariant readonly dispid -2147413017;
    property clipLeft: OleVariant dispid -2147413016;
    property cssFloat: WideString dispid -2147412803;
    property backgroundClip: WideString dispid -2147412796;
    property backgroundOrigin: WideString dispid -2147412795;
    property backgroundSize: WideString dispid -2147412794;
    property boxShadow: WideString dispid -2147412793;
    property msTransform: WideString dispid -2147412797;
    property msTransformOrigin: WideString dispid -2147412787;
    property msScrollChaining: WideString dispid -2147412757;
    property msContentZooming: WideString dispid -2147412756;
    property msContentZoomSnapType: WideString dispid -2147412755;
    property msScrollRails: WideString dispid -2147412754;
    property msContentZoomChaining: WideString dispid -2147412753;
    property msScrollSnapType: WideString dispid -2147412752;
    property msContentZoomLimit: WideString dispid -2147412751;
    property msContentZoomSnap: WideString dispid -2147412750;
    property msContentZoomSnapPoints: WideString dispid -2147412749;
    property msContentZoomLimitMin: OleVariant dispid -2147412747;
    property msContentZoomLimitMax: OleVariant dispid -2147412746;
    property msScrollSnapX: WideString dispid -2147412745;
    property msScrollSnapY: WideString dispid -2147412744;
    property msScrollSnapPointsX: WideString dispid -2147412743;
    property msScrollSnapPointsY: WideString dispid -2147412742;
    property msGridColumn: OleVariant dispid -2147412740;
    property msGridColumnAlign: WideString dispid -2147412739;
    property msGridColumns: WideString dispid -2147412738;
    property msGridColumnSpan: OleVariant dispid -2147412737;
    property msGridRow: OleVariant dispid -2147412735;
    property msGridRowAlign: WideString dispid -2147412734;
    property msGridRows: WideString dispid -2147412733;
    property msGridRowSpan: OleVariant dispid -2147412732;
    property msWrapThrough: WideString dispid -2147412711;
    property msWrapMargin: OleVariant dispid -2147412701;
    property msWrapFlow: WideString dispid -2147412699;
    property msAnimationName: WideString dispid -2147412731;
    property msAnimationDuration: WideString dispid -2147412730;
    property msAnimationTimingFunction: WideString dispid -2147412729;
    property msAnimationDelay: WideString dispid -2147412728;
    property msAnimationDirection: WideString dispid -2147412727;
    property msAnimationPlayState: WideString dispid -2147412726;
    property msAnimationIterationCount: WideString dispid -2147412725;
    property msAnimation: WideString dispid -2147412724;
    property msAnimationFillMode: WideString dispid -2147412723;
    property colorInterpolationFilters: WideString dispid -2147412720;
    property columnCount: OleVariant dispid -2147412776;
    property columnWidth: OleVariant dispid -2147412775;
    property columnGap: OleVariant dispid -2147412774;
    property columnFill: WideString dispid -2147412773;
    property columnSpan: WideString dispid -2147412772;
    property columns: WideString dispid -2147412777;
    property columnRule: WideString dispid -2147412771;
    property columnRuleColor: OleVariant dispid -2147412768;
    property columnRuleStyle: WideString dispid -2147412770;
    property columnRuleWidth: OleVariant dispid -2147412769;
    property breakBefore: WideString dispid -2147412767;
    property breakAfter: WideString dispid -2147412766;
    property breakInside: WideString dispid -2147412765;
    property floodColor: OleVariant dispid -2147412722;
    property floodOpacity: OleVariant dispid -2147412721;
    property lightingColor: OleVariant dispid -2147412719;
    property msScrollLimitXMin: OleVariant dispid -2147412718;
    property msScrollLimitYMin: OleVariant dispid -2147412717;
    property msScrollLimitXMax: OleVariant dispid -2147412716;
    property msScrollLimitYMax: OleVariant dispid -2147412715;
    property msScrollLimit: WideString dispid -2147412714;
    property textShadow: WideString dispid -2147412712;
    property msFlowFrom: WideString dispid -2147412710;
    property msFlowInto: WideString dispid -2147412709;
    property msHyphens: WideString dispid -2147412708;
    property msHyphenateLimitZone: OleVariant dispid -2147412707;
    property msHyphenateLimitChars: WideString dispid -2147412706;
    property msHyphenateLimitLines: OleVariant dispid -2147412705;
    property msHighContrastAdjust: WideString dispid -2147412703;
    property enableBackground: WideString dispid -2147412702;
    property msFontFeatureSettings: WideString dispid -2147412698;
    property msUserSelect: WideString dispid -2147412697;
    property msOverflowStyle: WideString dispid -2147412713;
    property msTransformStyle: WideString dispid -2147412759;
    property msBackfaceVisibility: WideString dispid -2147412758;
    property msPerspective: OleVariant dispid -2147412763;
    property msPerspectiveOrigin: WideString dispid -2147412762;
    property msTransitionProperty: WideString dispid -2147412782;
    property msTransitionDuration: WideString dispid -2147412781;
    property msTransitionTimingFunction: WideString dispid -2147412780;
    property msTransitionDelay: WideString dispid -2147412779;
    property msTransition: WideString dispid -2147412778;
    property msTouchAction: WideString dispid -2147412696;
    property msScrollTranslation: WideString dispid -2147412694;
    property msFlex: WideString dispid -2147412693;
    property msFlexPositive: OleVariant dispid -2147412692;
    property msFlexNegative: OleVariant dispid -2147412691;
    property msFlexPreferredSize: OleVariant dispid -2147412690;
    property msFlexFlow: WideString dispid -2147412689;
    property msFlexDirection: WideString dispid -2147412688;
    property msFlexWrap: WideString dispid -2147412687;
    property msFlexAlign: WideString dispid -2147412686;
    property msFlexItemAlign: WideString dispid -2147412685;
    property msFlexPack: WideString dispid -2147412684;
    property msFlexLinePack: WideString dispid -2147412683;
    property msFlexOrder: OleVariant dispid -2147412682;
    property msTouchSelect: WideString dispid -2147412654;
    property transform: WideString dispid -2147412681;
    property transformOrigin: WideString dispid -2147412680;
    property transformStyle: WideString dispid -2147412672;
    property backfaceVisibility: WideString dispid -2147412671;
    property perspective: OleVariant dispid -2147412674;
    property perspectiveOrigin: WideString dispid -2147412673;
    property transitionProperty: WideString dispid -2147412679;
    property transitionDuration: WideString dispid -2147412678;
    property transitionTimingFunction: WideString dispid -2147412677;
    property transitionDelay: WideString dispid -2147412676;
    property transition: WideString dispid -2147412675;
    property fontFeatureSettings: WideString dispid -2147412661;
    property animationName: WideString dispid -2147412670;
    property animationDuration: WideString dispid -2147412669;
    property animationTimingFunction: WideString dispid -2147412668;
    property animationDelay: WideString dispid -2147412667;
    property animationDirection: WideString dispid -2147412666;
    property animationPlayState: WideString dispid -2147412665;
    property animationIterationCount: WideString dispid -2147412664;
    property animation: WideString dispid -2147412663;
    property animationFillMode: WideString dispid -2147412662;
    property flex: WideString dispid -2147412646;
    property flexDirection: WideString dispid -2147412650;
    property flexWrap: WideString dispid -2147412649;
    property flexFlow: WideString dispid -2147412648;
    property flexGrow: OleVariant dispid -2147412645;
    property flexShrink: OleVariant dispid -2147412644;
    property flexBasis: OleVariant dispid -2147412643;
    property justifyContent: WideString dispid -2147412642;
    property alignItems: WideString dispid -2147412641;
    property alignSelf: WideString dispid -2147412640;
    property alignContent: WideString dispid -2147412639;
    property borderImage: WideString dispid -2147412638;
    property borderImageSource: WideString dispid -2147412637;
    property borderImageSlice: WideString dispid -2147412636;
    property borderImageWidth: WideString dispid -2147412635;
    property borderImageOutset: WideString dispid -2147412634;
    property borderImageRepeat: WideString dispid -2147412633;
    property msImeAlign: WideString dispid -2147412631;
    property msTextCombineHorizontal: WideString dispid -2147412630;
    property touchAction: WideString dispid -2147412629;
  end;

// *********************************************************************//
// Interface: ISVGAnimatedPoints
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510517-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGAnimatedPoints = interface(IDispatch)
    ['{30510517-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure _Set_points(const p: ISVGPointList); safecall;
    function Get_points: ISVGPointList; safecall;
    procedure _Set_animatedPoints(const p: ISVGPointList); safecall;
    function Get_animatedPoints: ISVGPointList; safecall;
    property points: ISVGPointList read Get_points write _Set_points;
    property animatedPoints: ISVGPointList read Get_animatedPoints write _Set_animatedPoints;
  end;

// *********************************************************************//
// DispIntf:  ISVGAnimatedPointsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510517-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGAnimatedPointsDisp = dispinterface
    ['{30510517-98B5-11CF-BB82-00AA00BDCE0B}']
    property points: ISVGPointList dispid 1050;
    property animatedPoints: ISVGPointList dispid 1052;
  end;

// *********************************************************************//
// Interface: ISVGCircleElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510514-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGCircleElement = interface(IDispatch)
    ['{30510514-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure _Set_cx(const p: ISVGAnimatedLength); safecall;
    function Get_cx: ISVGAnimatedLength; safecall;
    procedure _Set_cy(const p: ISVGAnimatedLength); safecall;
    function Get_cy: ISVGAnimatedLength; safecall;
    procedure _Set_r(const p: ISVGAnimatedLength); safecall;
    function Get_r: ISVGAnimatedLength; safecall;
    property cx: ISVGAnimatedLength read Get_cx write _Set_cx;
    property cy: ISVGAnimatedLength read Get_cy write _Set_cy;
    property r: ISVGAnimatedLength read Get_r write _Set_r;
  end;

// *********************************************************************//
// DispIntf:  ISVGCircleElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510514-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGCircleElementDisp = dispinterface
    ['{30510514-98B5-11CF-BB82-00AA00BDCE0B}']
    property cx: ISVGAnimatedLength dispid 1052;
    property cy: ISVGAnimatedLength dispid 1054;
    property r: ISVGAnimatedLength dispid 1056;
  end;

// *********************************************************************//
// Interface: ISVGEllipseElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510515-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGEllipseElement = interface(IDispatch)
    ['{30510515-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure _Set_cx(const p: ISVGAnimatedLength); safecall;
    function Get_cx: ISVGAnimatedLength; safecall;
    procedure _Set_cy(const p: ISVGAnimatedLength); safecall;
    function Get_cy: ISVGAnimatedLength; safecall;
    procedure _Set_rx(const p: ISVGAnimatedLength); safecall;
    function Get_rx: ISVGAnimatedLength; safecall;
    procedure _Set_ry(const p: ISVGAnimatedLength); safecall;
    function Get_ry: ISVGAnimatedLength; safecall;
    property cx: ISVGAnimatedLength read Get_cx write _Set_cx;
    property cy: ISVGAnimatedLength read Get_cy write _Set_cy;
    property rx: ISVGAnimatedLength read Get_rx write _Set_rx;
    property ry: ISVGAnimatedLength read Get_ry write _Set_ry;
  end;

// *********************************************************************//
// DispIntf:  ISVGEllipseElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510515-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGEllipseElementDisp = dispinterface
    ['{30510515-98B5-11CF-BB82-00AA00BDCE0B}']
    property cx: ISVGAnimatedLength dispid 1052;
    property cy: ISVGAnimatedLength dispid 1054;
    property rx: ISVGAnimatedLength dispid 1056;
    property ry: ISVGAnimatedLength dispid 1058;
  end;

// *********************************************************************//
// Interface: ISVGLineElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510516-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGLineElement = interface(IDispatch)
    ['{30510516-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure _Set_x1(const p: ISVGAnimatedLength); safecall;
    function Get_x1: ISVGAnimatedLength; safecall;
    procedure _Set_y1(const p: ISVGAnimatedLength); safecall;
    function Get_y1: ISVGAnimatedLength; safecall;
    procedure _Set_x2(const p: ISVGAnimatedLength); safecall;
    function Get_x2: ISVGAnimatedLength; safecall;
    procedure _Set_y2(const p: ISVGAnimatedLength); safecall;
    function Get_y2: ISVGAnimatedLength; safecall;
    property x1: ISVGAnimatedLength read Get_x1 write _Set_x1;
    property y1: ISVGAnimatedLength read Get_y1 write _Set_y1;
    property x2: ISVGAnimatedLength read Get_x2 write _Set_x2;
    property y2: ISVGAnimatedLength read Get_y2 write _Set_y2;
  end;

// *********************************************************************//
// DispIntf:  ISVGLineElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510516-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGLineElementDisp = dispinterface
    ['{30510516-98B5-11CF-BB82-00AA00BDCE0B}']
    property x1: ISVGAnimatedLength dispid 1052;
    property y1: ISVGAnimatedLength dispid 1054;
    property x2: ISVGAnimatedLength dispid 1056;
    property y2: ISVGAnimatedLength dispid 1058;
  end;

// *********************************************************************//
// Interface: ISVGRectElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510513-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGRectElement = interface(IDispatch)
    ['{30510513-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure _Set_x(const p: ISVGAnimatedLength); safecall;
    function Get_x: ISVGAnimatedLength; safecall;
    procedure _Set_y(const p: ISVGAnimatedLength); safecall;
    function Get_y: ISVGAnimatedLength; safecall;
    procedure _Set_width(const p: ISVGAnimatedLength); safecall;
    function Get_width: ISVGAnimatedLength; safecall;
    procedure _Set_height(const p: ISVGAnimatedLength); safecall;
    function Get_height: ISVGAnimatedLength; safecall;
    procedure _Set_rx(const p: ISVGAnimatedLength); safecall;
    function Get_rx: ISVGAnimatedLength; safecall;
    procedure _Set_ry(const p: ISVGAnimatedLength); safecall;
    function Get_ry: ISVGAnimatedLength; safecall;
    property x: ISVGAnimatedLength read Get_x write _Set_x;
    property y: ISVGAnimatedLength read Get_y write _Set_y;
    property width: ISVGAnimatedLength read Get_width write _Set_width;
    property height: ISVGAnimatedLength read Get_height write _Set_height;
    property rx: ISVGAnimatedLength read Get_rx write _Set_rx;
    property ry: ISVGAnimatedLength read Get_ry write _Set_ry;
  end;

// *********************************************************************//
// DispIntf:  ISVGRectElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510513-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGRectElementDisp = dispinterface
    ['{30510513-98B5-11CF-BB82-00AA00BDCE0B}']
    property x: ISVGAnimatedLength dispid 1052;
    property y: ISVGAnimatedLength dispid 1054;
    property width: ISVGAnimatedLength dispid 1056;
    property height: ISVGAnimatedLength dispid 1058;
    property rx: ISVGAnimatedLength dispid 1060;
    property ry: ISVGAnimatedLength dispid 1062;
  end;

// *********************************************************************//
// Interface: ISVGPolygonElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510519-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPolygonElement = interface(IDispatch)
    ['{30510519-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  ISVGPolygonElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510519-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPolygonElementDisp = dispinterface
    ['{30510519-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// Interface: ISVGPolylineElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510518-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPolylineElement = interface(IDispatch)
    ['{30510518-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  ISVGPolylineElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510518-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPolylineElementDisp = dispinterface
    ['{30510518-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  DispSVGCircleElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059000A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGCircleElement = dispinterface
    ['{3059000A-98B5-11CF-BB82-00AA00BDCE0B}']
    property cx: ISVGAnimatedLength dispid 1052;
    property cy: ISVGAnimatedLength dispid 1054;
    property r: ISVGAnimatedLength dispid 1056;
    property requiredFeatures: ISVGStringList readonly dispid 1011;
    property requiredExtensions: ISVGStringList readonly dispid 1013;
    property systemLanguage: ISVGStringList readonly dispid 1015;
    function hasExtension(const extension: WideString): WordBool; dispid 1016;
    property transform: ISVGAnimatedTransformList readonly dispid 1009;
    property nearestViewportElement: ISVGElement readonly dispid 1002;
    property farthestViewportElement: ISVGElement readonly dispid 1003;
    function getBBox: ISVGRect; dispid 1004;
    function getCTM: ISVGMatrix; dispid 1005;
    function getScreenCTM: ISVGMatrix; dispid 1006;
    function getTransformToElement(const pElement: ISVGElement): ISVGMatrix; dispid 1007;
    property xmlbase: WideString dispid 1032;
    property ownerSVGElement: ISVGSVGElement dispid 1033;
    property viewportElement: ISVGElement dispid 1034;
    property focusable: ISVGAnimatedEnumeration dispid 1036;
  end;

// *********************************************************************//
// DispIntf:  DispSVGEllipseElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059000B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGEllipseElement = dispinterface
    ['{3059000B-98B5-11CF-BB82-00AA00BDCE0B}']
    property cx: ISVGAnimatedLength dispid 1052;
    property cy: ISVGAnimatedLength dispid 1054;
    property rx: ISVGAnimatedLength dispid 1056;
    property ry: ISVGAnimatedLength dispid 1058;
    property transform: ISVGAnimatedTransformList readonly dispid 1009;
    property nearestViewportElement: ISVGElement readonly dispid 1002;
    property farthestViewportElement: ISVGElement readonly dispid 1003;
    function getBBox: ISVGRect; dispid 1004;
    function getCTM: ISVGMatrix; dispid 1005;
    function getScreenCTM: ISVGMatrix; dispid 1006;
    function getTransformToElement(const pElement: ISVGElement): ISVGMatrix; dispid 1007;
    property xmlbase: WideString dispid 1032;
    property ownerSVGElement: ISVGSVGElement dispid 1033;
    property viewportElement: ISVGElement dispid 1034;
    property focusable: ISVGAnimatedEnumeration dispid 1036;
    property requiredFeatures: ISVGStringList readonly dispid 1011;
    property requiredExtensions: ISVGStringList readonly dispid 1013;
    property systemLanguage: ISVGStringList readonly dispid 1015;
    function hasExtension(const extension: WideString): WordBool; dispid 1016;
  end;

// *********************************************************************//
// DispIntf:  DispSVGLineElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059000C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGLineElement = dispinterface
    ['{3059000C-98B5-11CF-BB82-00AA00BDCE0B}']
    property x1: ISVGAnimatedLength dispid 1052;
    property y1: ISVGAnimatedLength dispid 1054;
    property x2: ISVGAnimatedLength dispid 1056;
    property y2: ISVGAnimatedLength dispid 1058;
    property xmlbase: WideString dispid 1032;
    property ownerSVGElement: ISVGSVGElement dispid 1033;
    property viewportElement: ISVGElement dispid 1034;
    property focusable: ISVGAnimatedEnumeration dispid 1036;
    property requiredFeatures: ISVGStringList readonly dispid 1011;
    property requiredExtensions: ISVGStringList readonly dispid 1013;
    property systemLanguage: ISVGStringList readonly dispid 1015;
    function hasExtension(const extension: WideString): WordBool; dispid 1016;
    property xmllang: WideString dispid 1017;
    property xmlspace: WideString dispid 1018;
    property externalResourcesRequired: ISVGAnimatedBoolean readonly dispid 1020;
    property _className: ISVGAnimatedString readonly dispid 1001;
    property transform: ISVGAnimatedTransformList readonly dispid 1009;
    property nearestViewportElement: ISVGElement readonly dispid 1002;
    property farthestViewportElement: ISVGElement readonly dispid 1003;
    function getBBox: ISVGRect; dispid 1004;
    function getCTM: ISVGMatrix; dispid 1005;
    function getScreenCTM: ISVGMatrix; dispid 1006;
    function getTransformToElement(const pElement: ISVGElement): ISVGMatrix; dispid 1007;
  end;

// *********************************************************************//
// DispIntf:  DispSVGRectElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590009-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGRectElement = dispinterface
    ['{30590009-98B5-11CF-BB82-00AA00BDCE0B}']
    property x: ISVGAnimatedLength dispid 1052;
    property y: ISVGAnimatedLength dispid 1054;
    property width: ISVGAnimatedLength dispid 1056;
    property height: ISVGAnimatedLength dispid 1058;
    property rx: ISVGAnimatedLength dispid 1060;
    property ry: ISVGAnimatedLength dispid 1062;
    property xmlbase: WideString dispid 1032;
    property ownerSVGElement: ISVGSVGElement dispid 1033;
    property viewportElement: ISVGElement dispid 1034;
    property focusable: ISVGAnimatedEnumeration dispid 1036;
    property requiredFeatures: ISVGStringList readonly dispid 1011;
    property requiredExtensions: ISVGStringList readonly dispid 1013;
    property systemLanguage: ISVGStringList readonly dispid 1015;
    function hasExtension(const extension: WideString): WordBool; dispid 1016;
    property xmllang: WideString dispid 1017;
    property xmlspace: WideString dispid 1018;
    property externalResourcesRequired: ISVGAnimatedBoolean readonly dispid 1020;
    property _className: ISVGAnimatedString readonly dispid 1001;
    property transform: ISVGAnimatedTransformList readonly dispid 1009;
    property nearestViewportElement: ISVGElement readonly dispid 1002;
    property farthestViewportElement: ISVGElement readonly dispid 1003;
    function getBBox: ISVGRect; dispid 1004;
    function getCTM: ISVGMatrix; dispid 1005;
    function getScreenCTM: ISVGMatrix; dispid 1006;
    function getTransformToElement(const pElement: ISVGElement): ISVGMatrix; dispid 1007;
  end;

// *********************************************************************//
// DispIntf:  DispSVGPolygonElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059000D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGPolygonElement = dispinterface
    ['{3059000D-98B5-11CF-BB82-00AA00BDCE0B}']
    property points: ISVGPointList dispid 1050;
    property animatedPoints: ISVGPointList dispid 1052;
    property transform: ISVGAnimatedTransformList readonly dispid 1009;
    property nearestViewportElement: ISVGElement readonly dispid 1002;
    property farthestViewportElement: ISVGElement readonly dispid 1003;
    function getBBox: ISVGRect; dispid 1004;
    function getCTM: ISVGMatrix; dispid 1005;
    function getScreenCTM: ISVGMatrix; dispid 1006;
    function getTransformToElement(const pElement: ISVGElement): ISVGMatrix; dispid 1007;
    property xmlbase: WideString dispid 1032;
    property ownerSVGElement: ISVGSVGElement dispid 1033;
    property viewportElement: ISVGElement dispid 1034;
    property focusable: ISVGAnimatedEnumeration dispid 1036;
    property requiredFeatures: ISVGStringList readonly dispid 1011;
    property requiredExtensions: ISVGStringList readonly dispid 1013;
    property systemLanguage: ISVGStringList readonly dispid 1015;
    function hasExtension(const extension: WideString): WordBool; dispid 1016;
  end;

// *********************************************************************//
// DispIntf:  DispSVGPolylineElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059000E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGPolylineElement = dispinterface
    ['{3059000E-98B5-11CF-BB82-00AA00BDCE0B}']
    property points: ISVGPointList dispid 1050;
    property animatedPoints: ISVGPointList dispid 1052;
    property transform: ISVGAnimatedTransformList readonly dispid 1009;
    property nearestViewportElement: ISVGElement readonly dispid 1002;
    property farthestViewportElement: ISVGElement readonly dispid 1003;
    function getBBox: ISVGRect; dispid 1004;
    function getCTM: ISVGMatrix; dispid 1005;
    function getScreenCTM: ISVGMatrix; dispid 1006;
    function getTransformToElement(const pElement: ISVGElement): ISVGMatrix; dispid 1007;
    property xmlbase: WideString dispid 1032;
    property ownerSVGElement: ISVGSVGElement dispid 1033;
    property viewportElement: ISVGElement dispid 1034;
    property focusable: ISVGAnimatedEnumeration dispid 1036;
    property requiredFeatures: ISVGStringList readonly dispid 1011;
    property requiredExtensions: ISVGStringList readonly dispid 1013;
    property systemLanguage: ISVGStringList readonly dispid 1015;
    function hasExtension(const extension: WideString): WordBool; dispid 1016;
  end;

// *********************************************************************//
// Interface: ISVGGElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104E8-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGGElement = interface(IDispatch)
    ['{305104E8-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  ISVGGElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104E8-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGGElementDisp = dispinterface
    ['{305104E8-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  DispSVGGElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590002-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGGElement = dispinterface
    ['{30590002-98B5-11CF-BB82-00AA00BDCE0B}']
    property xmlbase: WideString dispid 1032;
    property ownerSVGElement: ISVGSVGElement dispid 1033;
    property viewportElement: ISVGElement dispid 1034;
    property focusable: ISVGAnimatedEnumeration dispid 1036;
    property requiredFeatures: ISVGStringList readonly dispid 1011;
    property requiredExtensions: ISVGStringList readonly dispid 1013;
    property systemLanguage: ISVGStringList readonly dispid 1015;
    function hasExtension(const extension: WideString): WordBool; dispid 1016;
    property xmllang: WideString dispid 1017;
    property xmlspace: WideString dispid 1018;
    property externalResourcesRequired: ISVGAnimatedBoolean readonly dispid 1020;
    property _className: ISVGAnimatedString readonly dispid 1001;
    property transform: ISVGAnimatedTransformList readonly dispid 1009;
    property nearestViewportElement: ISVGElement readonly dispid 1002;
    property farthestViewportElement: ISVGElement readonly dispid 1003;
    function getBBox: ISVGRect; dispid 1004;
    function getCTM: ISVGMatrix; dispid 1005;
    function getScreenCTM: ISVGMatrix; dispid 1006;
    function getTransformToElement(const pElement: ISVGElement): ISVGMatrix; dispid 1007;
  end;

// *********************************************************************//
// Interface: ISVGSymbolElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104EC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGSymbolElement = interface(IDispatch)
    ['{305104EC-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  ISVGSymbolElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104EC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGSymbolElementDisp = dispinterface
    ['{305104EC-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  DispSVGSymbolElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590004-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGSymbolElement = dispinterface
    ['{30590004-98B5-11CF-BB82-00AA00BDCE0B}']
    property xmlbase: WideString dispid 1032;
    property ownerSVGElement: ISVGSVGElement dispid 1033;
    property viewportElement: ISVGElement dispid 1034;
    property focusable: ISVGAnimatedEnumeration dispid 1036;
    property xmllang: WideString dispid 1017;
    property xmlspace: WideString dispid 1018;
    property externalResourcesRequired: ISVGAnimatedBoolean readonly dispid 1020;
    property _className: ISVGAnimatedString readonly dispid 1001;
    property viewBox: ISVGAnimatedRect readonly dispid 1022;
    property preserveAspectRatio: ISVGAnimatedPreserveAspectRatio dispid 1024;
  end;

// *********************************************************************//
// Interface: ISVGDefsElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104E9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGDefsElement = interface(IDispatch)
    ['{305104E9-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  ISVGDefsElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104E9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGDefsElementDisp = dispinterface
    ['{305104E9-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  DispSVGDefsElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590003-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGDefsElement = dispinterface
    ['{30590003-98B5-11CF-BB82-00AA00BDCE0B}']
    property xmlbase: WideString dispid 1032;
    property ownerSVGElement: ISVGSVGElement dispid 1033;
    property viewportElement: ISVGElement dispid 1034;
    property focusable: ISVGAnimatedEnumeration dispid 1036;
    property requiredFeatures: ISVGStringList readonly dispid 1011;
    property requiredExtensions: ISVGStringList readonly dispid 1013;
    property systemLanguage: ISVGStringList readonly dispid 1015;
    function hasExtension(const extension: WideString): WordBool; dispid 1016;
    property xmllang: WideString dispid 1017;
    property xmlspace: WideString dispid 1018;
    property externalResourcesRequired: ISVGAnimatedBoolean readonly dispid 1020;
    property _className: ISVGAnimatedString readonly dispid 1001;
    property transform: ISVGAnimatedTransformList readonly dispid 1009;
    property nearestViewportElement: ISVGElement readonly dispid 1002;
    property farthestViewportElement: ISVGElement readonly dispid 1003;
    function getBBox: ISVGRect; dispid 1004;
    function getCTM: ISVGMatrix; dispid 1005;
    function getScreenCTM: ISVGMatrix; dispid 1006;
    function getTransformToElement(const pElement: ISVGElement): ISVGMatrix; dispid 1007;
  end;

// *********************************************************************//
// Interface: ISVGAnimatedPathData
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510511-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGAnimatedPathData = interface(IDispatch)
    ['{30510511-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure _Set_pathSegList(const p: ISVGPathSegList); safecall;
    function Get_pathSegList: ISVGPathSegList; safecall;
    procedure _Set_normalizedPathSegList(const p: ISVGPathSegList); safecall;
    function Get_normalizedPathSegList: ISVGPathSegList; safecall;
    procedure _Set_animatedPathSegList(const p: ISVGPathSegList); safecall;
    function Get_animatedPathSegList: ISVGPathSegList; safecall;
    procedure _Set_animatedNormalizedPathSegList(const p: ISVGPathSegList); safecall;
    function Get_animatedNormalizedPathSegList: ISVGPathSegList; safecall;
    property pathSegList: ISVGPathSegList read Get_pathSegList write _Set_pathSegList;
    property normalizedPathSegList: ISVGPathSegList read Get_normalizedPathSegList write _Set_normalizedPathSegList;
    property animatedPathSegList: ISVGPathSegList read Get_animatedPathSegList write _Set_animatedPathSegList;
    property animatedNormalizedPathSegList: ISVGPathSegList read Get_animatedNormalizedPathSegList write _Set_animatedNormalizedPathSegList;
  end;

// *********************************************************************//
// DispIntf:  ISVGAnimatedPathDataDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510511-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGAnimatedPathDataDisp = dispinterface
    ['{30510511-98B5-11CF-BB82-00AA00BDCE0B}']
    property pathSegList: ISVGPathSegList dispid 1052;
    property normalizedPathSegList: ISVGPathSegList dispid 1076;
    property animatedPathSegList: ISVGPathSegList dispid 1077;
    property animatedNormalizedPathSegList: ISVGPathSegList dispid 1078;
  end;

// *********************************************************************//
// Interface: ISVGPathElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510512-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathElement = interface(IDispatch)
    ['{30510512-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure _Set_pathLength(const p: ISVGAnimatedNumber); safecall;
    function Get_pathLength: ISVGAnimatedNumber; safecall;
    function getTotalLength: Single; safecall;
    function getPointAtLength(fltdistance: Single): ISVGPoint; safecall;
    function getPathSegAtLength(fltdistance: Single): Integer; safecall;
    function createSVGPathSegClosePath: ISVGPathSegClosePath; safecall;
    function createSVGPathSegMovetoAbs(x: Single; y: Single): ISVGPathSegMovetoAbs; safecall;
    function createSVGPathSegMovetoRel(x: Single; y: Single): ISVGPathSegMovetoRel; safecall;
    function createSVGPathSegLinetoAbs(x: Single; y: Single): ISVGPathSegLinetoAbs; safecall;
    function createSVGPathSegLinetoRel(x: Single; y: Single): ISVGPathSegLinetoRel; safecall;
    function createSVGPathSegCurvetoCubicAbs(x: Single; y: Single; x1: Single; y1: Single; 
                                             x2: Single; y2: Single): ISVGPathSegCurvetoCubicAbs; safecall;
    function createSVGPathSegCurvetoCubicRel(x: Single; y: Single; x1: Single; y1: Single; 
                                             x2: Single; y2: Single): ISVGPathSegCurvetoCubicRel; safecall;
    function createSVGPathSegCurvetoQuadraticAbs(x: Single; y: Single; x1: Single; y1: Single): ISVGPathSegCurvetoQuadraticAbs; safecall;
    function createSVGPathSegCurvetoQuadraticRel(x: Single; y: Single; x1: Single; y1: Single): ISVGPathSegCurvetoQuadraticRel; safecall;
    function createSVGPathSegArcAbs(x: Single; y: Single; r1: Single; r2: Single; angle: Single; 
                                    largeArcFlag: WordBool; sweepFlag: WordBool): ISVGPathSegArcAbs; safecall;
    function createSVGPathSegArcRel(x: Single; y: Single; r1: Single; r2: Single; angle: Single; 
                                    largeArcFlag: WordBool; sweepFlag: WordBool): ISVGPathSegArcRel; safecall;
    function createSVGPathSegLinetoHorizontalAbs(x: Single): ISVGPathSegLinetoHorizontalAbs; safecall;
    function createSVGPathSegLinetoHorizontalRel(x: Single): ISVGPathSegLinetoHorizontalRel; safecall;
    function createSVGPathSegLinetoVerticalAbs(y: Single): ISVGPathSegLinetoVerticalAbs; safecall;
    function createSVGPathSegLinetoVerticalRel(y: Single): ISVGPathSegLinetoVerticalRel; safecall;
    function createSVGPathSegCurvetoCubicSmoothAbs(x: Single; y: Single; x2: Single; y2: Single): ISVGPathSegCurvetoCubicSmoothAbs; safecall;
    function createSVGPathSegCurvetoCubicSmoothRel(x: Single; y: Single; x2: Single; y2: Single): ISVGPathSegCurvetoCubicSmoothRel; safecall;
    function createSVGPathSegCurvetoQuadraticSmoothAbs(x: Single; y: Single): ISVGPathSegCurvetoQuadraticSmoothAbs; safecall;
    function createSVGPathSegCurvetoQuadraticSmoothRel(x: Single; y: Single): ISVGPathSegCurvetoQuadraticSmoothRel; safecall;
    property pathLength: ISVGAnimatedNumber read Get_pathLength write _Set_pathLength;
  end;

// *********************************************************************//
// DispIntf:  ISVGPathElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510512-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGPathElementDisp = dispinterface
    ['{30510512-98B5-11CF-BB82-00AA00BDCE0B}']
    property pathLength: ISVGAnimatedNumber dispid 1053;
    function getTotalLength: Single; dispid 1073;
    function getPointAtLength(fltdistance: Single): ISVGPoint; dispid 1074;
    function getPathSegAtLength(fltdistance: Single): Integer; dispid 1075;
    function createSVGPathSegClosePath: ISVGPathSegClosePath; dispid 1054;
    function createSVGPathSegMovetoAbs(x: Single; y: Single): ISVGPathSegMovetoAbs; dispid 1055;
    function createSVGPathSegMovetoRel(x: Single; y: Single): ISVGPathSegMovetoRel; dispid 1056;
    function createSVGPathSegLinetoAbs(x: Single; y: Single): ISVGPathSegLinetoAbs; dispid 1057;
    function createSVGPathSegLinetoRel(x: Single; y: Single): ISVGPathSegLinetoRel; dispid 1058;
    function createSVGPathSegCurvetoCubicAbs(x: Single; y: Single; x1: Single; y1: Single; 
                                             x2: Single; y2: Single): ISVGPathSegCurvetoCubicAbs; dispid 1059;
    function createSVGPathSegCurvetoCubicRel(x: Single; y: Single; x1: Single; y1: Single; 
                                             x2: Single; y2: Single): ISVGPathSegCurvetoCubicRel; dispid 1060;
    function createSVGPathSegCurvetoQuadraticAbs(x: Single; y: Single; x1: Single; y1: Single): ISVGPathSegCurvetoQuadraticAbs; dispid 1061;
    function createSVGPathSegCurvetoQuadraticRel(x: Single; y: Single; x1: Single; y1: Single): ISVGPathSegCurvetoQuadraticRel; dispid 1062;
    function createSVGPathSegArcAbs(x: Single; y: Single; r1: Single; r2: Single; angle: Single; 
                                    largeArcFlag: WordBool; sweepFlag: WordBool): ISVGPathSegArcAbs; dispid 1063;
    function createSVGPathSegArcRel(x: Single; y: Single; r1: Single; r2: Single; angle: Single; 
                                    largeArcFlag: WordBool; sweepFlag: WordBool): ISVGPathSegArcRel; dispid 1064;
    function createSVGPathSegLinetoHorizontalAbs(x: Single): ISVGPathSegLinetoHorizontalAbs; dispid 1065;
    function createSVGPathSegLinetoHorizontalRel(x: Single): ISVGPathSegLinetoHorizontalRel; dispid 1066;
    function createSVGPathSegLinetoVerticalAbs(y: Single): ISVGPathSegLinetoVerticalAbs; dispid 1067;
    function createSVGPathSegLinetoVerticalRel(y: Single): ISVGPathSegLinetoVerticalRel; dispid 1068;
    function createSVGPathSegCurvetoCubicSmoothAbs(x: Single; y: Single; x2: Single; y2: Single): ISVGPathSegCurvetoCubicSmoothAbs; dispid 1069;
    function createSVGPathSegCurvetoCubicSmoothRel(x: Single; y: Single; x2: Single; y2: Single): ISVGPathSegCurvetoCubicSmoothRel; dispid 1070;
    function createSVGPathSegCurvetoQuadraticSmoothAbs(x: Single; y: Single): ISVGPathSegCurvetoQuadraticSmoothAbs; dispid 1071;
    function createSVGPathSegCurvetoQuadraticSmoothRel(x: Single; y: Single): ISVGPathSegCurvetoQuadraticSmoothRel; dispid 1072;
  end;

// *********************************************************************//
// DispIntf:  DispSVGPathElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590011-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGPathElement = dispinterface
    ['{30590011-98B5-11CF-BB82-00AA00BDCE0B}']
    property pathSegList: ISVGPathSegList dispid 1052;
    property normalizedPathSegList: ISVGPathSegList dispid 1076;
    property animatedPathSegList: ISVGPathSegList dispid 1077;
    property animatedNormalizedPathSegList: ISVGPathSegList dispid 1078;
    property transform: ISVGAnimatedTransformList readonly dispid 1009;
    property nearestViewportElement: ISVGElement readonly dispid 1002;
    property farthestViewportElement: ISVGElement readonly dispid 1003;
    function getBBox: ISVGRect; dispid 1004;
    function getCTM: ISVGMatrix; dispid 1005;
    function getScreenCTM: ISVGMatrix; dispid 1006;
    function getTransformToElement(const pElement: ISVGElement): ISVGMatrix; dispid 1007;
    property pathLength: ISVGAnimatedNumber dispid 1053;
    function getTotalLength: Single; dispid 1073;
    function getPointAtLength(fltdistance: Single): ISVGPoint; dispid 1074;
    function getPathSegAtLength(fltdistance: Single): Integer; dispid 1075;
    function createSVGPathSegClosePath: ISVGPathSegClosePath; dispid 1054;
    function createSVGPathSegMovetoAbs(x: Single; y: Single): ISVGPathSegMovetoAbs; dispid 1055;
    function createSVGPathSegMovetoRel(x: Single; y: Single): ISVGPathSegMovetoRel; dispid 1056;
    function createSVGPathSegLinetoAbs(x: Single; y: Single): ISVGPathSegLinetoAbs; dispid 1057;
    function createSVGPathSegLinetoRel(x: Single; y: Single): ISVGPathSegLinetoRel; dispid 1058;
    function createSVGPathSegCurvetoCubicAbs(x: Single; y: Single; x1: Single; y1: Single; 
                                             x2: Single; y2: Single): ISVGPathSegCurvetoCubicAbs; dispid 1059;
    function createSVGPathSegCurvetoCubicRel(x: Single; y: Single; x1: Single; y1: Single; 
                                             x2: Single; y2: Single): ISVGPathSegCurvetoCubicRel; dispid 1060;
    function createSVGPathSegCurvetoQuadraticAbs(x: Single; y: Single; x1: Single; y1: Single): ISVGPathSegCurvetoQuadraticAbs; dispid 1061;
    function createSVGPathSegCurvetoQuadraticRel(x: Single; y: Single; x1: Single; y1: Single): ISVGPathSegCurvetoQuadraticRel; dispid 1062;
    function createSVGPathSegArcAbs(x: Single; y: Single; r1: Single; r2: Single; angle: Single; 
                                    largeArcFlag: WordBool; sweepFlag: WordBool): ISVGPathSegArcAbs; dispid 1063;
    function createSVGPathSegArcRel(x: Single; y: Single; r1: Single; r2: Single; angle: Single; 
                                    largeArcFlag: WordBool; sweepFlag: WordBool): ISVGPathSegArcRel; dispid 1064;
    function createSVGPathSegLinetoHorizontalAbs(x: Single): ISVGPathSegLinetoHorizontalAbs; dispid 1065;
    function createSVGPathSegLinetoHorizontalRel(x: Single): ISVGPathSegLinetoHorizontalRel; dispid 1066;
    function createSVGPathSegLinetoVerticalAbs(y: Single): ISVGPathSegLinetoVerticalAbs; dispid 1067;
    function createSVGPathSegLinetoVerticalRel(y: Single): ISVGPathSegLinetoVerticalRel; dispid 1068;
    function createSVGPathSegCurvetoCubicSmoothAbs(x: Single; y: Single; x2: Single; y2: Single): ISVGPathSegCurvetoCubicSmoothAbs; dispid 1069;
    function createSVGPathSegCurvetoCubicSmoothRel(x: Single; y: Single; x2: Single; y2: Single): ISVGPathSegCurvetoCubicSmoothRel; dispid 1070;
    function createSVGPathSegCurvetoQuadraticSmoothAbs(x: Single; y: Single): ISVGPathSegCurvetoQuadraticSmoothAbs; dispid 1071;
    function createSVGPathSegCurvetoQuadraticSmoothRel(x: Single; y: Single): ISVGPathSegCurvetoQuadraticSmoothRel; dispid 1072;
    property xmlbase: WideString dispid 1032;
    property ownerSVGElement: ISVGSVGElement dispid 1033;
    property viewportElement: ISVGElement dispid 1034;
    property focusable: ISVGAnimatedEnumeration dispid 1036;
    property requiredFeatures: ISVGStringList readonly dispid 1011;
    property requiredExtensions: ISVGStringList readonly dispid 1013;
    property systemLanguage: ISVGStringList readonly dispid 1015;
    function hasExtension(const extension: WideString): WordBool; dispid 1016;
  end;

// *********************************************************************//
// Interface: ISVGTextElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051051C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGTextElement = interface(IDispatch)
    ['{3051051C-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  ISVGTextElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051051C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGTextElementDisp = dispinterface
    ['{3051051C-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  DispSVGTextElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590037-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGTextElement = dispinterface
    ['{30590037-98B5-11CF-BB82-00AA00BDCE0B}']
    property x: ISVGAnimatedLengthList dispid 1071;
    property y: ISVGAnimatedLengthList dispid 1073;
    property dx: ISVGAnimatedLengthList dispid 1075;
    property dy: ISVGAnimatedLengthList dispid 1077;
    property rotate: ISVGAnimatedNumberList dispid 1079;
    property textLength: ISVGAnimatedLength dispid 1053;
    property lengthAdjust: ISVGAnimatedEnumeration dispid 1051;
    function getNumberOfChars: Integer; dispid 1054;
    function getComputedTextLength: Single; dispid 1055;
    function getSubStringLength(charnum: Integer; nchars: Integer): Single; dispid 1056;
    function getStartPositionOfChar(charnum: Integer): ISVGPoint; dispid 1057;
    function getEndPositionOfChar(charnum: Integer): ISVGPoint; dispid 1058;
    function getExtentOfChar(charnum: Integer): ISVGRect; dispid 1059;
    function getRotationOfChar(charnum: Integer): Single; dispid 1060;
    function getCharNumAtPosition(const point: ISVGPoint): Integer; dispid 1061;
    procedure selectSubString(charnum: Integer; nchars: Integer); dispid 1062;
    property xmlbase: WideString dispid 1032;
    property ownerSVGElement: ISVGSVGElement dispid 1033;
    property viewportElement: ISVGElement dispid 1034;
    property focusable: ISVGAnimatedEnumeration dispid 1036;
    property requiredFeatures: ISVGStringList readonly dispid 1011;
    property requiredExtensions: ISVGStringList readonly dispid 1013;
    property systemLanguage: ISVGStringList readonly dispid 1015;
    function hasExtension(const extension: WideString): WordBool; dispid 1016;
    property xmllang: WideString dispid 1017;
    property xmlspace: WideString dispid 1018;
    property externalResourcesRequired: ISVGAnimatedBoolean readonly dispid 1020;
    property _className: ISVGAnimatedString readonly dispid 1001;
    property transform: ISVGAnimatedTransformList readonly dispid 1009;
    property nearestViewportElement: ISVGElement readonly dispid 1002;
    property farthestViewportElement: ISVGElement readonly dispid 1003;
    function getBBox: ISVGRect; dispid 1004;
    function getCTM: ISVGMatrix; dispid 1005;
    function getScreenCTM: ISVGMatrix; dispid 1006;
    function getTransformToElement(const pElement: ISVGElement): ISVGMatrix; dispid 1007;
  end;

// *********************************************************************//
// Interface: ISVGTextPositioningElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051051B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGTextPositioningElement = interface(IDispatch)
    ['{3051051B-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure _Set_x(const p: ISVGAnimatedLengthList); safecall;
    function Get_x: ISVGAnimatedLengthList; safecall;
    procedure _Set_y(const p: ISVGAnimatedLengthList); safecall;
    function Get_y: ISVGAnimatedLengthList; safecall;
    procedure _Set_dx(const p: ISVGAnimatedLengthList); safecall;
    function Get_dx: ISVGAnimatedLengthList; safecall;
    procedure _Set_dy(const p: ISVGAnimatedLengthList); safecall;
    function Get_dy: ISVGAnimatedLengthList; safecall;
    procedure _Set_rotate(const p: ISVGAnimatedNumberList); safecall;
    function Get_rotate: ISVGAnimatedNumberList; safecall;
    property x: ISVGAnimatedLengthList read Get_x write _Set_x;
    property y: ISVGAnimatedLengthList read Get_y write _Set_y;
    property dx: ISVGAnimatedLengthList read Get_dx write _Set_dx;
    property dy: ISVGAnimatedLengthList read Get_dy write _Set_dy;
    property rotate: ISVGAnimatedNumberList read Get_rotate write _Set_rotate;
  end;

// *********************************************************************//
// DispIntf:  ISVGTextPositioningElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051051B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGTextPositioningElementDisp = dispinterface
    ['{3051051B-98B5-11CF-BB82-00AA00BDCE0B}']
    property x: ISVGAnimatedLengthList dispid 1071;
    property y: ISVGAnimatedLengthList dispid 1073;
    property dx: ISVGAnimatedLengthList dispid 1075;
    property dy: ISVGAnimatedLengthList dispid 1077;
    property rotate: ISVGAnimatedNumberList dispid 1079;
  end;

// *********************************************************************//
// Interface: ISVGTextContentElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051051A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGTextContentElement = interface(IDispatch)
    ['{3051051A-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure _Set_textLength(const p: ISVGAnimatedLength); safecall;
    function Get_textLength: ISVGAnimatedLength; safecall;
    procedure _Set_lengthAdjust(const p: ISVGAnimatedEnumeration); safecall;
    function Get_lengthAdjust: ISVGAnimatedEnumeration; safecall;
    function getNumberOfChars: Integer; safecall;
    function getComputedTextLength: Single; safecall;
    function getSubStringLength(charnum: Integer; nchars: Integer): Single; safecall;
    function getStartPositionOfChar(charnum: Integer): ISVGPoint; safecall;
    function getEndPositionOfChar(charnum: Integer): ISVGPoint; safecall;
    function getExtentOfChar(charnum: Integer): ISVGRect; safecall;
    function getRotationOfChar(charnum: Integer): Single; safecall;
    function getCharNumAtPosition(const point: ISVGPoint): Integer; safecall;
    procedure selectSubString(charnum: Integer; nchars: Integer); safecall;
    property textLength: ISVGAnimatedLength read Get_textLength write _Set_textLength;
    property lengthAdjust: ISVGAnimatedEnumeration read Get_lengthAdjust write _Set_lengthAdjust;
  end;

// *********************************************************************//
// DispIntf:  ISVGTextContentElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051051A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGTextContentElementDisp = dispinterface
    ['{3051051A-98B5-11CF-BB82-00AA00BDCE0B}']
    property textLength: ISVGAnimatedLength dispid 1053;
    property lengthAdjust: ISVGAnimatedEnumeration dispid 1051;
    function getNumberOfChars: Integer; dispid 1054;
    function getComputedTextLength: Single; dispid 1055;
    function getSubStringLength(charnum: Integer; nchars: Integer): Single; dispid 1056;
    function getStartPositionOfChar(charnum: Integer): ISVGPoint; dispid 1057;
    function getEndPositionOfChar(charnum: Integer): ISVGPoint; dispid 1058;
    function getExtentOfChar(charnum: Integer): ISVGRect; dispid 1059;
    function getRotationOfChar(charnum: Integer): Single; dispid 1060;
    function getCharNumAtPosition(const point: ISVGPoint): Integer; dispid 1061;
    procedure selectSubString(charnum: Integer; nchars: Integer); dispid 1062;
  end;

// *********************************************************************//
// Interface: ISVGImageElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104F0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGImageElement = interface(IDispatch)
    ['{305104F0-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure _Set_x(const p: ISVGAnimatedLength); safecall;
    function Get_x: ISVGAnimatedLength; safecall;
    procedure _Set_y(const p: ISVGAnimatedLength); safecall;
    function Get_y: ISVGAnimatedLength; safecall;
    procedure _Set_width(const p: ISVGAnimatedLength); safecall;
    function Get_width: ISVGAnimatedLength; safecall;
    procedure _Set_height(const p: ISVGAnimatedLength); safecall;
    function Get_height: ISVGAnimatedLength; safecall;
    property x: ISVGAnimatedLength read Get_x write _Set_x;
    property y: ISVGAnimatedLength read Get_y write _Set_y;
    property width: ISVGAnimatedLength read Get_width write _Set_width;
    property height: ISVGAnimatedLength read Get_height write _Set_height;
  end;

// *********************************************************************//
// DispIntf:  ISVGImageElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104F0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGImageElementDisp = dispinterface
    ['{305104F0-98B5-11CF-BB82-00AA00BDCE0B}']
    property x: ISVGAnimatedLength dispid 1051;
    property y: ISVGAnimatedLength dispid 1053;
    property width: ISVGAnimatedLength dispid 1055;
    property height: ISVGAnimatedLength dispid 1057;
  end;

// *********************************************************************//
// DispIntf:  DispSVGImageElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590027-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGImageElement = dispinterface
    ['{30590027-98B5-11CF-BB82-00AA00BDCE0B}']
    property xmlbase: WideString dispid 1032;
    property ownerSVGElement: ISVGSVGElement dispid 1033;
    property viewportElement: ISVGElement dispid 1034;
    property focusable: ISVGAnimatedEnumeration dispid 1036;
    property transform: ISVGAnimatedTransformList readonly dispid 1009;
    property nearestViewportElement: ISVGElement readonly dispid 1002;
    property farthestViewportElement: ISVGElement readonly dispid 1003;
    function getBBox: ISVGRect; dispid 1004;
    function getCTM: ISVGMatrix; dispid 1005;
    function getScreenCTM: ISVGMatrix; dispid 1006;
    function getTransformToElement(const pElement: ISVGElement): ISVGMatrix; dispid 1007;
    property viewBox: ISVGAnimatedRect readonly dispid 1022;
    property preserveAspectRatio: ISVGAnimatedPreserveAspectRatio dispid 1024;
    property x: ISVGAnimatedLength dispid 1051;
    property y: ISVGAnimatedLength dispid 1053;
    property width: ISVGAnimatedLength dispid 1055;
    property height: ISVGAnimatedLength dispid 1057;
    property href: ISVGAnimatedString readonly dispid 1026;
    property requiredFeatures: ISVGStringList readonly dispid 1011;
    property requiredExtensions: ISVGStringList readonly dispid 1013;
    property systemLanguage: ISVGStringList readonly dispid 1015;
    function hasExtension(const extension: WideString): WordBool; dispid 1016;
  end;

// *********************************************************************//
// Interface: ISVGStopElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051052B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGStopElement = interface(IDispatch)
    ['{3051052B-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure _Set_offset(const p: ISVGAnimatedNumber); safecall;
    function Get_offset: ISVGAnimatedNumber; safecall;
    property offset: ISVGAnimatedNumber read Get_offset write _Set_offset;
  end;

// *********************************************************************//
// DispIntf:  ISVGStopElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051052B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGStopElementDisp = dispinterface
    ['{3051052B-98B5-11CF-BB82-00AA00BDCE0B}']
    property offset: ISVGAnimatedNumber dispid 1051;
  end;

// *********************************************************************//
// DispIntf:  DispSVGStopElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059002D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGStopElement = dispinterface
    ['{3059002D-98B5-11CF-BB82-00AA00BDCE0B}']
    property offset: ISVGAnimatedNumber dispid 1051;
    property xmlbase: WideString dispid 1032;
    property ownerSVGElement: ISVGSVGElement dispid 1033;
    property viewportElement: ISVGElement dispid 1034;
    property focusable: ISVGAnimatedEnumeration dispid 1036;
    property _className: ISVGAnimatedString readonly dispid 1001;
  end;

// *********************************************************************//
// Interface: ISVGGradientElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510528-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGGradientElement = interface(IDispatch)
    ['{30510528-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure _Set_gradientUnits(const p: ISVGAnimatedEnumeration); safecall;
    function Get_gradientUnits: ISVGAnimatedEnumeration; safecall;
    procedure _Set_gradientTransform(const p: ISVGAnimatedTransformList); safecall;
    function Get_gradientTransform: ISVGAnimatedTransformList; safecall;
    procedure _Set_spreadMethod(const p: ISVGAnimatedEnumeration); safecall;
    function Get_spreadMethod: ISVGAnimatedEnumeration; safecall;
    property gradientUnits: ISVGAnimatedEnumeration read Get_gradientUnits write _Set_gradientUnits;
    property gradientTransform: ISVGAnimatedTransformList read Get_gradientTransform write _Set_gradientTransform;
    property spreadMethod: ISVGAnimatedEnumeration read Get_spreadMethod write _Set_spreadMethod;
  end;

// *********************************************************************//
// DispIntf:  ISVGGradientElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510528-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGGradientElementDisp = dispinterface
    ['{30510528-98B5-11CF-BB82-00AA00BDCE0B}']
    property gradientUnits: ISVGAnimatedEnumeration dispid 1051;
    property gradientTransform: ISVGAnimatedTransformList dispid 1053;
    property spreadMethod: ISVGAnimatedEnumeration dispid 1055;
  end;

// *********************************************************************//
// DispIntf:  DispSVGGradientElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059002E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGGradientElement = dispinterface
    ['{3059002E-98B5-11CF-BB82-00AA00BDCE0B}']
    property xmlbase: WideString dispid 1032;
    property ownerSVGElement: ISVGSVGElement dispid 1033;
    property viewportElement: ISVGElement dispid 1034;
    property focusable: ISVGAnimatedEnumeration dispid 1036;
    property gradientUnits: ISVGAnimatedEnumeration dispid 1051;
    property gradientTransform: ISVGAnimatedTransformList dispid 1053;
    property spreadMethod: ISVGAnimatedEnumeration dispid 1055;
    property href: ISVGAnimatedString readonly dispid 1026;
    property externalResourcesRequired: ISVGAnimatedBoolean readonly dispid 1020;
    property _className: ISVGAnimatedString readonly dispid 1001;
  end;

// *********************************************************************//
// Interface: ISVGLinearGradientElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510529-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGLinearGradientElement = interface(IDispatch)
    ['{30510529-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure _Set_x1(const p: ISVGAnimatedLength); safecall;
    function Get_x1: ISVGAnimatedLength; safecall;
    procedure _Set_y1(const p: ISVGAnimatedLength); safecall;
    function Get_y1: ISVGAnimatedLength; safecall;
    procedure _Set_x2(const p: ISVGAnimatedLength); safecall;
    function Get_x2: ISVGAnimatedLength; safecall;
    procedure _Set_y2(const p: ISVGAnimatedLength); safecall;
    function Get_y2: ISVGAnimatedLength; safecall;
    property x1: ISVGAnimatedLength read Get_x1 write _Set_x1;
    property y1: ISVGAnimatedLength read Get_y1 write _Set_y1;
    property x2: ISVGAnimatedLength read Get_x2 write _Set_x2;
    property y2: ISVGAnimatedLength read Get_y2 write _Set_y2;
  end;

// *********************************************************************//
// DispIntf:  ISVGLinearGradientElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510529-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGLinearGradientElementDisp = dispinterface
    ['{30510529-98B5-11CF-BB82-00AA00BDCE0B}']
    property x1: ISVGAnimatedLength dispid 1071;
    property y1: ISVGAnimatedLength dispid 1073;
    property x2: ISVGAnimatedLength dispid 1075;
    property y2: ISVGAnimatedLength dispid 1077;
  end;

// *********************************************************************//
// DispIntf:  DispSVGLinearGradientElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059002A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGLinearGradientElement = dispinterface
    ['{3059002A-98B5-11CF-BB82-00AA00BDCE0B}']
    property gradientUnits: ISVGAnimatedEnumeration dispid 1051;
    property gradientTransform: ISVGAnimatedTransformList dispid 1053;
    property spreadMethod: ISVGAnimatedEnumeration dispid 1055;
    property x1: ISVGAnimatedLength dispid 1071;
    property y1: ISVGAnimatedLength dispid 1073;
    property x2: ISVGAnimatedLength dispid 1075;
    property y2: ISVGAnimatedLength dispid 1077;
    property xmlbase: WideString dispid 1032;
    property ownerSVGElement: ISVGSVGElement dispid 1033;
    property viewportElement: ISVGElement dispid 1034;
    property focusable: ISVGAnimatedEnumeration dispid 1036;
    property href: ISVGAnimatedString readonly dispid 1026;
    property externalResourcesRequired: ISVGAnimatedBoolean readonly dispid 1020;
    property _className: ISVGAnimatedString readonly dispid 1001;
  end;

// *********************************************************************//
// Interface: ISVGRadialGradientElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051052A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGRadialGradientElement = interface(IDispatch)
    ['{3051052A-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure _Set_cx(const p: ISVGAnimatedLength); safecall;
    function Get_cx: ISVGAnimatedLength; safecall;
    procedure _Set_cy(const p: ISVGAnimatedLength); safecall;
    function Get_cy: ISVGAnimatedLength; safecall;
    procedure _Set_r(const p: ISVGAnimatedLength); safecall;
    function Get_r: ISVGAnimatedLength; safecall;
    procedure _Set_fx(const p: ISVGAnimatedLength); safecall;
    function Get_fx: ISVGAnimatedLength; safecall;
    procedure _Set_fy(const p: ISVGAnimatedLength); safecall;
    function Get_fy: ISVGAnimatedLength; safecall;
    property cx: ISVGAnimatedLength read Get_cx write _Set_cx;
    property cy: ISVGAnimatedLength read Get_cy write _Set_cy;
    property r: ISVGAnimatedLength read Get_r write _Set_r;
    property fx: ISVGAnimatedLength read Get_fx write _Set_fx;
    property fy: ISVGAnimatedLength read Get_fy write _Set_fy;
  end;

// *********************************************************************//
// DispIntf:  ISVGRadialGradientElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051052A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGRadialGradientElementDisp = dispinterface
    ['{3051052A-98B5-11CF-BB82-00AA00BDCE0B}']
    property cx: ISVGAnimatedLength dispid 1071;
    property cy: ISVGAnimatedLength dispid 1073;
    property r: ISVGAnimatedLength dispid 1075;
    property fx: ISVGAnimatedLength dispid 1077;
    property fy: ISVGAnimatedLength dispid 1079;
  end;

// *********************************************************************//
// DispIntf:  DispSVGRadialGradientElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059002B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGRadialGradientElement = dispinterface
    ['{3059002B-98B5-11CF-BB82-00AA00BDCE0B}']
    property gradientUnits: ISVGAnimatedEnumeration dispid 1051;
    property gradientTransform: ISVGAnimatedTransformList dispid 1053;
    property spreadMethod: ISVGAnimatedEnumeration dispid 1055;
    property cx: ISVGAnimatedLength dispid 1071;
    property cy: ISVGAnimatedLength dispid 1073;
    property r: ISVGAnimatedLength dispid 1075;
    property fx: ISVGAnimatedLength dispid 1077;
    property fy: ISVGAnimatedLength dispid 1079;
    property xmlbase: WideString dispid 1032;
    property ownerSVGElement: ISVGSVGElement dispid 1033;
    property viewportElement: ISVGElement dispid 1034;
    property focusable: ISVGAnimatedEnumeration dispid 1036;
    property href: ISVGAnimatedString readonly dispid 1026;
    property externalResourcesRequired: ISVGAnimatedBoolean readonly dispid 1020;
    property _className: ISVGAnimatedString readonly dispid 1001;
  end;

// *********************************************************************//
// Interface: ISVGMaskElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051052E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGMaskElement = interface(IDispatch)
    ['{3051052E-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure _Set_maskUnits(const p: ISVGAnimatedEnumeration); safecall;
    function Get_maskUnits: ISVGAnimatedEnumeration; safecall;
    procedure _Set_maskContentUnits(const p: ISVGAnimatedEnumeration); safecall;
    function Get_maskContentUnits: ISVGAnimatedEnumeration; safecall;
    procedure _Set_x(const p: ISVGAnimatedLength); safecall;
    function Get_x: ISVGAnimatedLength; safecall;
    procedure _Set_y(const p: ISVGAnimatedLength); safecall;
    function Get_y: ISVGAnimatedLength; safecall;
    procedure _Set_width(const p: ISVGAnimatedLength); safecall;
    function Get_width: ISVGAnimatedLength; safecall;
    procedure _Set_height(const p: ISVGAnimatedLength); safecall;
    function Get_height: ISVGAnimatedLength; safecall;
    property maskUnits: ISVGAnimatedEnumeration read Get_maskUnits write _Set_maskUnits;
    property maskContentUnits: ISVGAnimatedEnumeration read Get_maskContentUnits write _Set_maskContentUnits;
    property x: ISVGAnimatedLength read Get_x write _Set_x;
    property y: ISVGAnimatedLength read Get_y write _Set_y;
    property width: ISVGAnimatedLength read Get_width write _Set_width;
    property height: ISVGAnimatedLength read Get_height write _Set_height;
  end;

// *********************************************************************//
// DispIntf:  ISVGMaskElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051052E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGMaskElementDisp = dispinterface
    ['{3051052E-98B5-11CF-BB82-00AA00BDCE0B}']
    property maskUnits: ISVGAnimatedEnumeration dispid 1051;
    property maskContentUnits: ISVGAnimatedEnumeration dispid 1053;
    property x: ISVGAnimatedLength dispid 1055;
    property y: ISVGAnimatedLength dispid 1057;
    property width: ISVGAnimatedLength dispid 1059;
    property height: ISVGAnimatedLength dispid 1061;
  end;

// *********************************************************************//
// DispIntf:  DispSVGMaskElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059003C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGMaskElement = dispinterface
    ['{3059003C-98B5-11CF-BB82-00AA00BDCE0B}']
    property maskUnits: ISVGAnimatedEnumeration dispid 1051;
    property maskContentUnits: ISVGAnimatedEnumeration dispid 1053;
    property x: ISVGAnimatedLength dispid 1055;
    property y: ISVGAnimatedLength dispid 1057;
    property width: ISVGAnimatedLength dispid 1059;
    property height: ISVGAnimatedLength dispid 1061;
    property xmlbase: WideString dispid 1032;
    property ownerSVGElement: ISVGSVGElement dispid 1033;
    property viewportElement: ISVGElement dispid 1034;
    property focusable: ISVGAnimatedEnumeration dispid 1036;
    property requiredFeatures: ISVGStringList readonly dispid 1011;
    property requiredExtensions: ISVGStringList readonly dispid 1013;
    property systemLanguage: ISVGStringList readonly dispid 1015;
    function hasExtension(const extension: WideString): WordBool; dispid 1016;
    property xmllang: WideString dispid 1017;
    property xmlspace: WideString dispid 1018;
    property externalResourcesRequired: ISVGAnimatedBoolean readonly dispid 1020;
    property _className: ISVGAnimatedString readonly dispid 1001;
  end;

// *********************************************************************//
// Interface: ISVGMarkerElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510525-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGMarkerElement = interface(IDispatch)
    ['{30510525-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure _Set_refX(const p: ISVGAnimatedLength); safecall;
    function Get_refX: ISVGAnimatedLength; safecall;
    procedure _Set_refY(const p: ISVGAnimatedLength); safecall;
    function Get_refY: ISVGAnimatedLength; safecall;
    procedure _Set_markerUnits(const p: ISVGAnimatedEnumeration); safecall;
    function Get_markerUnits: ISVGAnimatedEnumeration; safecall;
    procedure _Set_markerWidth(const p: ISVGAnimatedLength); safecall;
    function Get_markerWidth: ISVGAnimatedLength; safecall;
    procedure _Set_markerHeight(const p: ISVGAnimatedLength); safecall;
    function Get_markerHeight: ISVGAnimatedLength; safecall;
    procedure _Set_orientType(const p: ISVGAnimatedEnumeration); safecall;
    function Get_orientType: ISVGAnimatedEnumeration; safecall;
    procedure _Set_orientAngle(const p: ISVGAnimatedAngle); safecall;
    function Get_orientAngle: ISVGAnimatedAngle; safecall;
    procedure setOrientToAuto; safecall;
    procedure setOrientToAngle(const pSVGAngle: ISVGAngle); safecall;
    property refX: ISVGAnimatedLength read Get_refX write _Set_refX;
    property refY: ISVGAnimatedLength read Get_refY write _Set_refY;
    property markerUnits: ISVGAnimatedEnumeration read Get_markerUnits write _Set_markerUnits;
    property markerWidth: ISVGAnimatedLength read Get_markerWidth write _Set_markerWidth;
    property markerHeight: ISVGAnimatedLength read Get_markerHeight write _Set_markerHeight;
    property orientType: ISVGAnimatedEnumeration read Get_orientType write _Set_orientType;
    property orientAngle: ISVGAnimatedAngle read Get_orientAngle write _Set_orientAngle;
  end;

// *********************************************************************//
// DispIntf:  ISVGMarkerElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510525-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGMarkerElementDisp = dispinterface
    ['{30510525-98B5-11CF-BB82-00AA00BDCE0B}']
    property refX: ISVGAnimatedLength dispid 1051;
    property refY: ISVGAnimatedLength dispid 1053;
    property markerUnits: ISVGAnimatedEnumeration dispid 1055;
    property markerWidth: ISVGAnimatedLength dispid 1057;
    property markerHeight: ISVGAnimatedLength dispid 1059;
    property orientType: ISVGAnimatedEnumeration dispid 1061;
    property orientAngle: ISVGAnimatedAngle dispid 1062;
    procedure setOrientToAuto; dispid 1063;
    procedure setOrientToAngle(const pSVGAngle: ISVGAngle); dispid 1064;
  end;

// *********************************************************************//
// DispIntf:  DispSVGMarkerElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590036-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGMarkerElement = dispinterface
    ['{30590036-98B5-11CF-BB82-00AA00BDCE0B}']
    property refX: ISVGAnimatedLength dispid 1051;
    property refY: ISVGAnimatedLength dispid 1053;
    property markerUnits: ISVGAnimatedEnumeration dispid 1055;
    property markerWidth: ISVGAnimatedLength dispid 1057;
    property markerHeight: ISVGAnimatedLength dispid 1059;
    property orientType: ISVGAnimatedEnumeration dispid 1061;
    property orientAngle: ISVGAnimatedAngle dispid 1062;
    procedure setOrientToAuto; dispid 1063;
    procedure setOrientToAngle(const pSVGAngle: ISVGAngle); dispid 1064;
    property xmlbase: WideString dispid 1032;
    property ownerSVGElement: ISVGSVGElement dispid 1033;
    property viewportElement: ISVGElement dispid 1034;
    property focusable: ISVGAnimatedEnumeration dispid 1036;
    property xmllang: WideString dispid 1017;
    property xmlspace: WideString dispid 1018;
    property externalResourcesRequired: ISVGAnimatedBoolean readonly dispid 1020;
    property _className: ISVGAnimatedString readonly dispid 1001;
    property viewBox: ISVGAnimatedRect readonly dispid 1022;
    property preserveAspectRatio: ISVGAnimatedPreserveAspectRatio dispid 1024;
  end;

// *********************************************************************//
// Interface: ISVGZoomEvent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051054E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGZoomEvent = interface(IDispatch)
    ['{3051054E-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_zoomRectScreen: ISVGRect; safecall;
    function Get_previousScale: Single; safecall;
    function Get_previousTranslate: ISVGPoint; safecall;
    function Get_newScale: Single; safecall;
    function Get_newTranslate: ISVGPoint; safecall;
    property zoomRectScreen: ISVGRect read Get_zoomRectScreen;
    property previousScale: Single read Get_previousScale;
    property previousTranslate: ISVGPoint read Get_previousTranslate;
    property newScale: Single read Get_newScale;
    property newTranslate: ISVGPoint read Get_newTranslate;
  end;

// *********************************************************************//
// DispIntf:  ISVGZoomEventDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051054E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGZoomEventDisp = dispinterface
    ['{3051054E-98B5-11CF-BB82-00AA00BDCE0B}']
    property zoomRectScreen: ISVGRect readonly dispid 1276;
    property previousScale: Single readonly dispid 1277;
    property previousTranslate: ISVGPoint readonly dispid 1278;
    property newScale: Single readonly dispid 1279;
    property newTranslate: ISVGPoint readonly dispid 1280;
  end;

// *********************************************************************//
// DispIntf:  DispSVGZoomEvent
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590031-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGZoomEvent = dispinterface
    ['{30590031-98B5-11CF-BB82-00AA00BDCE0B}']
    property bubbles: WordBool readonly dispid 1001;
    property cancelable: WordBool readonly dispid 1002;
    property currentTarget: IEventTarget readonly dispid 1003;
    property defaultPrevented: WordBool readonly dispid 1004;
    property eventPhase: Word readonly dispid 1005;
    property target: IEventTarget readonly dispid 1006;
    property timeStamp: Largeuint readonly dispid 1007;
    property type_: WideString readonly dispid 1008;
    procedure initEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool); dispid 1009;
    procedure preventDefault; dispid 1010;
    procedure stopPropagation; dispid 1011;
    procedure stopImmediatePropagation; dispid 1012;
    property isTrusted: WordBool readonly dispid 1013;
    property cancelBubble: WordBool dispid 1014;
    property srcElement: IHTMLElement readonly dispid 1015;
    property view: IHTMLWindow2 readonly dispid 1026;
    property detail: Integer readonly dispid 1027;
    procedure initUIEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool; 
                          const view: IHTMLWindow2; detail: Integer); dispid 1028;
    property zoomRectScreen: ISVGRect readonly dispid 1276;
    property previousScale: Single readonly dispid 1277;
    property previousTranslate: ISVGPoint readonly dispid 1278;
    property newScale: Single readonly dispid 1279;
    property newTranslate: ISVGPoint readonly dispid 1280;
  end;

// *********************************************************************//
// Interface: ISVGAElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051054B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGAElement = interface(IDispatch)
    ['{3051054B-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure _Set_target(const p: ISVGAnimatedString); safecall;
    function Get_target: ISVGAnimatedString; safecall;
    property target: ISVGAnimatedString read Get_target write _Set_target;
  end;

// *********************************************************************//
// DispIntf:  ISVGAElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051054B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGAElementDisp = dispinterface
    ['{3051054B-98B5-11CF-BB82-00AA00BDCE0B}']
    property target: ISVGAnimatedString dispid 1052;
  end;

// *********************************************************************//
// DispIntf:  DispSVGAElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590033-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGAElement = dispinterface
    ['{30590033-98B5-11CF-BB82-00AA00BDCE0B}']
    property target: ISVGAnimatedString dispid 1052;
    property xmlbase: WideString dispid 1032;
    property ownerSVGElement: ISVGSVGElement dispid 1033;
    property viewportElement: ISVGElement dispid 1034;
    property focusable: ISVGAnimatedEnumeration dispid 1036;
    property href: ISVGAnimatedString readonly dispid 1026;
    property requiredFeatures: ISVGStringList readonly dispid 1011;
    property requiredExtensions: ISVGStringList readonly dispid 1013;
    property systemLanguage: ISVGStringList readonly dispid 1015;
    function hasExtension(const extension: WideString): WordBool; dispid 1016;
    property xmllang: WideString dispid 1017;
    property xmlspace: WideString dispid 1018;
    property externalResourcesRequired: ISVGAnimatedBoolean readonly dispid 1020;
    property _className: ISVGAnimatedString readonly dispid 1001;
    property transform: ISVGAnimatedTransformList readonly dispid 1009;
    property nearestViewportElement: ISVGElement readonly dispid 1002;
    property farthestViewportElement: ISVGElement readonly dispid 1003;
    function getBBox: ISVGRect; dispid 1004;
    function getCTM: ISVGMatrix; dispid 1005;
    function getScreenCTM: ISVGMatrix; dispid 1006;
    function getTransformToElement(const pElement: ISVGElement): ISVGMatrix; dispid 1007;
  end;

// *********************************************************************//
// Interface: ISVGViewElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051054C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGViewElement = interface(IDispatch)
    ['{3051054C-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure _Set_viewTarget(const p: ISVGStringList); safecall;
    function Get_viewTarget: ISVGStringList; safecall;
    property viewTarget: ISVGStringList read Get_viewTarget write _Set_viewTarget;
  end;

// *********************************************************************//
// DispIntf:  ISVGViewElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051054C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGViewElementDisp = dispinterface
    ['{3051054C-98B5-11CF-BB82-00AA00BDCE0B}']
    property viewTarget: ISVGStringList dispid 1052;
  end;

// *********************************************************************//
// DispIntf:  DispSVGViewElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590034-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGViewElement = dispinterface
    ['{30590034-98B5-11CF-BB82-00AA00BDCE0B}']
    property viewTarget: ISVGStringList dispid 1052;
    property xmlbase: WideString dispid 1032;
    property ownerSVGElement: ISVGSVGElement dispid 1033;
    property viewportElement: ISVGElement dispid 1034;
    property focusable: ISVGAnimatedEnumeration dispid 1036;
    property externalResourcesRequired: ISVGAnimatedBoolean readonly dispid 1020;
    property viewBox: ISVGAnimatedRect readonly dispid 1022;
    property preserveAspectRatio: ISVGAnimatedPreserveAspectRatio dispid 1024;
    property zoomAndPan: Smallint readonly dispid 1025;
  end;

// *********************************************************************//
// Interface: IHTMLMediaError
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510704-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMediaError = interface(IDispatch)
    ['{30510704-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_code: Smallint; safecall;
    property code: Smallint read Get_code;
  end;

// *********************************************************************//
// DispIntf:  IHTMLMediaErrorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510704-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMediaErrorDisp = dispinterface
    ['{30510704-98B5-11CF-BB82-00AA00BDCE0B}']
    property code: Smallint readonly dispid 1000;
  end;

// *********************************************************************//
// Interface: IHTMLTimeRanges
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510705-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTimeRanges = interface(IDispatch)
    ['{30510705-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    function start(index: Integer): Single; safecall;
    function end_(index: Integer): Single; safecall;
    property length: Integer read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTimeRangesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510705-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTimeRangesDisp = dispinterface
    ['{30510705-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1000;
    function start(index: Integer): Single; dispid 1001;
    function end_(index: Integer): Single; dispid 1002;
  end;

// *********************************************************************//
// Interface: IHTMLTimeRanges2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051080B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTimeRanges2 = interface(IDispatch)
    ['{3051080B-98B5-11CF-BB82-00AA00BDCE0B}']
    function startDouble(index: Integer): Double; safecall;
    function endDouble(index: Integer): Double; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLTimeRanges2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051080B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLTimeRanges2Disp = dispinterface
    ['{3051080B-98B5-11CF-BB82-00AA00BDCE0B}']
    function startDouble(index: Integer): Double; dispid 1003;
    function endDouble(index: Integer): Double; dispid 1004;
  end;

// *********************************************************************//
// Interface: IHTMLMediaElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510706-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMediaElement = interface(IDispatch)
    ['{30510706-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_error: IHTMLMediaError; safecall;
    procedure Set_src(const p: WideString); safecall;
    function Get_src: WideString; safecall;
    function Get_currentSrc: WideString; safecall;
    function Get_networkState: Word; safecall;
    procedure Set_preload(const p: WideString); safecall;
    function Get_preload: WideString; safecall;
    function Get_buffered: IHTMLTimeRanges; safecall;
    procedure load; safecall;
    function canPlayType(const type_: WideString): WideString; safecall;
    function Get_seeking: WordBool; safecall;
    procedure Set_currentTime(p: Single); safecall;
    function Get_currentTime: Single; safecall;
    function Get_initialTime: Single; safecall;
    function Get_duration: Single; safecall;
    function Get_paused: WordBool; safecall;
    procedure Set_defaultPlaybackRate(p: Single); safecall;
    function Get_defaultPlaybackRate: Single; safecall;
    procedure Set_playbackRate(p: Single); safecall;
    function Get_playbackRate: Single; safecall;
    function Get_played: IHTMLTimeRanges; safecall;
    function Get_seekable: IHTMLTimeRanges; safecall;
    function Get_ended: WordBool; safecall;
    procedure Set_autoplay(p: WordBool); safecall;
    function Get_autoplay: WordBool; safecall;
    procedure Set_loop(p: WordBool); safecall;
    function Get_loop: WordBool; safecall;
    procedure play; safecall;
    procedure pause; safecall;
    procedure Set_controls(p: WordBool); safecall;
    function Get_controls: WordBool; safecall;
    procedure Set_volume(p: Single); safecall;
    function Get_volume: Single; safecall;
    procedure Set_muted(p: WordBool); safecall;
    function Get_muted: WordBool; safecall;
    procedure Set_autobuffer(p: WordBool); safecall;
    function Get_autobuffer: WordBool; safecall;
    property error: IHTMLMediaError read Get_error;
    property src: WideString read Get_src write Set_src;
    property currentSrc: WideString read Get_currentSrc;
    property networkState: Word read Get_networkState;
    property preload: WideString read Get_preload write Set_preload;
    property buffered: IHTMLTimeRanges read Get_buffered;
    property seeking: WordBool read Get_seeking;
    property currentTime: Single read Get_currentTime write Set_currentTime;
    property initialTime: Single read Get_initialTime;
    property duration: Single read Get_duration;
    property paused: WordBool read Get_paused;
    property defaultPlaybackRate: Single read Get_defaultPlaybackRate write Set_defaultPlaybackRate;
    property playbackRate: Single read Get_playbackRate write Set_playbackRate;
    property played: IHTMLTimeRanges read Get_played;
    property seekable: IHTMLTimeRanges read Get_seekable;
    property ended: WordBool read Get_ended;
    property autoplay: WordBool read Get_autoplay write Set_autoplay;
    property loop: WordBool read Get_loop write Set_loop;
    property controls: WordBool read Get_controls write Set_controls;
    property volume: Single read Get_volume write Set_volume;
    property muted: WordBool read Get_muted write Set_muted;
    property autobuffer: WordBool read Get_autobuffer write Set_autobuffer;
  end;

// *********************************************************************//
// DispIntf:  IHTMLMediaElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510706-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMediaElementDisp = dispinterface
    ['{30510706-98B5-11CF-BB82-00AA00BDCE0B}']
    property error: IHTMLMediaError readonly dispid 1000;
    property src: WideString dispid 1001;
    property currentSrc: WideString readonly dispid 1002;
    property networkState: Word readonly dispid 1003;
    property preload: WideString dispid 1004;
    property buffered: IHTMLTimeRanges readonly dispid 1005;
    procedure load; dispid 1006;
    function canPlayType(const type_: WideString): WideString; dispid 1007;
    property seeking: WordBool readonly dispid 1009;
    property currentTime: Single dispid 1010;
    property initialTime: Single readonly dispid 1011;
    property duration: Single readonly dispid 1012;
    property paused: WordBool readonly dispid 1013;
    property defaultPlaybackRate: Single dispid 1014;
    property playbackRate: Single dispid 1015;
    property played: IHTMLTimeRanges readonly dispid 1016;
    property seekable: IHTMLTimeRanges readonly dispid 1017;
    property ended: WordBool readonly dispid 1018;
    property autoplay: WordBool dispid 1019;
    property loop: WordBool dispid 1020;
    procedure play; dispid 1021;
    procedure pause; dispid 1022;
    property controls: WordBool dispid 1023;
    property volume: Single dispid 1024;
    property muted: WordBool dispid 1025;
    property autobuffer: WordBool dispid 1026;
  end;

// *********************************************************************//
// Interface: IHTMLMediaElement2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510809-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMediaElement2 = interface(IDispatch)
    ['{30510809-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_currentTimeDouble(p: Double); safecall;
    function Get_currentTimeDouble: Double; safecall;
    function Get_initialTimeDouble: Double; safecall;
    function Get_durationDouble: Double; safecall;
    procedure Set_defaultPlaybackRateDouble(p: Double); safecall;
    function Get_defaultPlaybackRateDouble: Double; safecall;
    procedure Set_playbackRateDouble(p: Double); safecall;
    function Get_playbackRateDouble: Double; safecall;
    procedure Set_volumeDouble(p: Double); safecall;
    function Get_volumeDouble: Double; safecall;
    property currentTimeDouble: Double read Get_currentTimeDouble write Set_currentTimeDouble;
    property initialTimeDouble: Double read Get_initialTimeDouble;
    property durationDouble: Double read Get_durationDouble;
    property defaultPlaybackRateDouble: Double read Get_defaultPlaybackRateDouble write Set_defaultPlaybackRateDouble;
    property playbackRateDouble: Double read Get_playbackRateDouble write Set_playbackRateDouble;
    property volumeDouble: Double read Get_volumeDouble write Set_volumeDouble;
  end;

// *********************************************************************//
// DispIntf:  IHTMLMediaElement2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510809-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMediaElement2Disp = dispinterface
    ['{30510809-98B5-11CF-BB82-00AA00BDCE0B}']
    property currentTimeDouble: Double dispid 1027;
    property initialTimeDouble: Double readonly dispid 1028;
    property durationDouble: Double readonly dispid 1029;
    property defaultPlaybackRateDouble: Double dispid 1030;
    property playbackRateDouble: Double dispid 1031;
    property volumeDouble: Double dispid 1032;
  end;

// *********************************************************************//
// Interface: IHTMLMSMediaElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510792-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMSMediaElement = interface(IDispatch)
    ['{30510792-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_msPlayToDisabled(p: WordBool); safecall;
    function Get_msPlayToDisabled: WordBool; safecall;
    procedure Set_msPlayToPrimary(p: WordBool); safecall;
    function Get_msPlayToPrimary: WordBool; safecall;
    property msPlayToDisabled: WordBool read Get_msPlayToDisabled write Set_msPlayToDisabled;
    property msPlayToPrimary: WordBool read Get_msPlayToPrimary write Set_msPlayToPrimary;
  end;

// *********************************************************************//
// DispIntf:  IHTMLMSMediaElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510792-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLMSMediaElementDisp = dispinterface
    ['{30510792-98B5-11CF-BB82-00AA00BDCE0B}']
    property msPlayToDisabled: WordBool dispid 1033;
    property msPlayToPrimary: WordBool dispid 1034;
  end;

// *********************************************************************//
// Interface: IHTMLSourceElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510707-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSourceElement = interface(IDispatch)
    ['{30510707-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_src(const p: WideString); safecall;
    function Get_src: WideString; safecall;
    procedure Set_type_(const p: WideString); safecall;
    function Get_type_: WideString; safecall;
    procedure Set_media(const p: WideString); safecall;
    function Get_media: WideString; safecall;
    property src: WideString read Get_src write Set_src;
    property type_: WideString read Get_type_ write Set_type_;
    property media: WideString read Get_media write Set_media;
  end;

// *********************************************************************//
// DispIntf:  IHTMLSourceElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510707-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLSourceElementDisp = dispinterface
    ['{30510707-98B5-11CF-BB82-00AA00BDCE0B}']
    property src: WideString dispid 1000;
    property type_: WideString dispid 1001;
    property media: WideString dispid 1002;
  end;

// *********************************************************************//
// Interface: IHTMLAudioElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510708-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAudioElement = interface(IDispatch)
    ['{30510708-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  IHTMLAudioElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510708-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAudioElementDisp = dispinterface
    ['{30510708-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// Interface: IHTMLVideoElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510709-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLVideoElement = interface(IDispatch)
    ['{30510709-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_width(p: Integer); safecall;
    function Get_width: Integer; safecall;
    procedure Set_height(p: Integer); safecall;
    function Get_height: Integer; safecall;
    function Get_videoWidth: LongWord; safecall;
    function Get_videoHeight: LongWord; safecall;
    procedure Set_poster(const p: WideString); safecall;
    function Get_poster: WideString; safecall;
    property width: Integer read Get_width write Set_width;
    property height: Integer read Get_height write Set_height;
    property videoWidth: LongWord read Get_videoWidth;
    property videoHeight: LongWord read Get_videoHeight;
    property poster: WideString read Get_poster write Set_poster;
  end;

// *********************************************************************//
// DispIntf:  IHTMLVideoElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510709-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLVideoElementDisp = dispinterface
    ['{30510709-98B5-11CF-BB82-00AA00BDCE0B}']
    property width: Integer dispid -2147418107;
    property height: Integer dispid -2147418106;
    property videoWidth: LongWord readonly dispid 1050;
    property videoHeight: LongWord readonly dispid 1051;
    property poster: WideString dispid 1052;
  end;

// *********************************************************************//
// Interface: IHTMLAudioElementFactory
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305107EB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAudioElementFactory = interface(IDispatch)
    ['{305107EB-98B5-11CF-BB82-00AA00BDCE0B}']
    function create(src: OleVariant): IHTMLAudioElement; safecall;
  end;

// *********************************************************************//
// DispIntf:  IHTMLAudioElementFactoryDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305107EB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAudioElementFactoryDisp = dispinterface
    ['{305107EB-98B5-11CF-BB82-00AA00BDCE0B}']
    function create(src: OleVariant): IHTMLAudioElement; dispid 0;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLMediaError
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590086-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLMediaError = dispinterface
    ['{30590086-98B5-11CF-BB82-00AA00BDCE0B}']
    property code: Smallint readonly dispid 1000;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLTimeRanges
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590087-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLTimeRanges = dispinterface
    ['{30590087-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1000;
    function start(index: Integer): Single; dispid 1001;
    function end_(index: Integer): Single; dispid 1002;
    function startDouble(index: Integer): Double; dispid 1003;
    function endDouble(index: Integer): Double; dispid 1004;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLMediaElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590088-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLMediaElement = dispinterface
    ['{30590088-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    property prefix: OleVariant dispid -2147416992;
    property localName: OleVariant readonly dispid -2147416994;
    property namespaceURI: OleVariant readonly dispid -2147416993;
    property textContent: OleVariant dispid -2147416985;
    function isEqualNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416991;
    function lookupNamespaceURI(const pvarPrefix: OleVariant): OleVariant; dispid -2147416990;
    function lookupPrefix(const pvarNamespaceURI: OleVariant): OleVariant; dispid -2147416989;
    function isDefaultNamespace(const pvarNamespace: OleVariant): WordBool; dispid -2147416988;
    function ie9_appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416844;
    function ie9_insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147416843;
    function ie9_removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416842;
    function ie9_replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416841;
    function isSameNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416987;
    function compareDocumentPosition(const otherNode: IHTMLDOMNode): Word; dispid -2147416986;
    function isSupported(const feature: WideString; version: OleVariant): WordBool; dispid -2147416835;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    function querySelector(const v: WideString): IHTMLElement; dispid -2147416998;
    function querySelectorAll(const v: WideString): IHTMLDOMChildrenCollection; dispid -2147416997;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property error: IHTMLMediaError readonly dispid 1000;
    property src: WideString dispid 1001;
    property currentSrc: WideString readonly dispid 1002;
    property networkState: Word readonly dispid 1003;
    property preload: WideString dispid 1004;
    property buffered: IHTMLTimeRanges readonly dispid 1005;
    procedure load; dispid 1006;
    function canPlayType(const type_: WideString): WideString; dispid 1007;
    property seeking: WordBool readonly dispid 1009;
    property currentTime: Single dispid 1010;
    property initialTime: Single readonly dispid 1011;
    property duration: Single readonly dispid 1012;
    property paused: WordBool readonly dispid 1013;
    property defaultPlaybackRate: Single dispid 1014;
    property playbackRate: Single dispid 1015;
    property played: IHTMLTimeRanges readonly dispid 1016;
    property seekable: IHTMLTimeRanges readonly dispid 1017;
    property ended: WordBool readonly dispid 1018;
    property autoplay: WordBool dispid 1019;
    property loop: WordBool dispid 1020;
    procedure play; dispid 1021;
    procedure pause; dispid 1022;
    property controls: WordBool dispid 1023;
    property volume: Single dispid 1024;
    property muted: WordBool dispid 1025;
    property autobuffer: WordBool dispid 1026;
    property currentTimeDouble: Double dispid 1027;
    property initialTimeDouble: Double readonly dispid 1028;
    property durationDouble: Double readonly dispid 1029;
    property defaultPlaybackRateDouble: Double dispid 1030;
    property playbackRateDouble: Double dispid 1031;
    property volumeDouble: Double dispid 1032;
    property msPlayToDisabled: WordBool dispid 1033;
    property msPlayToPrimary: WordBool dispid 1034;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLSourceElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590089-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLSourceElement = dispinterface
    ['{30590089-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    property prefix: OleVariant dispid -2147416992;
    property localName: OleVariant readonly dispid -2147416994;
    property namespaceURI: OleVariant readonly dispid -2147416993;
    property textContent: OleVariant dispid -2147416985;
    function isEqualNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416991;
    function lookupNamespaceURI(const pvarPrefix: OleVariant): OleVariant; dispid -2147416990;
    function lookupPrefix(const pvarNamespaceURI: OleVariant): OleVariant; dispid -2147416989;
    function isDefaultNamespace(const pvarNamespace: OleVariant): WordBool; dispid -2147416988;
    function ie9_appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416844;
    function ie9_insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147416843;
    function ie9_removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416842;
    function ie9_replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416841;
    function isSameNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416987;
    function compareDocumentPosition(const otherNode: IHTMLDOMNode): Word; dispid -2147416986;
    function isSupported(const feature: WideString; version: OleVariant): WordBool; dispid -2147416835;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    function querySelector(const v: WideString): IHTMLElement; dispid -2147416998;
    function querySelectorAll(const v: WideString): IHTMLDOMChildrenCollection; dispid -2147416997;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property src: WideString dispid 1000;
    property type_: WideString dispid 1001;
    property media: WideString dispid 1002;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLAudioElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059008A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLAudioElement = dispinterface
    ['{3059008A-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    property prefix: OleVariant dispid -2147416992;
    property localName: OleVariant readonly dispid -2147416994;
    property namespaceURI: OleVariant readonly dispid -2147416993;
    property textContent: OleVariant dispid -2147416985;
    function isEqualNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416991;
    function lookupNamespaceURI(const pvarPrefix: OleVariant): OleVariant; dispid -2147416990;
    function lookupPrefix(const pvarNamespaceURI: OleVariant): OleVariant; dispid -2147416989;
    function isDefaultNamespace(const pvarNamespace: OleVariant): WordBool; dispid -2147416988;
    function ie9_appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416844;
    function ie9_insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147416843;
    function ie9_removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416842;
    function ie9_replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416841;
    function isSameNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416987;
    function compareDocumentPosition(const otherNode: IHTMLDOMNode): Word; dispid -2147416986;
    function isSupported(const feature: WideString; version: OleVariant): WordBool; dispid -2147416835;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    function querySelector(const v: WideString): IHTMLElement; dispid -2147416998;
    function querySelectorAll(const v: WideString): IHTMLDOMChildrenCollection; dispid -2147416997;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property error: IHTMLMediaError readonly dispid 1000;
    property src: WideString dispid 1001;
    property currentSrc: WideString readonly dispid 1002;
    property networkState: Word readonly dispid 1003;
    property preload: WideString dispid 1004;
    property buffered: IHTMLTimeRanges readonly dispid 1005;
    procedure load; dispid 1006;
    function canPlayType(const type_: WideString): WideString; dispid 1007;
    property seeking: WordBool readonly dispid 1009;
    property currentTime: Single dispid 1010;
    property initialTime: Single readonly dispid 1011;
    property duration: Single readonly dispid 1012;
    property paused: WordBool readonly dispid 1013;
    property defaultPlaybackRate: Single dispid 1014;
    property playbackRate: Single dispid 1015;
    property played: IHTMLTimeRanges readonly dispid 1016;
    property seekable: IHTMLTimeRanges readonly dispid 1017;
    property ended: WordBool readonly dispid 1018;
    property autoplay: WordBool dispid 1019;
    property loop: WordBool dispid 1020;
    procedure play; dispid 1021;
    procedure pause; dispid 1022;
    property controls: WordBool dispid 1023;
    property volume: Single dispid 1024;
    property muted: WordBool dispid 1025;
    property autobuffer: WordBool dispid 1026;
    property currentTimeDouble: Double dispid 1027;
    property initialTimeDouble: Double readonly dispid 1028;
    property durationDouble: Double readonly dispid 1029;
    property defaultPlaybackRateDouble: Double dispid 1030;
    property playbackRateDouble: Double dispid 1031;
    property volumeDouble: Double dispid 1032;
    property msPlayToDisabled: WordBool dispid 1033;
    property msPlayToPrimary: WordBool dispid 1034;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLVideoElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059008B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLVideoElement = dispinterface
    ['{3059008B-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    property prefix: OleVariant dispid -2147416992;
    property localName: OleVariant readonly dispid -2147416994;
    property namespaceURI: OleVariant readonly dispid -2147416993;
    property textContent: OleVariant dispid -2147416985;
    function isEqualNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416991;
    function lookupNamespaceURI(const pvarPrefix: OleVariant): OleVariant; dispid -2147416990;
    function lookupPrefix(const pvarNamespaceURI: OleVariant): OleVariant; dispid -2147416989;
    function isDefaultNamespace(const pvarNamespace: OleVariant): WordBool; dispid -2147416988;
    function ie9_appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416844;
    function ie9_insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147416843;
    function ie9_removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416842;
    function ie9_replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416841;
    function isSameNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416987;
    function compareDocumentPosition(const otherNode: IHTMLDOMNode): Word; dispid -2147416986;
    function isSupported(const feature: WideString; version: OleVariant): WordBool; dispid -2147416835;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    function querySelector(const v: WideString): IHTMLElement; dispid -2147416998;
    function querySelectorAll(const v: WideString): IHTMLDOMChildrenCollection; dispid -2147416997;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property error: IHTMLMediaError readonly dispid 1000;
    property src: WideString dispid 1001;
    property currentSrc: WideString readonly dispid 1002;
    property networkState: Word readonly dispid 1003;
    property preload: WideString dispid 1004;
    property buffered: IHTMLTimeRanges readonly dispid 1005;
    procedure load; dispid 1006;
    function canPlayType(const type_: WideString): WideString; dispid 1007;
    property seeking: WordBool readonly dispid 1009;
    property currentTime: Single dispid 1010;
    property initialTime: Single readonly dispid 1011;
    property duration: Single readonly dispid 1012;
    property paused: WordBool readonly dispid 1013;
    property defaultPlaybackRate: Single dispid 1014;
    property playbackRate: Single dispid 1015;
    property played: IHTMLTimeRanges readonly dispid 1016;
    property seekable: IHTMLTimeRanges readonly dispid 1017;
    property ended: WordBool readonly dispid 1018;
    property autoplay: WordBool dispid 1019;
    property loop: WordBool dispid 1020;
    procedure play; dispid 1021;
    procedure pause; dispid 1022;
    property controls: WordBool dispid 1023;
    property volume: Single dispid 1024;
    property muted: WordBool dispid 1025;
    property autobuffer: WordBool dispid 1026;
    property currentTimeDouble: Double dispid 1027;
    property initialTimeDouble: Double readonly dispid 1028;
    property durationDouble: Double readonly dispid 1029;
    property defaultPlaybackRateDouble: Double dispid 1030;
    property playbackRateDouble: Double dispid 1031;
    property volumeDouble: Double dispid 1032;
    property msPlayToDisabled: WordBool dispid 1033;
    property msPlayToPrimary: WordBool dispid 1034;
    property width: Integer dispid -2147418107;
    property height: Integer dispid -2147418106;
    property videoWidth: LongWord readonly dispid 1050;
    property videoHeight: LongWord readonly dispid 1051;
    property poster: WideString dispid 1052;
  end;

// *********************************************************************//
// Interface: ISVGSwitchElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104F1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGSwitchElement = interface(IDispatch)
    ['{305104F1-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  ISVGSwitchElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104F1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGSwitchElementDisp = dispinterface
    ['{305104F1-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  DispSVGSwitchElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590030-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGSwitchElement = dispinterface
    ['{30590030-98B5-11CF-BB82-00AA00BDCE0B}']
    property xmlbase: WideString dispid 1032;
    property ownerSVGElement: ISVGSVGElement dispid 1033;
    property viewportElement: ISVGElement dispid 1034;
    property focusable: ISVGAnimatedEnumeration dispid 1036;
    property requiredFeatures: ISVGStringList readonly dispid 1011;
    property requiredExtensions: ISVGStringList readonly dispid 1013;
    property systemLanguage: ISVGStringList readonly dispid 1015;
    function hasExtension(const extension: WideString): WordBool; dispid 1016;
    property xmllang: WideString dispid 1017;
    property xmlspace: WideString dispid 1018;
    property externalResourcesRequired: ISVGAnimatedBoolean readonly dispid 1020;
    property _className: ISVGAnimatedString readonly dispid 1001;
    property transform: ISVGAnimatedTransformList readonly dispid 1009;
    property nearestViewportElement: ISVGElement readonly dispid 1002;
    property farthestViewportElement: ISVGElement readonly dispid 1003;
    function getBBox: ISVGRect; dispid 1004;
    function getCTM: ISVGMatrix; dispid 1005;
    function getScreenCTM: ISVGMatrix; dispid 1006;
    function getTransformToElement(const pElement: ISVGElement): ISVGMatrix; dispid 1007;
  end;

// *********************************************************************//
// Interface: ISVGDescElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104EA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGDescElement = interface(IDispatch)
    ['{305104EA-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  ISVGDescElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104EA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGDescElementDisp = dispinterface
    ['{305104EA-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  DispSVGDescElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590005-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGDescElement = dispinterface
    ['{30590005-98B5-11CF-BB82-00AA00BDCE0B}']
    property xmlbase: WideString dispid 1032;
    property ownerSVGElement: ISVGSVGElement dispid 1033;
    property viewportElement: ISVGElement dispid 1034;
    property focusable: ISVGAnimatedEnumeration dispid 1036;
    property xmllang: WideString dispid 1017;
    property xmlspace: WideString dispid 1018;
    property _className: ISVGAnimatedString readonly dispid 1001;
  end;

// *********************************************************************//
// Interface: ISVGTitleElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104EB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGTitleElement = interface(IDispatch)
    ['{305104EB-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  ISVGTitleElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104EB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGTitleElementDisp = dispinterface
    ['{305104EB-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  DispSVGTitleElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590006-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGTitleElement = dispinterface
    ['{30590006-98B5-11CF-BB82-00AA00BDCE0B}']
    property xmlbase: WideString dispid 1032;
    property ownerSVGElement: ISVGSVGElement dispid 1033;
    property viewportElement: ISVGElement dispid 1034;
    property focusable: ISVGAnimatedEnumeration dispid 1036;
    property xmllang: WideString dispid 1017;
    property xmlspace: WideString dispid 1018;
    property _className: ISVGAnimatedString readonly dispid 1001;
  end;

// *********************************************************************//
// Interface: ISVGMetadataElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510560-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGMetadataElement = interface(IDispatch)
    ['{30510560-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  ISVGMetadataElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510560-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGMetadataElementDisp = dispinterface
    ['{30510560-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  DispSVGMetadataElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059002F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGMetadataElement = dispinterface
    ['{3059002F-98B5-11CF-BB82-00AA00BDCE0B}']
    property xmlbase: WideString dispid 1032;
    property ownerSVGElement: ISVGSVGElement dispid 1033;
    property viewportElement: ISVGElement dispid 1034;
    property focusable: ISVGAnimatedEnumeration dispid 1036;
  end;

// *********************************************************************//
// DispIntf:  DispSVGElementInstance
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590007-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGElementInstance = dispinterface
    ['{30590007-98B5-11CF-BB82-00AA00BDCE0B}']
    property correspondingElement: ISVGElement readonly dispid 1000;
    property correspondingUseElement: ISVGUseElement readonly dispid 1001;
    property parentNode: ISVGElementInstance readonly dispid 1002;
    property childNodes: ISVGElementInstanceList readonly dispid 1003;
    property firstChild: ISVGElementInstance readonly dispid 1004;
    property lastChild: ISVGElementInstance readonly dispid 1005;
    property previousSibling: ISVGElementInstance readonly dispid 1006;
    property nextSibling: ISVGElementInstance readonly dispid 1007;
    procedure addEventListener(const type_: WideString; const listener: IDispatch; 
                               useCapture: WordBool); dispid -2147417602;
    procedure removeEventListener(const type_: WideString; const listener: IDispatch; 
                                  useCapture: WordBool); dispid -2147417601;
    function dispatchEvent(const evt: IDOMEvent): WordBool; dispid -2147417600;
  end;

// *********************************************************************//
// DispIntf:  DispSVGElementInstanceList
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590008-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGElementInstanceList = dispinterface
    ['{30590008-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1000;
    function item(index: Integer): ISVGElementInstance; dispid 1001;
  end;

// *********************************************************************//
// Interface: IDOMException
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051072B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMException = interface(IDispatch)
    ['{3051072B-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_code(p: Integer); safecall;
    function Get_code: Integer; safecall;
    function Get_message: WideString; safecall;
    property code: Integer read Get_code write Set_code;
    property message: WideString read Get_message;
  end;

// *********************************************************************//
// DispIntf:  IDOMExceptionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051072B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMExceptionDisp = dispinterface
    ['{3051072B-98B5-11CF-BB82-00AA00BDCE0B}']
    property code: Integer dispid 1000;
    property message: WideString readonly dispid 1001;
  end;

// *********************************************************************//
// Interface: IRangeException
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051072D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IRangeException = interface(IDispatch)
    ['{3051072D-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_code(p: Integer); safecall;
    function Get_code: Integer; safecall;
    function Get_message: WideString; safecall;
    property code: Integer read Get_code write Set_code;
    property message: WideString read Get_message;
  end;

// *********************************************************************//
// DispIntf:  IRangeExceptionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051072D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IRangeExceptionDisp = dispinterface
    ['{3051072D-98B5-11CF-BB82-00AA00BDCE0B}']
    property code: Integer dispid 1000;
    property message: WideString readonly dispid 1001;
  end;

// *********************************************************************//
// Interface: ISVGException
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051072F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGException = interface(IDispatch)
    ['{3051072F-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_code(p: Integer); safecall;
    function Get_code: Integer; safecall;
    function Get_message: WideString; safecall;
    property code: Integer read Get_code write Set_code;
    property message: WideString read Get_message;
  end;

// *********************************************************************//
// DispIntf:  ISVGExceptionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051072F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGExceptionDisp = dispinterface
    ['{3051072F-98B5-11CF-BB82-00AA00BDCE0B}']
    property code: Integer dispid 1000;
    property message: WideString readonly dispid 1001;
  end;

// *********************************************************************//
// Interface: IEventException
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051073A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IEventException = interface(IDispatch)
    ['{3051073A-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_code(p: Integer); safecall;
    function Get_code: Integer; safecall;
    function Get_message: WideString; safecall;
    property code: Integer read Get_code write Set_code;
    property message: WideString read Get_message;
  end;

// *********************************************************************//
// DispIntf:  IEventExceptionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051073A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IEventExceptionDisp = dispinterface
    ['{3051073A-98B5-11CF-BB82-00AA00BDCE0B}']
    property code: Integer dispid 1000;
    property message: WideString readonly dispid 1001;
  end;

// *********************************************************************//
// DispIntf:  DispDOMException
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590094-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispDOMException = dispinterface
    ['{30590094-98B5-11CF-BB82-00AA00BDCE0B}']
    property code: Integer dispid 1000;
    property message: WideString readonly dispid 1001;
  end;

// *********************************************************************//
// DispIntf:  DispRangeException
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590095-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispRangeException = dispinterface
    ['{30590095-98B5-11CF-BB82-00AA00BDCE0B}']
    property code: Integer dispid 1000;
    property message: WideString readonly dispid 1001;
  end;

// *********************************************************************//
// DispIntf:  DispSVGException
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590096-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGException = dispinterface
    ['{30590096-98B5-11CF-BB82-00AA00BDCE0B}']
    property code: Integer dispid 1000;
    property message: WideString readonly dispid 1001;
  end;

// *********************************************************************//
// DispIntf:  DispEventException
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590099-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispEventException = dispinterface
    ['{30590099-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// Interface: ISVGScriptElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051054D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGScriptElement = interface(IDispatch)
    ['{3051054D-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_type_(const p: WideString); safecall;
    function Get_type_: WideString; safecall;
    property type_: WideString read Get_type_ write Set_type_;
  end;

// *********************************************************************//
// DispIntf:  ISVGScriptElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051054D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGScriptElementDisp = dispinterface
    ['{3051054D-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString dispid 1052;
  end;

// *********************************************************************//
// DispIntf:  DispSVGScriptElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590039-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGScriptElement = dispinterface
    ['{30590039-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString dispid 1052;
    property xmlbase: WideString dispid 1032;
    property ownerSVGElement: ISVGSVGElement dispid 1033;
    property viewportElement: ISVGElement dispid 1034;
    property focusable: ISVGAnimatedEnumeration dispid 1036;
    property href: ISVGAnimatedString readonly dispid 1026;
    property externalResourcesRequired: ISVGAnimatedBoolean readonly dispid 1020;
  end;

// *********************************************************************//
// Interface: ISVGStyleElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104F3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGStyleElement = interface(IDispatch)
    ['{305104F3-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_type_(const p: WideString); safecall;
    function Get_type_: WideString; safecall;
    procedure Set_media(const p: WideString); safecall;
    function Get_media: WideString; safecall;
    property type_: WideString read Get_type_ write Set_type_;
    property media: WideString read Get_media write Set_media;
  end;

// *********************************************************************//
// DispIntf:  ISVGStyleElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104F3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGStyleElementDisp = dispinterface
    ['{305104F3-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString dispid 1051;
    property media: WideString dispid 1052;
  end;

// *********************************************************************//
// DispIntf:  DispSVGStyleElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590029-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGStyleElement = dispinterface
    ['{30590029-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: WideString dispid 1051;
    property media: WideString dispid 1052;
    property xmlbase: WideString dispid 1032;
    property ownerSVGElement: ISVGSVGElement dispid 1033;
    property viewportElement: ISVGElement dispid 1034;
    property focusable: ISVGAnimatedEnumeration dispid 1036;
    property xmllang: WideString dispid 1017;
    property xmlspace: WideString dispid 1018;
  end;

// *********************************************************************//
// DispIntf:  DispSVGTextContentElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590035-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGTextContentElement = dispinterface
    ['{30590035-98B5-11CF-BB82-00AA00BDCE0B}']
    property xmlbase: WideString dispid 1032;
    property ownerSVGElement: ISVGSVGElement dispid 1033;
    property viewportElement: ISVGElement dispid 1034;
    property focusable: ISVGAnimatedEnumeration dispid 1036;
    property textLength: ISVGAnimatedLength dispid 1053;
    property lengthAdjust: ISVGAnimatedEnumeration dispid 1051;
    function getNumberOfChars: Integer; dispid 1054;
    function getComputedTextLength: Single; dispid 1055;
    function getSubStringLength(charnum: Integer; nchars: Integer): Single; dispid 1056;
    function getStartPositionOfChar(charnum: Integer): ISVGPoint; dispid 1057;
    function getEndPositionOfChar(charnum: Integer): ISVGPoint; dispid 1058;
    function getExtentOfChar(charnum: Integer): ISVGRect; dispid 1059;
    function getRotationOfChar(charnum: Integer): Single; dispid 1060;
    function getCharNumAtPosition(const point: ISVGPoint): Integer; dispid 1061;
    procedure selectSubString(charnum: Integer; nchars: Integer); dispid 1062;
    property requiredFeatures: ISVGStringList readonly dispid 1011;
    property requiredExtensions: ISVGStringList readonly dispid 1013;
    property systemLanguage: ISVGStringList readonly dispid 1015;
    function hasExtension(const extension: WideString): WordBool; dispid 1016;
    property xmllang: WideString dispid 1017;
    property xmlspace: WideString dispid 1018;
    property externalResourcesRequired: ISVGAnimatedBoolean readonly dispid 1020;
    property _className: ISVGAnimatedString readonly dispid 1001;
  end;

// *********************************************************************//
// DispIntf:  DispSVGTextPositioningElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590038-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGTextPositioningElement = dispinterface
    ['{30590038-98B5-11CF-BB82-00AA00BDCE0B}']
    property x: ISVGAnimatedLengthList dispid 1071;
    property y: ISVGAnimatedLengthList dispid 1073;
    property dx: ISVGAnimatedLengthList dispid 1075;
    property dy: ISVGAnimatedLengthList dispid 1077;
    property rotate: ISVGAnimatedNumberList dispid 1079;
    property textLength: ISVGAnimatedLength dispid 1053;
    property lengthAdjust: ISVGAnimatedEnumeration dispid 1051;
    function getNumberOfChars: Integer; dispid 1054;
    function getComputedTextLength: Single; dispid 1055;
    function getSubStringLength(charnum: Integer; nchars: Integer): Single; dispid 1056;
    function getStartPositionOfChar(charnum: Integer): ISVGPoint; dispid 1057;
    function getEndPositionOfChar(charnum: Integer): ISVGPoint; dispid 1058;
    function getExtentOfChar(charnum: Integer): ISVGRect; dispid 1059;
    function getRotationOfChar(charnum: Integer): Single; dispid 1060;
    function getCharNumAtPosition(const point: ISVGPoint): Integer; dispid 1061;
    procedure selectSubString(charnum: Integer; nchars: Integer); dispid 1062;
    property xmlbase: WideString dispid 1032;
    property ownerSVGElement: ISVGSVGElement dispid 1033;
    property viewportElement: ISVGElement dispid 1034;
    property focusable: ISVGAnimatedEnumeration dispid 1036;
    property requiredFeatures: ISVGStringList readonly dispid 1011;
    property requiredExtensions: ISVGStringList readonly dispid 1013;
    property systemLanguage: ISVGStringList readonly dispid 1015;
    function hasExtension(const extension: WideString): WordBool; dispid 1016;
    property xmllang: WideString dispid 1017;
    property xmlspace: WideString dispid 1018;
    property externalResourcesRequired: ISVGAnimatedBoolean readonly dispid 1020;
    property _className: ISVGAnimatedString readonly dispid 1001;
  end;

// *********************************************************************//
// DispIntf:  DispDOMDocumentType
// Flags:     (4112) Hidden Dispatchable
// GUID:      {30590098-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispDOMDocumentType = dispinterface
    ['{30590098-98B5-11CF-BB82-00AA00BDCE0B}']
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    property prefix: OleVariant dispid -2147416992;
    property localName: OleVariant readonly dispid -2147416994;
    property namespaceURI: OleVariant readonly dispid -2147416993;
    property textContent: OleVariant dispid -2147416985;
    function isEqualNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416991;
    function lookupNamespaceURI(const pvarPrefix: OleVariant): OleVariant; dispid -2147416990;
    function lookupPrefix(const pvarNamespaceURI: OleVariant): OleVariant; dispid -2147416989;
    function isDefaultNamespace(const pvarNamespace: OleVariant): WordBool; dispid -2147416988;
    function ie9_appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416844;
    function ie9_insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147416843;
    function ie9_removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416842;
    function ie9_replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416841;
    function isSameNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416987;
    function compareDocumentPosition(const otherNode: IHTMLDOMNode): Word; dispid -2147416986;
    function isSupported(const feature: WideString; version: OleVariant): WordBool; dispid -2147416835;
    property name: WideString readonly dispid 1000;
    property entities: IDispatch readonly dispid 1001;
    property notations: IDispatch readonly dispid 1002;
    property publicId: OleVariant readonly dispid 1003;
    property systemId: OleVariant readonly dispid 1004;
    property internalSubset: OleVariant readonly dispid 1005;
  end;

// *********************************************************************//
// DispIntf:  DispNodeIterator
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059009C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispNodeIterator = dispinterface
    ['{3059009C-98B5-11CF-BB82-00AA00BDCE0B}']
    property root: IDispatch readonly dispid 1000;
    property whatToShow: LongWord readonly dispid 1001;
    property filter: IDispatch readonly dispid 1002;
    property expandEntityReferences: WordBool readonly dispid 1003;
    function nextNode: IDispatch; dispid 1010;
    function previousNode: IDispatch; dispid 1011;
    procedure Detach; dispid 1012;
  end;

// *********************************************************************//
// DispIntf:  DispTreeWalker
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059009D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispTreeWalker = dispinterface
    ['{3059009D-98B5-11CF-BB82-00AA00BDCE0B}']
    property root: IDispatch readonly dispid 1000;
    property whatToShow: LongWord readonly dispid 1001;
    property filter: IDispatch readonly dispid 1002;
    property expandEntityReferences: WordBool readonly dispid 1003;
    property currentNode: IDispatch dispid 1020;
    function parentNode: IDispatch; dispid 1021;
    function firstChild: IDispatch; dispid 1022;
    function lastChild: IDispatch; dispid 1023;
    function previousSibling: IDispatch; dispid 1024;
    function nextSibling: IDispatch; dispid 1025;
    function previousNode: IDispatch; dispid 1026;
    function nextNode: IDispatch; dispid 1027;
  end;

// *********************************************************************//
// DispIntf:  DispDOMProcessingInstruction
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059009B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispDOMProcessingInstruction = dispinterface
    ['{3059009B-98B5-11CF-BB82-00AA00BDCE0B}']
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    property prefix: OleVariant dispid -2147416992;
    property localName: OleVariant readonly dispid -2147416994;
    property namespaceURI: OleVariant readonly dispid -2147416993;
    property textContent: OleVariant dispid -2147416985;
    function isEqualNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416991;
    function lookupNamespaceURI(const pvarPrefix: OleVariant): OleVariant; dispid -2147416990;
    function lookupPrefix(const pvarNamespaceURI: OleVariant): OleVariant; dispid -2147416989;
    function isDefaultNamespace(const pvarNamespace: OleVariant): WordBool; dispid -2147416988;
    function ie9_appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416844;
    function ie9_insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147416843;
    function ie9_removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416842;
    function ie9_replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416841;
    function isSameNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416987;
    function compareDocumentPosition(const otherNode: IHTMLDOMNode): Word; dispid -2147416986;
    function isSupported(const feature: WideString; version: OleVariant): WordBool; dispid -2147416835;
    property target: WideString readonly dispid 1000;
    property data: WideString dispid 1001;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLPerformance
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059009F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLPerformance = dispinterface
    ['{3059009F-98B5-11CF-BB82-00AA00BDCE0B}']
    property navigation: IHTMLPerformanceNavigation readonly dispid 1000;
    property timing: IHTMLPerformanceTiming readonly dispid 1001;
    function toString: WideString; dispid 1002;
    function toJSON: OleVariant; dispid 1003;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLPerformanceNavigation
// Flags:     (4112) Hidden Dispatchable
// GUID:      {305900A0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLPerformanceNavigation = dispinterface
    ['{305900A0-98B5-11CF-BB82-00AA00BDCE0B}']
    property type_: LongWord readonly dispid 1000;
    property redirectCount: LongWord readonly dispid 1001;
    function toString: WideString; dispid 1002;
    function toJSON: OleVariant; dispid 1003;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLPerformanceTiming
// Flags:     (4112) Hidden Dispatchable
// GUID:      {305900A1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLPerformanceTiming = dispinterface
    ['{305900A1-98B5-11CF-BB82-00AA00BDCE0B}']
    property navigationStart: Largeuint readonly dispid 1000;
    property unloadEventStart: Largeuint readonly dispid 1001;
    property unloadEventEnd: Largeuint readonly dispid 1002;
    property redirectStart: Largeuint readonly dispid 1003;
    property redirectEnd: Largeuint readonly dispid 1004;
    property fetchStart: Largeuint readonly dispid 1005;
    property domainLookupStart: Largeuint readonly dispid 1006;
    property domainLookupEnd: Largeuint readonly dispid 1007;
    property connectStart: Largeuint readonly dispid 1008;
    property connectEnd: Largeuint readonly dispid 1009;
    property requestStart: Largeuint readonly dispid 1010;
    property responseStart: Largeuint readonly dispid 1011;
    property responseEnd: Largeuint readonly dispid 1012;
    property domLoading: Largeuint readonly dispid 1013;
    property domInteractive: Largeuint readonly dispid 1014;
    property domContentLoadedEventStart: Largeuint readonly dispid 1015;
    property domContentLoadedEventEnd: Largeuint readonly dispid 1016;
    property domComplete: Largeuint readonly dispid 1017;
    property loadEventStart: Largeuint readonly dispid 1018;
    property loadEventEnd: Largeuint readonly dispid 1019;
    property msFirstPaint: Largeuint readonly dispid 1020;
    function toString: WideString; dispid 1021;
    function toJSON: OleVariant; dispid 1022;
  end;

// *********************************************************************//
// Interface: ISVGTSpanElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051051D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGTSpanElement = interface(IDispatch)
    ['{3051051D-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  ISVGTSpanElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051051D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGTSpanElementDisp = dispinterface
    ['{3051051D-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// DispIntf:  DispSVGTSpanElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059003A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGTSpanElement = dispinterface
    ['{3059003A-98B5-11CF-BB82-00AA00BDCE0B}']
    property x: ISVGAnimatedLengthList dispid 1071;
    property y: ISVGAnimatedLengthList dispid 1073;
    property dx: ISVGAnimatedLengthList dispid 1075;
    property dy: ISVGAnimatedLengthList dispid 1077;
    property rotate: ISVGAnimatedNumberList dispid 1079;
    property textLength: ISVGAnimatedLength dispid 1053;
    property lengthAdjust: ISVGAnimatedEnumeration dispid 1051;
    function getNumberOfChars: Integer; dispid 1054;
    function getComputedTextLength: Single; dispid 1055;
    function getSubStringLength(charnum: Integer; nchars: Integer): Single; dispid 1056;
    function getStartPositionOfChar(charnum: Integer): ISVGPoint; dispid 1057;
    function getEndPositionOfChar(charnum: Integer): ISVGPoint; dispid 1058;
    function getExtentOfChar(charnum: Integer): ISVGRect; dispid 1059;
    function getRotationOfChar(charnum: Integer): Single; dispid 1060;
    function getCharNumAtPosition(const point: ISVGPoint): Integer; dispid 1061;
    procedure selectSubString(charnum: Integer; nchars: Integer); dispid 1062;
    property xmlbase: WideString dispid 1032;
    property ownerSVGElement: ISVGSVGElement dispid 1033;
    property viewportElement: ISVGElement dispid 1034;
    property focusable: ISVGAnimatedEnumeration dispid 1036;
    property requiredFeatures: ISVGStringList readonly dispid 1011;
    property requiredExtensions: ISVGStringList readonly dispid 1013;
    property systemLanguage: ISVGStringList readonly dispid 1015;
    function hasExtension(const extension: WideString): WordBool; dispid 1016;
    property xmllang: WideString dispid 1017;
    property xmlspace: WideString dispid 1018;
    property externalResourcesRequired: ISVGAnimatedBoolean readonly dispid 1020;
    property _className: ISVGAnimatedString readonly dispid 1001;
  end;

// *********************************************************************//
// Interface: ITemplatePrinter
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F6B4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ITemplatePrinter = interface(IDispatch)
    ['{3050F6B4-98B5-11CF-BB82-00AA00BDCE0B}']
    function startDoc(const bstrTitle: WideString): WordBool; safecall;
    procedure stopDoc; safecall;
    procedure printBlankPage; safecall;
    procedure printPage(const pElemDisp: IDispatch); safecall;
    function ensurePrintDialogDefaults: WordBool; safecall;
    function showPrintDialog: WordBool; safecall;
    function showPageSetupDialog: WordBool; safecall;
    function printNonNative(const pMarkup: IUnknown): WordBool; safecall;
    procedure printNonNativeFrames(const pMarkup: IUnknown; fActiveFrame: WordBool); safecall;
    procedure Set_framesetDocument(p: WordBool); safecall;
    function Get_framesetDocument: WordBool; safecall;
    procedure Set_frameActive(p: WordBool); safecall;
    function Get_frameActive: WordBool; safecall;
    procedure Set_frameAsShown(p: WordBool); safecall;
    function Get_frameAsShown: WordBool; safecall;
    procedure Set_selection(p: WordBool); safecall;
    function Get_selection: WordBool; safecall;
    procedure Set_selectedPages(p: WordBool); safecall;
    function Get_selectedPages: WordBool; safecall;
    procedure Set_currentPage(p: WordBool); safecall;
    function Get_currentPage: WordBool; safecall;
    procedure Set_currentPageAvail(p: WordBool); safecall;
    function Get_currentPageAvail: WordBool; safecall;
    procedure Set_collate(p: WordBool); safecall;
    function Get_collate: WordBool; safecall;
    function Get_duplex: WordBool; safecall;
    procedure Set_copies(p: Word); safecall;
    function Get_copies: Word; safecall;
    procedure Set_pageFrom(p: Word); safecall;
    function Get_pageFrom: Word; safecall;
    procedure Set_pageTo(p: Word); safecall;
    function Get_pageTo: Word; safecall;
    procedure Set_tableOfLinks(p: WordBool); safecall;
    function Get_tableOfLinks: WordBool; safecall;
    procedure Set_allLinkedDocuments(p: WordBool); safecall;
    function Get_allLinkedDocuments: WordBool; safecall;
    procedure Set_header(const p: WideString); safecall;
    function Get_header: WideString; safecall;
    procedure Set_footer(const p: WideString); safecall;
    function Get_footer: WideString; safecall;
    procedure Set_marginLeft(p: Integer); safecall;
    function Get_marginLeft: Integer; safecall;
    procedure Set_marginRight(p: Integer); safecall;
    function Get_marginRight: Integer; safecall;
    procedure Set_marginTop(p: Integer); safecall;
    function Get_marginTop: Integer; safecall;
    procedure Set_marginBottom(p: Integer); safecall;
    function Get_marginBottom: Integer; safecall;
    function Get_pageWidth: Integer; safecall;
    function Get_pageHeight: Integer; safecall;
    function Get_unprintableLeft: Integer; safecall;
    function Get_unprintableTop: Integer; safecall;
    function Get_unprintableRight: Integer; safecall;
    function Get_unprintableBottom: Integer; safecall;
    procedure updatePageStatus(var p: Integer); safecall;
    property framesetDocument: WordBool read Get_framesetDocument write Set_framesetDocument;
    property frameActive: WordBool read Get_frameActive write Set_frameActive;
    property frameAsShown: WordBool read Get_frameAsShown write Set_frameAsShown;
    property selection: WordBool read Get_selection write Set_selection;
    property selectedPages: WordBool read Get_selectedPages write Set_selectedPages;
    property currentPage: WordBool read Get_currentPage write Set_currentPage;
    property currentPageAvail: WordBool read Get_currentPageAvail write Set_currentPageAvail;
    property collate: WordBool read Get_collate write Set_collate;
    property duplex: WordBool read Get_duplex;
    property copies: Word read Get_copies write Set_copies;
    property pageFrom: Word read Get_pageFrom write Set_pageFrom;
    property pageTo: Word read Get_pageTo write Set_pageTo;
    property tableOfLinks: WordBool read Get_tableOfLinks write Set_tableOfLinks;
    property allLinkedDocuments: WordBool read Get_allLinkedDocuments write Set_allLinkedDocuments;
    property header: WideString read Get_header write Set_header;
    property footer: WideString read Get_footer write Set_footer;
    property marginLeft: Integer read Get_marginLeft write Set_marginLeft;
    property marginRight: Integer read Get_marginRight write Set_marginRight;
    property marginTop: Integer read Get_marginTop write Set_marginTop;
    property marginBottom: Integer read Get_marginBottom write Set_marginBottom;
    property pageWidth: Integer read Get_pageWidth;
    property pageHeight: Integer read Get_pageHeight;
    property unprintableLeft: Integer read Get_unprintableLeft;
    property unprintableTop: Integer read Get_unprintableTop;
    property unprintableRight: Integer read Get_unprintableRight;
    property unprintableBottom: Integer read Get_unprintableBottom;
  end;

// *********************************************************************//
// DispIntf:  ITemplatePrinterDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F6B4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ITemplatePrinterDisp = dispinterface
    ['{3050F6B4-98B5-11CF-BB82-00AA00BDCE0B}']
    function startDoc(const bstrTitle: WideString): WordBool; dispid 1;
    procedure stopDoc; dispid 2;
    procedure printBlankPage; dispid 3;
    procedure printPage(const pElemDisp: IDispatch); dispid 4;
    function ensurePrintDialogDefaults: WordBool; dispid 5;
    function showPrintDialog: WordBool; dispid 6;
    function showPageSetupDialog: WordBool; dispid 7;
    function printNonNative(const pMarkup: IUnknown): WordBool; dispid 8;
    procedure printNonNativeFrames(const pMarkup: IUnknown; fActiveFrame: WordBool); dispid 9;
    property framesetDocument: WordBool dispid 10;
    property frameActive: WordBool dispid 11;
    property frameAsShown: WordBool dispid 12;
    property selection: WordBool dispid 13;
    property selectedPages: WordBool dispid 14;
    property currentPage: WordBool dispid 15;
    property currentPageAvail: WordBool dispid 16;
    property collate: WordBool dispid 17;
    property duplex: WordBool readonly dispid 18;
    property copies: Word dispid 19;
    property pageFrom: Word dispid 20;
    property pageTo: Word dispid 21;
    property tableOfLinks: WordBool dispid 22;
    property allLinkedDocuments: WordBool dispid 23;
    property header: WideString dispid 24;
    property footer: WideString dispid 25;
    property marginLeft: Integer dispid 26;
    property marginRight: Integer dispid 27;
    property marginTop: Integer dispid 28;
    property marginBottom: Integer dispid 29;
    property pageWidth: Integer readonly dispid 30;
    property pageHeight: Integer readonly dispid 31;
    property unprintableLeft: Integer readonly dispid 32;
    property unprintableTop: Integer readonly dispid 33;
    property unprintableRight: Integer readonly dispid 34;
    property unprintableBottom: Integer readonly dispid 35;
    procedure updatePageStatus(var p: Integer); dispid 36;
  end;

// *********************************************************************//
// Interface: ITemplatePrinter2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F83F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ITemplatePrinter2 = interface(ITemplatePrinter)
    ['{3050F83F-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_selectionEnabled(p: WordBool); safecall;
    function Get_selectionEnabled: WordBool; safecall;
    procedure Set_frameActiveEnabled(p: WordBool); safecall;
    function Get_frameActiveEnabled: WordBool; safecall;
    procedure Set_orientation(const p: WideString); safecall;
    function Get_orientation: WideString; safecall;
    procedure Set_usePrinterCopyCollate(p: WordBool); safecall;
    function Get_usePrinterCopyCollate: WordBool; safecall;
    function deviceSupports(const bstrProperty: WideString): OleVariant; safecall;
    property selectionEnabled: WordBool read Get_selectionEnabled write Set_selectionEnabled;
    property frameActiveEnabled: WordBool read Get_frameActiveEnabled write Set_frameActiveEnabled;
    property orientation: WideString read Get_orientation write Set_orientation;
    property usePrinterCopyCollate: WordBool read Get_usePrinterCopyCollate write Set_usePrinterCopyCollate;
  end;

// *********************************************************************//
// DispIntf:  ITemplatePrinter2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F83F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ITemplatePrinter2Disp = dispinterface
    ['{3050F83F-98B5-11CF-BB82-00AA00BDCE0B}']
    property selectionEnabled: WordBool dispid 37;
    property frameActiveEnabled: WordBool dispid 38;
    property orientation: WideString dispid 39;
    property usePrinterCopyCollate: WordBool dispid 40;
    function deviceSupports(const bstrProperty: WideString): OleVariant; dispid 41;
    function startDoc(const bstrTitle: WideString): WordBool; dispid 1;
    procedure stopDoc; dispid 2;
    procedure printBlankPage; dispid 3;
    procedure printPage(const pElemDisp: IDispatch); dispid 4;
    function ensurePrintDialogDefaults: WordBool; dispid 5;
    function showPrintDialog: WordBool; dispid 6;
    function showPageSetupDialog: WordBool; dispid 7;
    function printNonNative(const pMarkup: IUnknown): WordBool; dispid 8;
    procedure printNonNativeFrames(const pMarkup: IUnknown; fActiveFrame: WordBool); dispid 9;
    property framesetDocument: WordBool dispid 10;
    property frameActive: WordBool dispid 11;
    property frameAsShown: WordBool dispid 12;
    property selection: WordBool dispid 13;
    property selectedPages: WordBool dispid 14;
    property currentPage: WordBool dispid 15;
    property currentPageAvail: WordBool dispid 16;
    property collate: WordBool dispid 17;
    property duplex: WordBool readonly dispid 18;
    property copies: Word dispid 19;
    property pageFrom: Word dispid 20;
    property pageTo: Word dispid 21;
    property tableOfLinks: WordBool dispid 22;
    property allLinkedDocuments: WordBool dispid 23;
    property header: WideString dispid 24;
    property footer: WideString dispid 25;
    property marginLeft: Integer dispid 26;
    property marginRight: Integer dispid 27;
    property marginTop: Integer dispid 28;
    property marginBottom: Integer dispid 29;
    property pageWidth: Integer readonly dispid 30;
    property pageHeight: Integer readonly dispid 31;
    property unprintableLeft: Integer readonly dispid 32;
    property unprintableTop: Integer readonly dispid 33;
    property unprintableRight: Integer readonly dispid 34;
    property unprintableBottom: Integer readonly dispid 35;
    procedure updatePageStatus(var p: Integer); dispid 36;
  end;

// *********************************************************************//
// Interface: ITemplatePrinter3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104A3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ITemplatePrinter3 = interface(ITemplatePrinter2)
    ['{305104A3-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_headerFooterFont(const p: WideString); safecall;
    function Get_headerFooterFont: WideString; safecall;
    function getPageMarginTop(const pageRule: IDispatch; pageWidth: Integer; pageHeight: Integer): OleVariant; safecall;
    function getPageMarginRight(const pageRule: IDispatch; pageWidth: Integer; pageHeight: Integer): OleVariant; safecall;
    function getPageMarginBottom(const pageRule: IDispatch; pageWidth: Integer; pageHeight: Integer): OleVariant; safecall;
    function getPageMarginLeft(const pageRule: IDispatch; pageWidth: Integer; pageHeight: Integer): OleVariant; safecall;
    function getPageMarginTopImportant(const pageRule: IDispatch): WordBool; safecall;
    function getPageMarginRightImportant(const pageRule: IDispatch): WordBool; safecall;
    function getPageMarginBottomImportant(const pageRule: IDispatch): WordBool; safecall;
    function getPageMarginLeftImportant(const pageRule: IDispatch): WordBool; safecall;
    property headerFooterFont: WideString read Get_headerFooterFont write Set_headerFooterFont;
  end;

// *********************************************************************//
// DispIntf:  ITemplatePrinter3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305104A3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ITemplatePrinter3Disp = dispinterface
    ['{305104A3-98B5-11CF-BB82-00AA00BDCE0B}']
    property headerFooterFont: WideString dispid 42;
    function getPageMarginTop(const pageRule: IDispatch; pageWidth: Integer; pageHeight: Integer): OleVariant; dispid 43;
    function getPageMarginRight(const pageRule: IDispatch; pageWidth: Integer; pageHeight: Integer): OleVariant; dispid 44;
    function getPageMarginBottom(const pageRule: IDispatch; pageWidth: Integer; pageHeight: Integer): OleVariant; dispid 45;
    function getPageMarginLeft(const pageRule: IDispatch; pageWidth: Integer; pageHeight: Integer): OleVariant; dispid 46;
    function getPageMarginTopImportant(const pageRule: IDispatch): WordBool; dispid 47;
    function getPageMarginRightImportant(const pageRule: IDispatch): WordBool; dispid 48;
    function getPageMarginBottomImportant(const pageRule: IDispatch): WordBool; dispid 49;
    function getPageMarginLeftImportant(const pageRule: IDispatch): WordBool; dispid 50;
    property selectionEnabled: WordBool dispid 37;
    property frameActiveEnabled: WordBool dispid 38;
    property orientation: WideString dispid 39;
    property usePrinterCopyCollate: WordBool dispid 40;
    function deviceSupports(const bstrProperty: WideString): OleVariant; dispid 41;
    function startDoc(const bstrTitle: WideString): WordBool; dispid 1;
    procedure stopDoc; dispid 2;
    procedure printBlankPage; dispid 3;
    procedure printPage(const pElemDisp: IDispatch); dispid 4;
    function ensurePrintDialogDefaults: WordBool; dispid 5;
    function showPrintDialog: WordBool; dispid 6;
    function showPageSetupDialog: WordBool; dispid 7;
    function printNonNative(const pMarkup: IUnknown): WordBool; dispid 8;
    procedure printNonNativeFrames(const pMarkup: IUnknown; fActiveFrame: WordBool); dispid 9;
    property framesetDocument: WordBool dispid 10;
    property frameActive: WordBool dispid 11;
    property frameAsShown: WordBool dispid 12;
    property selection: WordBool dispid 13;
    property selectedPages: WordBool dispid 14;
    property currentPage: WordBool dispid 15;
    property currentPageAvail: WordBool dispid 16;
    property collate: WordBool dispid 17;
    property duplex: WordBool readonly dispid 18;
    property copies: Word dispid 19;
    property pageFrom: Word dispid 20;
    property pageTo: Word dispid 21;
    property tableOfLinks: WordBool dispid 22;
    property allLinkedDocuments: WordBool dispid 23;
    property header: WideString dispid 24;
    property footer: WideString dispid 25;
    property marginLeft: Integer dispid 26;
    property marginRight: Integer dispid 27;
    property marginTop: Integer dispid 28;
    property marginBottom: Integer dispid 29;
    property pageWidth: Integer readonly dispid 30;
    property pageHeight: Integer readonly dispid 31;
    property unprintableLeft: Integer readonly dispid 32;
    property unprintableTop: Integer readonly dispid 33;
    property unprintableRight: Integer readonly dispid 34;
    property unprintableBottom: Integer readonly dispid 35;
    procedure updatePageStatus(var p: Integer); dispid 36;
  end;

// *********************************************************************//
// Interface: IPrintManagerTemplatePrinter
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F633BE14-9EFF-4C4D-929E-05717B21B3E6}
// *********************************************************************//
  IPrintManagerTemplatePrinter = interface(IDispatch)
    ['{F633BE14-9EFF-4C4D-929E-05717B21B3E6}']
    procedure startPrint; safecall;
    procedure drawPreviewPage(const pElemDisp: IDispatch; nPage: Integer); safecall;
    procedure setPageCount(nPage: Integer); safecall;
    procedure invalidatePreview; safecall;
    function getPrintTaskOptionValue(const bstrKey: WideString): OleVariant; safecall;
    procedure endPrint; safecall;
  end;

// *********************************************************************//
// DispIntf:  IPrintManagerTemplatePrinterDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {F633BE14-9EFF-4C4D-929E-05717B21B3E6}
// *********************************************************************//
  IPrintManagerTemplatePrinterDisp = dispinterface
    ['{F633BE14-9EFF-4C4D-929E-05717B21B3E6}']
    procedure startPrint; dispid 501;
    procedure drawPreviewPage(const pElemDisp: IDispatch; nPage: Integer); dispid 502;
    procedure setPageCount(nPage: Integer); dispid 503;
    procedure invalidatePreview; dispid 504;
    function getPrintTaskOptionValue(const bstrKey: WideString): OleVariant; dispid 505;
    procedure endPrint; dispid 506;
  end;

// *********************************************************************//
// Interface: IPrintManagerTemplatePrinter2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C6403497-7493-4F09-8016-54B03E9BDA69}
// *********************************************************************//
  IPrintManagerTemplatePrinter2 = interface(IPrintManagerTemplatePrinter)
    ['{C6403497-7493-4F09-8016-54B03E9BDA69}']
    function Get_showHeaderFooter: WordBool; safecall;
    function Get_shrinkToFit: WordBool; safecall;
    function Get_percentScale: Single; safecall;
    property showHeaderFooter: WordBool read Get_showHeaderFooter;
    property shrinkToFit: WordBool read Get_shrinkToFit;
    property percentScale: Single read Get_percentScale;
  end;

// *********************************************************************//
// DispIntf:  IPrintManagerTemplatePrinter2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {C6403497-7493-4F09-8016-54B03E9BDA69}
// *********************************************************************//
  IPrintManagerTemplatePrinter2Disp = dispinterface
    ['{C6403497-7493-4F09-8016-54B03E9BDA69}']
    property showHeaderFooter: WordBool readonly dispid 507;
    property shrinkToFit: WordBool readonly dispid 508;
    property percentScale: Single readonly dispid 509;
    procedure startPrint; dispid 501;
    procedure drawPreviewPage(const pElemDisp: IDispatch; nPage: Integer); dispid 502;
    procedure setPageCount(nPage: Integer); dispid 503;
    procedure invalidatePreview; dispid 504;
    function getPrintTaskOptionValue(const bstrKey: WideString): OleVariant; dispid 505;
    procedure endPrint; dispid 506;
  end;

// *********************************************************************//
// DispIntf:  DispCPrintManagerTemplatePrinter
// Flags:     (4112) Hidden Dispatchable
// GUID:      {305900E9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispCPrintManagerTemplatePrinter = dispinterface
    ['{305900E9-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure startPrint; dispid 501;
    procedure drawPreviewPage(const pElemDisp: IDispatch; nPage: Integer); dispid 502;
    procedure setPageCount(nPage: Integer); dispid 503;
    procedure invalidatePreview; dispid 504;
    function getPrintTaskOptionValue(const bstrKey: WideString): OleVariant; dispid 505;
    procedure endPrint; dispid 506;
    property showHeaderFooter: WordBool readonly dispid 507;
    property shrinkToFit: WordBool readonly dispid 508;
    property percentScale: Single readonly dispid 509;
    function startDoc(const bstrTitle: WideString): WordBool; dispid 1;
    procedure stopDoc; dispid 2;
    procedure printBlankPage; dispid 3;
    procedure printPage(const pElemDisp: IDispatch); dispid 4;
    function ensurePrintDialogDefaults: WordBool; dispid 5;
    function showPrintDialog: WordBool; dispid 6;
    function showPageSetupDialog: WordBool; dispid 7;
    function printNonNative(const pMarkup: IUnknown): WordBool; dispid 8;
    procedure printNonNativeFrames(const pMarkup: IUnknown; fActiveFrame: WordBool); dispid 9;
    property framesetDocument: WordBool dispid 10;
    property frameActive: WordBool dispid 11;
    property frameAsShown: WordBool dispid 12;
    property selection: WordBool dispid 13;
    property selectedPages: WordBool dispid 14;
    property currentPage: WordBool dispid 15;
    property currentPageAvail: WordBool dispid 16;
    property collate: WordBool dispid 17;
    property duplex: WordBool readonly dispid 18;
    property copies: Word dispid 19;
    property pageFrom: Word dispid 20;
    property pageTo: Word dispid 21;
    property tableOfLinks: WordBool dispid 22;
    property allLinkedDocuments: WordBool dispid 23;
    property header: WideString dispid 24;
    property footer: WideString dispid 25;
    property marginLeft: Integer dispid 26;
    property marginRight: Integer dispid 27;
    property marginTop: Integer dispid 28;
    property marginBottom: Integer dispid 29;
    property pageWidth: Integer readonly dispid 30;
    property pageHeight: Integer readonly dispid 31;
    property unprintableLeft: Integer readonly dispid 32;
    property unprintableTop: Integer readonly dispid 33;
    property unprintableRight: Integer readonly dispid 34;
    property unprintableBottom: Integer readonly dispid 35;
    procedure updatePageStatus(var p: Integer); dispid 36;
    property selectionEnabled: WordBool dispid 37;
    property frameActiveEnabled: WordBool dispid 38;
    property orientation: WideString dispid 39;
    property usePrinterCopyCollate: WordBool dispid 40;
    function deviceSupports(const bstrProperty: WideString): OleVariant; dispid 41;
    property headerFooterFont: WideString dispid 42;
    function getPageMarginTop(const pageRule: IDispatch; pageWidth: Integer; pageHeight: Integer): OleVariant; dispid 43;
    function getPageMarginRight(const pageRule: IDispatch; pageWidth: Integer; pageHeight: Integer): OleVariant; dispid 44;
    function getPageMarginBottom(const pageRule: IDispatch; pageWidth: Integer; pageHeight: Integer): OleVariant; dispid 45;
    function getPageMarginLeft(const pageRule: IDispatch; pageWidth: Integer; pageHeight: Integer): OleVariant; dispid 46;
    function getPageMarginTopImportant(const pageRule: IDispatch): WordBool; dispid 47;
    function getPageMarginRightImportant(const pageRule: IDispatch): WordBool; dispid 48;
    function getPageMarginBottomImportant(const pageRule: IDispatch): WordBool; dispid 49;
    function getPageMarginLeftImportant(const pageRule: IDispatch): WordBool; dispid 50;
  end;

// *********************************************************************//
// Interface: ISVGTextPathElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051051F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGTextPathElement = interface(IDispatch)
    ['{3051051F-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure _Set_startOffset(const p: ISVGAnimatedLength); safecall;
    function Get_startOffset: ISVGAnimatedLength; safecall;
    procedure _Set_method(const p: ISVGAnimatedEnumeration); safecall;
    function Get_method: ISVGAnimatedEnumeration; safecall;
    procedure _Set_spacing(const p: ISVGAnimatedEnumeration); safecall;
    function Get_spacing: ISVGAnimatedEnumeration; safecall;
    property startOffset: ISVGAnimatedLength read Get_startOffset write _Set_startOffset;
    property method: ISVGAnimatedEnumeration read Get_method write _Set_method;
    property spacing: ISVGAnimatedEnumeration read Get_spacing write _Set_spacing;
  end;

// *********************************************************************//
// DispIntf:  ISVGTextPathElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051051F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISVGTextPathElementDisp = dispinterface
    ['{3051051F-98B5-11CF-BB82-00AA00BDCE0B}']
    property startOffset: ISVGAnimatedLength dispid 1071;
    property method: ISVGAnimatedEnumeration dispid 1073;
    property spacing: ISVGAnimatedEnumeration dispid 1075;
  end;

// *********************************************************************//
// DispIntf:  DispSVGTextPathElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3059003D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispSVGTextPathElement = dispinterface
    ['{3059003D-98B5-11CF-BB82-00AA00BDCE0B}']
    property startOffset: ISVGAnimatedLength dispid 1071;
    property method: ISVGAnimatedEnumeration dispid 1073;
    property spacing: ISVGAnimatedEnumeration dispid 1075;
    property textLength: ISVGAnimatedLength dispid 1053;
    property lengthAdjust: ISVGAnimatedEnumeration dispid 1051;
    function getNumberOfChars: Integer; dispid 1054;
    function getComputedTextLength: Single; dispid 1055;
    function getSubStringLength(charnum: Integer; nchars: Integer): Single; dispid 1056;
    function getStartPositionOfChar(charnum: Integer): ISVGPoint; dispid 1057;
    function getEndPositionOfChar(charnum: Integer): ISVGPoint; dispid 1058;
    function getExtentOfChar(charnum: Integer): ISVGRect; dispid 1059;
    function getRotationOfChar(charnum: Integer): Single; dispid 1060;
    function getCharNumAtPosition(const point: ISVGPoint): Integer; dispid 1061;
    procedure selectSubString(charnum: Integer; nchars: Integer); dispid 1062;
    property href: ISVGAnimatedString readonly dispid 1026;
    property xmlbase: WideString dispid 1032;
    property ownerSVGElement: ISVGSVGElement dispid 1033;
    property viewportElement: ISVGElement dispid 1034;
    property focusable: ISVGAnimatedEnumeration dispid 1036;
    property requiredFeatures: ISVGStringList readonly dispid 1011;
    property requiredExtensions: ISVGStringList readonly dispid 1013;
    property systemLanguage: ISVGStringList readonly dispid 1015;
    function hasExtension(const extension: WideString): WordBool; dispid 1016;
    property xmllang: WideString dispid 1017;
    property xmlspace: WideString dispid 1018;
    property externalResourcesRequired: ISVGAnimatedBoolean readonly dispid 1020;
    property _className: ISVGAnimatedString readonly dispid 1001;
  end;

// *********************************************************************//
// Interface: IDOMXmlSerializer
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051077D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMXmlSerializer = interface(IDispatch)
    ['{3051077D-98B5-11CF-BB82-00AA00BDCE0B}']
    function serializeToString(const pNode: IHTMLDOMNode): WideString; safecall;
  end;

// *********************************************************************//
// DispIntf:  IDOMXmlSerializerDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051077D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMXmlSerializerDisp = dispinterface
    ['{3051077D-98B5-11CF-BB82-00AA00BDCE0B}']
    function serializeToString(const pNode: IHTMLDOMNode): WideString; dispid 1000;
  end;

// *********************************************************************//
// Interface: IDOMXmlSerializerFactory
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051077F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMXmlSerializerFactory = interface(IDispatch)
    ['{3051077F-98B5-11CF-BB82-00AA00BDCE0B}']
    function create: IDOMXmlSerializer; safecall;
  end;

// *********************************************************************//
// DispIntf:  IDOMXmlSerializerFactoryDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051077F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMXmlSerializerFactoryDisp = dispinterface
    ['{3051077F-98B5-11CF-BB82-00AA00BDCE0B}']
    function create: IDOMXmlSerializer; dispid 0;
  end;

// *********************************************************************//
// Interface: IDOMParser
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510781-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMParser = interface(IDispatch)
    ['{30510781-98B5-11CF-BB82-00AA00BDCE0B}']
    function parseFromString(const xmlSource: WideString; const mimeType: WideString): IHTMLDocument2; safecall;
  end;

// *********************************************************************//
// DispIntf:  IDOMParserDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510781-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMParserDisp = dispinterface
    ['{30510781-98B5-11CF-BB82-00AA00BDCE0B}']
    function parseFromString(const xmlSource: WideString; const mimeType: WideString): IHTMLDocument2; dispid 1000;
  end;

// *********************************************************************//
// Interface: IDOMParserFactory
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510783-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMParserFactory = interface(IDispatch)
    ['{30510783-98B5-11CF-BB82-00AA00BDCE0B}']
    function create: IDOMParser; safecall;
  end;

// *********************************************************************//
// DispIntf:  IDOMParserFactoryDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510783-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMParserFactoryDisp = dispinterface
    ['{30510783-98B5-11CF-BB82-00AA00BDCE0B}']
    function create: IDOMParser; dispid 0;
  end;

// *********************************************************************//
// DispIntf:  DispXMLSerializer
// Flags:     (4112) Hidden Dispatchable
// GUID:      {305900AD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispXMLSerializer = dispinterface
    ['{305900AD-98B5-11CF-BB82-00AA00BDCE0B}']
    function serializeToString(const pNode: IHTMLDOMNode): WideString; dispid 1000;
  end;

// *********************************************************************//
// DispIntf:  DispDOMParser
// Flags:     (4112) Hidden Dispatchable
// GUID:      {305900AE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispDOMParser = dispinterface
    ['{305900AE-98B5-11CF-BB82-00AA00BDCE0B}']
    function parseFromString(const xmlSource: WideString; const mimeType: WideString): IHTMLDocument2; dispid 1000;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLSemanticElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {305900BA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLSemanticElement = dispinterface
    ['{305900BA-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
  end;

// *********************************************************************//
// Interface: IHTMLProgressElement
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2D6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLProgressElement = interface(IDispatch)
    ['{3050F2D6-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_value(p: Single); safecall;
    function Get_value: Single; safecall;
    procedure Set_max(p: Single); safecall;
    function Get_max: Single; safecall;
    function Get_position: Single; safecall;
    function Get_form: IHTMLFormElement; safecall;
    property value: Single read Get_value write Set_value;
    property max: Single read Get_max write Set_max;
    property position: Single read Get_position;
    property form: IHTMLFormElement read Get_form;
  end;

// *********************************************************************//
// DispIntf:  IHTMLProgressElementDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F2D6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLProgressElementDisp = dispinterface
    ['{3050F2D6-98B5-11CF-BB82-00AA00BDCE0B}']
    property value: Single dispid 0;
    property max: Single dispid 1000;
    property position: Single readonly dispid 1001;
    property form: IHTMLFormElement readonly dispid -2147416108;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLProgressElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {305900AF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLProgressElement = dispinterface
    ['{305900AF-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property scopeName: WideString readonly dispid -2147417073;
    procedure setCapture(containerCapture: WordBool); dispid -2147417072;
    procedure releaseCapture; dispid -2147417071;
    property onlosecapture: OleVariant dispid -2147412066;
    function componentFromPoint(x: Integer; y: Integer): WideString; dispid -2147417070;
    procedure doScroll(component: OleVariant); dispid -2147417069;
    property onscroll: OleVariant dispid -2147412081;
    property ondrag: OleVariant dispid -2147412063;
    property ondragend: OleVariant dispid -2147412062;
    property ondragenter: OleVariant dispid -2147412061;
    property ondragover: OleVariant dispid -2147412060;
    property ondragleave: OleVariant dispid -2147412059;
    property ondrop: OleVariant dispid -2147412058;
    property onbeforecut: OleVariant dispid -2147412054;
    property oncut: OleVariant dispid -2147412057;
    property onbeforecopy: OleVariant dispid -2147412053;
    property oncopy: OleVariant dispid -2147412056;
    property onbeforepaste: OleVariant dispid -2147412052;
    property onpaste: OleVariant dispid -2147412055;
    property currentStyle: IHTMLCurrentStyle readonly dispid -2147417105;
    property onpropertychange: OleVariant dispid -2147412065;
    function getClientRects: IHTMLRectCollection; dispid -2147417068;
    function getBoundingClientRect: IHTMLRect; dispid -2147417067;
    procedure setExpression(const propname: WideString; const expression: WideString; 
                            const language: WideString); dispid -2147417608;
    function getExpression(const propname: WideString): OleVariant; dispid -2147417607;
    function removeExpression(const propname: WideString): WordBool; dispid -2147417606;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    property onrowsdelete: OleVariant dispid -2147412050;
    property onrowsinserted: OleVariant dispid -2147412049;
    property oncellchange: OleVariant dispid -2147412048;
    property dir: WideString dispid -2147412995;
    function createControlRange: IDispatch; dispid -2147417056;
    property scrollHeight: Integer readonly dispid -2147417055;
    property scrollWidth: Integer readonly dispid -2147417054;
    property scrollTop: Integer dispid -2147417053;
    property scrollLeft: Integer dispid -2147417052;
    procedure clearAttributes; dispid -2147417050;
    property oncontextmenu: OleVariant dispid -2147412047;
    function insertAdjacentElement(const where: WideString; const insertedElement: IHTMLElement): IHTMLElement; dispid -2147417043;
    function applyElement(const apply: IHTMLElement; const where: WideString): IHTMLElement; dispid -2147417047;
    function getAdjacentText(const where: WideString): WideString; dispid -2147417042;
    function replaceAdjacentText(const where: WideString; const newText: WideString): WideString; dispid -2147417041;
    property canHaveChildren: WordBool readonly dispid -2147417040;
    function addBehavior(const bstrURL: WideString; const pvarFactory: OleVariant): Integer; dispid -2147417032;
    function removeBehavior(cookie: Integer): WordBool; dispid -2147417031;
    property runtimeStyle: IHTMLStyle readonly dispid -2147417048;
    property behaviorUrns: IDispatch readonly dispid -2147417030;
    property tagUrn: WideString dispid -2147417029;
    property onbeforeeditfocus: OleVariant dispid -2147412043;
    property readyStateValue: Integer readonly dispid -2147417028;
    function getElementsByTagName(const v: WideString): IHTMLElementCollection; dispid -2147417027;
    procedure mergeAttributes(const mergeThis: IHTMLElement; const pvarFlags: OleVariant); dispid -2147417016;
    property isMultiLine: WordBool readonly dispid -2147417015;
    property canHaveHTML: WordBool readonly dispid -2147417014;
    property onlayoutcomplete: OleVariant dispid -2147412039;
    property onpage: OleVariant dispid -2147412038;
    property inflateBlock: WordBool dispid -2147417012;
    property onbeforedeactivate: OleVariant dispid -2147412035;
    procedure setActive; dispid -2147417011;
    property contentEditable: WideString dispid -2147412950;
    property isContentEditable: WordBool readonly dispid -2147417010;
    property hideFocus: WordBool dispid -2147412949;
    property disabled: WordBool dispid -2147418036;
    property isDisabled: WordBool readonly dispid -2147417007;
    property onmove: OleVariant dispid -2147412034;
    property oncontrolselect: OleVariant dispid -2147412033;
    function FireEvent(const bstrEventName: WideString; const pvarEventObject: OleVariant): WordBool; dispid -2147417006;
    property onresizestart: OleVariant dispid -2147412029;
    property onresizeend: OleVariant dispid -2147412028;
    property onmovestart: OleVariant dispid -2147412031;
    property onmoveend: OleVariant dispid -2147412030;
    property onmouseenter: OleVariant dispid -2147412027;
    property onmouseleave: OleVariant dispid -2147412026;
    property onactivate: OleVariant dispid -2147412025;
    property ondeactivate: OleVariant dispid -2147412024;
    function dragDrop: WordBool; dispid -2147417005;
    property glyphMode: Integer readonly dispid -2147417004;
    property onmousewheel: OleVariant dispid -2147412036;
    procedure normalize; dispid -2147417000;
    function getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute; dispid -2147417003;
    function setAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417002;
    function removeAttributeNode(const pattr: IHTMLDOMAttribute): IHTMLDOMAttribute; dispid -2147417001;
    property onbeforeactivate: OleVariant dispid -2147412022;
    property onfocusin: OleVariant dispid -2147412021;
    property onfocusout: OleVariant dispid -2147412020;
    property uniqueNumber: Integer readonly dispid -2147417058;
    property uniqueID: WideString readonly dispid -2147417057;
    property nodeType: Integer readonly dispid -2147417066;
    property parentNode: IHTMLDOMNode readonly dispid -2147417065;
    function hasChildNodes: WordBool; dispid -2147417064;
    property childNodes: IDispatch readonly dispid -2147417063;
    property attributes: IDispatch readonly dispid -2147417062;
    function insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147417061;
    function removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417060;
    function replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417059;
    function cloneNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417051;
    function removeNode(fDeep: WordBool): IHTMLDOMNode; dispid -2147417046;
    function swapNode(const otherNode: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417044;
    function replaceNode(const replacement: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417045;
    function appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147417039;
    property nodeName: WideString readonly dispid -2147417038;
    property nodeValue: OleVariant dispid -2147417037;
    property firstChild: IHTMLDOMNode readonly dispid -2147417036;
    property lastChild: IHTMLDOMNode readonly dispid -2147417035;
    property previousSibling: IHTMLDOMNode readonly dispid -2147417034;
    property nextSibling: IHTMLDOMNode readonly dispid -2147417033;
    property ownerDocument: IDispatch readonly dispid -2147416999;
    property prefix: OleVariant dispid -2147416992;
    property localName: OleVariant readonly dispid -2147416994;
    property namespaceURI: OleVariant readonly dispid -2147416993;
    property textContent: OleVariant dispid -2147416985;
    function isEqualNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416991;
    function lookupNamespaceURI(const pvarPrefix: OleVariant): OleVariant; dispid -2147416990;
    function lookupPrefix(const pvarNamespaceURI: OleVariant): OleVariant; dispid -2147416989;
    function isDefaultNamespace(const pvarNamespace: OleVariant): WordBool; dispid -2147416988;
    function ie9_appendChild(const newChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416844;
    function ie9_insertBefore(const newChild: IHTMLDOMNode; refChild: OleVariant): IHTMLDOMNode; dispid -2147416843;
    function ie9_removeChild(const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416842;
    function ie9_replaceChild(const newChild: IHTMLDOMNode; const oldChild: IHTMLDOMNode): IHTMLDOMNode; dispid -2147416841;
    function isSameNode(const otherNode: IHTMLDOMNode3): WordBool; dispid -2147416987;
    function compareDocumentPosition(const otherNode: IHTMLDOMNode): Word; dispid -2147416986;
    function isSupported(const feature: WideString; version: OleVariant): WordBool; dispid -2147416835;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
    function ie8_getAttributeNode(const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416912;
    function ie8_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416911;
    function ie8_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416910;
    function hasAttribute(const name: WideString): WordBool; dispid -2147416909;
    property role: WideString dispid -2147416908;
    property ariaBusy: WideString dispid -2147416907;
    property ariaChecked: WideString dispid -2147416906;
    property ariaDisabled: WideString dispid -2147416905;
    property ariaExpanded: WideString dispid -2147416904;
    property ariaHaspopup: WideString dispid -2147416903;
    property ariaHidden: WideString dispid -2147416902;
    property ariaInvalid: WideString dispid -2147416901;
    property ariaMultiselectable: WideString dispid -2147416900;
    property ariaPressed: WideString dispid -2147416899;
    property ariaReadonly: WideString dispid -2147416898;
    property ariaRequired: WideString dispid -2147416897;
    property ariaSecret: WideString dispid -2147416896;
    property ariaSelected: WideString dispid -2147416895;
    function ie8_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416894;
    procedure ie8_setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant); dispid -2147416893;
    function ie8_removeAttribute(const strAttributeName: WideString): WordBool; dispid -2147416892;
    property ie8_attributes: IHTMLAttributeCollection3 readonly dispid -2147416891;
    property ariaValuenow: WideString dispid -2147416890;
    property ariaPosinset: Smallint dispid -2147416889;
    property ariaSetsize: Smallint dispid -2147416888;
    property ariaLevel: Smallint dispid -2147416887;
    property ariaValuemin: WideString dispid -2147416886;
    property ariaValuemax: WideString dispid -2147416885;
    property ariaControls: WideString dispid -2147416884;
    property ariaDescribedby: WideString dispid -2147416883;
    property ariaFlowto: WideString dispid -2147416882;
    property ariaLabelledby: WideString dispid -2147416881;
    property ariaActivedescendant: WideString dispid -2147416880;
    property ariaOwns: WideString dispid -2147416879;
    function hasAttributes: WordBool; dispid -2147416878;
    property ariaLive: WideString dispid -2147416877;
    property ariaRelevant: WideString dispid -2147416876;
    function getAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString): OleVariant; dispid -2147416859;
    procedure setAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString; 
                             const pvarAttributeValue: OleVariant); dispid -2147416858;
    procedure removeAttributeNS(const pvarNS: OleVariant; const strAttributeName: WideString); dispid -2147416857;
    function getAttributeNodeNS(const pvarNS: OleVariant; const bstrName: WideString): IHTMLDOMAttribute2; dispid -2147416862;
    function setAttributeNodeNS(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416861;
    function hasAttributeNS(const pvarNS: OleVariant; const name: WideString): WordBool; dispid -2147416860;
    function ie9_getAttribute(const strAttributeName: WideString): OleVariant; dispid -2147416852;
    procedure ie9_setAttribute(const strAttributeName: WideString; 
                               const pvarAttributeValue: OleVariant); dispid -2147416851;
    procedure ie9_removeAttribute(const strAttributeName: WideString); dispid -2147416850;
    function ie9_getAttributeNode(const strAttributeName: WideString): IHTMLDOMAttribute2; dispid -2147416856;
    function ie9_setAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416855;
    function ie9_removeAttributeNode(const pattr: IHTMLDOMAttribute2): IHTMLDOMAttribute2; dispid -2147416854;
    function ie9_hasAttribute(const name: WideString): WordBool; dispid -2147416853;
    function getElementsByTagNameNS(const varNS: OleVariant; const bstrLocalName: WideString): IHTMLElementCollection; dispid -2147416849;
    property ie9_tagName: WideString readonly dispid -2147416847;
    property ie9_nodeName: WideString readonly dispid -2147416846;
    function getElementsByClassName(const v: WideString): IHTMLElementCollection; dispid -2147416845;
    function msMatchesSelector(const v: WideString): WordBool; dispid -2147416834;
    property onabort: OleVariant dispid -2147412084;
    property oncanplay: OleVariant dispid -2147411978;
    property oncanplaythrough: OleVariant dispid -2147411977;
    property onchange: OleVariant dispid -2147412082;
    property ondurationchange: OleVariant dispid -2147411976;
    property onemptied: OleVariant dispid -2147411975;
    property onended: OleVariant dispid -2147411974;
    property onerror: OleVariant dispid -2147412083;
    property oninput: OleVariant dispid -2147411985;
    property onload: OleVariant dispid -2147412080;
    property onloadeddata: OleVariant dispid -2147411973;
    property onloadedmetadata: OleVariant dispid -2147411972;
    property onloadstart: OleVariant dispid -2147411971;
    property onpause: OleVariant dispid -2147411970;
    property onplay: OleVariant dispid -2147411969;
    property onplaying: OleVariant dispid -2147411968;
    property onprogress: OleVariant dispid -2147411967;
    property onratechange: OleVariant dispid -2147411966;
    property onreset: OleVariant dispid -2147412100;
    property onseeked: OleVariant dispid -2147411965;
    property onseeking: OleVariant dispid -2147411964;
    property onselect: OleVariant dispid -2147412102;
    property onstalled: OleVariant dispid -2147411963;
    property onsubmit: OleVariant dispid -2147412101;
    property onsuspend: OleVariant dispid -2147411962;
    property ontimeupdate: OleVariant dispid -2147411961;
    property onvolumechange: OleVariant dispid -2147411960;
    property onwaiting: OleVariant dispid -2147411959;
    function ie9_hasAttributes: WordBool; dispid -2147416833;
    function querySelector(const v: WideString): IHTMLElement; dispid -2147416998;
    function querySelectorAll(const v: WideString): IHTMLDOMChildrenCollection; dispid -2147416997;
    property constructor_: IDispatch readonly dispid -2147417603;
    property onmspointerdown: OleVariant dispid -2147411958;
    property onmspointermove: OleVariant dispid -2147411957;
    property onmspointerup: OleVariant dispid -2147411956;
    property onmspointerover: OleVariant dispid -2147411955;
    property onmspointerout: OleVariant dispid -2147411954;
    property onmspointercancel: OleVariant dispid -2147411953;
    property onmspointerhover: OleVariant dispid -2147411952;
    property onmslostpointercapture: OleVariant dispid -2147411942;
    property onmsgotpointercapture: OleVariant dispid -2147411941;
    property onmsgesturestart: OleVariant dispid -2147411949;
    property onmsgesturechange: OleVariant dispid -2147411948;
    property onmsgestureend: OleVariant dispid -2147411947;
    property onmsgesturehold: OleVariant dispid -2147411946;
    property onmsgesturetap: OleVariant dispid -2147411945;
    property onmsgesturedoubletap: OleVariant dispid -2147411944;
    property onmsinertiastart: OleVariant dispid -2147411943;
    procedure msSetPointerCapture(pointerId: Integer); dispid -2147416826;
    procedure msReleasePointerCapture(pointerId: Integer); dispid -2147416825;
    property onmstransitionstart: OleVariant dispid -2147411939;
    property onmstransitionend: OleVariant dispid -2147411938;
    property onmsanimationstart: OleVariant dispid -2147411937;
    property onmsanimationend: OleVariant dispid -2147411936;
    property onmsanimationiteration: OleVariant dispid -2147411935;
    property oninvalid: OleVariant dispid -2147411924;
    property xmsAcceleratorKey: WideString dispid -2147416814;
    property spellcheck: OleVariant dispid -2147412741;
    property onmsmanipulationstatechanged: OleVariant dispid -2147411934;
    property oncuechange: OleVariant dispid -2147411919;
    property value: Single dispid 0;
    property max: Single dispid 1000;
    property position: Single readonly dispid 1001;
    property form: IHTMLFormElement readonly dispid -2147416108;
  end;

// *********************************************************************//
// Interface: IDOMMSTransitionEvent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305107B5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMMSTransitionEvent = interface(IDispatch)
    ['{305107B5-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_propertyName: WideString; safecall;
    function Get_elapsedTime: Single; safecall;
    procedure initMSTransitionEvent(const eventType: WideString; canBubble: WordBool; 
                                    cancelable: WordBool; const propertyName: WideString; 
                                    elapsedTime: Single); safecall;
    property propertyName: WideString read Get_propertyName;
    property elapsedTime: Single read Get_elapsedTime;
  end;

// *********************************************************************//
// DispIntf:  IDOMMSTransitionEventDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305107B5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMMSTransitionEventDisp = dispinterface
    ['{305107B5-98B5-11CF-BB82-00AA00BDCE0B}']
    property propertyName: WideString readonly dispid 1476;
    property elapsedTime: Single readonly dispid 1477;
    procedure initMSTransitionEvent(const eventType: WideString; canBubble: WordBool; 
                                    cancelable: WordBool; const propertyName: WideString; 
                                    elapsedTime: Single); dispid 1478;
  end;

// *********************************************************************//
// DispIntf:  DispDOMMSTransitionEvent
// Flags:     (4112) Hidden Dispatchable
// GUID:      {305900BB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispDOMMSTransitionEvent = dispinterface
    ['{305900BB-98B5-11CF-BB82-00AA00BDCE0B}']
    property bubbles: WordBool readonly dispid 1001;
    property cancelable: WordBool readonly dispid 1002;
    property currentTarget: IEventTarget readonly dispid 1003;
    property defaultPrevented: WordBool readonly dispid 1004;
    property eventPhase: Word readonly dispid 1005;
    property target: IEventTarget readonly dispid 1006;
    property timeStamp: Largeuint readonly dispid 1007;
    property type_: WideString readonly dispid 1008;
    procedure initEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool); dispid 1009;
    procedure preventDefault; dispid 1010;
    procedure stopPropagation; dispid 1011;
    procedure stopImmediatePropagation; dispid 1012;
    property isTrusted: WordBool readonly dispid 1013;
    property cancelBubble: WordBool dispid 1014;
    property srcElement: IHTMLElement readonly dispid 1015;
    property propertyName: WideString readonly dispid 1476;
    property elapsedTime: Single readonly dispid 1477;
    procedure initMSTransitionEvent(const eventType: WideString; canBubble: WordBool; 
                                    cancelable: WordBool; const propertyName: WideString; 
                                    elapsedTime: Single); dispid 1478;
  end;

// *********************************************************************//
// Interface: IDOMMSAnimationEvent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305107B7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMMSAnimationEvent = interface(IDispatch)
    ['{305107B7-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_animationName: WideString; safecall;
    function Get_elapsedTime: Single; safecall;
    procedure initMSAnimationEvent(const eventType: WideString; canBubble: WordBool; 
                                   cancelable: WordBool; const animationName: WideString; 
                                   elapsedTime: Single); safecall;
    property animationName: WideString read Get_animationName;
    property elapsedTime: Single read Get_elapsedTime;
  end;

// *********************************************************************//
// DispIntf:  IDOMMSAnimationEventDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305107B7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMMSAnimationEventDisp = dispinterface
    ['{305107B7-98B5-11CF-BB82-00AA00BDCE0B}']
    property animationName: WideString readonly dispid 1501;
    property elapsedTime: Single readonly dispid 1502;
    procedure initMSAnimationEvent(const eventType: WideString; canBubble: WordBool; 
                                   cancelable: WordBool; const animationName: WideString; 
                                   elapsedTime: Single); dispid 1503;
  end;

// *********************************************************************//
// DispIntf:  DispDOMMSAnimationEvent
// Flags:     (4112) Hidden Dispatchable
// GUID:      {305900BC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispDOMMSAnimationEvent = dispinterface
    ['{305900BC-98B5-11CF-BB82-00AA00BDCE0B}']
    property bubbles: WordBool readonly dispid 1001;
    property cancelable: WordBool readonly dispid 1002;
    property currentTarget: IEventTarget readonly dispid 1003;
    property defaultPrevented: WordBool readonly dispid 1004;
    property eventPhase: Word readonly dispid 1005;
    property target: IEventTarget readonly dispid 1006;
    property timeStamp: Largeuint readonly dispid 1007;
    property type_: WideString readonly dispid 1008;
    procedure initEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool); dispid 1009;
    procedure preventDefault; dispid 1010;
    procedure stopPropagation; dispid 1011;
    procedure stopImmediatePropagation; dispid 1012;
    property isTrusted: WordBool readonly dispid 1013;
    property cancelBubble: WordBool dispid 1014;
    property srcElement: IHTMLElement readonly dispid 1015;
    property animationName: WideString readonly dispid 1501;
    property elapsedTime: Single readonly dispid 1502;
    procedure initMSAnimationEvent(const eventType: WideString; canBubble: WordBool; 
                                   cancelable: WordBool; const animationName: WideString; 
                                   elapsedTime: Single); dispid 1503;
  end;

// *********************************************************************//
// Interface: IWebGeocoordinates
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305107C7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IWebGeocoordinates = interface(IDispatch)
    ['{305107C7-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_latitude: Double; safecall;
    function Get_longitude: Double; safecall;
    function Get_altitude: OleVariant; safecall;
    function Get_accuracy: Double; safecall;
    function Get_altitudeAccuracy: OleVariant; safecall;
    function Get_heading: OleVariant; safecall;
    function Get_speed: OleVariant; safecall;
    property latitude: Double read Get_latitude;
    property longitude: Double read Get_longitude;
    property altitude: OleVariant read Get_altitude;
    property accuracy: Double read Get_accuracy;
    property altitudeAccuracy: OleVariant read Get_altitudeAccuracy;
    property heading: OleVariant read Get_heading;
    property speed: OleVariant read Get_speed;
  end;

// *********************************************************************//
// DispIntf:  IWebGeocoordinatesDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305107C7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IWebGeocoordinatesDisp = dispinterface
    ['{305107C7-98B5-11CF-BB82-00AA00BDCE0B}']
    property latitude: Double readonly dispid 1001;
    property longitude: Double readonly dispid 1002;
    property altitude: OleVariant readonly dispid 1003;
    property accuracy: Double readonly dispid 1004;
    property altitudeAccuracy: OleVariant readonly dispid 1005;
    property heading: OleVariant readonly dispid 1006;
    property speed: OleVariant readonly dispid 1007;
  end;

// *********************************************************************//
// Interface: IWebGeopositionError
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305107C9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IWebGeopositionError = interface(IDispatch)
    ['{305107C9-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_code: Integer; safecall;
    function Get_message: WideString; safecall;
    property code: Integer read Get_code;
    property message: WideString read Get_message;
  end;

// *********************************************************************//
// DispIntf:  IWebGeopositionErrorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305107C9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IWebGeopositionErrorDisp = dispinterface
    ['{305107C9-98B5-11CF-BB82-00AA00BDCE0B}']
    property code: Integer readonly dispid 1001;
    property message: WideString readonly dispid 1002;
  end;

// *********************************************************************//
// Interface: IWebGeoposition
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305107CD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IWebGeoposition = interface(IDispatch)
    ['{305107CD-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_coords: IWebGeocoordinates; safecall;
    function Get_timeStamp: Largeuint; safecall;
    property coords: IWebGeocoordinates read Get_coords;
    property timeStamp: Largeuint read Get_timeStamp;
  end;

// *********************************************************************//
// DispIntf:  IWebGeopositionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305107CD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IWebGeopositionDisp = dispinterface
    ['{305107CD-98B5-11CF-BB82-00AA00BDCE0B}']
    property coords: IWebGeocoordinates readonly dispid 1001;
    property timeStamp: Largeuint readonly dispid 1002;
  end;

// *********************************************************************//
// DispIntf:  DispWebGeolocation
// Flags:     (4112) Hidden Dispatchable
// GUID:      {305900BD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispWebGeolocation = dispinterface
    ['{305900BD-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure getCurrentPosition(const successCallback: IDispatch; const errorCallback: IDispatch; 
                                 const options: IDispatch); dispid 1001;
    function watchPosition(const successCallback: IDispatch; const errorCallback: IDispatch; 
                           const options: IDispatch): Integer; dispid 1002;
    procedure clearWatch(watchId: Integer); dispid 1003;
  end;

// *********************************************************************//
// DispIntf:  DispWebGeocoordinates
// Flags:     (4112) Hidden Dispatchable
// GUID:      {305900BE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispWebGeocoordinates = dispinterface
    ['{305900BE-98B5-11CF-BB82-00AA00BDCE0B}']
    property latitude: Double readonly dispid 1001;
    property longitude: Double readonly dispid 1002;
    property altitude: OleVariant readonly dispid 1003;
    property accuracy: Double readonly dispid 1004;
    property altitudeAccuracy: OleVariant readonly dispid 1005;
    property heading: OleVariant readonly dispid 1006;
    property speed: OleVariant readonly dispid 1007;
  end;

// *********************************************************************//
// DispIntf:  DispWebGeopositionError
// Flags:     (4112) Hidden Dispatchable
// GUID:      {305900BF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispWebGeopositionError = dispinterface
    ['{305900BF-98B5-11CF-BB82-00AA00BDCE0B}']
    property code: Integer readonly dispid 1001;
    property message: WideString readonly dispid 1002;
  end;

// *********************************************************************//
// DispIntf:  DispWebGeoposition
// Flags:     (4112) Hidden Dispatchable
// GUID:      {305900C1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispWebGeoposition = dispinterface
    ['{305900C1-98B5-11CF-BB82-00AA00BDCE0B}']
    property coords: IWebGeocoordinates readonly dispid 1001;
    property timeStamp: Largeuint readonly dispid 1002;
  end;

// *********************************************************************//
// Interface: IClientCaps
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7E8BC44D-AEFF-11D1-89C2-00C04FB6BFC4}
// *********************************************************************//
  IClientCaps = interface(IDispatch)
    ['{7E8BC44D-AEFF-11D1-89C2-00C04FB6BFC4}']
    function Get_javaEnabled: WordBool; safecall;
    function Get_cookieEnabled: WordBool; safecall;
    function Get_cpuClass: WideString; safecall;
    function Get_systemLanguage: WideString; safecall;
    function Get_userLanguage: WideString; safecall;
    function Get_platform: WideString; safecall;
    function Get_connectionSpeed: Integer; safecall;
    function Get_onLine: WordBool; safecall;
    function Get_colorDepth: Integer; safecall;
    function Get_bufferDepth: Integer; safecall;
    function Get_width: Integer; safecall;
    function Get_height: Integer; safecall;
    function Get_availHeight: Integer; safecall;
    function Get_availWidth: Integer; safecall;
    function Get_connectionType: WideString; safecall;
    function isComponentInstalled(const bstrName: WideString; const bstrURL: WideString; 
                                  const bStrVer: WideString): WordBool; safecall;
    function getComponentVersion(const bstrName: WideString; const bstrURL: WideString): WideString; safecall;
    function compareVersions(const bstrVer1: WideString; const bstrVer2: WideString): Integer; safecall;
    procedure addComponentRequest(const bstrName: WideString; const bstrURL: WideString; 
                                  const bStrVer: WideString); safecall;
    function doComponentRequest: WordBool; safecall;
    procedure clearComponentRequest; safecall;
    property javaEnabled: WordBool read Get_javaEnabled;
    property cookieEnabled: WordBool read Get_cookieEnabled;
    property cpuClass: WideString read Get_cpuClass;
    property systemLanguage: WideString read Get_systemLanguage;
    property userLanguage: WideString read Get_userLanguage;
    property platform: WideString read Get_platform;
    property connectionSpeed: Integer read Get_connectionSpeed;
    property onLine: WordBool read Get_onLine;
    property colorDepth: Integer read Get_colorDepth;
    property bufferDepth: Integer read Get_bufferDepth;
    property width: Integer read Get_width;
    property height: Integer read Get_height;
    property availHeight: Integer read Get_availHeight;
    property availWidth: Integer read Get_availWidth;
    property connectionType: WideString read Get_connectionType;
  end;

// *********************************************************************//
// DispIntf:  IClientCapsDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {7E8BC44D-AEFF-11D1-89C2-00C04FB6BFC4}
// *********************************************************************//
  IClientCapsDisp = dispinterface
    ['{7E8BC44D-AEFF-11D1-89C2-00C04FB6BFC4}']
    property javaEnabled: WordBool readonly dispid 1;
    property cookieEnabled: WordBool readonly dispid 2;
    property cpuClass: WideString readonly dispid 3;
    property systemLanguage: WideString readonly dispid 4;
    property userLanguage: WideString readonly dispid 5;
    property platform: WideString readonly dispid 6;
    property connectionSpeed: Integer readonly dispid 7;
    property onLine: WordBool readonly dispid 8;
    property colorDepth: Integer readonly dispid 9;
    property bufferDepth: Integer readonly dispid 10;
    property width: Integer readonly dispid 11;
    property height: Integer readonly dispid 12;
    property availHeight: Integer readonly dispid 13;
    property availWidth: Integer readonly dispid 14;
    property connectionType: WideString readonly dispid 15;
    function isComponentInstalled(const bstrName: WideString; const bstrURL: WideString; 
                                  const bStrVer: WideString): WordBool; dispid 16;
    function getComponentVersion(const bstrName: WideString; const bstrURL: WideString): WideString; dispid 17;
    function compareVersions(const bstrVer1: WideString; const bstrVer2: WideString): Integer; dispid 18;
    procedure addComponentRequest(const bstrName: WideString; const bstrURL: WideString; 
                                  const bStrVer: WideString); dispid 19;
    function doComponentRequest: WordBool; dispid 20;
    procedure clearComponentRequest; dispid 21;
  end;

// *********************************************************************//
// Interface: IDOMMSManipulationEvent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510816-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMMSManipulationEvent = interface(IDispatch)
    ['{30510816-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_lastState: Integer; safecall;
    function Get_currentState: Integer; safecall;
    procedure initMSManipulationEvent(const eventType: WideString; canBubble: WordBool; 
                                      cancelable: WordBool; const viewArg: IHTMLWindow2; 
                                      detailArg: Integer; lastState: Integer; currentState: Integer); safecall;
    property lastState: Integer read Get_lastState;
    property currentState: Integer read Get_currentState;
  end;

// *********************************************************************//
// DispIntf:  IDOMMSManipulationEventDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {30510816-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMMSManipulationEventDisp = dispinterface
    ['{30510816-98B5-11CF-BB82-00AA00BDCE0B}']
    property lastState: Integer readonly dispid 1526;
    property currentState: Integer readonly dispid 1527;
    procedure initMSManipulationEvent(const eventType: WideString; canBubble: WordBool; 
                                      cancelable: WordBool; const viewArg: IHTMLWindow2; 
                                      detailArg: Integer; lastState: Integer; currentState: Integer); dispid 1528;
  end;

// *********************************************************************//
// DispIntf:  DispDOMMSManipulationEvent
// Flags:     (4112) Hidden Dispatchable
// GUID:      {305900E1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispDOMMSManipulationEvent = dispinterface
    ['{305900E1-98B5-11CF-BB82-00AA00BDCE0B}']
    property bubbles: WordBool readonly dispid 1001;
    property cancelable: WordBool readonly dispid 1002;
    property currentTarget: IEventTarget readonly dispid 1003;
    property defaultPrevented: WordBool readonly dispid 1004;
    property eventPhase: Word readonly dispid 1005;
    property target: IEventTarget readonly dispid 1006;
    property timeStamp: Largeuint readonly dispid 1007;
    property type_: WideString readonly dispid 1008;
    procedure initEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool); dispid 1009;
    procedure preventDefault; dispid 1010;
    procedure stopPropagation; dispid 1011;
    procedure stopImmediatePropagation; dispid 1012;
    property isTrusted: WordBool readonly dispid 1013;
    property cancelBubble: WordBool dispid 1014;
    property srcElement: IHTMLElement readonly dispid 1015;
    property view: IHTMLWindow2 readonly dispid 1026;
    property detail: Integer readonly dispid 1027;
    procedure initUIEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool; 
                          const view: IHTMLWindow2; detail: Integer); dispid 1028;
    property lastState: Integer readonly dispid 1526;
    property currentState: Integer readonly dispid 1527;
    procedure initMSManipulationEvent(const eventType: WideString; canBubble: WordBool; 
                                      cancelable: WordBool; const viewArg: IHTMLWindow2; 
                                      detailArg: Integer; lastState: Integer; currentState: Integer); dispid 1528;
  end;

// *********************************************************************//
// Interface: IDOMCloseEvent
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305107FF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMCloseEvent = interface(IDispatch)
    ['{305107FF-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_wasClean: WordBool; safecall;
    procedure initCloseEvent(const eventType: WideString; canBubble: WordBool; 
                             cancelable: WordBool; wasClean: WordBool; code: Integer; 
                             const reason: WideString); safecall;
    property wasClean: WordBool read Get_wasClean;
  end;

// *********************************************************************//
// DispIntf:  IDOMCloseEventDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {305107FF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMCloseEventDisp = dispinterface
    ['{305107FF-98B5-11CF-BB82-00AA00BDCE0B}']
    property wasClean: WordBool readonly dispid 1526;
    procedure initCloseEvent(const eventType: WideString; canBubble: WordBool; 
                             cancelable: WordBool; wasClean: WordBool; code: Integer; 
                             const reason: WideString); dispid 1529;
  end;

// *********************************************************************//
// DispIntf:  DispDOMCloseEvent
// Flags:     (4112) Hidden Dispatchable
// GUID:      {305900DC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispDOMCloseEvent = dispinterface
    ['{305900DC-98B5-11CF-BB82-00AA00BDCE0B}']
    property bubbles: WordBool readonly dispid 1001;
    property cancelable: WordBool readonly dispid 1002;
    property currentTarget: IEventTarget readonly dispid 1003;
    property defaultPrevented: WordBool readonly dispid 1004;
    property eventPhase: Word readonly dispid 1005;
    property target: IEventTarget readonly dispid 1006;
    property timeStamp: Largeuint readonly dispid 1007;
    property type_: WideString readonly dispid 1008;
    procedure initEvent(const eventType: WideString; canBubble: WordBool; cancelable: WordBool); dispid 1009;
    procedure preventDefault; dispid 1010;
    procedure stopPropagation; dispid 1011;
    procedure stopImmediatePropagation; dispid 1012;
    property isTrusted: WordBool readonly dispid 1013;
    property cancelBubble: WordBool dispid 1014;
    property srcElement: IHTMLElement readonly dispid 1015;
    property wasClean: WordBool readonly dispid 1526;
    procedure initCloseEvent(const eventType: WideString; canBubble: WordBool; 
                             cancelable: WordBool; wasClean: WordBool; code: Integer; 
                             const reason: WideString); dispid 1529;
  end;

// *********************************************************************//
// DispIntf:  DispApplicationCache
// Flags:     (4112) Hidden Dispatchable
// GUID:      {305900E4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispApplicationCache = dispinterface
    ['{305900E4-98B5-11CF-BB82-00AA00BDCE0B}']
    property status: Integer readonly dispid 1001;
    property onchecking: OleVariant dispid -2147411931;
    property onerror: OleVariant dispid -2147412083;
    property onnoupdate: OleVariant dispid -2147411930;
    property ondownloading: OleVariant dispid -2147411929;
    property onprogress: OleVariant dispid -2147411967;
    property onupdateready: OleVariant dispid -2147411928;
    property oncached: OleVariant dispid -2147411927;
    property onobsolete: OleVariant dispid -2147411926;
    procedure update; dispid 1002;
    procedure swapCache; dispid 1003;
    procedure abort; dispid 1004;
  end;

// *********************************************************************//
// Interface: ICSSFilterSite
// Flags:     (0)
// GUID:      {3050F3ED-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ICSSFilterSite = interface(IUnknown)
    ['{3050F3ED-98B5-11CF-BB82-00AA00BDCE0B}']
    function GetElement(out element: IHTMLElement): HResult; stdcall;
    function FireOnFilterChangeEvent: HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IMarkupPointer
// Flags:     (0)
// GUID:      {3050F49F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IMarkupPointer = interface(IUnknown)
    ['{3050F49F-98B5-11CF-BB82-00AA00BDCE0B}']
    function OwningDoc(out ppDoc: IHTMLDocument2): HResult; stdcall;
    function Gravity(out pGravity: _POINTER_GRAVITY): HResult; stdcall;
    function SetGravity(Gravity: _POINTER_GRAVITY): HResult; stdcall;
    function Cling(out pfCling: Integer): HResult; stdcall;
    function SetCling(fCLing: Integer): HResult; stdcall;
    function Unposition: HResult; stdcall;
    function IsPositioned(out pfPositioned: Integer): HResult; stdcall;
    function GetContainer(out ppContainer: IMarkupContainer): HResult; stdcall;
    function MoveAdjacentToElement(const pElement: IHTMLElement; eAdj: _ELEMENT_ADJACENCY): HResult; stdcall;
    function MoveToPointer(const pPointer: IMarkupPointer): HResult; stdcall;
    function MoveToContainer(const pContainer: IMarkupContainer; fAtStart: Integer): HResult; stdcall;
    function left(fMove: Integer; out pContext: _MARKUP_CONTEXT_TYPE; out ppElement: IHTMLElement; 
                  var pcch: Integer; out pchText: Word): HResult; stdcall;
    function right(fMove: Integer; out pContext: _MARKUP_CONTEXT_TYPE; out ppElement: IHTMLElement; 
                   var pcch: Integer; out pchText: Word): HResult; stdcall;
    function CurrentScope(out ppElemCurrent: IHTMLElement): HResult; stdcall;
    function IsLeftOf(const pPointerThat: IMarkupPointer; out pfResult: Integer): HResult; stdcall;
    function IsLeftOfOrEqualTo(const pPointerThat: IMarkupPointer; out pfResult: Integer): HResult; stdcall;
    function IsRightOf(const pPointerThat: IMarkupPointer; out pfResult: Integer): HResult; stdcall;
    function IsRightOfOrEqualTo(const pPointerThat: IMarkupPointer; out pfResult: Integer): HResult; stdcall;
    function IsEqualTo(const pPointerThat: IMarkupPointer; out pfAreEqual: Integer): HResult; stdcall;
    function MoveUnit(muAction: _MOVEUNIT_ACTION): HResult; stdcall;
    function findText(pchFindText: PWideChar; dwFlags: LongWord; const pIEndMatch: IMarkupPointer; 
                      const pIEndSearch: IMarkupPointer): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IMarkupContainer
// Flags:     (0)
// GUID:      {3050F5F9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IMarkupContainer = interface(IUnknown)
    ['{3050F5F9-98B5-11CF-BB82-00AA00BDCE0B}']
    function OwningDoc(out ppDoc: IHTMLDocument2): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IMarkupContainer2
// Flags:     (0)
// GUID:      {3050F648-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IMarkupContainer2 = interface(IMarkupContainer)
    ['{3050F648-98B5-11CF-BB82-00AA00BDCE0B}']
    function CreateChangeLog(const pChangeSink: IHTMLChangeSink; out ppChangeLog: IHTMLChangeLog; 
                             fForward: Integer; fBackward: Integer): HResult; stdcall;
    function RegisterForDirtyRange(const pChangeSink: IHTMLChangeSink; out pdwCookie: LongWord): HResult; stdcall;
    function UnRegisterForDirtyRange(dwCookie: LongWord): HResult; stdcall;
    function GetAndClearDirtyRange(dwCookie: LongWord; const pIPointerBegin: IMarkupPointer; 
                                   const pIPointerEnd: IMarkupPointer): HResult; stdcall;
    function GetVersionNumber: Integer; stdcall;
    function GetMasterElement(out ppElementMaster: IHTMLElement): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IHTMLChangeSink
// Flags:     (0)
// GUID:      {3050F64A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLChangeSink = interface(IUnknown)
    ['{3050F64A-98B5-11CF-BB82-00AA00BDCE0B}']
    function Notify: HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IHTMLChangeLog
// Flags:     (0)
// GUID:      {3050F649-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLChangeLog = interface(IUnknown)
    ['{3050F649-98B5-11CF-BB82-00AA00BDCE0B}']
// !! API change
    function GetNextChange(pbBuffer: PByte; nBufferSize: Integer; out pnRecordLength: Integer): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IActiveIMMApp
// Flags:     (0)
// GUID:      {08C0E040-62D1-11D1-9326-0060B067B86E}
// *********************************************************************//
  IActiveIMMApp = interface(IUnknown)
    ['{08C0E040-62D1-11D1-9326-0060B067B86E}']
    // !! API fix decl
    function AssociateContext(hWnd: THandle; hIME: LongWord; out phPrev: LongWord): HResult; stdcall;
    function ConfigureIMEA(hKL: Pointer; vhWnd: _RemotableHandle; dwMode: LongWord; 
                           var pData: __MIDL___MIDL_itf_mshtml_0001_0042_0001): HResult; stdcall;
    function ConfigureIMEW(hKL: Pointer; var hWnd: _RemotableHandle; dwMode: LongWord; 
                           var pData: __MIDL___MIDL_itf_mshtml_0001_0042_0002): HResult; stdcall;
    function CreateContext(out phIMC: LongWord): HResult; stdcall;
    function DestroyContext(hIME: LongWord): HResult; stdcall;
    function EnumRegisterWordA(hKL: Pointer; szReading: PAnsiChar; dwStyle: LongWord; 
                               szRegister: PAnsiChar; pData: Pointer; out pEnum: IEnumRegisterWordA): HResult; stdcall;
    function EnumRegisterWordW(hKL: Pointer; szReading: PWideChar; dwStyle: LongWord; 
                               szRegister: PWideChar; pData: Pointer; out pEnum: IEnumRegisterWordW): HResult; stdcall;
    function EscapeA(hKL: Pointer; hIMC: LongWord; uEscape: SYSUINT; pData: Pointer; 
                     out plResult: LONG_PTR): HResult; stdcall;
    function EscapeW(hKL: Pointer; hIMC: LongWord; uEscape: SYSUINT; pData: Pointer; 
                     out plResult: LONG_PTR): HResult; stdcall;
    function GetCandidateListA(hIMC: LongWord; dwIndex: LongWord; uBufLen: SYSUINT; 
                               out pCandList: __MIDL___MIDL_itf_mshtml_0001_0042_0007; 
                               out puCopied: SYSUINT): HResult; stdcall;
    function GetCandidateListW(hIMC: LongWord; dwIndex: LongWord; uBufLen: SYSUINT; 
                               out pCandList: __MIDL___MIDL_itf_mshtml_0001_0042_0007; 
                               out puCopied: SYSUINT): HResult; stdcall;
    function GetCandidateListCountA(hIMC: LongWord; out pdwListSize: LongWord; 
                                    out pdwBufLen: LongWord): HResult; stdcall;
    function GetCandidateListCountW(hIMC: LongWord; out pdwListSize: LongWord; 
                                    out pdwBufLen: LongWord): HResult; stdcall;
    function GetCandidateWindow(hIMC: LongWord; dwIndex: LongWord; 
                                out pCandidate: __MIDL___MIDL_itf_mshtml_0001_0042_0005): HResult; stdcall;
    function GetCompositionFontA(hIMC: LongWord; out plf: __MIDL___MIDL_itf_mshtml_0001_0042_0003): HResult; stdcall;
    function GetCompositionFontW(hIMC: LongWord; out plf: __MIDL___MIDL_itf_mshtml_0001_0042_0004): HResult; stdcall;
    function GetCompositionStringA(hIMC: LongWord; dwIndex: LongWord; dwBufLen: LongWord; 
                                   out plCopied: Integer; pBuf: Pointer): HResult; stdcall;
    function GetCompositionStringW(hIMC: LongWord; dwIndex: LongWord; dwBufLen: LongWord; 
                                   out plCopied: Integer; pBuf: Pointer): HResult; stdcall;
    function GetCompositionWindow(hIMC: LongWord; 
                                  out pCompForm: __MIDL___MIDL_itf_mshtml_0001_0042_0006): HResult; stdcall;
    function getContext(var hWnd: _RemotableHandle; out phIMC: LongWord): HResult; stdcall;
    function GetConversionListA(hKL: Pointer; hIMC: LongWord; pSrc: PAnsiChar; uBufLen: SYSUINT; 
                                uFlag: SYSUINT; out pDst: __MIDL___MIDL_itf_mshtml_0001_0042_0007; 
                                out puCopied: SYSUINT): HResult; stdcall;
    function GetConversionListW(hKL: Pointer; hIMC: LongWord; pSrc: PWideChar; uBufLen: SYSUINT; 
                                uFlag: SYSUINT; out pDst: __MIDL___MIDL_itf_mshtml_0001_0042_0007; 
                                out puCopied: SYSUINT): HResult; stdcall;
    function GetConversionStatus(hIMC: LongWord; out pfdwConversion: LongWord; 
                                 out pfdwSentence: LongWord): HResult; stdcall;
    function GetDefaultIMEWnd(var hWnd: _RemotableHandle; out phDefWnd: wireHWND): HResult; stdcall;
    function GetDescriptionA(hKL: Pointer; uBufLen: SYSUINT; szDescription: PAnsiChar; 
                             out puCopied: SYSUINT): HResult; stdcall;
    function GetDescriptionW(hKL: Pointer; uBufLen: SYSUINT; szDescription: PWideChar; 
                             out puCopied: SYSUINT): HResult; stdcall;
    function GetGuideLineA(hIMC: LongWord; dwIndex: LongWord; dwBufLen: LongWord; pBuf: PAnsiChar; 
                           out pdwResult: LongWord): HResult; stdcall;
    function GetGuideLineW(hIMC: LongWord; dwIndex: LongWord; dwBufLen: LongWord; pBuf: PWideChar; 
                           out pdwResult: LongWord): HResult; stdcall;
    function GetIMEFileNameA(hKL: Pointer; uBufLen: SYSUINT; szFileName: PAnsiChar; 
                             out puCopied: SYSUINT): HResult; stdcall;
    function GetIMEFileNameW(hKL: Pointer; uBufLen: SYSUINT; szFileName: PWideChar; 
                             out puCopied: SYSUINT): HResult; stdcall;
    function GetOpenStatus(hIMC: LongWord): HResult; stdcall;
    function GetProperty(hKL: Pointer; fdwIndex: LongWord; out pdwProperty: LongWord): HResult; stdcall;
    function GetRegisterWordStyleA(hKL: Pointer; nItem: SYSUINT; 
                                   out pStyleBuf: __MIDL___MIDL_itf_mshtml_0001_0042_0008; 
                                   out puCopied: SYSUINT): HResult; stdcall;
    function GetRegisterWordStyleW(hKL: Pointer; nItem: SYSUINT; 
                                   out pStyleBuf: __MIDL___MIDL_itf_mshtml_0001_0042_0009; 
                                   out puCopied: SYSUINT): HResult; stdcall;
    function GetStatusWindowPos(hIMC: LongWord; out pptPos: tagPOINT): HResult; stdcall;
    function GetVirtualKey(var hWnd: _RemotableHandle; out puVirtualKey: SYSUINT): HResult; stdcall;
    function InstallIMEA(szIMEFileName: PAnsiChar; szLayoutText: PAnsiChar; out phKL: Pointer): HResult; stdcall;
    function InstallIMEW(szIMEFileName: PWideChar; szLayoutText: PWideChar; out phKL: Pointer): HResult; stdcall;
    function IsIME(hKL: Pointer): HResult; stdcall;
    function IsUIMessageA(var hWndIME: _RemotableHandle; msg: SYSUINT; wParam: UINT_PTR; 
                          lParam: LONG_PTR): HResult; stdcall;
    function IsUIMessageW(var hWndIME: _RemotableHandle; msg: SYSUINT; wParam: UINT_PTR; 
                          lParam: LONG_PTR): HResult; stdcall;
    function NotifyIME(hIMC: LongWord; dwAction: LongWord; dwIndex: LongWord; dwValue: LongWord): HResult; stdcall;
    function RegisterWordA(hKL: Pointer; szReading: PAnsiChar; dwStyle: LongWord; 
                           szRegister: PAnsiChar): HResult; stdcall;
    function RegisterWordW(hKL: Pointer; szReading: PWideChar; dwStyle: LongWord; 
                           szRegister: PWideChar): HResult; stdcall;
    function ReleaseContext(var hWnd: _RemotableHandle; hIMC: LongWord): HResult; stdcall;
    function SetCandidateWindow(hIMC: LongWord; 
                                var pCandidate: __MIDL___MIDL_itf_mshtml_0001_0042_0005): HResult; stdcall;
    function SetCompositionFontA(hIMC: LongWord; var plf: __MIDL___MIDL_itf_mshtml_0001_0042_0003): HResult; stdcall;
    function SetCompositionFontW(hIMC: LongWord; var plf: __MIDL___MIDL_itf_mshtml_0001_0042_0004): HResult; stdcall;
    function SetCompositionStringA(hIMC: LongWord; dwIndex: LongWord; pComp: Pointer; 
                                   dwCompLen: LongWord; pRead: Pointer; dwReadLen: LongWord): HResult; stdcall;
    function SetCompositionStringW(hIMC: LongWord; dwIndex: LongWord; pComp: Pointer; 
                                   dwCompLen: LongWord; pRead: Pointer; dwReadLen: LongWord): HResult; stdcall;
    function SetCompositionWindow(hIMC: LongWord; 
                                  var pCompForm: __MIDL___MIDL_itf_mshtml_0001_0042_0006): HResult; stdcall;
    function SetConversionStatus(hIMC: LongWord; fdwConversion: LongWord; fdwSentence: LongWord): HResult; stdcall;
    function SetOpenStatus(hIMC: LongWord; fOpen: Integer): HResult; stdcall;
    function SetStatusWindowPos(hIMC: LongWord; var pptPos: tagPOINT): HResult; stdcall;
    function SimulateHotKey(var hWnd: _RemotableHandle; dwHotKeyID: LongWord): HResult; stdcall;
    function UnregisterWordA(hKL: Pointer; szReading: PAnsiChar; dwStyle: LongWord; 
                             szUnregister: PAnsiChar): HResult; stdcall;
    function UnregisterWordW(hKL: Pointer; szReading: PWideChar; dwStyle: LongWord; 
                             szUnregister: PWideChar): HResult; stdcall;
    function Activate(fRestoreLayout: Integer): HResult; stdcall;
    function Deactivate: HResult; stdcall;
    function OnDefWindowProc(var hWnd: _RemotableHandle; msg: SYSUINT; wParam: UINT_PTR; 
                             lParam: LONG_PTR; out plResult: LONG_PTR): HResult; stdcall;
    function FilterClientWindows(var aaClassList: Word; uSize: SYSUINT): HResult; stdcall;
    function GetCodePageA(hKL: Pointer; out uCodePage: SYSUINT): HResult; stdcall;
    function GetLangId(hKL: Pointer; out plid: Word): HResult; stdcall;
    function AssociateContextEx(var hWnd: _RemotableHandle; hIMC: LongWord; dwFlags: LongWord): HResult; stdcall;
    function DisableIME(idThread: LongWord): HResult; stdcall;
    function GetImeMenuItemsA(hIMC: LongWord; dwFlags: LongWord; dwType: LongWord; 
                              var pImeParentMenu: __MIDL___MIDL_itf_mshtml_0001_0042_0010; 
                              out pImeMenu: __MIDL___MIDL_itf_mshtml_0001_0042_0010; 
                              dwSize: LongWord; out pdwResult: LongWord): HResult; stdcall;
    function GetImeMenuItemsW(hIMC: LongWord; dwFlags: LongWord; dwType: LongWord; 
                              var pImeParentMenu: __MIDL___MIDL_itf_mshtml_0001_0042_0011; 
                              out pImeMenu: __MIDL___MIDL_itf_mshtml_0001_0042_0011; 
                              dwSize: LongWord; out pdwResult: LongWord): HResult; stdcall;
    function EnumInputContext(idThread: LongWord; out ppEnum: IEnumInputContext): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IEnumRegisterWordA
// Flags:     (0)
// GUID:      {08C03412-F96B-11D0-A475-00AA006BCC59}
// *********************************************************************//
  IEnumRegisterWordA = interface(IUnknown)
    ['{08C03412-F96B-11D0-A475-00AA006BCC59}']
    function Clone(out ppEnum: IEnumRegisterWordA): HResult; stdcall;
    function Next(ulCount: LongWord; out rgRegisterWord: __MIDL___MIDL_itf_mshtml_0001_0042_0001; 
                  out pcFetched: LongWord): HResult; stdcall;
    function reset: HResult; stdcall;
    function Skip(ulCount: LongWord): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IEnumRegisterWordW
// Flags:     (0)
// GUID:      {4955DD31-B159-11D0-8FCF-00AA006BCC59}
// *********************************************************************//
  IEnumRegisterWordW = interface(IUnknown)
    ['{4955DD31-B159-11D0-8FCF-00AA006BCC59}']
    function Clone(out ppEnum: IEnumRegisterWordW): HResult; stdcall;
    function Next(ulCount: LongWord; out rgRegisterWord: __MIDL___MIDL_itf_mshtml_0001_0042_0002; 
                  out pcFetched: LongWord): HResult; stdcall;
    function reset: HResult; stdcall;
    function Skip(ulCount: LongWord): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IEnumInputContext
// Flags:     (0)
// GUID:      {09B5EAB0-F997-11D1-93D4-0060B067B86E}
// *********************************************************************//
  IEnumInputContext = interface(IUnknown)
    ['{09B5EAB0-F997-11D1-93D4-0060B067B86E}']
    function Clone(out ppEnum: IEnumInputContext): HResult; stdcall;
    function Next(ulCount: LongWord; out rgInputContext: LongWord; out pcFetched: LongWord): HResult; stdcall;
    function reset: HResult; stdcall;
    function Skip(ulCount: LongWord): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: ISegmentList
// Flags:     (0)
// GUID:      {3050F605-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISegmentList = interface(IUnknown)
    ['{3050F605-98B5-11CF-BB82-00AA00BDCE0B}']
    function CreateIterator(out ppIIter: ISegmentListIterator): HResult; stdcall;
    function GetType(out peType: _SELECTION_TYPE): HResult; stdcall;
    function IsEmpty(out pfEmpty: Integer): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: ISegmentListIterator
// Flags:     (0)
// GUID:      {3050F692-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISegmentListIterator = interface(IUnknown)
    ['{3050F692-98B5-11CF-BB82-00AA00BDCE0B}']
    function Current(out ppISegment: ISegment): HResult; stdcall;
    function First: HResult; stdcall;
    function IsDone: HResult; stdcall;
    function Advance: HResult; stdcall;
  end;

// *********************************************************************//
// Interface: ISegment
// Flags:     (0)
// GUID:      {3050F683-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISegment = interface(IUnknown)
    ['{3050F683-98B5-11CF-BB82-00AA00BDCE0B}']
    function GetPointers(const pIStart: IMarkupPointer; const pIEnd: IMarkupPointer): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IHTMLCaret
// Flags:     (0)
// GUID:      {3050F604-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLCaret = interface(IUnknown)
    ['{3050F604-98B5-11CF-BB82-00AA00BDCE0B}']
    function MoveCaretToPointer(const pDispPointer: IDisplayPointer; fScrollIntoView: Integer; 
                                eDir: _CARET_DIRECTION): HResult; stdcall;
    function MoveCaretToPointerEx(const pDispPointer: IDisplayPointer; fVisible: Integer; 
                                  fScrollIntoView: Integer; eDir: _CARET_DIRECTION): HResult; stdcall;
    function MoveMarkupPointerToCaret(const pIMarkupPointer: IMarkupPointer): HResult; stdcall;
    function MoveDisplayPointerToCaret(const pDispPointer: IDisplayPointer): HResult; stdcall;
    function IsVisible(out pIsVisible: Integer): HResult; stdcall;
    function Show(fScrollIntoView: Integer): HResult; stdcall;
    function Hide: HResult; stdcall;
    function InsertText(var pText: Word; lLen: Integer): HResult; stdcall;
    function scrollIntoView: HResult; stdcall;
    function GetLocation(out pPoint: tagPOINT; fTranslate: Integer): HResult; stdcall;
    function GetCaretDirection(out peDir: _CARET_DIRECTION): HResult; stdcall;
    function SetCaretDirection(eDir: _CARET_DIRECTION): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IDisplayPointer
// Flags:     (0)
// GUID:      {3050F69E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDisplayPointer = interface(IUnknown)
    ['{3050F69E-98B5-11CF-BB82-00AA00BDCE0B}']
    function moveToPoint(ptPoint: tagPOINT; eCoordSystem: _COORD_SYSTEM; 
                         const pElementContext: IHTMLElement; dwHitTestOptions: LongWord; 
                         out pdwHitTestResults: LongWord): HResult; stdcall;
    function MoveUnit(eMoveUnit: _DISPLAY_MOVEUNIT; lXPos: Integer): HResult; stdcall;
    function PositionMarkupPointer(const pMarkupPointer: IMarkupPointer): HResult; stdcall;
    function MoveToPointer(const pDispPointer: IDisplayPointer): HResult; stdcall;
    function SetPointerGravity(eGravity: _POINTER_GRAVITY): HResult; stdcall;
    function GetPointerGravity(out peGravity: _POINTER_GRAVITY): HResult; stdcall;
    function SetDisplayGravity(eGravity: _DISPLAY_GRAVITY): HResult; stdcall;
    function GetDisplayGravity(out peGravity: _DISPLAY_GRAVITY): HResult; stdcall;
    function IsPositioned(out pfPositioned: Integer): HResult; stdcall;
    function Unposition: HResult; stdcall;
    function IsEqualTo(const pDispPointer: IDisplayPointer; out pfIsEqual: Integer): HResult; stdcall;
    function IsLeftOf(const pDispPointer: IDisplayPointer; out pfIsLeftOf: Integer): HResult; stdcall;
    function IsRightOf(const pDispPointer: IDisplayPointer; out pfIsRightOf: Integer): HResult; stdcall;
    function IsAtBOL(out pfBOL: Integer): HResult; stdcall;
    function MoveToMarkupPointer(const pPointer: IMarkupPointer; 
                                 const pDispLineContext: IDisplayPointer): HResult; stdcall;
    function scrollIntoView: HResult; stdcall;
    function GetLineInfo(out ppLineInfo: ILineInfo): HResult; stdcall;
    function GetFlowElement(out ppLayoutElement: IHTMLElement): HResult; stdcall;
    function QueryBreaks(out pdwBreaks: LongWord): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: ILineInfo
// Flags:     (0)
// GUID:      {3050F7E2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ILineInfo = interface(IUnknown)
    ['{3050F7E2-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_x(out p: Integer): HResult; stdcall;
    function Get_baseLine(out p: Integer): HResult; stdcall;
    function Get_textDescent(out p: Integer): HResult; stdcall;
    function Get_textHeight(out p: Integer): HResult; stdcall;
    function Get_lineDirection(out p: Integer): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IElementSegment
// Flags:     (0)
// GUID:      {3050F68F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementSegment = interface(ISegment)
    ['{3050F68F-98B5-11CF-BB82-00AA00BDCE0B}']
    function GetElement(out ppIElement: IHTMLElement): HResult; stdcall;
    function SetPrimary(fPrimary: Integer): HResult; stdcall;
    function IsPrimary(out pfPrimary: Integer): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IHighlightSegment
// Flags:     (0)
// GUID:      {3050F690-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHighlightSegment = interface(ISegment)
    ['{3050F690-98B5-11CF-BB82-00AA00BDCE0B}']
  end;

// *********************************************************************//
// Interface: IHighlightRenderingServices
// Flags:     (0)
// GUID:      {3050F606-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHighlightRenderingServices = interface(IUnknown)
    ['{3050F606-98B5-11CF-BB82-00AA00BDCE0B}']
    function AddSegment(const pDispPointerStart: IDisplayPointer; 
                        const pDispPointerEnd: IDisplayPointer; 
                        const pIRenderStyle: IHTMLRenderStyle; out ppISegment: IHighlightSegment): HResult; stdcall;
    function MoveSegmentToPointers(const pISegment: IHighlightSegment; 
                                   const pDispPointerStart: IDisplayPointer; 
                                   const pDispPointerEnd: IDisplayPointer): HResult; stdcall;
    function RemoveSegment(const pISegment: IHighlightSegment): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IDisplayServices
// Flags:     (0)
// GUID:      {3050F69D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDisplayServices = interface(IUnknown)
    ['{3050F69D-98B5-11CF-BB82-00AA00BDCE0B}']
    function CreateDisplayPointer(out ppDispPointer: IDisplayPointer): HResult; stdcall;
    function TransformRect(var pRect: tagRECT; eSource: _COORD_SYSTEM; eDestination: _COORD_SYSTEM; 
                           const pIElement: IHTMLElement): HResult; stdcall;
    function TransformPoint(var pPoint: tagPOINT; eSource: _COORD_SYSTEM; 
                            eDestination: _COORD_SYSTEM; const pIElement: IHTMLElement): HResult; stdcall;
    function GetCaret(out ppCaret: IHTMLCaret): HResult; stdcall;
    function getComputedStyle(const pPointer: IMarkupPointer; 
                              out ppComputedStyle: IHTMLComputedStyle): HResult; stdcall;
    function ScrollRectIntoView(const pIElement: IHTMLElement; rect: tagRECT): HResult; stdcall;
    function HasFlowLayout(const pIElement: IHTMLElement; out pfHasFlowLayout: Integer): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IHTMLComputedStyle
// Flags:     (0)
// GUID:      {3050F6C3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLComputedStyle = interface(IUnknown)
    ['{3050F6C3-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_bold(out p: WordBool): HResult; stdcall;
    function Get_italic(out p: WordBool): HResult; stdcall;
    function Get_underline(out p: WordBool): HResult; stdcall;
    function Get_overline(out p: WordBool): HResult; stdcall;
    function Get_strikeOut(out p: WordBool): HResult; stdcall;
    function Get_subScript(out p: WordBool): HResult; stdcall;
    function Get_superScript(out p: WordBool): HResult; stdcall;
    function Get_explicitFace(out p: WordBool): HResult; stdcall;
    function Get_fontWeight(out p: Integer): HResult; stdcall;
    function Get_fontSize(out p: Integer): HResult; stdcall;
    function Get_fontName(out p: Word): HResult; stdcall;
    function Get_hasBgColor(out p: WordBool): HResult; stdcall;
    function Get_textColor(out p: LongWord): HResult; stdcall;
    function Get_backgroundColor(out p: LongWord): HResult; stdcall;
    function Get_preFormatted(out p: WordBool): HResult; stdcall;
    function Get_direction(out p: WordBool): HResult; stdcall;
    function Get_blockDirection(out p: WordBool): HResult; stdcall;
    function Get_OL(out p: WordBool): HResult; stdcall;
    function isEqual(const pComputedStyle: IHTMLComputedStyle; out pfEqual: WordBool): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IHtmlDlgSafeHelper
// Flags:     (4096) Dispatchable
// GUID:      {3050F81A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHtmlDlgSafeHelper = interface(IDispatch)
    ['{3050F81A-98B5-11CF-BB82-00AA00BDCE0B}']
    function choosecolordlg(initColor: OleVariant; out rgbColor: OleVariant): HResult; stdcall;
    function getCharset(const fontName: WideString; out charset: OleVariant): HResult; stdcall;
    function Get_fonts(out p: IDispatch): HResult; stdcall;
    function Get_BlockFormats(out p: IDispatch): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IBlockFormats
// Flags:     (4096) Dispatchable
// GUID:      {3050F830-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IBlockFormats = interface(IDispatch)
    ['{3050F830-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get__newEnum(out p: IUnknown): HResult; stdcall;
    function Get_Count(out p: Integer): HResult; stdcall;
    function item(const pvarIndex: OleVariant; out pbstrBlockFormat: WideString): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IFontNames
// Flags:     (4096) Dispatchable
// GUID:      {3050F839-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IFontNames = interface(IDispatch)
    ['{3050F839-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get__newEnum(out p: IUnknown): HResult; stdcall;
    function Get_Count(out p: Integer): HResult; stdcall;
    function item(const pvarIndex: OleVariant; out pbstrFontName: WideString): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: ICSSFilter
// Flags:     (0)
// GUID:      {3050F3EC-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ICSSFilter = interface(IUnknown)
    ['{3050F3EC-98B5-11CF-BB82-00AA00BDCE0B}']
    function SetSite(const pSink: ICSSFilterSite): HResult; stdcall;
    function OnAmbientPropertyChange(dispid: Integer): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: ISecureUrlHost
// Flags:     (0)
// GUID:      {C81984C4-74C8-11D2-BAA9-00C04FC2040E}
// *********************************************************************//
  ISecureUrlHost = interface(IUnknown)
    ['{C81984C4-74C8-11D2-BAA9-00C04FC2040E}']
    function ValidateSecureUrl(out pfAllow: Integer; var pchUrlInQuestion: Word; dwFlags: LongWord): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IMarkupServices
// Flags:     (0)
// GUID:      {3050F4A0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IMarkupServices = interface(IUnknown)
    ['{3050F4A0-98B5-11CF-BB82-00AA00BDCE0B}']
    function CreateMarkupPointer(out ppPointer: IMarkupPointer): HResult; stdcall;
    function CreateMarkupContainer(out ppMarkupContainer: IMarkupContainer): HResult; stdcall;
// !! API change
    function createElement(tagID: _ELEMENT_TAG_ID; pchAttributes: WideString; 
                           out ppElement: IHTMLElement): HResult; stdcall;
    function CloneElement(const pElemCloneThis: IHTMLElement; out ppElementTheClone: IHTMLElement): HResult; stdcall;
    function InsertElement(const pElementInsert: IHTMLElement; const pPointerStart: IMarkupPointer; 
                           const pPointerFinish: IMarkupPointer): HResult; stdcall;
    function RemoveElement(const pElementRemove: IHTMLElement): HResult; stdcall;
    function remove(const pPointerStart: IMarkupPointer; const pPointerFinish: IMarkupPointer): HResult; stdcall;
    function Copy(const pPointerSourceStart: IMarkupPointer; 
                  const pPointerSourceFinish: IMarkupPointer; const pPointerTarget: IMarkupPointer): HResult; stdcall;
    function move(const pPointerSourceStart: IMarkupPointer; 
                  const pPointerSourceFinish: IMarkupPointer; const pPointerTarget: IMarkupPointer): HResult; stdcall;
    // !! API fix decl
    function InsertText(const pchText: PWideChar; cch: Integer; const pPointerTarget: IMarkupPointer): HResult; stdcall;
    // !! API fix decl
    function ParseString(pchHTML: PWideString; dwFlags: LongWord; 
                         out ppContainerResult: IMarkupContainer; 
                         const ppPointerStart: IMarkupPointer; const ppPointerFinish: IMarkupPointer): HResult; stdcall;
    // !! API fix decl
    function ParseGlobal(const hglobalHTML: HGLOBAL; dwFlags: LongWord; 
                         out ppContainerResult: IMarkupContainer; 
                         const pPointerStart: IMarkupPointer; const pPointerFinish: IMarkupPointer): HResult; stdcall;
    function IsScopedElement(const pElement: IHTMLElement; out pfScoped: Integer): HResult; stdcall;
    function GetElementTagId(const pElement: IHTMLElement; out ptagId: _ELEMENT_TAG_ID): HResult; stdcall;
    function GetTagIDForName(const bstrName: WideString; out ptagId: _ELEMENT_TAG_ID): HResult; stdcall;
    function GetNameForTagID(tagID: _ELEMENT_TAG_ID; out pbstrName: WideString): HResult; stdcall;
    function MovePointersToRange(const pIRange: IHTMLTxtRange; const pPointerStart: IMarkupPointer; 
                                 const pPointerFinish: IMarkupPointer): HResult; stdcall;
    function MoveRangeToPointers(const pPointerStart: IMarkupPointer; 
                                 const pPointerFinish: IMarkupPointer; const pIRange: IHTMLTxtRange): HResult; stdcall;
// !! API Change
    function BeginUndoUnit(const pchTitle: WideString): HResult; stdcall;
    function EndUndoUnit: HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IMarkupServices2
// Flags:     (0)
// GUID:      {3050F682-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IMarkupServices2 = interface(IMarkupServices)
    ['{3050F682-98B5-11CF-BB82-00AA00BDCE0B}']
    function ParseGlobalEx(var hglobalHTML: _userHGLOBAL; dwFlags: LongWord; 
                           const pContext: IMarkupContainer; 
                           out ppContainerResult: IMarkupContainer; 
                           const pPointerStart: IMarkupPointer; const pPointerFinish: IMarkupPointer): HResult; stdcall;
    function ValidateElements(const pPointerStart: IMarkupPointer; 
                              const pPointerFinish: IMarkupPointer; 
                              const pPointerTarget: IMarkupPointer; 
                              var pPointerStatus: IMarkupPointer; 
                              out ppElemFailBottom: IHTMLElement; out ppElemFailTop: IHTMLElement): HResult; stdcall;
    function SaveSegmentsToClipboard(const pSegmentList: ISegmentList; dwFlags: LongWord): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IHTMLChangePlayback
// Flags:     (0)
// GUID:      {3050F6E0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLChangePlayback = interface(IUnknown)
    ['{3050F6E0-98B5-11CF-BB82-00AA00BDCE0B}']
// !! API change
    function ExecChange(pbRecord: PByte; fForward: Integer): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IMarkupPointer2
// Flags:     (0)
// GUID:      {3050F675-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IMarkupPointer2 = interface(IMarkupPointer)
    ['{3050F675-98B5-11CF-BB82-00AA00BDCE0B}']
    function IsAtWordBreak(out pfAtBreak: Integer): HResult; stdcall;
    function GetMarkupPosition(out plMP: Integer): HResult; stdcall;
    function MoveToMarkupPosition(const pContainer: IMarkupContainer; lMP: Integer): HResult; stdcall;
    function MoveUnitBounded(muAction: _MOVEUNIT_ACTION; const pIBoundary: IMarkupPointer): HResult; stdcall;
    function IsInsideURL(const pRight: IMarkupPointer; out pfResult: Integer): HResult; stdcall;
    function MoveToContent(const pIElement: IHTMLElement; fAtStart: Integer): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IMarkupTextFrags
// Flags:     (0)
// GUID:      {3050F5FA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IMarkupTextFrags = interface(IUnknown)
    ['{3050F5FA-98B5-11CF-BB82-00AA00BDCE0B}']
    function GetTextFragCount(out pcFrags: Integer): HResult; stdcall;
    function GetTextFrag(iFrag: Integer; out pbstrFrag: WideString; 
                         const pPointerFrag: IMarkupPointer): HResult; stdcall;
    function RemoveTextFrag(iFrag: Integer): HResult; stdcall;
    function InsertTextFrag(iFrag: Integer; const bstrInsert: WideString; 
                            const pPointerInsert: IMarkupPointer): HResult; stdcall;
    function FindTextFragFromMarkupPointer(const pPointerFind: IMarkupPointer; out piFrag: Integer; 
                                           out pfFragFound: Integer): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IXMLGenericParse
// Flags:     (0)
// GUID:      {E4E23071-4D07-11D2-AE76-0080C73BC199}
// *********************************************************************//
  IXMLGenericParse = interface(IUnknown)
    ['{E4E23071-4D07-11D2-AE76-0080C73BC199}']
    function SetGenericParse(fDoGeneric: WordBool): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IHTMLEditHost
// Flags:     (0)
// GUID:      {3050F6A0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEditHost = interface(IUnknown)
    ['{3050F6A0-98B5-11CF-BB82-00AA00BDCE0B}']
    function SnapRect(const pIElement: IHTMLElement; var prcNew: tagRECT; eHandle: _ELEMENT_CORNER): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IHTMLEditHost2
// Flags:     (0)
// GUID:      {3050F848-98B5-11CF-BB82-00AA00BDCE0D}
// *********************************************************************//
  IHTMLEditHost2 = interface(IHTMLEditHost)
    ['{3050F848-98B5-11CF-BB82-00AA00BDCE0D}']
    function PreDrag: HResult; stdcall;
  end;

// *********************************************************************//
// Interface: ISequenceNumber
// Flags:     (0)
// GUID:      {3050F6C1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISequenceNumber = interface(IUnknown)
    ['{3050F6C1-98B5-11CF-BB82-00AA00BDCE0B}']
    function GetSequenceNumber(nCurrent: Integer; out pnNew: Integer): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IIMEServices
// Flags:     (0)
// GUID:      {3050F6CA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IIMEServices = interface(IUnknown)
    ['{3050F6CA-98B5-11CF-BB82-00AA00BDCE0B}']
    function GetActiveIMM(out ppActiveIMM: IActiveIMMApp): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: ISelectionServicesListener
// Flags:     (0)
// GUID:      {3050F699-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISelectionServicesListener = interface(IUnknown)
    ['{3050F699-98B5-11CF-BB82-00AA00BDCE0B}']
    function BeginSelectionUndo: HResult; stdcall;
    function EndSelectionUndo: HResult; stdcall;
    function OnSelectedElementExit(const pIElementStart: IMarkupPointer; 
                                   const pIElementEnd: IMarkupPointer; 
                                   const pIElementContentStart: IMarkupPointer; 
                                   const pIElementContentEnd: IMarkupPointer): HResult; stdcall;
    function OnChangeType(eType: _SELECTION_TYPE; const pIListener: ISelectionServicesListener): HResult; stdcall;
    function GetTypeDetail(out pTypeDetail: WideString): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: ISelectionServices
// Flags:     (0)
// GUID:      {3050F684-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISelectionServices = interface(IUnknown)
    ['{3050F684-98B5-11CF-BB82-00AA00BDCE0B}']
    function SetSelectionType(eType: _SELECTION_TYPE; const pIListener: ISelectionServicesListener): HResult; stdcall;
    function GetMarkupContainer(out ppIContainer: IMarkupContainer): HResult; stdcall;
    function AddSegment(const pIStart: IMarkupPointer; const pIEnd: IMarkupPointer; 
                        out ppISegmentAdded: ISegment): HResult; stdcall;
    function AddElementSegment(const pIElement: IHTMLElement; out ppISegmentAdded: IElementSegment): HResult; stdcall;
    function RemoveSegment(const pISegment: ISegment): HResult; stdcall;
    function GetSelectionServicesListener(out ppISelectionServicesListener: ISelectionServicesListener): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IHTMLEditDesigner
// Flags:     (0)
// GUID:      {3050F662-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEditDesigner = interface(IUnknown)
    ['{3050F662-98B5-11CF-BB82-00AA00BDCE0B}']
    function PreHandleEvent(inEvtDispId: Integer; const pIEventObj: IHTMLEventObj): HResult; stdcall;
    function PostHandleEvent(inEvtDispId: Integer; const pIEventObj: IHTMLEventObj): HResult; stdcall;
    function TranslateAccelerator(inEvtDispId: Integer; const pIEventObj: IHTMLEventObj): HResult; stdcall;
    function PostEditorEventNotify(inEvtDispId: Integer; const pIEventObj: IHTMLEventObj): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IHTMLEditServices
// Flags:     (0)
// GUID:      {3050F663-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEditServices = interface(IUnknown)
    ['{3050F663-98B5-11CF-BB82-00AA00BDCE0B}']
    function AddDesigner(const pIDesigner: IHTMLEditDesigner): HResult; stdcall;
    function RemoveDesigner(const pIDesigner: IHTMLEditDesigner): HResult; stdcall;
    function GetSelectionServices(const pIContainer: IMarkupContainer; 
                                  out ppSelSvc: ISelectionServices): HResult; stdcall;
    function MoveToSelectionAnchor(const pIStartAnchor: IMarkupPointer): HResult; stdcall;
    function MoveToSelectionEnd(const pIEndAnchor: IMarkupPointer): HResult; stdcall;
    function SelectRange(const pStart: IMarkupPointer; const pEnd: IMarkupPointer; 
                         eType: _SELECTION_TYPE): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IHTMLEditServices2
// Flags:     (0)
// GUID:      {3050F812-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLEditServices2 = interface(IHTMLEditServices)
    ['{3050F812-98B5-11CF-BB82-00AA00BDCE0B}']
    function MoveToSelectionAnchorEx(const pIStartAnchor: IDisplayPointer): HResult; stdcall;
    function MoveToSelectionEndEx(const pIEndAnchor: IDisplayPointer): HResult; stdcall;
    function FreezeVirtualCaretPos(fReCompute: Integer): HResult; stdcall;
    function UnFreezeVirtualCaretPos(fReset: Integer): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IDeveloperConsoleMessageReceiver
// Flags:     (0)
// GUID:      {30510808-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDeveloperConsoleMessageReceiver = interface(IUnknown)
    ['{30510808-98B5-11CF-BB82-00AA00BDCE0B}']
    function write(source: PWideChar; level: _DEV_CONSOLE_MESSAGE_LEVEL; messageId: SYSINT; 
                   messageText: PWideChar): HResult; stdcall;
    function WriteWithUrl(source: PWideChar; level: _DEV_CONSOLE_MESSAGE_LEVEL; messageId: SYSINT; 
                          messageText: PWideChar; fileUrl: PWideChar): HResult; stdcall;
    function WriteWithUrlAndLine(source: PWideChar; level: _DEV_CONSOLE_MESSAGE_LEVEL; 
                                 messageId: SYSINT; messageText: PWideChar; fileUrl: PWideChar; 
                                 line: LongWord): HResult; stdcall;
    function WriteWithUrlLineAndColumn(source: PWideChar; level: _DEV_CONSOLE_MESSAGE_LEVEL; 
                                       messageId: SYSINT; messageText: PWideChar; 
                                       fileUrl: PWideChar; line: LongWord; column: LongWord): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IScriptEventHandler
// Flags:     (0)
// GUID:      {3051083A-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IScriptEventHandler = interface(IUnknown)
    ['{3051083A-98B5-11CF-BB82-00AA00BDCE0B}']
    function FunctionName(out pbstrFunctionName: WideString): HResult; stdcall;
    function DebugDocumentContext(out ppDebugDocumentContext: IUnknown): HResult; stdcall;
    function EventHandlerDispatch(out ppDispHandler: IDispatch): HResult; stdcall;
    function UsesCapture(out pfUsesCapture: Integer): HResult; stdcall;
    function cookie(out pullCookie: Largeuint): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IDebugCallbackNotificationHandler
// Flags:     (0)
// GUID:      {30510842-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDebugCallbackNotificationHandler = interface(IUnknown)
    ['{30510842-98B5-11CF-BB82-00AA00BDCE0B}']
    function RequestedCallbackTypes(out pCallbackMask: LongWord): HResult; stdcall;
    function BeforeDispatchEvent(const pEvent: IUnknown): HResult; stdcall;
    function DispatchEventComplete(const pEvent: IUnknown; propagationStatus: LongWord): HResult; stdcall;
    function BeforeInvokeDomCallback(const pEvent: IUnknown; const pCallback: IScriptEventHandler; 
                                     eStage: _DOM_EVENT_PHASE; propagationStatus: LongWord): HResult; stdcall;
    function InvokeDomCallbackComplete(const pEvent: IUnknown; 
                                       const pCallback: IScriptEventHandler; 
                                       eStage: _DOM_EVENT_PHASE; propagationStatus: LongWord): HResult; stdcall;
    function BeforeInvokeCallback(eCallbackType: _SCRIPT_TIMER_TYPE; callbackCookie: LongWord; 
                                  const pdispHandler: IDispatch; ullHandlerCookie: Largeuint; 
                                  const FunctionName: WideString; line: SYSUINT; column: SYSUINT; 
                                  cchLength: SYSUINT; const pDebugDocumentContext: IUnknown): HResult; stdcall;
    function InvokeCallbackComplete(eCallbackType: _SCRIPT_TIMER_TYPE; callbackCookie: LongWord; 
                                    const pdispHandler: IDispatch; ullHandlerCookie: Largeuint; 
                                    const FunctionName: WideString; line: SYSUINT; column: SYSUINT; 
                                    cchLength: SYSUINT; const pDebugDocumentContext: IUnknown): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IScriptEventHandlerSourceInfo
// Flags:     (0)
// GUID:      {30510841-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IScriptEventHandlerSourceInfo = interface(IUnknown)
    ['{30510841-98B5-11CF-BB82-00AA00BDCE0B}']
    function GetSourceInfo(out pbstrFunctionName: WideString; out line: SYSUINT; 
                           out column: SYSUINT; out cchLength: SYSUINT): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IDOMEventRegistrationCallback
// Flags:     (0)
// GUID:      {3051083B-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IDOMEventRegistrationCallback = interface(IUnknown)
    ['{3051083B-98B5-11CF-BB82-00AA00BDCE0B}']
    function OnDOMEventListenerAdded(pszEventType: PWideChar; const pHandler: IScriptEventHandler): HResult; stdcall;
    function OnDOMEventListenerRemoved(ullCookie: Largeuint): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IEventTarget2
// Flags:     (0)
// GUID:      {30510839-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IEventTarget2 = interface(IUnknown)
    ['{30510839-98B5-11CF-BB82-00AA00BDCE0B}']
    function GetRegisteredEventTypes(out ppEventTypeArray: PUserType11): HResult; stdcall;
    function GetListenersForType(pszEventType: PWideChar; out ppEventHandlerArray: PUserType11): HResult; stdcall;
    function RegisterForDOMEventListeners(const pCallback: IDOMEventRegistrationCallback): HResult; stdcall;
    function UnregisterForDOMEventListeners(const pCallback: IDOMEventRegistrationCallback): HResult; stdcall;
  end;

// *********************************************************************//
// DispIntf:  HTMLNamespaceEvents
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F6BD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  HTMLNamespaceEvents = dispinterface
    ['{3050F6BD-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure onreadystatechange(const pEvtObj: IHTMLEventObj); dispid -609;
  end;

// *********************************************************************//
// Interface: IHTMLNamespace
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F6BB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLNamespace = interface(IDispatch)
    ['{3050F6BB-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_name: WideString; safecall;
    function Get_urn: WideString; safecall;
    function Get_tagNames: IDispatch; safecall;
    function Get_readyState: OleVariant; safecall;
    procedure Set_onreadystatechange(p: OleVariant); safecall;
    function Get_onreadystatechange: OleVariant; safecall;
    procedure doImport(const bstrImplementationUrl: WideString); safecall;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; safecall;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); safecall;
    property name: WideString read Get_name;
    property urn: WideString read Get_urn;
    property tagNames: IDispatch read Get_tagNames;
    property readyState: OleVariant read Get_readyState;
    property onreadystatechange: OleVariant read Get_onreadystatechange write Set_onreadystatechange;
  end;

// *********************************************************************//
// DispIntf:  IHTMLNamespaceDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F6BB-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLNamespaceDisp = dispinterface
    ['{3050F6BB-98B5-11CF-BB82-00AA00BDCE0B}']
    property name: WideString readonly dispid 1000;
    property urn: WideString readonly dispid 1001;
    property tagNames: IDispatch readonly dispid 1002;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    procedure doImport(const bstrImplementationUrl: WideString); dispid 1003;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
  end;

// *********************************************************************//
// Interface: IHTMLNamespaceCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F6B8-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLNamespaceCollection = interface(IDispatch)
    ['{3050F6B8-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    function item(index: OleVariant): IDispatch; safecall;
    function add(const bstrNamespace: WideString; const bstrUrn: WideString; 
                 implementationUrl: OleVariant): IDispatch; safecall;
    property length: Integer read Get_length;
  end;

// *********************************************************************//
// DispIntf:  IHTMLNamespaceCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F6B8-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLNamespaceCollectionDisp = dispinterface
    ['{3050F6B8-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1000;
    function item(index: OleVariant): IDispatch; dispid 0;
    function add(const bstrNamespace: WideString; const bstrUrn: WideString; 
                 implementationUrl: OleVariant): IDispatch; dispid 1001;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLNamespace
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F54F-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLNamespace = dispinterface
    ['{3050F54F-98B5-11CF-BB82-00AA00BDCE0B}']
    property name: WideString readonly dispid 1000;
    property urn: WideString readonly dispid 1001;
    property tagNames: IDispatch readonly dispid 1002;
    property readyState: OleVariant readonly dispid -2147412996;
    property onreadystatechange: OleVariant dispid -2147412087;
    procedure doImport(const bstrImplementationUrl: WideString); dispid 1003;
    function attachEvent(const event: WideString; const pdisp: IDispatch): WordBool; dispid -2147417605;
    procedure detachEvent(const event: WideString; const pdisp: IDispatch); dispid -2147417604;
    property constructor_: IDispatch readonly dispid -2147417603;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLNamespaceCollection
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F550-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLNamespaceCollection = dispinterface
    ['{3050F550-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1000;
    function item(index: OleVariant): IDispatch; dispid 0;
    function add(const bstrNamespace: WideString; const bstrUrn: WideString; 
                 implementationUrl: OleVariant): IDispatch; dispid 1001;
    property constructor_: IDispatch readonly dispid -2147417603;
  end;

// *********************************************************************//
// Interface: IHTMLPainter
// Flags:     (0)
// GUID:      {3050F6A6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLPainter = interface(IUnknown)
    ['{3050F6A6-98B5-11CF-BB82-00AA00BDCE0B}']
    // !! API fix decl
    function Draw(rcBounds: tagRECT; rcUpdate: tagRECT; lDrawFlags: Integer; 
                  hdc: hdc; pvDrawObject: Pointer): HResult; stdcall;
    function onresize(size: tagSIZE): HResult; stdcall;
    function GetPainterInfo(out pInfo: _HTML_PAINTER_INFO): HResult; stdcall;
    function HitTestPoint(pt: tagPOINT; out pbHit: Integer; out plPartID: Integer): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IHTMLPaintSite
// Flags:     (0)
// GUID:      {3050F6A7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLPaintSite = interface(IUnknown)
    ['{3050F6A7-98B5-11CF-BB82-00AA00BDCE0B}']
    function InvalidatePainterInfo: HResult; stdcall;
    // !! API fix decl
    function InvalidateRect(prcInvalid: PtagRECT): HResult; stdcall;
    function InvalidateRegion(var rgnInvalid: _RemotableHandle): HResult; stdcall;
    function GetDrawInfo(lFlags: Integer; out pDrawInfo: _HTML_PAINT_DRAW_INFO): HResult; stdcall;
    function TransformGlobalToLocal(ptGlobal: tagPOINT; out pptLocal: tagPOINT): HResult; stdcall;
    function TransformLocalToGlobal(ptLocal: tagPOINT; out pptGlobal: tagPOINT): HResult; stdcall;
    function GetHitTestCookie(out plCookie: Integer): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IHTMLPainterEventInfo
// Flags:     (0)
// GUID:      {3050F6DF-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLPainterEventInfo = interface(IUnknown)
    ['{3050F6DF-98B5-11CF-BB82-00AA00BDCE0B}']
    function GetEventInfoFlags(out plEventInfoFlags: Integer): HResult; stdcall;
    function GetEventTarget(var ppElement: IHTMLElement): HResult; stdcall;
    function SetCursor(lPartID: Integer): HResult; stdcall;
    function StringFromPartID(lPartID: Integer; out pbstrPart: WideString): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IHTMLPainterOverlay
// Flags:     (0)
// GUID:      {3050F7E3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLPainterOverlay = interface(IUnknown)
    ['{3050F7E3-98B5-11CF-BB82-00AA00BDCE0B}']
    function onmove(rcDevice: tagRECT): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IHTMLIPrintCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F6B5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLIPrintCollection = interface(IDispatch)
    ['{3050F6B5-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_length: Integer; safecall;
    function Get__newEnum: IUnknown; safecall;
    function item(index: Integer): IUnknown; safecall;
    property length: Integer read Get_length;
    property _newEnum: IUnknown read Get__newEnum;
  end;

// *********************************************************************//
// DispIntf:  IHTMLIPrintCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F6B5-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLIPrintCollectionDisp = dispinterface
    ['{3050F6B5-98B5-11CF-BB82-00AA00BDCE0B}']
    property length: Integer readonly dispid 1501;
    property _newEnum: IUnknown readonly dispid -4;
    function item(index: Integer): IUnknown; dispid 0;
  end;

// *********************************************************************//
// Interface: IEnumPrivacyRecords
// Flags:     (0)
// GUID:      {3050F844-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IEnumPrivacyRecords = interface(IUnknown)
    ['{3050F844-98B5-11CF-BB82-00AA00BDCE0B}']
    function reset: HResult; stdcall;
    function GetSize(out pSize: LongWord): HResult; stdcall;
    function GetPrivacyImpacted(out pState: Integer): HResult; stdcall;
    function Next(out pbstrUrl: WideString; out pbstrPolicyRef: WideString; 
                  out pdwReserved: Integer; out pdwPrivacyFlags: LongWord): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IWPCBlockedUrls
// Flags:     (0)
// GUID:      {30510413-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IWPCBlockedUrls = interface(IUnknown)
    ['{30510413-98B5-11CF-BB82-00AA00BDCE0B}']
    function GetCount(out pdwCount: LongWord): HResult; stdcall;
    function GetUrl(dwIdx: LongWord; out pbstrUrl: WideString): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IHTMLDOMConstructorCollection
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051049C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMConstructorCollection = interface(IDispatch)
    ['{3051049C-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_Attr: IDispatch; safecall;
    function Get_BehaviorUrnsCollection: IDispatch; safecall;
    function Get_BookmarkCollection: IDispatch; safecall;
    function Get_compatibleInfo: IDispatch; safecall;
    function Get_CompatibleInfoCollection: IDispatch; safecall;
    function Get_ControlRangeCollection: IDispatch; safecall;
    function Get_CSSCurrentStyleDeclaration: IDispatch; safecall;
    function Get_CSSRuleList: IDispatch; safecall;
    function Get_CSSRuleStyleDeclaration: IDispatch; safecall;
    function Get_CSSStyleDeclaration: IDispatch; safecall;
    function Get_CSSStyleRule: IDispatch; safecall;
    function Get_CSSStyleSheet: IDispatch; safecall;
    function Get_dataTransfer: IDispatch; safecall;
    function Get_DOMImplementation: IDispatch; safecall;
    function Get_element: IDispatch; safecall;
    function Get_event: IDispatch; safecall;
    function Get_history: IDispatch; safecall;
    function Get_HTCElementBehaviorDefaults: IDispatch; safecall;
    function Get_HTMLAnchorElement: IDispatch; safecall;
    function Get_HTMLAreaElement: IDispatch; safecall;
    function Get_HTMLAreasCollection: IDispatch; safecall;
    function Get_HTMLBaseElement: IDispatch; safecall;
    function Get_HTMLBaseFontElement: IDispatch; safecall;
    function Get_HTMLBGSoundElement: IDispatch; safecall;
    function Get_HTMLBlockElement: IDispatch; safecall;
    function Get_HTMLBodyElement: IDispatch; safecall;
    function Get_HTMLBRElement: IDispatch; safecall;
    function Get_HTMLButtonElement: IDispatch; safecall;
    function Get_HTMLCollection: IDispatch; safecall;
    function Get_HTMLCommentElement: IDispatch; safecall;
    function Get_HTMLDDElement: IDispatch; safecall;
    function Get_HTMLDivElement: IDispatch; safecall;
    function Get_HTMLDocument: IDispatch; safecall;
    function Get_HTMLDListElement: IDispatch; safecall;
    function Get_HTMLDTElement: IDispatch; safecall;
    function Get_HTMLEmbedElement: IDispatch; safecall;
    function Get_HTMLFieldSetElement: IDispatch; safecall;
    function Get_HTMLFontElement: IDispatch; safecall;
    function Get_HTMLFormElement: IDispatch; safecall;
    function Get_HTMLFrameElement: IDispatch; safecall;
    function Get_HTMLFrameSetElement: IDispatch; safecall;
    function Get_HTMLGenericElement: IDispatch; safecall;
    function Get_HTMLHeadElement: IDispatch; safecall;
    function Get_HTMLHeadingElement: IDispatch; safecall;
    function Get_HTMLHRElement: IDispatch; safecall;
    function Get_HTMLHtmlElement: IDispatch; safecall;
    function Get_HTMLIFrameElement: IDispatch; safecall;
    function Get_HTMLImageElement: IDispatch; safecall;
    function Get_HTMLInputElement: IDispatch; safecall;
    function Get_HTMLIsIndexElement: IDispatch; safecall;
    function Get_HTMLLabelElement: IDispatch; safecall;
    function Get_HTMLLegendElement: IDispatch; safecall;
    function Get_HTMLLIElement: IDispatch; safecall;
    function Get_HTMLLinkElement: IDispatch; safecall;
    function Get_HTMLMapElement: IDispatch; safecall;
    function Get_HTMLMarqueeElement: IDispatch; safecall;
    function Get_HTMLMetaElement: IDispatch; safecall;
    function Get_HTMLModelessDialog: IDispatch; safecall;
    function Get_HTMLNamespaceInfo: IDispatch; safecall;
    function Get_HTMLNamespaceInfoCollection: IDispatch; safecall;
    function Get_HTMLNextIdElement: IDispatch; safecall;
    function Get_HTMLNoShowElement: IDispatch; safecall;
    function Get_HTMLObjectElement: IDispatch; safecall;
    function Get_HTMLOListElement: IDispatch; safecall;
    function Get_HTMLOptionElement: IDispatch; safecall;
    function Get_HTMLParagraphElement: IDispatch; safecall;
    function Get_HTMLParamElement: IDispatch; safecall;
    function Get_HTMLPhraseElement: IDispatch; safecall;
    function Get_HTMLPluginsCollection: IDispatch; safecall;
    function Get_HTMLPopup: IDispatch; safecall;
    function Get_HTMLScriptElement: IDispatch; safecall;
    function Get_HTMLSelectElement: IDispatch; safecall;
    function Get_HTMLSpanElement: IDispatch; safecall;
    function Get_HTMLStyleElement: IDispatch; safecall;
    function Get_HTMLTableCaptionElement: IDispatch; safecall;
    function Get_HTMLTableCellElement: IDispatch; safecall;
    function Get_HTMLTableColElement: IDispatch; safecall;
    function Get_HTMLTableElement: IDispatch; safecall;
    function Get_HTMLTableRowElement: IDispatch; safecall;
    function Get_HTMLTableSectionElement: IDispatch; safecall;
    function Get_HTMLTextAreaElement: IDispatch; safecall;
    function Get_HTMLTextElement: IDispatch; safecall;
    function Get_HTMLTitleElement: IDispatch; safecall;
    function Get_HTMLUListElement: IDispatch; safecall;
    function Get_HTMLUnknownElement: IDispatch; safecall;
    function Get_Image: IDispatch; safecall;
    function Get_location: IDispatch; safecall;
    function Get_NamedNodeMap: IDispatch; safecall;
    function Get_navigator: IDispatch; safecall;
    function Get_NodeList: IDispatch; safecall;
    function Get_Option: IDispatch; safecall;
    function Get_screen: IDispatch; safecall;
    function Get_selection: IDispatch; safecall;
    function Get_StaticNodeList: IDispatch; safecall;
    function Get_Storage: IDispatch; safecall;
    function Get_StyleSheetList: IDispatch; safecall;
    function Get_StyleSheetPage: IDispatch; safecall;
    function Get_StyleSheetPageList: IDispatch; safecall;
    function Get_text: IDispatch; safecall;
    function Get_TextRange: IDispatch; safecall;
    function Get_TextRangeCollection: IDispatch; safecall;
    function Get_TextRectangle: IDispatch; safecall;
    function Get_TextRectangleList: IDispatch; safecall;
    function Get_window: IDispatch; safecall;
    function Get_XDomainRequest: IDispatch; safecall;
    function Get_XMLHttpRequest: IDispatch; safecall;
    property Attr: IDispatch read Get_Attr;
    property BehaviorUrnsCollection: IDispatch read Get_BehaviorUrnsCollection;
    property BookmarkCollection: IDispatch read Get_BookmarkCollection;
    property compatibleInfo: IDispatch read Get_compatibleInfo;
    property CompatibleInfoCollection: IDispatch read Get_CompatibleInfoCollection;
    property ControlRangeCollection: IDispatch read Get_ControlRangeCollection;
    property CSSCurrentStyleDeclaration: IDispatch read Get_CSSCurrentStyleDeclaration;
    property CSSRuleList: IDispatch read Get_CSSRuleList;
    property CSSRuleStyleDeclaration: IDispatch read Get_CSSRuleStyleDeclaration;
    property CSSStyleDeclaration: IDispatch read Get_CSSStyleDeclaration;
    property CSSStyleRule: IDispatch read Get_CSSStyleRule;
    property CSSStyleSheet: IDispatch read Get_CSSStyleSheet;
    property dataTransfer: IDispatch read Get_dataTransfer;
    property DOMImplementation: IDispatch read Get_DOMImplementation;
    property element: IDispatch read Get_element;
    property event: IDispatch read Get_event;
    property history: IDispatch read Get_history;
    property HTCElementBehaviorDefaults: IDispatch read Get_HTCElementBehaviorDefaults;
    property HTMLAnchorElement: IDispatch read Get_HTMLAnchorElement;
    property HTMLAreaElement: IDispatch read Get_HTMLAreaElement;
    property HTMLAreasCollection: IDispatch read Get_HTMLAreasCollection;
    property HTMLBaseElement: IDispatch read Get_HTMLBaseElement;
    property HTMLBaseFontElement: IDispatch read Get_HTMLBaseFontElement;
    property HTMLBGSoundElement: IDispatch read Get_HTMLBGSoundElement;
    property HTMLBlockElement: IDispatch read Get_HTMLBlockElement;
    property HTMLBodyElement: IDispatch read Get_HTMLBodyElement;
    property HTMLBRElement: IDispatch read Get_HTMLBRElement;
    property HTMLButtonElement: IDispatch read Get_HTMLButtonElement;
    property HTMLCollection: IDispatch read Get_HTMLCollection;
    property HTMLCommentElement: IDispatch read Get_HTMLCommentElement;
    property HTMLDDElement: IDispatch read Get_HTMLDDElement;
    property HTMLDivElement: IDispatch read Get_HTMLDivElement;
    property HTMLDocument: IDispatch read Get_HTMLDocument;
    property HTMLDListElement: IDispatch read Get_HTMLDListElement;
    property HTMLDTElement: IDispatch read Get_HTMLDTElement;
    property HTMLEmbedElement: IDispatch read Get_HTMLEmbedElement;
    property HTMLFieldSetElement: IDispatch read Get_HTMLFieldSetElement;
    property HTMLFontElement: IDispatch read Get_HTMLFontElement;
    property HTMLFormElement: IDispatch read Get_HTMLFormElement;
    property HTMLFrameElement: IDispatch read Get_HTMLFrameElement;
    property HTMLFrameSetElement: IDispatch read Get_HTMLFrameSetElement;
    property HTMLGenericElement: IDispatch read Get_HTMLGenericElement;
    property HTMLHeadElement: IDispatch read Get_HTMLHeadElement;
    property HTMLHeadingElement: IDispatch read Get_HTMLHeadingElement;
    property HTMLHRElement: IDispatch read Get_HTMLHRElement;
    property HTMLHtmlElement: IDispatch read Get_HTMLHtmlElement;
    property HTMLIFrameElement: IDispatch read Get_HTMLIFrameElement;
    property HTMLImageElement: IDispatch read Get_HTMLImageElement;
    property HTMLInputElement: IDispatch read Get_HTMLInputElement;
    property HTMLIsIndexElement: IDispatch read Get_HTMLIsIndexElement;
    property HTMLLabelElement: IDispatch read Get_HTMLLabelElement;
    property HTMLLegendElement: IDispatch read Get_HTMLLegendElement;
    property HTMLLIElement: IDispatch read Get_HTMLLIElement;
    property HTMLLinkElement: IDispatch read Get_HTMLLinkElement;
    property HTMLMapElement: IDispatch read Get_HTMLMapElement;
    property HTMLMarqueeElement: IDispatch read Get_HTMLMarqueeElement;
    property HTMLMetaElement: IDispatch read Get_HTMLMetaElement;
    property HTMLModelessDialog: IDispatch read Get_HTMLModelessDialog;
    property HTMLNamespaceInfo: IDispatch read Get_HTMLNamespaceInfo;
    property HTMLNamespaceInfoCollection: IDispatch read Get_HTMLNamespaceInfoCollection;
    property HTMLNextIdElement: IDispatch read Get_HTMLNextIdElement;
    property HTMLNoShowElement: IDispatch read Get_HTMLNoShowElement;
    property HTMLObjectElement: IDispatch read Get_HTMLObjectElement;
    property HTMLOListElement: IDispatch read Get_HTMLOListElement;
    property HTMLOptionElement: IDispatch read Get_HTMLOptionElement;
    property HTMLParagraphElement: IDispatch read Get_HTMLParagraphElement;
    property HTMLParamElement: IDispatch read Get_HTMLParamElement;
    property HTMLPhraseElement: IDispatch read Get_HTMLPhraseElement;
    property HTMLPluginsCollection: IDispatch read Get_HTMLPluginsCollection;
    property HTMLPopup: IDispatch read Get_HTMLPopup;
    property HTMLScriptElement: IDispatch read Get_HTMLScriptElement;
    property HTMLSelectElement: IDispatch read Get_HTMLSelectElement;
    property HTMLSpanElement: IDispatch read Get_HTMLSpanElement;
    property HTMLStyleElement: IDispatch read Get_HTMLStyleElement;
    property HTMLTableCaptionElement: IDispatch read Get_HTMLTableCaptionElement;
    property HTMLTableCellElement: IDispatch read Get_HTMLTableCellElement;
    property HTMLTableColElement: IDispatch read Get_HTMLTableColElement;
    property HTMLTableElement: IDispatch read Get_HTMLTableElement;
    property HTMLTableRowElement: IDispatch read Get_HTMLTableRowElement;
    property HTMLTableSectionElement: IDispatch read Get_HTMLTableSectionElement;
    property HTMLTextAreaElement: IDispatch read Get_HTMLTextAreaElement;
    property HTMLTextElement: IDispatch read Get_HTMLTextElement;
    property HTMLTitleElement: IDispatch read Get_HTMLTitleElement;
    property HTMLUListElement: IDispatch read Get_HTMLUListElement;
    property HTMLUnknownElement: IDispatch read Get_HTMLUnknownElement;
    property Image: IDispatch read Get_Image;
    property location: IDispatch read Get_location;
    property NamedNodeMap: IDispatch read Get_NamedNodeMap;
    property navigator: IDispatch read Get_navigator;
    property NodeList: IDispatch read Get_NodeList;
    property Option: IDispatch read Get_Option;
    property screen: IDispatch read Get_screen;
    property selection: IDispatch read Get_selection;
    property StaticNodeList: IDispatch read Get_StaticNodeList;
    property Storage: IDispatch read Get_Storage;
    property StyleSheetList: IDispatch read Get_StyleSheetList;
    property StyleSheetPage: IDispatch read Get_StyleSheetPage;
    property StyleSheetPageList: IDispatch read Get_StyleSheetPageList;
    property text: IDispatch read Get_text;
    property TextRange: IDispatch read Get_TextRange;
    property TextRangeCollection: IDispatch read Get_TextRangeCollection;
    property TextRectangle: IDispatch read Get_TextRectangle;
    property TextRectangleList: IDispatch read Get_TextRectangleList;
    property window: IDispatch read Get_window;
    property XDomainRequest: IDispatch read Get_XDomainRequest;
    property XMLHttpRequest: IDispatch read Get_XMLHttpRequest;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDOMConstructorCollectionDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3051049C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDOMConstructorCollectionDisp = dispinterface
    ['{3051049C-98B5-11CF-BB82-00AA00BDCE0B}']
    property Attr: IDispatch readonly dispid 8003;
    property BehaviorUrnsCollection: IDispatch readonly dispid 8004;
    property BookmarkCollection: IDispatch readonly dispid 8005;
    property compatibleInfo: IDispatch readonly dispid 8006;
    property CompatibleInfoCollection: IDispatch readonly dispid 8007;
    property ControlRangeCollection: IDispatch readonly dispid 8008;
    property CSSCurrentStyleDeclaration: IDispatch readonly dispid 8009;
    property CSSRuleList: IDispatch readonly dispid 8010;
    property CSSRuleStyleDeclaration: IDispatch readonly dispid 8011;
    property CSSStyleDeclaration: IDispatch readonly dispid 8012;
    property CSSStyleRule: IDispatch readonly dispid 8013;
    property CSSStyleSheet: IDispatch readonly dispid 8014;
    property dataTransfer: IDispatch readonly dispid 8015;
    property DOMImplementation: IDispatch readonly dispid 8016;
    property element: IDispatch readonly dispid 8017;
    property event: IDispatch readonly dispid 8018;
    property history: IDispatch readonly dispid 8019;
    property HTCElementBehaviorDefaults: IDispatch readonly dispid 8020;
    property HTMLAnchorElement: IDispatch readonly dispid 8021;
    property HTMLAreaElement: IDispatch readonly dispid 8022;
    property HTMLAreasCollection: IDispatch readonly dispid 8023;
    property HTMLBaseElement: IDispatch readonly dispid 8024;
    property HTMLBaseFontElement: IDispatch readonly dispid 8025;
    property HTMLBGSoundElement: IDispatch readonly dispid 8026;
    property HTMLBlockElement: IDispatch readonly dispid 8027;
    property HTMLBodyElement: IDispatch readonly dispid 8028;
    property HTMLBRElement: IDispatch readonly dispid 8029;
    property HTMLButtonElement: IDispatch readonly dispid 8030;
    property HTMLCollection: IDispatch readonly dispid 8031;
    property HTMLCommentElement: IDispatch readonly dispid 8032;
    property HTMLDDElement: IDispatch readonly dispid 8033;
    property HTMLDivElement: IDispatch readonly dispid 8034;
    property HTMLDocument: IDispatch readonly dispid 8035;
    property HTMLDListElement: IDispatch readonly dispid 8036;
    property HTMLDTElement: IDispatch readonly dispid 8037;
    property HTMLEmbedElement: IDispatch readonly dispid 8038;
    property HTMLFieldSetElement: IDispatch readonly dispid 8039;
    property HTMLFontElement: IDispatch readonly dispid 8040;
    property HTMLFormElement: IDispatch readonly dispid 8041;
    property HTMLFrameElement: IDispatch readonly dispid 8042;
    property HTMLFrameSetElement: IDispatch readonly dispid 8043;
    property HTMLGenericElement: IDispatch readonly dispid 8044;
    property HTMLHeadElement: IDispatch readonly dispid 8045;
    property HTMLHeadingElement: IDispatch readonly dispid 8046;
    property HTMLHRElement: IDispatch readonly dispid 8047;
    property HTMLHtmlElement: IDispatch readonly dispid 8048;
    property HTMLIFrameElement: IDispatch readonly dispid 8049;
    property HTMLImageElement: IDispatch readonly dispid 8050;
    property HTMLInputElement: IDispatch readonly dispid 8051;
    property HTMLIsIndexElement: IDispatch readonly dispid 8052;
    property HTMLLabelElement: IDispatch readonly dispid 8053;
    property HTMLLegendElement: IDispatch readonly dispid 8054;
    property HTMLLIElement: IDispatch readonly dispid 8055;
    property HTMLLinkElement: IDispatch readonly dispid 8056;
    property HTMLMapElement: IDispatch readonly dispid 8057;
    property HTMLMarqueeElement: IDispatch readonly dispid 8058;
    property HTMLMetaElement: IDispatch readonly dispid 8059;
    property HTMLModelessDialog: IDispatch readonly dispid 8060;
    property HTMLNamespaceInfo: IDispatch readonly dispid 8061;
    property HTMLNamespaceInfoCollection: IDispatch readonly dispid 8062;
    property HTMLNextIdElement: IDispatch readonly dispid 8063;
    property HTMLNoShowElement: IDispatch readonly dispid 8064;
    property HTMLObjectElement: IDispatch readonly dispid 8065;
    property HTMLOListElement: IDispatch readonly dispid 8066;
    property HTMLOptionElement: IDispatch readonly dispid 8067;
    property HTMLParagraphElement: IDispatch readonly dispid 8068;
    property HTMLParamElement: IDispatch readonly dispid 8069;
    property HTMLPhraseElement: IDispatch readonly dispid 8070;
    property HTMLPluginsCollection: IDispatch readonly dispid 8071;
    property HTMLPopup: IDispatch readonly dispid 8072;
    property HTMLScriptElement: IDispatch readonly dispid 8073;
    property HTMLSelectElement: IDispatch readonly dispid 8074;
    property HTMLSpanElement: IDispatch readonly dispid 8075;
    property HTMLStyleElement: IDispatch readonly dispid 8076;
    property HTMLTableCaptionElement: IDispatch readonly dispid 8077;
    property HTMLTableCellElement: IDispatch readonly dispid 8078;
    property HTMLTableColElement: IDispatch readonly dispid 8079;
    property HTMLTableElement: IDispatch readonly dispid 8080;
    property HTMLTableRowElement: IDispatch readonly dispid 8081;
    property HTMLTableSectionElement: IDispatch readonly dispid 8082;
    property HTMLTextAreaElement: IDispatch readonly dispid 8083;
    property HTMLTextElement: IDispatch readonly dispid 8084;
    property HTMLTitleElement: IDispatch readonly dispid 8085;
    property HTMLUListElement: IDispatch readonly dispid 8086;
    property HTMLUnknownElement: IDispatch readonly dispid 8087;
    property Image: IDispatch readonly dispid 8088;
    property location: IDispatch readonly dispid 8089;
    property NamedNodeMap: IDispatch readonly dispid 8090;
    property navigator: IDispatch readonly dispid 8091;
    property NodeList: IDispatch readonly dispid 8092;
    property Option: IDispatch readonly dispid 8093;
    property screen: IDispatch readonly dispid 8094;
    property selection: IDispatch readonly dispid 8095;
    property StaticNodeList: IDispatch readonly dispid 8096;
    property Storage: IDispatch readonly dispid 8097;
    property StyleSheetList: IDispatch readonly dispid 8098;
    property StyleSheetPage: IDispatch readonly dispid 8099;
    property StyleSheetPageList: IDispatch readonly dispid 8100;
    property text: IDispatch readonly dispid 8101;
    property TextRange: IDispatch readonly dispid 8102;
    property TextRangeCollection: IDispatch readonly dispid 8103;
    property TextRectangle: IDispatch readonly dispid 8104;
    property TextRectangleList: IDispatch readonly dispid 8105;
    property window: IDispatch readonly dispid 8106;
    property XDomainRequest: IDispatch readonly dispid 8107;
    property XMLHttpRequest: IDispatch readonly dispid 8108;
  end;

// *********************************************************************//
// Interface: IHTMLDialog
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F216-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDialog = interface(IDispatch)
    ['{3050F216-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_dialogTop(p: OleVariant); safecall;
    function Get_dialogTop: OleVariant; safecall;
    procedure Set_dialogLeft(p: OleVariant); safecall;
    function Get_dialogLeft: OleVariant; safecall;
    procedure Set_dialogWidth(p: OleVariant); safecall;
    function Get_dialogWidth: OleVariant; safecall;
    procedure Set_dialogHeight(p: OleVariant); safecall;
    function Get_dialogHeight: OleVariant; safecall;
    function Get_dialogArguments: OleVariant; safecall;
    function Get_menuArguments: OleVariant; safecall;
    procedure Set_returnValue(p: OleVariant); safecall;
    function Get_returnValue: OleVariant; safecall;
    procedure close; safecall;
    function toString: WideString; safecall;
    property dialogTop: OleVariant read Get_dialogTop write Set_dialogTop;
    property dialogLeft: OleVariant read Get_dialogLeft write Set_dialogLeft;
    property dialogWidth: OleVariant read Get_dialogWidth write Set_dialogWidth;
    property dialogHeight: OleVariant read Get_dialogHeight write Set_dialogHeight;
    property dialogArguments: OleVariant read Get_dialogArguments;
    property menuArguments: OleVariant read Get_menuArguments;
    property returnValue: OleVariant read Get_returnValue write Set_returnValue;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDialogDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F216-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDialogDisp = dispinterface
    ['{3050F216-98B5-11CF-BB82-00AA00BDCE0B}']
    property dialogTop: OleVariant dispid -2147418108;
    property dialogLeft: OleVariant dispid -2147418109;
    property dialogWidth: OleVariant dispid -2147418107;
    property dialogHeight: OleVariant dispid -2147418106;
    property dialogArguments: OleVariant readonly dispid 25000;
    property menuArguments: OleVariant readonly dispid 25013;
    property returnValue: OleVariant dispid 25001;
    procedure close; dispid 25011;
    function toString: WideString; dispid 25012;
  end;

// *********************************************************************//
// Interface: IHTMLDialog2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5E0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDialog2 = interface(IDispatch)
    ['{3050F5E0-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_status(const p: WideString); safecall;
    function Get_status: WideString; safecall;
    procedure Set_resizable(const p: WideString); safecall;
    function Get_resizable: WideString; safecall;
    property status: WideString read Get_status write Set_status;
    property resizable: WideString read Get_resizable write Set_resizable;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDialog2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5E0-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDialog2Disp = dispinterface
    ['{3050F5E0-98B5-11CF-BB82-00AA00BDCE0B}']
    property status: WideString dispid 25014;
    property resizable: WideString dispid 25015;
  end;

// *********************************************************************//
// Interface: IHTMLDialog3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F388-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDialog3 = interface(IDispatch)
    ['{3050F388-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_unadorned(const p: WideString); safecall;
    function Get_unadorned: WideString; safecall;
    procedure Set_dialogHide(const p: WideString); safecall;
    function Get_dialogHide: WideString; safecall;
    property unadorned: WideString read Get_unadorned write Set_unadorned;
    property dialogHide: WideString read Get_dialogHide write Set_dialogHide;
  end;

// *********************************************************************//
// DispIntf:  IHTMLDialog3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F388-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLDialog3Disp = dispinterface
    ['{3050F388-98B5-11CF-BB82-00AA00BDCE0B}']
    property unadorned: WideString dispid 25016;
    property dialogHide: WideString dispid 25007;
  end;

// *********************************************************************//
// Interface: IHTMLModelessInit
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5E4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLModelessInit = interface(IDispatch)
    ['{3050F5E4-98B5-11CF-BB82-00AA00BDCE0B}']
    function Get_parameters: OleVariant; safecall;
    function Get_optionString: OleVariant; safecall;
    function Get_moniker: IUnknown; safecall;
    function Get_document: IUnknown; safecall;
    property parameters: OleVariant read Get_parameters;
    property optionString: OleVariant read Get_optionString;
    property moniker: IUnknown read Get_moniker;
    property document: IUnknown read Get_document;
  end;

// *********************************************************************//
// DispIntf:  IHTMLModelessInitDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5E4-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLModelessInitDisp = dispinterface
    ['{3050F5E4-98B5-11CF-BB82-00AA00BDCE0B}']
    property parameters: OleVariant readonly dispid 25000;
    property optionString: OleVariant readonly dispid 25001;
    property moniker: IUnknown readonly dispid 25006;
    property document: IUnknown readonly dispid 25007;
  end;

// *********************************************************************//
// Interface: IHTMLPopup
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F666-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLPopup = interface(IDispatch)
    ['{3050F666-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Show(x: Integer; y: Integer; w: Integer; h: Integer; const pElement: OleVariant); safecall;
    procedure Hide; safecall;
    function Get_document: IHTMLDocument; safecall;
    function Get_isOpen: WordBool; safecall;
    property document: IHTMLDocument read Get_document;
    property isOpen: WordBool read Get_isOpen;
  end;

// *********************************************************************//
// DispIntf:  IHTMLPopupDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F666-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLPopupDisp = dispinterface
    ['{3050F666-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Show(x: Integer; y: Integer; w: Integer; h: Integer; const pElement: OleVariant); dispid 27001;
    procedure Hide; dispid 27002;
    property document: IHTMLDocument readonly dispid 27003;
    property isOpen: WordBool readonly dispid 27004;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLPopup
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F589-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLPopup = dispinterface
    ['{3050F589-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Show(x: Integer; y: Integer; w: Integer; h: Integer; const pElement: OleVariant); dispid 27001;
    procedure Hide; dispid 27002;
    property document: IHTMLDocument readonly dispid 27003;
    property isOpen: WordBool readonly dispid 27004;
    property constructor_: IDispatch readonly dispid -2147417603;
  end;

// *********************************************************************//
// Interface: IHTMLAppBehavior
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5CA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAppBehavior = interface(IDispatch)
    ['{3050F5CA-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_applicationName(const p: WideString); safecall;
    function Get_applicationName: WideString; safecall;
    procedure Set_version(const p: WideString); safecall;
    function Get_version: WideString; safecall;
    procedure Set_icon(const p: WideString); safecall;
    function Get_icon: WideString; safecall;
    procedure Set_singleInstance(const p: WideString); safecall;
    function Get_singleInstance: WideString; safecall;
    procedure Set_minimizeButton(const p: WideString); safecall;
    function Get_minimizeButton: WideString; safecall;
    procedure Set_maximizeButton(const p: WideString); safecall;
    function Get_maximizeButton: WideString; safecall;
    procedure Set_border(const p: WideString); safecall;
    function Get_border: WideString; safecall;
    procedure Set_borderStyle(const p: WideString); safecall;
    function Get_borderStyle: WideString; safecall;
    procedure Set_sysMenu(const p: WideString); safecall;
    function Get_sysMenu: WideString; safecall;
    procedure Set_caption(const p: WideString); safecall;
    function Get_caption: WideString; safecall;
    procedure Set_windowState(const p: WideString); safecall;
    function Get_windowState: WideString; safecall;
    procedure Set_showInTaskBar(const p: WideString); safecall;
    function Get_showInTaskBar: WideString; safecall;
    function Get_commandLine: WideString; safecall;
    property applicationName: WideString read Get_applicationName write Set_applicationName;
    property version: WideString read Get_version write Set_version;
    property icon: WideString read Get_icon write Set_icon;
    property singleInstance: WideString read Get_singleInstance write Set_singleInstance;
    property minimizeButton: WideString read Get_minimizeButton write Set_minimizeButton;
    property maximizeButton: WideString read Get_maximizeButton write Set_maximizeButton;
    property border: WideString read Get_border write Set_border;
    property borderStyle: WideString read Get_borderStyle write Set_borderStyle;
    property sysMenu: WideString read Get_sysMenu write Set_sysMenu;
    property caption: WideString read Get_caption write Set_caption;
    property windowState: WideString read Get_windowState write Set_windowState;
    property showInTaskBar: WideString read Get_showInTaskBar write Set_showInTaskBar;
    property commandLine: WideString read Get_commandLine;
  end;

// *********************************************************************//
// DispIntf:  IHTMLAppBehaviorDisp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5CA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAppBehaviorDisp = dispinterface
    ['{3050F5CA-98B5-11CF-BB82-00AA00BDCE0B}']
    property applicationName: WideString dispid 5000;
    property version: WideString dispid 5001;
    property icon: WideString dispid 5002;
    property singleInstance: WideString dispid 5003;
    property minimizeButton: WideString dispid 5005;
    property maximizeButton: WideString dispid 5006;
    property border: WideString dispid 5007;
    property borderStyle: WideString dispid 5008;
    property sysMenu: WideString dispid 5009;
    property caption: WideString dispid 5010;
    property windowState: WideString dispid 5011;
    property showInTaskBar: WideString dispid 5012;
    property commandLine: WideString readonly dispid 5013;
  end;

// *********************************************************************//
// Interface: IHTMLAppBehavior2
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5C9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAppBehavior2 = interface(IDispatch)
    ['{3050F5C9-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_contextMenu(const p: WideString); safecall;
    function Get_contextMenu: WideString; safecall;
    procedure Set_innerBorder(const p: WideString); safecall;
    function Get_innerBorder: WideString; safecall;
    procedure Set_scroll(const p: WideString); safecall;
    function Get_scroll: WideString; safecall;
    procedure Set_scrollFlat(const p: WideString); safecall;
    function Get_scrollFlat: WideString; safecall;
    procedure Set_selection(const p: WideString); safecall;
    function Get_selection: WideString; safecall;
    property contextMenu: WideString read Get_contextMenu write Set_contextMenu;
    property innerBorder: WideString read Get_innerBorder write Set_innerBorder;
    property scroll: WideString read Get_scroll write Set_scroll;
    property scrollFlat: WideString read Get_scrollFlat write Set_scrollFlat;
    property selection: WideString read Get_selection write Set_selection;
  end;

// *********************************************************************//
// DispIntf:  IHTMLAppBehavior2Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5C9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAppBehavior2Disp = dispinterface
    ['{3050F5C9-98B5-11CF-BB82-00AA00BDCE0B}']
    property contextMenu: WideString dispid 5014;
    property innerBorder: WideString dispid 5015;
    property scroll: WideString dispid 5016;
    property scrollFlat: WideString dispid 5017;
    property selection: WideString dispid 5018;
  end;

// *********************************************************************//
// Interface: IHTMLAppBehavior3
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5CD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAppBehavior3 = interface(IDispatch)
    ['{3050F5CD-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure Set_navigable(const p: WideString); safecall;
    function Get_navigable: WideString; safecall;
    property navigable: WideString read Get_navigable write Set_navigable;
  end;

// *********************************************************************//
// DispIntf:  IHTMLAppBehavior3Disp
// Flags:     (4416) Dual OleAutomation Dispatchable
// GUID:      {3050F5CD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHTMLAppBehavior3Disp = dispinterface
    ['{3050F5CD-98B5-11CF-BB82-00AA00BDCE0B}']
    property navigable: WideString dispid 5019;
  end;

// *********************************************************************//
// DispIntf:  DispHTMLAppBehavior
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F57C-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispHTMLAppBehavior = dispinterface
    ['{3050F57C-98B5-11CF-BB82-00AA00BDCE0B}']
    property applicationName: WideString dispid 5000;
    property version: WideString dispid 5001;
    property icon: WideString dispid 5002;
    property singleInstance: WideString dispid 5003;
    property minimizeButton: WideString dispid 5005;
    property maximizeButton: WideString dispid 5006;
    property border: WideString dispid 5007;
    property borderStyle: WideString dispid 5008;
    property sysMenu: WideString dispid 5009;
    property caption: WideString dispid 5010;
    property windowState: WideString dispid 5011;
    property showInTaskBar: WideString dispid 5012;
    property commandLine: WideString readonly dispid 5013;
    property contextMenu: WideString dispid 5014;
    property innerBorder: WideString dispid 5015;
    property scroll: WideString dispid 5016;
    property scrollFlat: WideString dispid 5017;
    property selection: WideString dispid 5018;
  end;

// *********************************************************************//
// DispIntf:  DispIHTMLInputButtonElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F51E-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispIHTMLInputButtonElement = dispinterface
    ['{3050F51E-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    property type_: WideString readonly dispid 2000;
    property value: WideString dispid -2147413011;
    property name: WideString dispid -2147418112;
    property status: OleVariant dispid 2021;
    property disabled: WordBool dispid -2147418036;
    property form: IHTMLFormElement readonly dispid -2147416108;
    function createTextRange: IHTMLTxtRange; dispid 2006;
  end;

// *********************************************************************//
// DispIntf:  DispIHTMLInputTextElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F520-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispIHTMLInputTextElement = dispinterface
    ['{3050F520-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    property type_: WideString readonly dispid 2000;
    property value: WideString dispid -2147413011;
    property name: WideString dispid -2147418112;
    property status: OleVariant dispid 2021;
    property disabled: WordBool dispid -2147418036;
    property form: IHTMLFormElement readonly dispid -2147416108;
    property defaultValue: WideString dispid -2147413029;
    property size: Integer dispid 2002;
    property maxLength: Integer dispid 2003;
    procedure select; dispid 2004;
    property onchange: OleVariant dispid -2147412082;
    property onselect: OleVariant dispid -2147412102;
    property readOnly: WordBool dispid 2005;
    function createTextRange: IHTMLTxtRange; dispid 2006;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
  end;

// *********************************************************************//
// DispIntf:  DispIHTMLInputFileElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F542-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispIHTMLInputFileElement = dispinterface
    ['{3050F542-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    property type_: WideString readonly dispid 2000;
    property name: WideString dispid -2147418112;
    property status: OleVariant dispid 2021;
    property disabled: WordBool dispid -2147418036;
    property form: IHTMLFormElement readonly dispid -2147416108;
    property size: Integer dispid 2002;
    property maxLength: Integer dispid 2003;
    procedure select; dispid 2004;
    property onchange: OleVariant dispid -2147412082;
    property onselect: OleVariant dispid -2147412102;
    property value: WideString dispid -2147413011;
  end;

// *********************************************************************//
// DispIntf:  DispIHTMLOptionButtonElement
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F509-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispIHTMLOptionButtonElement = dispinterface
    ['{3050F509-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    property value: WideString dispid -2147413011;
    property type_: WideString readonly dispid 2000;
    property name: WideString dispid -2147418112;
    property checked: WordBool dispid 2009;
    property defaultChecked: WordBool dispid 2008;
    property onchange: OleVariant dispid -2147412082;
    property disabled: WordBool dispid -2147418036;
    property status: WordBool dispid 2001;
    property indeterminate: WordBool dispid 2007;
    property form: IHTMLFormElement readonly dispid -2147416108;
    property dataFld: WideString dispid -2147417091;
    property dataSrc: WideString dispid -2147417090;
    property dataFormatAs: WideString dispid -2147417089;
  end;

// *********************************************************************//
// DispIntf:  DispIHTMLInputImage
// Flags:     (4112) Hidden Dispatchable
// GUID:      {3050F51D-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  DispIHTMLInputImage = dispinterface
    ['{3050F51D-98B5-11CF-BB82-00AA00BDCE0B}']
    procedure setAttribute(const strAttributeName: WideString; AttributeValue: OleVariant; 
                           lFlags: Integer); dispid -2147417611;
    function getAttribute(const strAttributeName: WideString; lFlags: Integer): OleVariant; dispid -2147417610;
    function removeAttribute(const strAttributeName: WideString; lFlags: Integer): WordBool; dispid -2147417609;
    property _className: WideString dispid -2147417111;
    property id: WideString dispid -2147417110;
    property tagName: WideString readonly dispid -2147417108;
    property parentElement: IHTMLElement readonly dispid -2147418104;
    property style: IHTMLStyle readonly dispid -2147418038;
    property onhelp: OleVariant dispid -2147412099;
    property onclick: OleVariant dispid -2147412104;
    property ondblclick: OleVariant dispid -2147412103;
    property onkeydown: OleVariant dispid -2147412107;
    property onkeyup: OleVariant dispid -2147412106;
    property onkeypress: OleVariant dispid -2147412105;
    property onmouseout: OleVariant dispid -2147412111;
    property onmouseover: OleVariant dispid -2147412112;
    property onmousemove: OleVariant dispid -2147412108;
    property onmousedown: OleVariant dispid -2147412110;
    property onmouseup: OleVariant dispid -2147412109;
    property document: IDispatch readonly dispid -2147417094;
    property title: WideString dispid -2147418043;
    property language: WideString dispid -2147413012;
    property onselectstart: OleVariant dispid -2147412075;
    procedure scrollIntoView(varargStart: OleVariant); dispid -2147417093;
    function contains(const pChild: IHTMLElement): WordBool; dispid -2147417092;
    property sourceIndex: Integer readonly dispid -2147417088;
    property recordNumber: OleVariant readonly dispid -2147417087;
    property lang: WideString dispid -2147413103;
    property offsetLeft: Integer readonly dispid -2147417104;
    property offsetTop: Integer readonly dispid -2147417103;
    property offsetWidth: Integer readonly dispid -2147417102;
    property offsetHeight: Integer readonly dispid -2147417101;
    property offsetParent: IHTMLElement readonly dispid -2147417100;
    property innerHTML: WideString dispid -2147417086;
    property innerText: WideString dispid -2147417085;
    property outerHTML: WideString dispid -2147417084;
    property outerText: WideString dispid -2147417083;
    procedure insertAdjacentHTML(const where: WideString; const html: WideString); dispid -2147417082;
    procedure insertAdjacentText(const where: WideString; const text: WideString); dispid -2147417081;
    property parentTextEdit: IHTMLElement readonly dispid -2147417080;
    property isTextEdit: WordBool readonly dispid -2147417078;
    procedure click; dispid -2147417079;
    property filters: IHTMLFiltersCollection readonly dispid -2147417077;
    property ondragstart: OleVariant dispid -2147412077;
    function toString: WideString; dispid -2147417076;
    property onbeforeupdate: OleVariant dispid -2147412091;
    property onafterupdate: OleVariant dispid -2147412090;
    property onerrorupdate: OleVariant dispid -2147412074;
    property onrowexit: OleVariant dispid -2147412094;
    property onrowenter: OleVariant dispid -2147412093;
    property ondatasetchanged: OleVariant dispid -2147412072;
    property ondataavailable: OleVariant dispid -2147412071;
    property ondatasetcomplete: OleVariant dispid -2147412070;
    property onfilterchange: OleVariant dispid -2147412069;
    property children: IDispatch readonly dispid -2147417075;
    property all: IDispatch readonly dispid -2147417074;
    property tabIndex: Smallint dispid -2147418097;
    procedure focus; dispid -2147416112;
    property accessKey: WideString dispid -2147416107;
    property onblur: OleVariant dispid -2147412097;
    property onfocus: OleVariant dispid -2147412098;
    property onresize: OleVariant dispid -2147412076;
    procedure blur; dispid -2147416110;
    procedure addFilter(const pUnk: IUnknown); dispid -2147416095;
    procedure removeFilter(const pUnk: IUnknown); dispid -2147416094;
    property clientHeight: Integer readonly dispid -2147416093;
    property clientWidth: Integer readonly dispid -2147416092;
    property clientTop: Integer readonly dispid -2147416091;
    property clientLeft: Integer readonly dispid -2147416090;
    property type_: WideString readonly dispid 2000;
    property disabled: WordBool dispid -2147418036;
    property border: OleVariant dispid 2012;
    property vspace: Integer dispid 2013;
    property hspace: Integer dispid 2014;
    property alt: WideString dispid 2010;
    property src: WideString dispid 2011;
    property lowsrc: WideString dispid 2015;
    property vrml: WideString dispid 2016;
    property dynsrc: WideString dispid 2017;
    property readyState: WideString readonly dispid -2147412996;
    property complete: WordBool readonly dispid 2018;
    property loop: OleVariant dispid 2019;
    property align: WideString dispid -2147418039;
    property onload: OleVariant dispid -2147412080;
    property onerror: OleVariant dispid -2147412083;
    property onabort: OleVariant dispid -2147412084;
    property name: WideString dispid -2147418112;
    property width: Integer dispid -2147418107;
    property height: Integer dispid -2147418106;
    property start: WideString dispid 2020;
  end;

// *********************************************************************//
// Interface: IElementNamespace
// Flags:     (0)
// GUID:      {3050F671-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementNamespace = interface(IUnknown)
    ['{3050F671-98B5-11CF-BB82-00AA00BDCE0B}']
    function AddTag(const bstrTagName: WideString; lFlags: Integer): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IElementNamespaceTable
// Flags:     (0)
// GUID:      {3050F670-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementNamespaceTable = interface(IUnknown)
    ['{3050F670-98B5-11CF-BB82-00AA00BDCE0B}']
    function AddNamespace(const bstrNamespace: WideString; const bstrUrn: WideString; 
                          lFlags: Integer; const pvarFactory: OleVariant): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IElementNamespaceFactory
// Flags:     (0)
// GUID:      {3050F672-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementNamespaceFactory = interface(IUnknown)
    ['{3050F672-98B5-11CF-BB82-00AA00BDCE0B}']
    function create(const pNamespace: IElementNamespace): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IElementNamespaceFactory2
// Flags:     (0)
// GUID:      {3050F805-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementNamespaceFactory2 = interface(IElementNamespaceFactory)
    ['{3050F805-98B5-11CF-BB82-00AA00BDCE0B}']
    function CreateWithImplementation(const pNamespace: IElementNamespace; 
                                      const bstrImplementation: WideString): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IElementNamespaceFactoryCallback
// Flags:     (0)
// GUID:      {3050F7FD-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementNamespaceFactoryCallback = interface(IUnknown)
    ['{3050F7FD-98B5-11CF-BB82-00AA00BDCE0B}']
    function Resolve(const bstrNamespace: WideString; const bstrTagName: WideString; 
                     const bstrAttrs: WideString; const pNamespace: IElementNamespace): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IElementBehaviorSiteOM2
// Flags:     (0)
// GUID:      {3050F659-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementBehaviorSiteOM2 = interface(IElementBehaviorSiteOM)
    ['{3050F659-98B5-11CF-BB82-00AA00BDCE0B}']
    function GetDefaults(out ppDefaults: IHTMLElementDefaults): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IElementBehaviorCategory
// Flags:     (0)
// GUID:      {3050F4ED-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementBehaviorCategory = interface(IUnknown)
    ['{3050F4ED-98B5-11CF-BB82-00AA00BDCE0B}']
    function GetCategory(out ppchCategory: PWideChar): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IElementBehaviorSiteCategory
// Flags:     (0)
// GUID:      {3050F4EE-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementBehaviorSiteCategory = interface(IUnknown)
    ['{3050F4EE-98B5-11CF-BB82-00AA00BDCE0B}']
    function GetRelatedBehaviors(lDirection: Integer; pchCategory: PWideChar; 
                                 out ppEnumerator: IEnumUnknown): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IEnumUnknown
// Flags:     (0)
// GUID:      {00000100-0000-0000-C000-000000000046}
// *********************************************************************//
  IEnumUnknown = interface(IUnknown)
    ['{00000100-0000-0000-C000-000000000046}']
    function RemoteNext(celt: LongWord; out rgelt: IUnknown; out pceltFetched: LongWord): HResult; stdcall;
    function Skip(celt: LongWord): HResult; stdcall;
    function reset: HResult; stdcall;
    function Clone(out ppEnum: IEnumUnknown): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IElementBehaviorSubmit
// Flags:     (0)
// GUID:      {3050F646-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementBehaviorSubmit = interface(IUnknown)
    ['{3050F646-98B5-11CF-BB82-00AA00BDCE0B}']
    function GetSubmitInfo(const pSubmitData: IHTMLSubmitData): HResult; stdcall;
    function reset: HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IElementBehaviorFocus
// Flags:     (0)
// GUID:      {3050F6B6-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementBehaviorFocus = interface(IUnknown)
    ['{3050F6B6-98B5-11CF-BB82-00AA00BDCE0B}']
    function GetFocusRect(var pRect: tagRECT): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IElementBehaviorLayout
// Flags:     (0)
// GUID:      {3050F6BA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementBehaviorLayout = interface(IUnknown)
    ['{3050F6BA-98B5-11CF-BB82-00AA00BDCE0B}']
    function GetSize(dwFlags: Integer; sizeContent: tagSIZE; var pptTranslateBy: tagPOINT; 
                     var pptTopLeft: tagPOINT; var psizeProposed: tagSIZE): HResult; stdcall;
    function GetLayoutInfo(out plLayoutInfo: Integer): HResult; stdcall;
    function GetPosition(lFlags: Integer; var pptTopLeft: tagPOINT): HResult; stdcall;
    // !! API fix decl
    function MapSize(psizeIn: PtagSIZE; out prcOut: tagRECT): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IElementBehaviorLayout2
// Flags:     (0)
// GUID:      {3050F846-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementBehaviorLayout2 = interface(IUnknown)
    ['{3050F846-98B5-11CF-BB82-00AA00BDCE0B}']
    function GetTextDescent(out plDescent: Integer): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IElementBehaviorSiteLayout
// Flags:     (0)
// GUID:      {3050F6B7-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementBehaviorSiteLayout = interface(IUnknown)
    ['{3050F6B7-98B5-11CF-BB82-00AA00BDCE0B}']
    function InvalidateLayoutInfo: HResult; stdcall;
    function InvalidateSize: HResult; stdcall;
    function GetMediaResolution(out psizeResolution: tagSIZE): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IElementBehaviorSiteLayout2
// Flags:     (0)
// GUID:      {3050F847-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IElementBehaviorSiteLayout2 = interface(IUnknown)
    ['{3050F847-98B5-11CF-BB82-00AA00BDCE0B}']
    function GetFontInfo(out plf: tagLOGFONTW): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IHostBehaviorInit
// Flags:     (0)
// GUID:      {3050F842-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IHostBehaviorInit = interface(IUnknown)
    ['{3050F842-98B5-11CF-BB82-00AA00BDCE0B}']
    function PopulateNamespaceTable: HResult; stdcall;
  end;

// *********************************************************************//
// Interface: ISurfacePresenter
// Flags:     (0)
// GUID:      {305106E2-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ISurfacePresenter = interface(IUnknown)
    ['{305106E2-98B5-11CF-BB82-00AA00BDCE0B}']
    function Present(uBuffer: SYSUINT; var pDirty: tagRECT): HResult; stdcall;
    function GetBuffer(backBufferIndex: SYSUINT; var riid: TGUID; out ppBuffer: Pointer): HResult; stdcall;
    function IsCurrent(out pIsCurrent: Integer): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IViewObjectPresentSite
// Flags:     (0)
// GUID:      {305106E1-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IViewObjectPresentSite = interface(IUnknown)
    ['{305106E1-98B5-11CF-BB82-00AA00BDCE0B}']
    function CreateSurfacePresenter(const pDevice: IUnknown; width: SYSUINT; height: SYSUINT; 
                                    backBufferCount: SYSUINT; format: DXGI_FORMAT; 
                                    mode: _VIEW_OBJECT_ALPHA_MODE; out ppQueue: ISurfacePresenter): HResult; stdcall;
    function IsHardwareComposition(out pIsHardwareComposition: Integer): HResult; stdcall;
    function SetCompositionMode(mode: _VIEW_OBJECT_COMPOSITION_MODE): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: ICanvasPixelArrayData
// Flags:     (0)
// GUID:      {305107F9-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ICanvasPixelArrayData = interface(IUnknown)
    ['{305107F9-98B5-11CF-BB82-00AA00BDCE0B}']
    function GetBufferPointer(out ppBuffer: PByte1; out pBufferLength: LongWord): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IViewObjectPrint
// Flags:     (0)
// GUID:      {305106E3-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IViewObjectPrint = interface(IUnknown)
    ['{305106E3-98B5-11CF-BB82-00AA00BDCE0B}']
    function GetPrintBitmap(out ppPrintBitmap: IUnknown): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IViewObjectPresentNotifySite
// Flags:     (0)
// GUID:      {305107FA-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IViewObjectPresentNotifySite = interface(IViewObjectPresentSite)
    ['{305107FA-98B5-11CF-BB82-00AA00BDCE0B}']
    function RequestFrame: HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IViewObjectPresentNotify
// Flags:     (0)
// GUID:      {305107F8-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IViewObjectPresentNotify = interface(IUnknown)
    ['{305107F8-98B5-11CF-BB82-00AA00BDCE0B}']
    function OnPreRender: HResult; stdcall;
  end;

// *********************************************************************//
// Interface: ITrackingProtection
// Flags:     (0)
// GUID:      {30510803-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  ITrackingProtection = interface(IUnknown)
    ['{30510803-98B5-11CF-BB82-00AA00BDCE0B}']
    function EvaluateUrl(const bstrURL: WideString; out pfAllowed: Integer): HResult; stdcall;
    function GetEnabled(out pfEnabled: Integer): HResult; stdcall;
  end;

// *********************************************************************//
// Interface: IBFCacheable
// Flags:     (0)
// GUID:      {30510861-98B5-11CF-BB82-00AA00BDCE0B}
// *********************************************************************//
  IBFCacheable = interface(IUnknown)
    ['{30510861-98B5-11CF-BB82-00AA00BDCE0B}']
    function EnterBFCache: HResult; stdcall;
    function ExitBFCache: HResult; stdcall;
  end;

// *********************************************************************//
// The Class CoHTMLCSSStyleDeclaration provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLCSSStyleDeclaration exposed by              
// the CoClass HTMLCSSStyleDeclaration. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLCSSStyleDeclaration = class
    class function Create: DispHTMLCSSStyleDeclaration;
    class function CreateRemote(const MachineName: string): DispHTMLCSSStyleDeclaration;
  end;

// *********************************************************************//
// The Class CoHTMLStyle provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLStyle exposed by              
// the CoClass HTMLStyle. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLStyle = class
    class function Create: DispHTMLStyle;
    class function CreateRemote(const MachineName: string): DispHTMLStyle;
  end;

// *********************************************************************//
// The Class CoHTMLRuleStyle provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLRuleStyle exposed by              
// the CoClass HTMLRuleStyle. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLRuleStyle = class
    class function Create: DispHTMLRuleStyle;
    class function CreateRemote(const MachineName: string): DispHTMLRuleStyle;
  end;

// *********************************************************************//
// The Class CoHTMLCSSRule provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLCSSRule exposed by              
// the CoClass HTMLCSSRule. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLCSSRule = class
    class function Create: DispHTMLCSSRule;
    class function CreateRemote(const MachineName: string): DispHTMLCSSRule;
  end;

// *********************************************************************//
// The Class CoHTMLCSSImportRule provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLCSSImportRule exposed by              
// the CoClass HTMLCSSImportRule. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLCSSImportRule = class
    class function Create: DispHTMLCSSImportRule;
    class function CreateRemote(const MachineName: string): DispHTMLCSSImportRule;
  end;

// *********************************************************************//
// The Class CoHTMLCSSMediaRule provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLCSSMediaRule exposed by              
// the CoClass HTMLCSSMediaRule. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLCSSMediaRule = class
    class function Create: DispHTMLCSSMediaRule;
    class function CreateRemote(const MachineName: string): DispHTMLCSSMediaRule;
  end;

// *********************************************************************//
// The Class CoHTMLCSSMediaList provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLCSSMediaList exposed by              
// the CoClass HTMLCSSMediaList. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLCSSMediaList = class
    class function Create: DispHTMLCSSMediaList;
    class function CreateRemote(const MachineName: string): DispHTMLCSSMediaList;
  end;

// *********************************************************************//
// The Class CoHTMLCSSNamespaceRule provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLCSSNamespaceRule exposed by              
// the CoClass HTMLCSSNamespaceRule. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLCSSNamespaceRule = class
    class function Create: DispHTMLCSSNamespaceRule;
    class function CreateRemote(const MachineName: string): DispHTMLCSSNamespaceRule;
  end;

// *********************************************************************//
// The Class CoHTMLMSCSSKeyframeRule provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLMSCSSKeyframeRule exposed by              
// the CoClass HTMLMSCSSKeyframeRule. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLMSCSSKeyframeRule = class
    class function Create: DispHTMLMSCSSKeyframeRule;
    class function CreateRemote(const MachineName: string): DispHTMLMSCSSKeyframeRule;
  end;

// *********************************************************************//
// The Class CoHTMLMSCSSKeyframesRule provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLMSCSSKeyframesRule exposed by              
// the CoClass HTMLMSCSSKeyframesRule. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLMSCSSKeyframesRule = class
    class function Create: DispHTMLMSCSSKeyframesRule;
    class function CreateRemote(const MachineName: string): DispHTMLMSCSSKeyframesRule;
  end;

// *********************************************************************//
// The Class CoHTMLRenderStyle provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLRenderStyle exposed by              
// the CoClass HTMLRenderStyle. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLRenderStyle = class
    class function Create: DispHTMLRenderStyle;
    class function CreateRemote(const MachineName: string): DispHTMLRenderStyle;
  end;

// *********************************************************************//
// The Class CoHTMLCurrentStyle provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLCurrentStyle exposed by              
// the CoClass HTMLCurrentStyle. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLCurrentStyle = class
    class function Create: DispHTMLCurrentStyle;
    class function CreateRemote(const MachineName: string): DispHTMLCurrentStyle;
  end;

// *********************************************************************//
// The Class CoHTMLDOMAttribute provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLDOMAttribute exposed by              
// the CoClass HTMLDOMAttribute. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLDOMAttribute = class
    class function Create: DispHTMLDOMAttribute;
    class function CreateRemote(const MachineName: string): DispHTMLDOMAttribute;
  end;

// *********************************************************************//
// The Class CoHTMLDOMTextNode provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLDOMTextNode exposed by              
// the CoClass HTMLDOMTextNode. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLDOMTextNode = class
    class function Create: DispHTMLDOMTextNode;
    class function CreateRemote(const MachineName: string): DispHTMLDOMTextNode;
  end;

// *********************************************************************//
// The Class CoHTMLDOMImplementation provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLDOMImplementation exposed by              
// the CoClass HTMLDOMImplementation. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLDOMImplementation = class
    class function Create: DispHTMLDOMImplementation;
    class function CreateRemote(const MachineName: string): DispHTMLDOMImplementation;
  end;

// *********************************************************************//
// The Class CoHTMLAttributeCollection provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLAttributeCollection exposed by              
// the CoClass HTMLAttributeCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLAttributeCollection = class
    class function Create: DispHTMLAttributeCollection;
    class function CreateRemote(const MachineName: string): DispHTMLAttributeCollection;
  end;

// *********************************************************************//
// The Class CoStaticNodeList provides a Create and CreateRemote method to          
// create instances of the default interface DispStaticNodeList exposed by              
// the CoClass StaticNodeList. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoStaticNodeList = class
    class function Create: DispStaticNodeList;
    class function CreateRemote(const MachineName: string): DispStaticNodeList;
  end;

// *********************************************************************//
// The Class CoDOMChildrenCollection provides a Create and CreateRemote method to          
// create instances of the default interface DispDOMChildrenCollection exposed by              
// the CoClass DOMChildrenCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoDOMChildrenCollection = class
    class function Create: DispDOMChildrenCollection;
    class function CreateRemote(const MachineName: string): DispDOMChildrenCollection;
  end;

// *********************************************************************//
// The Class CoHTMLDefaults provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLDefaults exposed by              
// the CoClass HTMLDefaults. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLDefaults = class
    class function Create: DispHTMLDefaults;
    class function CreateRemote(const MachineName: string): DispHTMLDefaults;
  end;

// *********************************************************************//
// The Class CoHTCDefaultDispatch provides a Create and CreateRemote method to          
// create instances of the default interface DispHTCDefaultDispatch exposed by              
// the CoClass HTCDefaultDispatch. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTCDefaultDispatch = class
    class function Create: DispHTCDefaultDispatch;
    class function CreateRemote(const MachineName: string): DispHTCDefaultDispatch;
  end;

// *********************************************************************//
// The Class CoHTCPropertyBehavior provides a Create and CreateRemote method to          
// create instances of the default interface DispHTCPropertyBehavior exposed by              
// the CoClass HTCPropertyBehavior. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTCPropertyBehavior = class
    class function Create: DispHTCPropertyBehavior;
    class function CreateRemote(const MachineName: string): DispHTCPropertyBehavior;
  end;

// *********************************************************************//
// The Class CoHTCMethodBehavior provides a Create and CreateRemote method to          
// create instances of the default interface DispHTCMethodBehavior exposed by              
// the CoClass HTCMethodBehavior. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTCMethodBehavior = class
    class function Create: DispHTCMethodBehavior;
    class function CreateRemote(const MachineName: string): DispHTCMethodBehavior;
  end;

// *********************************************************************//
// The Class CoHTCEventBehavior provides a Create and CreateRemote method to          
// create instances of the default interface DispHTCEventBehavior exposed by              
// the CoClass HTCEventBehavior. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTCEventBehavior = class
    class function Create: DispHTCEventBehavior;
    class function CreateRemote(const MachineName: string): DispHTCEventBehavior;
  end;

// *********************************************************************//
// The Class CoHTCAttachBehavior provides a Create and CreateRemote method to          
// create instances of the default interface DispHTCAttachBehavior exposed by              
// the CoClass HTCAttachBehavior. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTCAttachBehavior = class
    class function Create: DispHTCAttachBehavior;
    class function CreateRemote(const MachineName: string): DispHTCAttachBehavior;
  end;

// *********************************************************************//
// The Class CoHTCDescBehavior provides a Create and CreateRemote method to          
// create instances of the default interface DispHTCDescBehavior exposed by              
// the CoClass HTCDescBehavior. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTCDescBehavior = class
    class function Create: DispHTCDescBehavior;
    class function CreateRemote(const MachineName: string): DispHTCDescBehavior;
  end;

// *********************************************************************//
// The Class CoHTMLUrnCollection provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLUrnCollection exposed by              
// the CoClass HTMLUrnCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLUrnCollection = class
    class function Create: DispHTMLUrnCollection;
    class function CreateRemote(const MachineName: string): DispHTMLUrnCollection;
  end;

// *********************************************************************//
// The Class CoHTMLGenericElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLGenericElement exposed by              
// the CoClass HTMLGenericElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLGenericElement = class
    class function Create: DispHTMLGenericElement;
    class function CreateRemote(const MachineName: string): DispHTMLGenericElement;
  end;

// *********************************************************************//
// The Class CoHTMLStyleSheetRule provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLStyleSheetRule exposed by              
// the CoClass HTMLStyleSheetRule. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLStyleSheetRule = class
    class function Create: DispHTMLStyleSheetRule;
    class function CreateRemote(const MachineName: string): DispHTMLStyleSheetRule;
  end;

// *********************************************************************//
// The Class CoHTMLStyleSheetRulesCollection provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLStyleSheetRulesCollection exposed by              
// the CoClass HTMLStyleSheetRulesCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLStyleSheetRulesCollection = class
    class function Create: DispHTMLStyleSheetRulesCollection;
    class function CreateRemote(const MachineName: string): DispHTMLStyleSheetRulesCollection;
  end;

// *********************************************************************//
// The Class CoHTMLStyleSheetPage provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLStyleSheetPage exposed by              
// the CoClass HTMLStyleSheetPage. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLStyleSheetPage = class
    class function Create: DispHTMLStyleSheetPage;
    class function CreateRemote(const MachineName: string): DispHTMLStyleSheetPage;
  end;

// *********************************************************************//
// The Class CoHTMLStyleSheetPagesCollection provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLStyleSheetPagesCollection exposed by              
// the CoClass HTMLStyleSheetPagesCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLStyleSheetPagesCollection = class
    class function Create: DispHTMLStyleSheetPagesCollection;
    class function CreateRemote(const MachineName: string): DispHTMLStyleSheetPagesCollection;
  end;

// *********************************************************************//
// The Class CoHTMLStyleSheet provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLStyleSheet exposed by              
// the CoClass HTMLStyleSheet. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLStyleSheet = class
    class function Create: DispHTMLStyleSheet;
    class function CreateRemote(const MachineName: string): DispHTMLStyleSheet;
  end;

// *********************************************************************//
// The Class CoHTMLStyleSheetsCollection provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLStyleSheetsCollection exposed by              
// the CoClass HTMLStyleSheetsCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLStyleSheetsCollection = class
    class function Create: DispHTMLStyleSheetsCollection;
    class function CreateRemote(const MachineName: string): DispHTMLStyleSheetsCollection;
  end;

// *********************************************************************//
// The Class CoHTMLLinkElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLLinkElement exposed by              
// the CoClass HTMLLinkElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLLinkElement = class
    class function Create: DispHTMLLinkElement;
    class function CreateRemote(const MachineName: string): DispHTMLLinkElement;
  end;

// *********************************************************************//
// The Class CoHTMLDOMRange provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLDOMRange exposed by              
// the CoClass HTMLDOMRange. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLDOMRange = class
    class function Create: DispHTMLDOMRange;
    class function CreateRemote(const MachineName: string): DispHTMLDOMRange;
  end;

// *********************************************************************//
// The Class CoHTMLFormElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLFormElement exposed by              
// the CoClass HTMLFormElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLFormElement = class
    class function Create: DispHTMLFormElement;
    class function CreateRemote(const MachineName: string): DispHTMLFormElement;
  end;

// *********************************************************************//
// The Class CoHTMLTextElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLTextElement exposed by              
// the CoClass HTMLTextElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLTextElement = class
    class function Create: DispHTMLTextElement;
    class function CreateRemote(const MachineName: string): DispHTMLTextElement;
  end;

// *********************************************************************//
// The Class CoHTMLImg provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLImg exposed by              
// the CoClass HTMLImg. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLImg = class
    class function Create: DispHTMLImg;
    class function CreateRemote(const MachineName: string): DispHTMLImg;
  end;

// *********************************************************************//
// The Class CoHTMLImageElementFactory provides a Create and CreateRemote method to          
// create instances of the default interface IHTMLImageElementFactory exposed by              
// the CoClass HTMLImageElementFactory. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLImageElementFactory = class
    class function Create: IHTMLImageElementFactory;
    class function CreateRemote(const MachineName: string): IHTMLImageElementFactory;
  end;

// *********************************************************************//
// The Class CoHTMLBody provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLBody exposed by              
// the CoClass HTMLBody. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLBody = class
    class function Create: DispHTMLBody;
    class function CreateRemote(const MachineName: string): DispHTMLBody;
  end;

// *********************************************************************//
// The Class CoHTMLFontElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLFontElement exposed by              
// the CoClass HTMLFontElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLFontElement = class
    class function Create: DispHTMLFontElement;
    class function CreateRemote(const MachineName: string): DispHTMLFontElement;
  end;

// *********************************************************************//
// The Class CoHTMLAnchorElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLAnchorElement exposed by              
// the CoClass HTMLAnchorElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLAnchorElement = class
    class function Create: DispHTMLAnchorElement;
    class function CreateRemote(const MachineName: string): DispHTMLAnchorElement;
  end;

// *********************************************************************//
// The Class CoHTMLLabelElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLLabelElement exposed by              
// the CoClass HTMLLabelElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLLabelElement = class
    class function Create: DispHTMLLabelElement;
    class function CreateRemote(const MachineName: string): DispHTMLLabelElement;
  end;

// *********************************************************************//
// The Class CoHTMLListElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLListElement exposed by              
// the CoClass HTMLListElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLListElement = class
    class function Create: DispHTMLListElement;
    class function CreateRemote(const MachineName: string): DispHTMLListElement;
  end;

// *********************************************************************//
// The Class CoHTMLUListElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLUListElement exposed by              
// the CoClass HTMLUListElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLUListElement = class
    class function Create: DispHTMLUListElement;
    class function CreateRemote(const MachineName: string): DispHTMLUListElement;
  end;

// *********************************************************************//
// The Class CoHTMLOListElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLOListElement exposed by              
// the CoClass HTMLOListElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLOListElement = class
    class function Create: DispHTMLOListElement;
    class function CreateRemote(const MachineName: string): DispHTMLOListElement;
  end;

// *********************************************************************//
// The Class CoHTMLLIElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLLIElement exposed by              
// the CoClass HTMLLIElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLLIElement = class
    class function Create: DispHTMLLIElement;
    class function CreateRemote(const MachineName: string): DispHTMLLIElement;
  end;

// *********************************************************************//
// The Class CoHTMLBlockElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLBlockElement exposed by              
// the CoClass HTMLBlockElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLBlockElement = class
    class function Create: DispHTMLBlockElement;
    class function CreateRemote(const MachineName: string): DispHTMLBlockElement;
  end;

// *********************************************************************//
// The Class CoHTMLDivElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLDivElement exposed by              
// the CoClass HTMLDivElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLDivElement = class
    class function Create: DispHTMLDivElement;
    class function CreateRemote(const MachineName: string): DispHTMLDivElement;
  end;

// *********************************************************************//
// The Class CoHTMLDDElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLDDElement exposed by              
// the CoClass HTMLDDElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLDDElement = class
    class function Create: DispHTMLDDElement;
    class function CreateRemote(const MachineName: string): DispHTMLDDElement;
  end;

// *********************************************************************//
// The Class CoHTMLDTElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLDTElement exposed by              
// the CoClass HTMLDTElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLDTElement = class
    class function Create: DispHTMLDTElement;
    class function CreateRemote(const MachineName: string): DispHTMLDTElement;
  end;

// *********************************************************************//
// The Class CoHTMLBRElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLBRElement exposed by              
// the CoClass HTMLBRElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLBRElement = class
    class function Create: DispHTMLBRElement;
    class function CreateRemote(const MachineName: string): DispHTMLBRElement;
  end;

// *********************************************************************//
// The Class CoHTMLDListElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLDListElement exposed by              
// the CoClass HTMLDListElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLDListElement = class
    class function Create: DispHTMLDListElement;
    class function CreateRemote(const MachineName: string): DispHTMLDListElement;
  end;

// *********************************************************************//
// The Class CoHTMLHRElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLHRElement exposed by              
// the CoClass HTMLHRElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLHRElement = class
    class function Create: DispHTMLHRElement;
    class function CreateRemote(const MachineName: string): DispHTMLHRElement;
  end;

// *********************************************************************//
// The Class CoHTMLParaElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLParaElement exposed by              
// the CoClass HTMLParaElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLParaElement = class
    class function Create: DispHTMLParaElement;
    class function CreateRemote(const MachineName: string): DispHTMLParaElement;
  end;

// *********************************************************************//
// The Class CoHTMLElementCollection provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLElementCollection exposed by              
// the CoClass HTMLElementCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLElementCollection = class
    class function Create: DispHTMLElementCollection;
    class function CreateRemote(const MachineName: string): DispHTMLElementCollection;
  end;

// *********************************************************************//
// The Class CoHTMLHeaderElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLHeaderElement exposed by              
// the CoClass HTMLHeaderElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLHeaderElement = class
    class function Create: DispHTMLHeaderElement;
    class function CreateRemote(const MachineName: string): DispHTMLHeaderElement;
  end;

// *********************************************************************//
// The Class CoHTMLSelectElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLSelectElement exposed by              
// the CoClass HTMLSelectElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLSelectElement = class
    class function Create: DispHTMLSelectElement;
    class function CreateRemote(const MachineName: string): DispHTMLSelectElement;
  end;

// *********************************************************************//
// The Class CoHTMLWndSelectElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLWndSelectElement exposed by              
// the CoClass HTMLWndSelectElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLWndSelectElement = class
    class function Create: DispHTMLWndSelectElement;
    class function CreateRemote(const MachineName: string): DispHTMLWndSelectElement;
  end;

// *********************************************************************//
// The Class CoHTMLOptionElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLOptionElement exposed by              
// the CoClass HTMLOptionElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLOptionElement = class
    class function Create: DispHTMLOptionElement;
    class function CreateRemote(const MachineName: string): DispHTMLOptionElement;
  end;

// *********************************************************************//
// The Class CoHTMLOptionElementFactory provides a Create and CreateRemote method to          
// create instances of the default interface IHTMLOptionElementFactory exposed by              
// the CoClass HTMLOptionElementFactory. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLOptionElementFactory = class
    class function Create: IHTMLOptionElementFactory;
    class function CreateRemote(const MachineName: string): IHTMLOptionElementFactory;
  end;

// *********************************************************************//
// The Class CoHTMLWndOptionElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLWndOptionElement exposed by              
// the CoClass HTMLWndOptionElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLWndOptionElement = class
    class function Create: DispHTMLWndOptionElement;
    class function CreateRemote(const MachineName: string): DispHTMLWndOptionElement;
  end;

// *********************************************************************//
// The Class CoHTMLInputElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLInputElement exposed by              
// the CoClass HTMLInputElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLInputElement = class
    class function Create: DispHTMLInputElement;
    class function CreateRemote(const MachineName: string): DispHTMLInputElement;
  end;

// *********************************************************************//
// The Class CoHTMLTextAreaElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLTextAreaElement exposed by              
// the CoClass HTMLTextAreaElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLTextAreaElement = class
    class function Create: DispHTMLTextAreaElement;
    class function CreateRemote(const MachineName: string): DispHTMLTextAreaElement;
  end;

// *********************************************************************//
// The Class CoHTMLRichtextElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLRichtextElement exposed by              
// the CoClass HTMLRichtextElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLRichtextElement = class
    class function Create: DispHTMLRichtextElement;
    class function CreateRemote(const MachineName: string): DispHTMLRichtextElement;
  end;

// *********************************************************************//
// The Class CoHTMLButtonElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLButtonElement exposed by              
// the CoClass HTMLButtonElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLButtonElement = class
    class function Create: DispHTMLButtonElement;
    class function CreateRemote(const MachineName: string): DispHTMLButtonElement;
  end;

// *********************************************************************//
// The Class CoHTMLMarqueeElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLMarqueeElement exposed by              
// the CoClass HTMLMarqueeElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLMarqueeElement = class
    class function Create: DispHTMLMarqueeElement;
    class function CreateRemote(const MachineName: string): DispHTMLMarqueeElement;
  end;

// *********************************************************************//
// The Class CoHTMLHtmlElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLHtmlElement exposed by              
// the CoClass HTMLHtmlElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLHtmlElement = class
    class function Create: DispHTMLHtmlElement;
    class function CreateRemote(const MachineName: string): DispHTMLHtmlElement;
  end;

// *********************************************************************//
// The Class CoHTMLHeadElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLHeadElement exposed by              
// the CoClass HTMLHeadElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLHeadElement = class
    class function Create: DispHTMLHeadElement;
    class function CreateRemote(const MachineName: string): DispHTMLHeadElement;
  end;

// *********************************************************************//
// The Class CoHTMLTitleElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLTitleElement exposed by              
// the CoClass HTMLTitleElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLTitleElement = class
    class function Create: DispHTMLTitleElement;
    class function CreateRemote(const MachineName: string): DispHTMLTitleElement;
  end;

// *********************************************************************//
// The Class CoHTMLMetaElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLMetaElement exposed by              
// the CoClass HTMLMetaElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLMetaElement = class
    class function Create: DispHTMLMetaElement;
    class function CreateRemote(const MachineName: string): DispHTMLMetaElement;
  end;

// *********************************************************************//
// The Class CoHTMLBaseElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLBaseElement exposed by              
// the CoClass HTMLBaseElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLBaseElement = class
    class function Create: DispHTMLBaseElement;
    class function CreateRemote(const MachineName: string): DispHTMLBaseElement;
  end;

// *********************************************************************//
// The Class CoHTMLIsIndexElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLIsIndexElement exposed by              
// the CoClass HTMLIsIndexElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLIsIndexElement = class
    class function Create: DispHTMLIsIndexElement;
    class function CreateRemote(const MachineName: string): DispHTMLIsIndexElement;
  end;

// *********************************************************************//
// The Class CoHTMLNextIdElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLNextIdElement exposed by              
// the CoClass HTMLNextIdElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLNextIdElement = class
    class function Create: DispHTMLNextIdElement;
    class function CreateRemote(const MachineName: string): DispHTMLNextIdElement;
  end;

// *********************************************************************//
// The Class CoHTMLBaseFontElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLBaseFontElement exposed by              
// the CoClass HTMLBaseFontElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLBaseFontElement = class
    class function Create: DispHTMLBaseFontElement;
    class function CreateRemote(const MachineName: string): DispHTMLBaseFontElement;
  end;

// *********************************************************************//
// The Class CoHTMLUnknownElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLUnknownElement exposed by              
// the CoClass HTMLUnknownElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLUnknownElement = class
    class function Create: DispHTMLUnknownElement;
    class function CreateRemote(const MachineName: string): DispHTMLUnknownElement;
  end;

// *********************************************************************//
// The Class CoHTMLHistory provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLHistory exposed by              
// the CoClass HTMLHistory. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLHistory = class
    class function Create: DispHTMLHistory;
    class function CreateRemote(const MachineName: string): DispHTMLHistory;
  end;

// *********************************************************************//
// The Class CoCMimeTypes provides a Create and CreateRemote method to          
// create instances of the default interface IHTMLMimeTypesCollection exposed by              
// the CoClass CMimeTypes. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoCMimeTypes = class
    class function Create: IHTMLMimeTypesCollection;
    class function CreateRemote(const MachineName: string): IHTMLMimeTypesCollection;
  end;

// *********************************************************************//
// The Class CoCPlugins provides a Create and CreateRemote method to          
// create instances of the default interface DispCPlugins exposed by              
// the CoClass CPlugins. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoCPlugins = class
    class function Create: DispCPlugins;
    class function CreateRemote(const MachineName: string): DispCPlugins;
  end;

// *********************************************************************//
// The Class CoCOpsProfile provides a Create and CreateRemote method to          
// create instances of the default interface IHTMLOpsProfile exposed by              
// the CoClass COpsProfile. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoCOpsProfile = class
    class function Create: IHTMLOpsProfile;
    class function CreateRemote(const MachineName: string): IHTMLOpsProfile;
  end;

// *********************************************************************//
// The Class CoHTMLNavigator provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLNavigator exposed by              
// the CoClass HTMLNavigator. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLNavigator = class
    class function Create: DispHTMLNavigator;
    class function CreateRemote(const MachineName: string): DispHTMLNavigator;
  end;

// *********************************************************************//
// The Class CoHTMLLocation provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLLocation exposed by              
// the CoClass HTMLLocation. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLLocation = class
    class function Create: DispHTMLLocation;
    class function CreateRemote(const MachineName: string): DispHTMLLocation;
  end;

// *********************************************************************//
// The Class CoCEventObj provides a Create and CreateRemote method to          
// create instances of the default interface DispCEventObj exposed by              
// the CoClass CEventObj. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoCEventObj = class
    class function Create: DispCEventObj;
    class function CreateRemote(const MachineName: string): DispCEventObj;
  end;

// *********************************************************************//
// The Class CoHTMLStyleMedia provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLStyleMedia exposed by              
// the CoClass HTMLStyleMedia. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLStyleMedia = class
    class function Create: DispHTMLStyleMedia;
    class function CreateRemote(const MachineName: string): DispHTMLStyleMedia;
  end;

// *********************************************************************//
// The Class CoFramesCollection provides a Create and CreateRemote method to          
// create instances of the default interface IHTMLFramesCollection2 exposed by              
// the CoClass FramesCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoFramesCollection = class
    class function Create: IHTMLFramesCollection2;
    class function CreateRemote(const MachineName: string): IHTMLFramesCollection2;
  end;

// *********************************************************************//
// The Class CoHTMLScreen provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLScreen exposed by              
// the CoClass HTMLScreen. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLScreen = class
    class function Create: DispHTMLScreen;
    class function CreateRemote(const MachineName: string): DispHTMLScreen;
  end;

// *********************************************************************//
// The Class CoHTMLWindow2 provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLWindow2 exposed by              
// the CoClass HTMLWindow2. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLWindow2 = class
    class function Create: DispHTMLWindow2;
    class function CreateRemote(const MachineName: string): DispHTMLWindow2;
  end;

// *********************************************************************//
// The Class CoHTMLWindowProxy provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLWindowProxy exposed by              
// the CoClass HTMLWindowProxy. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLWindowProxy = class
    class function Create: DispHTMLWindowProxy;
    class function CreateRemote(const MachineName: string): DispHTMLWindowProxy;
  end;

// *********************************************************************//
// The Class CoHTMLDocumentCompatibleInfo provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLDocumentCompatibleInfo exposed by              
// the CoClass HTMLDocumentCompatibleInfo. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLDocumentCompatibleInfo = class
    class function Create: DispHTMLDocumentCompatibleInfo;
    class function CreateRemote(const MachineName: string): DispHTMLDocumentCompatibleInfo;
  end;

// *********************************************************************//
// The Class CoHTMLDocumentCompatibleInfoCollection provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLDocumentCompatibleInfoCollection exposed by              
// the CoClass HTMLDocumentCompatibleInfoCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLDocumentCompatibleInfoCollection = class
    class function Create: DispHTMLDocumentCompatibleInfoCollection;
    class function CreateRemote(const MachineName: string): DispHTMLDocumentCompatibleInfoCollection;
  end;

// *********************************************************************//
// The Class CoHTMLDocument provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLDocument exposed by              
// the CoClass HTMLDocument. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLDocument = class
    class function Create: DispHTMLDocument;
    class function CreateRemote(const MachineName: string): DispHTMLDocument;
  end;


// *********************************************************************//
// OLE Control Proxy class declaration
// Control Name     : TScriptlet
// Help String      : 
// Default Interface: IWebBridge
// Def. Intf. DISP? : No
// Event   Interface: DWebBridgeEvents
// TypeFlags        : (34) CanCreate Control
// *********************************************************************//
  TScriptletonscriptletevent = procedure(ASender: TObject; const name: WideString; 
                                                           eventData: OleVariant) of object;

  TScriptlet = class(TOleControl)
  private
    FOnonscriptletevent: TScriptletonscriptletevent;
    FOnonreadystatechange: TNotifyEvent;
    FIntf: IWebBridge;
    function  GetControlInterface: IWebBridge;
  protected
    procedure CreateControl;
    procedure InitControlData; override;
    function Get_event: IDispatch;
  public
    procedure AboutBox;
    property  ControlInterface: IWebBridge read GetControlInterface;
    property  DefaultInterface: IWebBridge read GetControlInterface;
    property event: IDispatch index 1152 read GetIDispatchProp;
    property readyState: Integer index -525 read GetIntegerProp;
  published
    property Anchors;
    property  TabStop;
    property  Align;
    property  DragCursor;
    property  DragMode;
    property  ParentShowHint;
    property  PopupMenu;
    property  ShowHint;
    property  TabOrder;
    property  Visible;
    property  OnDragDrop;
    property  OnDragOver;
    property  OnEndDrag;
    property  OnEnter;
    property  OnExit;
    property  OnStartDrag;
    property  OnMouseUp;
    property  OnMouseMove;
    property  OnMouseDown;
    property  OnKeyUp;
    property  OnKeyPress;
    property  OnKeyDown;
    property  OnDblClick;
    property  OnClick;
    property url: WideString index 1 read GetWideStringProp write SetWideStringProp stored False;
    property Scrollbar: WordBool index 2 read GetWordBoolProp write SetWordBoolProp stored False;
    property embed: WordBool index 3 read GetWordBoolProp write SetWordBoolProp stored False;
    property Ononscriptletevent: TScriptletonscriptletevent read FOnonscriptletevent write FOnonscriptletevent;
    property Ononreadystatechange: TNotifyEvent read FOnonreadystatechange write FOnonreadystatechange;
  end;

// *********************************************************************//
// The Class CoHTMLEmbed provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLEmbed exposed by              
// the CoClass HTMLEmbed. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLEmbed = class
    class function Create: DispHTMLEmbed;
    class function CreateRemote(const MachineName: string): DispHTMLEmbed;
  end;

// *********************************************************************//
// The Class CoHTMLAreasCollection provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLAreasCollection exposed by              
// the CoClass HTMLAreasCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLAreasCollection = class
    class function Create: DispHTMLAreasCollection;
    class function CreateRemote(const MachineName: string): DispHTMLAreasCollection;
  end;

// *********************************************************************//
// The Class CoHTMLMapElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLMapElement exposed by              
// the CoClass HTMLMapElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLMapElement = class
    class function Create: DispHTMLMapElement;
    class function CreateRemote(const MachineName: string): DispHTMLMapElement;
  end;

// *********************************************************************//
// The Class CoHTMLAreaElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLAreaElement exposed by              
// the CoClass HTMLAreaElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLAreaElement = class
    class function Create: DispHTMLAreaElement;
    class function CreateRemote(const MachineName: string): DispHTMLAreaElement;
  end;

// *********************************************************************//
// The Class CoHTMLTableCaption provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLTableCaption exposed by              
// the CoClass HTMLTableCaption. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLTableCaption = class
    class function Create: DispHTMLTableCaption;
    class function CreateRemote(const MachineName: string): DispHTMLTableCaption;
  end;

// *********************************************************************//
// The Class CoHTMLCommentElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLCommentElement exposed by              
// the CoClass HTMLCommentElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLCommentElement = class
    class function Create: DispHTMLCommentElement;
    class function CreateRemote(const MachineName: string): DispHTMLCommentElement;
  end;

// *********************************************************************//
// The Class CoHTMLPhraseElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLPhraseElement exposed by              
// the CoClass HTMLPhraseElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLPhraseElement = class
    class function Create: DispHTMLPhraseElement;
    class function CreateRemote(const MachineName: string): DispHTMLPhraseElement;
  end;

// *********************************************************************//
// The Class CoHTMLSpanElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLSpanElement exposed by              
// the CoClass HTMLSpanElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLSpanElement = class
    class function Create: DispHTMLSpanElement;
    class function CreateRemote(const MachineName: string): DispHTMLSpanElement;
  end;

// *********************************************************************//
// The Class CoHTMLTable provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLTable exposed by              
// the CoClass HTMLTable. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLTable = class
    class function Create: DispHTMLTable;
    class function CreateRemote(const MachineName: string): DispHTMLTable;
  end;

// *********************************************************************//
// The Class CoHTMLTableCol provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLTableCol exposed by              
// the CoClass HTMLTableCol. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLTableCol = class
    class function Create: DispHTMLTableCol;
    class function CreateRemote(const MachineName: string): DispHTMLTableCol;
  end;

// *********************************************************************//
// The Class CoHTMLTableSection provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLTableSection exposed by              
// the CoClass HTMLTableSection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLTableSection = class
    class function Create: DispHTMLTableSection;
    class function CreateRemote(const MachineName: string): DispHTMLTableSection;
  end;

// *********************************************************************//
// The Class CoHTMLTableRow provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLTableRow exposed by              
// the CoClass HTMLTableRow. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLTableRow = class
    class function Create: DispHTMLTableRow;
    class function CreateRemote(const MachineName: string): DispHTMLTableRow;
  end;

// *********************************************************************//
// The Class CoHTMLTableCell provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLTableCell exposed by              
// the CoClass HTMLTableCell. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLTableCell = class
    class function Create: DispHTMLTableCell;
    class function CreateRemote(const MachineName: string): DispHTMLTableCell;
  end;

// *********************************************************************//
// The Class CoHTMLScriptElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLScriptElement exposed by              
// the CoClass HTMLScriptElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLScriptElement = class
    class function Create: DispHTMLScriptElement;
    class function CreateRemote(const MachineName: string): DispHTMLScriptElement;
  end;

// *********************************************************************//
// The Class CoHTMLNoShowElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLNoShowElement exposed by              
// the CoClass HTMLNoShowElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLNoShowElement = class
    class function Create: DispHTMLNoShowElement;
    class function CreateRemote(const MachineName: string): DispHTMLNoShowElement;
  end;

// *********************************************************************//
// The Class CoHTMLObjectElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLObjectElement exposed by              
// the CoClass HTMLObjectElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLObjectElement = class
    class function Create: DispHTMLObjectElement;
    class function CreateRemote(const MachineName: string): DispHTMLObjectElement;
  end;

// *********************************************************************//
// The Class CoHTMLParamElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLParamElement exposed by              
// the CoClass HTMLParamElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLParamElement = class
    class function Create: DispHTMLParamElement;
    class function CreateRemote(const MachineName: string): DispHTMLParamElement;
  end;

// *********************************************************************//
// The Class CoHTMLFrameBase provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLFrameBase exposed by              
// the CoClass HTMLFrameBase. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLFrameBase = class
    class function Create: DispHTMLFrameBase;
    class function CreateRemote(const MachineName: string): DispHTMLFrameBase;
  end;

// *********************************************************************//
// The Class CoHTMLFrameElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLFrameElement exposed by              
// the CoClass HTMLFrameElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLFrameElement = class
    class function Create: DispHTMLFrameElement;
    class function CreateRemote(const MachineName: string): DispHTMLFrameElement;
  end;

// *********************************************************************//
// The Class CoHTMLIFrame provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLIFrame exposed by              
// the CoClass HTMLIFrame. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLIFrame = class
    class function Create: DispHTMLIFrame;
    class function CreateRemote(const MachineName: string): DispHTMLIFrame;
  end;

// *********************************************************************//
// The Class CoHTMLDivPosition provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLDivPosition exposed by              
// the CoClass HTMLDivPosition. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLDivPosition = class
    class function Create: DispHTMLDivPosition;
    class function CreateRemote(const MachineName: string): DispHTMLDivPosition;
  end;

// *********************************************************************//
// The Class CoHTMLFieldSetElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLFieldSetElement exposed by              
// the CoClass HTMLFieldSetElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLFieldSetElement = class
    class function Create: DispHTMLFieldSetElement;
    class function CreateRemote(const MachineName: string): DispHTMLFieldSetElement;
  end;

// *********************************************************************//
// The Class CoHTMLLegendElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLLegendElement exposed by              
// the CoClass HTMLLegendElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLLegendElement = class
    class function Create: DispHTMLLegendElement;
    class function CreateRemote(const MachineName: string): DispHTMLLegendElement;
  end;

// *********************************************************************//
// The Class CoHTMLSpanFlow provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLSpanFlow exposed by              
// the CoClass HTMLSpanFlow. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLSpanFlow = class
    class function Create: DispHTMLSpanFlow;
    class function CreateRemote(const MachineName: string): DispHTMLSpanFlow;
  end;

// *********************************************************************//
// The Class CoHTMLFrameSetSite provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLFrameSetSite exposed by              
// the CoClass HTMLFrameSetSite. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLFrameSetSite = class
    class function Create: DispHTMLFrameSetSite;
    class function CreateRemote(const MachineName: string): DispHTMLFrameSetSite;
  end;

// *********************************************************************//
// The Class CoHTMLBGsound provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLBGsound exposed by              
// the CoClass HTMLBGsound. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLBGsound = class
    class function Create: DispHTMLBGsound;
    class function CreateRemote(const MachineName: string): DispHTMLBGsound;
  end;

// *********************************************************************//
// The Class CoHTMLStyleElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLStyleElement exposed by              
// the CoClass HTMLStyleElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLStyleElement = class
    class function Create: DispHTMLStyleElement;
    class function CreateRemote(const MachineName: string): DispHTMLStyleElement;
  end;

// *********************************************************************//
// The Class CoHTMLStyleFontFace provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLStyleFontFace exposed by              
// the CoClass HTMLStyleFontFace. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLStyleFontFace = class
    class function Create: DispHTMLStyleFontFace;
    class function CreateRemote(const MachineName: string): DispHTMLStyleFontFace;
  end;

// *********************************************************************//
// The Class CoXDomainRequest provides a Create and CreateRemote method to          
// create instances of the default interface DispXDomainRequest exposed by              
// the CoClass XDomainRequest. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoXDomainRequest = class
    class function Create: DispXDomainRequest;
    class function CreateRemote(const MachineName: string): DispXDomainRequest;
  end;

// *********************************************************************//
// The Class CoXDomainRequestFactory provides a Create and CreateRemote method to          
// create instances of the default interface IHTMLXDomainRequestFactory exposed by              
// the CoClass XDomainRequestFactory. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoXDomainRequestFactory = class
    class function Create: IHTMLXDomainRequestFactory;
    class function CreateRemote(const MachineName: string): IHTMLXDomainRequestFactory;
  end;

// *********************************************************************//
// The Class CoHTMLStorage provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLStorage exposed by              
// the CoClass HTMLStorage. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLStorage = class
    class function Create: DispHTMLStorage;
    class function CreateRemote(const MachineName: string): DispHTMLStorage;
  end;

// *********************************************************************//
// The Class CoDOMEvent provides a Create and CreateRemote method to          
// create instances of the default interface DispDOMEvent exposed by              
// the CoClass DOMEvent. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoDOMEvent = class
    class function Create: DispDOMEvent;
    class function CreateRemote(const MachineName: string): DispDOMEvent;
  end;

// *********************************************************************//
// The Class CoDOMUIEvent provides a Create and CreateRemote method to          
// create instances of the default interface DispDOMUIEvent exposed by              
// the CoClass DOMUIEvent. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoDOMUIEvent = class
    class function Create: DispDOMUIEvent;
    class function CreateRemote(const MachineName: string): DispDOMUIEvent;
  end;

// *********************************************************************//
// The Class CoDOMMouseEvent provides a Create and CreateRemote method to          
// create instances of the default interface DispDOMMouseEvent exposed by              
// the CoClass DOMMouseEvent. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoDOMMouseEvent = class
    class function Create: DispDOMMouseEvent;
    class function CreateRemote(const MachineName: string): DispDOMMouseEvent;
  end;

// *********************************************************************//
// The Class CoDOMDragEvent provides a Create and CreateRemote method to          
// create instances of the default interface DispDOMDragEvent exposed by              
// the CoClass DOMDragEvent. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoDOMDragEvent = class
    class function Create: DispDOMDragEvent;
    class function CreateRemote(const MachineName: string): DispDOMDragEvent;
  end;

// *********************************************************************//
// The Class CoDOMMouseWheelEvent provides a Create and CreateRemote method to          
// create instances of the default interface DispDOMMouseWheelEvent exposed by              
// the CoClass DOMMouseWheelEvent. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoDOMMouseWheelEvent = class
    class function Create: DispDOMMouseWheelEvent;
    class function CreateRemote(const MachineName: string): DispDOMMouseWheelEvent;
  end;

// *********************************************************************//
// The Class CoDOMWheelEvent provides a Create and CreateRemote method to          
// create instances of the default interface DispDOMWheelEvent exposed by              
// the CoClass DOMWheelEvent. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoDOMWheelEvent = class
    class function Create: DispDOMWheelEvent;
    class function CreateRemote(const MachineName: string): DispDOMWheelEvent;
  end;

// *********************************************************************//
// The Class CoDOMTextEvent provides a Create and CreateRemote method to          
// create instances of the default interface DispDOMTextEvent exposed by              
// the CoClass DOMTextEvent. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoDOMTextEvent = class
    class function Create: DispDOMTextEvent;
    class function CreateRemote(const MachineName: string): DispDOMTextEvent;
  end;

// *********************************************************************//
// The Class CoDOMKeyboardEvent provides a Create and CreateRemote method to          
// create instances of the default interface DispDOMKeyboardEvent exposed by              
// the CoClass DOMKeyboardEvent. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoDOMKeyboardEvent = class
    class function Create: DispDOMKeyboardEvent;
    class function CreateRemote(const MachineName: string): DispDOMKeyboardEvent;
  end;

// *********************************************************************//
// The Class CoDOMCompositionEvent provides a Create and CreateRemote method to          
// create instances of the default interface DispDOMCompositionEvent exposed by              
// the CoClass DOMCompositionEvent. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoDOMCompositionEvent = class
    class function Create: DispDOMCompositionEvent;
    class function CreateRemote(const MachineName: string): DispDOMCompositionEvent;
  end;

// *********************************************************************//
// The Class CoDOMMutationEvent provides a Create and CreateRemote method to          
// create instances of the default interface DispDOMMutationEvent exposed by              
// the CoClass DOMMutationEvent. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoDOMMutationEvent = class
    class function Create: DispDOMMutationEvent;
    class function CreateRemote(const MachineName: string): DispDOMMutationEvent;
  end;

// *********************************************************************//
// The Class CoDOMBeforeUnloadEvent provides a Create and CreateRemote method to          
// create instances of the default interface DispDOMBeforeUnloadEvent exposed by              
// the CoClass DOMBeforeUnloadEvent. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoDOMBeforeUnloadEvent = class
    class function Create: DispDOMBeforeUnloadEvent;
    class function CreateRemote(const MachineName: string): DispDOMBeforeUnloadEvent;
  end;

// *********************************************************************//
// The Class CoDOMFocusEvent provides a Create and CreateRemote method to          
// create instances of the default interface DispDOMFocusEvent exposed by              
// the CoClass DOMFocusEvent. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoDOMFocusEvent = class
    class function Create: DispDOMFocusEvent;
    class function CreateRemote(const MachineName: string): DispDOMFocusEvent;
  end;

// *********************************************************************//
// The Class CoDOMCustomEvent provides a Create and CreateRemote method to          
// create instances of the default interface DispDOMCustomEvent exposed by              
// the CoClass DOMCustomEvent. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoDOMCustomEvent = class
    class function Create: DispDOMCustomEvent;
    class function CreateRemote(const MachineName: string): DispDOMCustomEvent;
  end;

// *********************************************************************//
// The Class CoCanvasGradient provides a Create and CreateRemote method to          
// create instances of the default interface DispCanvasGradient exposed by              
// the CoClass CanvasGradient. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoCanvasGradient = class
    class function Create: DispCanvasGradient;
    class function CreateRemote(const MachineName: string): DispCanvasGradient;
  end;

// *********************************************************************//
// The Class CoCanvasPattern provides a Create and CreateRemote method to          
// create instances of the default interface DispCanvasPattern exposed by              
// the CoClass CanvasPattern. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoCanvasPattern = class
    class function Create: DispCanvasPattern;
    class function CreateRemote(const MachineName: string): DispCanvasPattern;
  end;

// *********************************************************************//
// The Class CoCanvasTextMetrics provides a Create and CreateRemote method to          
// create instances of the default interface DispCanvasTextMetrics exposed by              
// the CoClass CanvasTextMetrics. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoCanvasTextMetrics = class
    class function Create: DispCanvasTextMetrics;
    class function CreateRemote(const MachineName: string): DispCanvasTextMetrics;
  end;

// *********************************************************************//
// The Class CoCanvasImageData provides a Create and CreateRemote method to          
// create instances of the default interface DispCanvasImageData exposed by              
// the CoClass CanvasImageData. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoCanvasImageData = class
    class function Create: DispCanvasImageData;
    class function CreateRemote(const MachineName: string): DispCanvasImageData;
  end;

// *********************************************************************//
// The Class CoCanvasRenderingContext2D provides a Create and CreateRemote method to          
// create instances of the default interface DispCanvasRenderingContext2D exposed by              
// the CoClass CanvasRenderingContext2D. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoCanvasRenderingContext2D = class
    class function Create: DispCanvasRenderingContext2D;
    class function CreateRemote(const MachineName: string): DispCanvasRenderingContext2D;
  end;

// *********************************************************************//
// The Class CoHTMLCanvasElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLCanvasElement exposed by              
// the CoClass HTMLCanvasElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLCanvasElement = class
    class function Create: DispHTMLCanvasElement;
    class function CreateRemote(const MachineName: string): DispHTMLCanvasElement;
  end;

// *********************************************************************//
// The Class CoDOMProgressEvent provides a Create and CreateRemote method to          
// create instances of the default interface DispDOMProgressEvent exposed by              
// the CoClass DOMProgressEvent. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoDOMProgressEvent = class
    class function Create: DispDOMProgressEvent;
    class function CreateRemote(const MachineName: string): DispDOMProgressEvent;
  end;

// *********************************************************************//
// The Class CoDOMMessageEvent provides a Create and CreateRemote method to          
// create instances of the default interface DispDOMMessageEvent exposed by              
// the CoClass DOMMessageEvent. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoDOMMessageEvent = class
    class function Create: DispDOMMessageEvent;
    class function CreateRemote(const MachineName: string): DispDOMMessageEvent;
  end;

// *********************************************************************//
// The Class CoDOMSiteModeEvent provides a Create and CreateRemote method to          
// create instances of the default interface DispDOMSiteModeEvent exposed by              
// the CoClass DOMSiteModeEvent. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoDOMSiteModeEvent = class
    class function Create: DispDOMSiteModeEvent;
    class function CreateRemote(const MachineName: string): DispDOMSiteModeEvent;
  end;

// *********************************************************************//
// The Class CoDOMStorageEvent provides a Create and CreateRemote method to          
// create instances of the default interface DispDOMStorageEvent exposed by              
// the CoClass DOMStorageEvent. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoDOMStorageEvent = class
    class function Create: DispDOMStorageEvent;
    class function CreateRemote(const MachineName: string): DispDOMStorageEvent;
  end;

// *********************************************************************//
// The Class CoXMLHttpRequestEventTarget provides a Create and CreateRemote method to          
// create instances of the default interface DispXMLHttpRequestEventTarget exposed by              
// the CoClass XMLHttpRequestEventTarget. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoXMLHttpRequestEventTarget = class
    class function Create: DispXMLHttpRequestEventTarget;
    class function CreateRemote(const MachineName: string): DispXMLHttpRequestEventTarget;
  end;

// *********************************************************************//
// The Class CoHTMLXMLHttpRequest provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLXMLHttpRequest exposed by              
// the CoClass HTMLXMLHttpRequest. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLXMLHttpRequest = class
    class function Create: DispHTMLXMLHttpRequest;
    class function CreateRemote(const MachineName: string): DispHTMLXMLHttpRequest;
  end;

// *********************************************************************//
// The Class CoHTMLXMLHttpRequestFactory provides a Create and CreateRemote method to          
// create instances of the default interface IHTMLXMLHttpRequestFactory exposed by              
// the CoClass HTMLXMLHttpRequestFactory. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLXMLHttpRequestFactory = class
    class function Create: IHTMLXMLHttpRequestFactory;
    class function CreateRemote(const MachineName: string): IHTMLXMLHttpRequestFactory;
  end;

// *********************************************************************//
// The Class CoSVGAngle provides a Create and CreateRemote method to          
// create instances of the default interface ISVGAngle exposed by              
// the CoClass SVGAngle. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGAngle = class
    class function Create: ISVGAngle;
    class function CreateRemote(const MachineName: string): ISVGAngle;
  end;

// *********************************************************************//
// The Class CoSVGAnimatedAngle provides a Create and CreateRemote method to          
// create instances of the default interface ISVGAnimatedAngle exposed by              
// the CoClass SVGAnimatedAngle. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGAnimatedAngle = class
    class function Create: ISVGAnimatedAngle;
    class function CreateRemote(const MachineName: string): ISVGAnimatedAngle;
  end;

// *********************************************************************//
// The Class CoSVGAnimatedTransformList provides a Create and CreateRemote method to          
// create instances of the default interface ISVGAnimatedTransformList exposed by              
// the CoClass SVGAnimatedTransformList. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGAnimatedTransformList = class
    class function Create: ISVGAnimatedTransformList;
    class function CreateRemote(const MachineName: string): ISVGAnimatedTransformList;
  end;

// *********************************************************************//
// The Class CoSVGAnimatedBoolean provides a Create and CreateRemote method to          
// create instances of the default interface ISVGAnimatedBoolean exposed by              
// the CoClass SVGAnimatedBoolean. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGAnimatedBoolean = class
    class function Create: ISVGAnimatedBoolean;
    class function CreateRemote(const MachineName: string): ISVGAnimatedBoolean;
  end;

// *********************************************************************//
// The Class CoSVGAnimatedEnumeration provides a Create and CreateRemote method to          
// create instances of the default interface ISVGAnimatedEnumeration exposed by              
// the CoClass SVGAnimatedEnumeration. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGAnimatedEnumeration = class
    class function Create: ISVGAnimatedEnumeration;
    class function CreateRemote(const MachineName: string): ISVGAnimatedEnumeration;
  end;

// *********************************************************************//
// The Class CoSVGAnimatedInteger provides a Create and CreateRemote method to          
// create instances of the default interface ISVGAnimatedInteger exposed by              
// the CoClass SVGAnimatedInteger. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGAnimatedInteger = class
    class function Create: ISVGAnimatedInteger;
    class function CreateRemote(const MachineName: string): ISVGAnimatedInteger;
  end;

// *********************************************************************//
// The Class CoSVGAnimatedLength provides a Create and CreateRemote method to          
// create instances of the default interface ISVGAnimatedLength exposed by              
// the CoClass SVGAnimatedLength. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGAnimatedLength = class
    class function Create: ISVGAnimatedLength;
    class function CreateRemote(const MachineName: string): ISVGAnimatedLength;
  end;

// *********************************************************************//
// The Class CoSVGAnimatedLengthList provides a Create and CreateRemote method to          
// create instances of the default interface ISVGAnimatedLengthList exposed by              
// the CoClass SVGAnimatedLengthList. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGAnimatedLengthList = class
    class function Create: ISVGAnimatedLengthList;
    class function CreateRemote(const MachineName: string): ISVGAnimatedLengthList;
  end;

// *********************************************************************//
// The Class CoSVGAnimatedNumber provides a Create and CreateRemote method to          
// create instances of the default interface ISVGAnimatedNumber exposed by              
// the CoClass SVGAnimatedNumber. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGAnimatedNumber = class
    class function Create: ISVGAnimatedNumber;
    class function CreateRemote(const MachineName: string): ISVGAnimatedNumber;
  end;

// *********************************************************************//
// The Class CoSVGAnimatedNumberList provides a Create and CreateRemote method to          
// create instances of the default interface ISVGAnimatedNumberList exposed by              
// the CoClass SVGAnimatedNumberList. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGAnimatedNumberList = class
    class function Create: ISVGAnimatedNumberList;
    class function CreateRemote(const MachineName: string): ISVGAnimatedNumberList;
  end;

// *********************************************************************//
// The Class CoSVGAnimatedRect provides a Create and CreateRemote method to          
// create instances of the default interface ISVGAnimatedRect exposed by              
// the CoClass SVGAnimatedRect. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGAnimatedRect = class
    class function Create: ISVGAnimatedRect;
    class function CreateRemote(const MachineName: string): ISVGAnimatedRect;
  end;

// *********************************************************************//
// The Class CoSVGAnimatedString provides a Create and CreateRemote method to          
// create instances of the default interface ISVGAnimatedString exposed by              
// the CoClass SVGAnimatedString. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGAnimatedString = class
    class function Create: ISVGAnimatedString;
    class function CreateRemote(const MachineName: string): ISVGAnimatedString;
  end;

// *********************************************************************//
// The Class CoSVGClipPathElement provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGClipPathElement exposed by              
// the CoClass SVGClipPathElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGClipPathElement = class
    class function Create: DispSVGClipPathElement;
    class function CreateRemote(const MachineName: string): DispSVGClipPathElement;
  end;

// *********************************************************************//
// The Class CoSVGElement provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGElement exposed by              
// the CoClass SVGElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGElement = class
    class function Create: DispSVGElement;
    class function CreateRemote(const MachineName: string): DispSVGElement;
  end;

// *********************************************************************//
// The Class CoSVGLength provides a Create and CreateRemote method to          
// create instances of the default interface ISVGLength exposed by              
// the CoClass SVGLength. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGLength = class
    class function Create: ISVGLength;
    class function CreateRemote(const MachineName: string): ISVGLength;
  end;

// *********************************************************************//
// The Class CoSVGLengthList provides a Create and CreateRemote method to          
// create instances of the default interface ISVGLengthList exposed by              
// the CoClass SVGLengthList. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGLengthList = class
    class function Create: ISVGLengthList;
    class function CreateRemote(const MachineName: string): ISVGLengthList;
  end;

// *********************************************************************//
// The Class CoSVGMatrix provides a Create and CreateRemote method to          
// create instances of the default interface ISVGMatrix exposed by              
// the CoClass SVGMatrix. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGMatrix = class
    class function Create: ISVGMatrix;
    class function CreateRemote(const MachineName: string): ISVGMatrix;
  end;

// *********************************************************************//
// The Class CoSVGNumber provides a Create and CreateRemote method to          
// create instances of the default interface ISVGNumber exposed by              
// the CoClass SVGNumber. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGNumber = class
    class function Create: ISVGNumber;
    class function CreateRemote(const MachineName: string): ISVGNumber;
  end;

// *********************************************************************//
// The Class CoSVGNumberList provides a Create and CreateRemote method to          
// create instances of the default interface ISVGNumberList exposed by              
// the CoClass SVGNumberList. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGNumberList = class
    class function Create: ISVGNumberList;
    class function CreateRemote(const MachineName: string): ISVGNumberList;
  end;

// *********************************************************************//
// The Class CoSVGPatternElement provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGPatternElement exposed by              
// the CoClass SVGPatternElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGPatternElement = class
    class function Create: DispSVGPatternElement;
    class function CreateRemote(const MachineName: string): DispSVGPatternElement;
  end;

// *********************************************************************//
// The Class CoSVGPathSeg provides a Create and CreateRemote method to          
// create instances of the default interface ISVGPathSeg exposed by              
// the CoClass SVGPathSeg. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGPathSeg = class
    class function Create: ISVGPathSeg;
    class function CreateRemote(const MachineName: string): ISVGPathSeg;
  end;

// *********************************************************************//
// The Class CoSVGPathSegArcAbs provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGPathSegArcAbs exposed by              
// the CoClass SVGPathSegArcAbs. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGPathSegArcAbs = class
    class function Create: DispSVGPathSegArcAbs;
    class function CreateRemote(const MachineName: string): DispSVGPathSegArcAbs;
  end;

// *********************************************************************//
// The Class CoSVGPathSegArcRel provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGPathSegArcRel exposed by              
// the CoClass SVGPathSegArcRel. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGPathSegArcRel = class
    class function Create: DispSVGPathSegArcRel;
    class function CreateRemote(const MachineName: string): DispSVGPathSegArcRel;
  end;

// *********************************************************************//
// The Class CoSVGPathSegClosePath provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGPathSegClosePath exposed by              
// the CoClass SVGPathSegClosePath. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGPathSegClosePath = class
    class function Create: DispSVGPathSegClosePath;
    class function CreateRemote(const MachineName: string): DispSVGPathSegClosePath;
  end;

// *********************************************************************//
// The Class CoSVGPathSegMovetoAbs provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGPathSegMovetoAbs exposed by              
// the CoClass SVGPathSegMovetoAbs. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGPathSegMovetoAbs = class
    class function Create: DispSVGPathSegMovetoAbs;
    class function CreateRemote(const MachineName: string): DispSVGPathSegMovetoAbs;
  end;

// *********************************************************************//
// The Class CoSVGPathSegMovetoRel provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGPathSegMovetoRel exposed by              
// the CoClass SVGPathSegMovetoRel. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGPathSegMovetoRel = class
    class function Create: DispSVGPathSegMovetoRel;
    class function CreateRemote(const MachineName: string): DispSVGPathSegMovetoRel;
  end;

// *********************************************************************//
// The Class CoSVGPathSegLinetoAbs provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGPathSegLinetoAbs exposed by              
// the CoClass SVGPathSegLinetoAbs. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGPathSegLinetoAbs = class
    class function Create: DispSVGPathSegLinetoAbs;
    class function CreateRemote(const MachineName: string): DispSVGPathSegLinetoAbs;
  end;

// *********************************************************************//
// The Class CoSVGPathSegLinetoRel provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGPathSegLinetoRel exposed by              
// the CoClass SVGPathSegLinetoRel. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGPathSegLinetoRel = class
    class function Create: DispSVGPathSegLinetoRel;
    class function CreateRemote(const MachineName: string): DispSVGPathSegLinetoRel;
  end;

// *********************************************************************//
// The Class CoSVGPathSegCurvetoCubicAbs provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGPathSegCurvetoCubicAbs exposed by              
// the CoClass SVGPathSegCurvetoCubicAbs. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGPathSegCurvetoCubicAbs = class
    class function Create: DispSVGPathSegCurvetoCubicAbs;
    class function CreateRemote(const MachineName: string): DispSVGPathSegCurvetoCubicAbs;
  end;

// *********************************************************************//
// The Class CoSVGPathSegCurvetoCubicRel provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGPathSegCurvetoCubicRel exposed by              
// the CoClass SVGPathSegCurvetoCubicRel. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGPathSegCurvetoCubicRel = class
    class function Create: DispSVGPathSegCurvetoCubicRel;
    class function CreateRemote(const MachineName: string): DispSVGPathSegCurvetoCubicRel;
  end;

// *********************************************************************//
// The Class CoSVGPathSegCurvetoCubicSmoothAbs provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGPathSegCurvetoCubicSmoothAbs exposed by              
// the CoClass SVGPathSegCurvetoCubicSmoothAbs. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGPathSegCurvetoCubicSmoothAbs = class
    class function Create: DispSVGPathSegCurvetoCubicSmoothAbs;
    class function CreateRemote(const MachineName: string): DispSVGPathSegCurvetoCubicSmoothAbs;
  end;

// *********************************************************************//
// The Class CoSVGPathSegCurvetoCubicSmoothRel provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGPathSegCurvetoCubicSmoothRel exposed by              
// the CoClass SVGPathSegCurvetoCubicSmoothRel. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGPathSegCurvetoCubicSmoothRel = class
    class function Create: DispSVGPathSegCurvetoCubicSmoothRel;
    class function CreateRemote(const MachineName: string): DispSVGPathSegCurvetoCubicSmoothRel;
  end;

// *********************************************************************//
// The Class CoSVGPathSegCurvetoQuadraticAbs provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGPathSegCurvetoQuadraticAbs exposed by              
// the CoClass SVGPathSegCurvetoQuadraticAbs. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGPathSegCurvetoQuadraticAbs = class
    class function Create: DispSVGPathSegCurvetoQuadraticAbs;
    class function CreateRemote(const MachineName: string): DispSVGPathSegCurvetoQuadraticAbs;
  end;

// *********************************************************************//
// The Class CoSVGPathSegCurvetoQuadraticRel provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGPathSegCurvetoQuadraticRel exposed by              
// the CoClass SVGPathSegCurvetoQuadraticRel. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGPathSegCurvetoQuadraticRel = class
    class function Create: DispSVGPathSegCurvetoQuadraticRel;
    class function CreateRemote(const MachineName: string): DispSVGPathSegCurvetoQuadraticRel;
  end;

// *********************************************************************//
// The Class CoSVGPathSegCurvetoQuadraticSmoothAbs provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGPathSegCurvetoQuadraticSmoothAbs exposed by              
// the CoClass SVGPathSegCurvetoQuadraticSmoothAbs. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGPathSegCurvetoQuadraticSmoothAbs = class
    class function Create: DispSVGPathSegCurvetoQuadraticSmoothAbs;
    class function CreateRemote(const MachineName: string): DispSVGPathSegCurvetoQuadraticSmoothAbs;
  end;

// *********************************************************************//
// The Class CoSVGPathSegCurvetoQuadraticSmoothRel provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGPathSegCurvetoQuadraticSmoothRel exposed by              
// the CoClass SVGPathSegCurvetoQuadraticSmoothRel. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGPathSegCurvetoQuadraticSmoothRel = class
    class function Create: DispSVGPathSegCurvetoQuadraticSmoothRel;
    class function CreateRemote(const MachineName: string): DispSVGPathSegCurvetoQuadraticSmoothRel;
  end;

// *********************************************************************//
// The Class CoSVGPathSegLinetoHorizontalAbs provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGPathSegLinetoHorizontalAbs exposed by              
// the CoClass SVGPathSegLinetoHorizontalAbs. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGPathSegLinetoHorizontalAbs = class
    class function Create: DispSVGPathSegLinetoHorizontalAbs;
    class function CreateRemote(const MachineName: string): DispSVGPathSegLinetoHorizontalAbs;
  end;

// *********************************************************************//
// The Class CoSVGPathSegLinetoHorizontalRel provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGPathSegLinetoHorizontalRel exposed by              
// the CoClass SVGPathSegLinetoHorizontalRel. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGPathSegLinetoHorizontalRel = class
    class function Create: DispSVGPathSegLinetoHorizontalRel;
    class function CreateRemote(const MachineName: string): DispSVGPathSegLinetoHorizontalRel;
  end;

// *********************************************************************//
// The Class CoSVGPathSegLinetoVerticalAbs provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGPathSegLinetoVerticalAbs exposed by              
// the CoClass SVGPathSegLinetoVerticalAbs. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGPathSegLinetoVerticalAbs = class
    class function Create: DispSVGPathSegLinetoVerticalAbs;
    class function CreateRemote(const MachineName: string): DispSVGPathSegLinetoVerticalAbs;
  end;

// *********************************************************************//
// The Class CoSVGPathSegLinetoVerticalRel provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGPathSegLinetoVerticalRel exposed by              
// the CoClass SVGPathSegLinetoVerticalRel. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGPathSegLinetoVerticalRel = class
    class function Create: DispSVGPathSegLinetoVerticalRel;
    class function CreateRemote(const MachineName: string): DispSVGPathSegLinetoVerticalRel;
  end;

// *********************************************************************//
// The Class CoSVGPathSegList provides a Create and CreateRemote method to          
// create instances of the default interface ISVGPathSegList exposed by              
// the CoClass SVGPathSegList. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGPathSegList = class
    class function Create: ISVGPathSegList;
    class function CreateRemote(const MachineName: string): ISVGPathSegList;
  end;

// *********************************************************************//
// The Class CoSVGPoint provides a Create and CreateRemote method to          
// create instances of the default interface ISVGPoint exposed by              
// the CoClass SVGPoint. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGPoint = class
    class function Create: ISVGPoint;
    class function CreateRemote(const MachineName: string): ISVGPoint;
  end;

// *********************************************************************//
// The Class CoSVGPointList provides a Create and CreateRemote method to          
// create instances of the default interface ISVGPointList exposed by              
// the CoClass SVGPointList. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGPointList = class
    class function Create: ISVGPointList;
    class function CreateRemote(const MachineName: string): ISVGPointList;
  end;

// *********************************************************************//
// The Class CoSVGRect provides a Create and CreateRemote method to          
// create instances of the default interface ISVGRect exposed by              
// the CoClass SVGRect. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGRect = class
    class function Create: ISVGRect;
    class function CreateRemote(const MachineName: string): ISVGRect;
  end;

// *********************************************************************//
// The Class CoSVGStringList provides a Create and CreateRemote method to          
// create instances of the default interface ISVGStringList exposed by              
// the CoClass SVGStringList. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGStringList = class
    class function Create: ISVGStringList;
    class function CreateRemote(const MachineName: string): ISVGStringList;
  end;

// *********************************************************************//
// The Class CoSVGTransform provides a Create and CreateRemote method to          
// create instances of the default interface ISVGTransform exposed by              
// the CoClass SVGTransform. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGTransform = class
    class function Create: ISVGTransform;
    class function CreateRemote(const MachineName: string): ISVGTransform;
  end;

// *********************************************************************//
// The Class CoSVGSVGElement provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGSVGElement exposed by              
// the CoClass SVGSVGElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGSVGElement = class
    class function Create: DispSVGSVGElement;
    class function CreateRemote(const MachineName: string): DispSVGSVGElement;
  end;

// *********************************************************************//
// The Class CoSVGUseElement provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGUseElement exposed by              
// the CoClass SVGUseElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGUseElement = class
    class function Create: DispSVGUseElement;
    class function CreateRemote(const MachineName: string): DispSVGUseElement;
  end;

// *********************************************************************//
// The Class CoHTMLStyleSheetRulesAppliedCollection provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLStyleSheetRulesAppliedCollection exposed by              
// the CoClass HTMLStyleSheetRulesAppliedCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLStyleSheetRulesAppliedCollection = class
    class function Create: DispHTMLStyleSheetRulesAppliedCollection;
    class function CreateRemote(const MachineName: string): DispHTMLStyleSheetRulesAppliedCollection;
  end;

// *********************************************************************//
// The Class CoRulesApplied provides a Create and CreateRemote method to          
// create instances of the default interface DispRulesApplied exposed by              
// the CoClass RulesApplied. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRulesApplied = class
    class function Create: DispRulesApplied;
    class function CreateRemote(const MachineName: string): DispRulesApplied;
  end;

// *********************************************************************//
// The Class CoRulesAppliedCollection provides a Create and CreateRemote method to          
// create instances of the default interface DispRulesAppliedCollection exposed by              
// the CoClass RulesAppliedCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRulesAppliedCollection = class
    class function Create: DispRulesAppliedCollection;
    class function CreateRemote(const MachineName: string): DispRulesAppliedCollection;
  end;

// *********************************************************************//
// The Class CoHTMLW3CComputedStyle provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLW3CComputedStyle exposed by              
// the CoClass HTMLW3CComputedStyle. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLW3CComputedStyle = class
    class function Create: DispHTMLW3CComputedStyle;
    class function CreateRemote(const MachineName: string): DispHTMLW3CComputedStyle;
  end;

// *********************************************************************//
// The Class CoSVGTransformList provides a Create and CreateRemote method to          
// create instances of the default interface ISVGTransformList exposed by              
// the CoClass SVGTransformList. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGTransformList = class
    class function Create: ISVGTransformList;
    class function CreateRemote(const MachineName: string): ISVGTransformList;
  end;

// *********************************************************************//
// The Class CoSVGCircleElement provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGCircleElement exposed by              
// the CoClass SVGCircleElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGCircleElement = class
    class function Create: DispSVGCircleElement;
    class function CreateRemote(const MachineName: string): DispSVGCircleElement;
  end;

// *********************************************************************//
// The Class CoSVGEllipseElement provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGEllipseElement exposed by              
// the CoClass SVGEllipseElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGEllipseElement = class
    class function Create: DispSVGEllipseElement;
    class function CreateRemote(const MachineName: string): DispSVGEllipseElement;
  end;

// *********************************************************************//
// The Class CoSVGLineElement provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGLineElement exposed by              
// the CoClass SVGLineElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGLineElement = class
    class function Create: DispSVGLineElement;
    class function CreateRemote(const MachineName: string): DispSVGLineElement;
  end;

// *********************************************************************//
// The Class CoSVGRectElement provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGRectElement exposed by              
// the CoClass SVGRectElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGRectElement = class
    class function Create: DispSVGRectElement;
    class function CreateRemote(const MachineName: string): DispSVGRectElement;
  end;

// *********************************************************************//
// The Class CoSVGPolygonElement provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGPolygonElement exposed by              
// the CoClass SVGPolygonElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGPolygonElement = class
    class function Create: DispSVGPolygonElement;
    class function CreateRemote(const MachineName: string): DispSVGPolygonElement;
  end;

// *********************************************************************//
// The Class CoSVGPolylineElement provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGPolylineElement exposed by              
// the CoClass SVGPolylineElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGPolylineElement = class
    class function Create: DispSVGPolylineElement;
    class function CreateRemote(const MachineName: string): DispSVGPolylineElement;
  end;

// *********************************************************************//
// The Class CoSVGGElement provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGGElement exposed by              
// the CoClass SVGGElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGGElement = class
    class function Create: DispSVGGElement;
    class function CreateRemote(const MachineName: string): DispSVGGElement;
  end;

// *********************************************************************//
// The Class CoSVGSymbolElement provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGSymbolElement exposed by              
// the CoClass SVGSymbolElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGSymbolElement = class
    class function Create: DispSVGSymbolElement;
    class function CreateRemote(const MachineName: string): DispSVGSymbolElement;
  end;

// *********************************************************************//
// The Class CoSVGDefsElement provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGDefsElement exposed by              
// the CoClass SVGDefsElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGDefsElement = class
    class function Create: DispSVGDefsElement;
    class function CreateRemote(const MachineName: string): DispSVGDefsElement;
  end;

// *********************************************************************//
// The Class CoSVGPathElement provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGPathElement exposed by              
// the CoClass SVGPathElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGPathElement = class
    class function Create: DispSVGPathElement;
    class function CreateRemote(const MachineName: string): DispSVGPathElement;
  end;

// *********************************************************************//
// The Class CoSVGPreserveAspectRatio provides a Create and CreateRemote method to          
// create instances of the default interface ISVGPreserveAspectRatio exposed by              
// the CoClass SVGPreserveAspectRatio. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGPreserveAspectRatio = class
    class function Create: ISVGPreserveAspectRatio;
    class function CreateRemote(const MachineName: string): ISVGPreserveAspectRatio;
  end;

// *********************************************************************//
// The Class CoSVGTextElement provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGTextElement exposed by              
// the CoClass SVGTextElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGTextElement = class
    class function Create: DispSVGTextElement;
    class function CreateRemote(const MachineName: string): DispSVGTextElement;
  end;

// *********************************************************************//
// The Class CoSVGAnimatedPreserveAspectRatio provides a Create and CreateRemote method to          
// create instances of the default interface ISVGAnimatedPreserveAspectRatio exposed by              
// the CoClass SVGAnimatedPreserveAspectRatio. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGAnimatedPreserveAspectRatio = class
    class function Create: ISVGAnimatedPreserveAspectRatio;
    class function CreateRemote(const MachineName: string): ISVGAnimatedPreserveAspectRatio;
  end;

// *********************************************************************//
// The Class CoSVGImageElement provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGImageElement exposed by              
// the CoClass SVGImageElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGImageElement = class
    class function Create: DispSVGImageElement;
    class function CreateRemote(const MachineName: string): DispSVGImageElement;
  end;

// *********************************************************************//
// The Class CoSVGStopElement provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGStopElement exposed by              
// the CoClass SVGStopElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGStopElement = class
    class function Create: DispSVGStopElement;
    class function CreateRemote(const MachineName: string): DispSVGStopElement;
  end;

// *********************************************************************//
// The Class CoSVGGradientElement provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGGradientElement exposed by              
// the CoClass SVGGradientElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGGradientElement = class
    class function Create: DispSVGGradientElement;
    class function CreateRemote(const MachineName: string): DispSVGGradientElement;
  end;

// *********************************************************************//
// The Class CoSVGLinearGradientElement provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGLinearGradientElement exposed by              
// the CoClass SVGLinearGradientElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGLinearGradientElement = class
    class function Create: DispSVGLinearGradientElement;
    class function CreateRemote(const MachineName: string): DispSVGLinearGradientElement;
  end;

// *********************************************************************//
// The Class CoSVGRadialGradientElement provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGRadialGradientElement exposed by              
// the CoClass SVGRadialGradientElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGRadialGradientElement = class
    class function Create: DispSVGRadialGradientElement;
    class function CreateRemote(const MachineName: string): DispSVGRadialGradientElement;
  end;

// *********************************************************************//
// The Class CoSVGMaskElement provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGMaskElement exposed by              
// the CoClass SVGMaskElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGMaskElement = class
    class function Create: DispSVGMaskElement;
    class function CreateRemote(const MachineName: string): DispSVGMaskElement;
  end;

// *********************************************************************//
// The Class CoSVGMarkerElement provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGMarkerElement exposed by              
// the CoClass SVGMarkerElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGMarkerElement = class
    class function Create: DispSVGMarkerElement;
    class function CreateRemote(const MachineName: string): DispSVGMarkerElement;
  end;

// *********************************************************************//
// The Class CoSVGZoomEvent provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGZoomEvent exposed by              
// the CoClass SVGZoomEvent. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGZoomEvent = class
    class function Create: DispSVGZoomEvent;
    class function CreateRemote(const MachineName: string): DispSVGZoomEvent;
  end;

// *********************************************************************//
// The Class CoSVGAElement provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGAElement exposed by              
// the CoClass SVGAElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGAElement = class
    class function Create: DispSVGAElement;
    class function CreateRemote(const MachineName: string): DispSVGAElement;
  end;

// *********************************************************************//
// The Class CoSVGViewElement provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGViewElement exposed by              
// the CoClass SVGViewElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGViewElement = class
    class function Create: DispSVGViewElement;
    class function CreateRemote(const MachineName: string): DispSVGViewElement;
  end;

// *********************************************************************//
// The Class CoHTMLMediaError provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLMediaError exposed by              
// the CoClass HTMLMediaError. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLMediaError = class
    class function Create: DispHTMLMediaError;
    class function CreateRemote(const MachineName: string): DispHTMLMediaError;
  end;

// *********************************************************************//
// The Class CoHTMLTimeRanges provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLTimeRanges exposed by              
// the CoClass HTMLTimeRanges. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLTimeRanges = class
    class function Create: DispHTMLTimeRanges;
    class function CreateRemote(const MachineName: string): DispHTMLTimeRanges;
  end;

// *********************************************************************//
// The Class CoHTMLMediaElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLMediaElement exposed by              
// the CoClass HTMLMediaElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLMediaElement = class
    class function Create: DispHTMLMediaElement;
    class function CreateRemote(const MachineName: string): DispHTMLMediaElement;
  end;

// *********************************************************************//
// The Class CoHTMLSourceElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLSourceElement exposed by              
// the CoClass HTMLSourceElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLSourceElement = class
    class function Create: DispHTMLSourceElement;
    class function CreateRemote(const MachineName: string): DispHTMLSourceElement;
  end;

// *********************************************************************//
// The Class CoHTMLAudioElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLAudioElement exposed by              
// the CoClass HTMLAudioElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLAudioElement = class
    class function Create: DispHTMLAudioElement;
    class function CreateRemote(const MachineName: string): DispHTMLAudioElement;
  end;

// *********************************************************************//
// The Class CoHTMLAudioElementFactory provides a Create and CreateRemote method to          
// create instances of the default interface IHTMLAudioElementFactory exposed by              
// the CoClass HTMLAudioElementFactory. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLAudioElementFactory = class
    class function Create: IHTMLAudioElementFactory;
    class function CreateRemote(const MachineName: string): IHTMLAudioElementFactory;
  end;

// *********************************************************************//
// The Class CoHTMLVideoElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLVideoElement exposed by              
// the CoClass HTMLVideoElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLVideoElement = class
    class function Create: DispHTMLVideoElement;
    class function CreateRemote(const MachineName: string): DispHTMLVideoElement;
  end;

// *********************************************************************//
// The Class CoSVGSwitchElement provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGSwitchElement exposed by              
// the CoClass SVGSwitchElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGSwitchElement = class
    class function Create: DispSVGSwitchElement;
    class function CreateRemote(const MachineName: string): DispSVGSwitchElement;
  end;

// *********************************************************************//
// The Class CoSVGDescElement provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGDescElement exposed by              
// the CoClass SVGDescElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGDescElement = class
    class function Create: DispSVGDescElement;
    class function CreateRemote(const MachineName: string): DispSVGDescElement;
  end;

// *********************************************************************//
// The Class CoSVGTitleElement provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGTitleElement exposed by              
// the CoClass SVGTitleElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGTitleElement = class
    class function Create: DispSVGTitleElement;
    class function CreateRemote(const MachineName: string): DispSVGTitleElement;
  end;

// *********************************************************************//
// The Class CoSVGMetadataElement provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGMetadataElement exposed by              
// the CoClass SVGMetadataElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGMetadataElement = class
    class function Create: DispSVGMetadataElement;
    class function CreateRemote(const MachineName: string): DispSVGMetadataElement;
  end;

// *********************************************************************//
// The Class CoSVGElementInstance provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGElementInstance exposed by              
// the CoClass SVGElementInstance. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGElementInstance = class
    class function Create: DispSVGElementInstance;
    class function CreateRemote(const MachineName: string): DispSVGElementInstance;
  end;

// *********************************************************************//
// The Class CoSVGElementInstanceList provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGElementInstanceList exposed by              
// the CoClass SVGElementInstanceList. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGElementInstanceList = class
    class function Create: DispSVGElementInstanceList;
    class function CreateRemote(const MachineName: string): DispSVGElementInstanceList;
  end;

// *********************************************************************//
// The Class CoDOMException provides a Create and CreateRemote method to          
// create instances of the default interface DispDOMException exposed by              
// the CoClass DOMException. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoDOMException = class
    class function Create: DispDOMException;
    class function CreateRemote(const MachineName: string): DispDOMException;
  end;

// *********************************************************************//
// The Class CoRangeException provides a Create and CreateRemote method to          
// create instances of the default interface DispRangeException exposed by              
// the CoClass RangeException. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRangeException = class
    class function Create: DispRangeException;
    class function CreateRemote(const MachineName: string): DispRangeException;
  end;

// *********************************************************************//
// The Class CoSVGException provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGException exposed by              
// the CoClass SVGException. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGException = class
    class function Create: DispSVGException;
    class function CreateRemote(const MachineName: string): DispSVGException;
  end;

// *********************************************************************//
// The Class CoEventException provides a Create and CreateRemote method to          
// create instances of the default interface DispEventException exposed by              
// the CoClass EventException. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoEventException = class
    class function Create: DispEventException;
    class function CreateRemote(const MachineName: string): DispEventException;
  end;

// *********************************************************************//
// The Class CoSVGScriptElement provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGScriptElement exposed by              
// the CoClass SVGScriptElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGScriptElement = class
    class function Create: DispSVGScriptElement;
    class function CreateRemote(const MachineName: string): DispSVGScriptElement;
  end;

// *********************************************************************//
// The Class CoSVGStyleElement provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGStyleElement exposed by              
// the CoClass SVGStyleElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGStyleElement = class
    class function Create: DispSVGStyleElement;
    class function CreateRemote(const MachineName: string): DispSVGStyleElement;
  end;

// *********************************************************************//
// The Class CoSVGTextContentElement provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGTextContentElement exposed by              
// the CoClass SVGTextContentElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGTextContentElement = class
    class function Create: DispSVGTextContentElement;
    class function CreateRemote(const MachineName: string): DispSVGTextContentElement;
  end;

// *********************************************************************//
// The Class CoSVGTextPositioningElement provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGTextPositioningElement exposed by              
// the CoClass SVGTextPositioningElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGTextPositioningElement = class
    class function Create: DispSVGTextPositioningElement;
    class function CreateRemote(const MachineName: string): DispSVGTextPositioningElement;
  end;

// *********************************************************************//
// The Class CoDOMDocumentType provides a Create and CreateRemote method to          
// create instances of the default interface DispDOMDocumentType exposed by              
// the CoClass DOMDocumentType. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoDOMDocumentType = class
    class function Create: DispDOMDocumentType;
    class function CreateRemote(const MachineName: string): DispDOMDocumentType;
  end;

// *********************************************************************//
// The Class CoNodeIterator provides a Create and CreateRemote method to          
// create instances of the default interface DispNodeIterator exposed by              
// the CoClass NodeIterator. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoNodeIterator = class
    class function Create: DispNodeIterator;
    class function CreateRemote(const MachineName: string): DispNodeIterator;
  end;

// *********************************************************************//
// The Class CoTreeWalker provides a Create and CreateRemote method to          
// create instances of the default interface DispTreeWalker exposed by              
// the CoClass TreeWalker. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoTreeWalker = class
    class function Create: DispTreeWalker;
    class function CreateRemote(const MachineName: string): DispTreeWalker;
  end;

// *********************************************************************//
// The Class CoDOMProcessingInstruction provides a Create and CreateRemote method to          
// create instances of the default interface DispDOMProcessingInstruction exposed by              
// the CoClass DOMProcessingInstruction. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoDOMProcessingInstruction = class
    class function Create: DispDOMProcessingInstruction;
    class function CreateRemote(const MachineName: string): DispDOMProcessingInstruction;
  end;

// *********************************************************************//
// The Class CoHTMLPerformance provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLPerformance exposed by              
// the CoClass HTMLPerformance. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLPerformance = class
    class function Create: DispHTMLPerformance;
    class function CreateRemote(const MachineName: string): DispHTMLPerformance;
  end;

// *********************************************************************//
// The Class CoHTMLPerformanceNavigation provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLPerformanceNavigation exposed by              
// the CoClass HTMLPerformanceNavigation. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLPerformanceNavigation = class
    class function Create: DispHTMLPerformanceNavigation;
    class function CreateRemote(const MachineName: string): DispHTMLPerformanceNavigation;
  end;

// *********************************************************************//
// The Class CoHTMLPerformanceTiming provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLPerformanceTiming exposed by              
// the CoClass HTMLPerformanceTiming. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLPerformanceTiming = class
    class function Create: DispHTMLPerformanceTiming;
    class function CreateRemote(const MachineName: string): DispHTMLPerformanceTiming;
  end;

// *********************************************************************//
// The Class CoSVGTSpanElement provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGTSpanElement exposed by              
// the CoClass SVGTSpanElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGTSpanElement = class
    class function Create: DispSVGTSpanElement;
    class function CreateRemote(const MachineName: string): DispSVGTSpanElement;
  end;

// *********************************************************************//
// The Class CoCTemplatePrinter provides a Create and CreateRemote method to          
// create instances of the default interface ITemplatePrinter3 exposed by              
// the CoClass CTemplatePrinter. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoCTemplatePrinter = class
    class function Create: ITemplatePrinter3;
    class function CreateRemote(const MachineName: string): ITemplatePrinter3;
  end;

// *********************************************************************//
// The Class CoCPrintManagerTemplatePrinter provides a Create and CreateRemote method to          
// create instances of the default interface DispCPrintManagerTemplatePrinter exposed by              
// the CoClass CPrintManagerTemplatePrinter. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoCPrintManagerTemplatePrinter = class
    class function Create: DispCPrintManagerTemplatePrinter;
    class function CreateRemote(const MachineName: string): DispCPrintManagerTemplatePrinter;
  end;

// *********************************************************************//
// The Class CoSVGTextPathElement provides a Create and CreateRemote method to          
// create instances of the default interface DispSVGTextPathElement exposed by              
// the CoClass SVGTextPathElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSVGTextPathElement = class
    class function Create: DispSVGTextPathElement;
    class function CreateRemote(const MachineName: string): DispSVGTextPathElement;
  end;

// *********************************************************************//
// The Class CoXMLSerializer provides a Create and CreateRemote method to          
// create instances of the default interface DispXMLSerializer exposed by              
// the CoClass XMLSerializer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoXMLSerializer = class
    class function Create: DispXMLSerializer;
    class function CreateRemote(const MachineName: string): DispXMLSerializer;
  end;

// *********************************************************************//
// The Class CoHTMLDOMXmlSerializerFactory provides a Create and CreateRemote method to          
// create instances of the default interface IDOMXmlSerializerFactory exposed by              
// the CoClass HTMLDOMXmlSerializerFactory. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLDOMXmlSerializerFactory = class
    class function Create: IDOMXmlSerializerFactory;
    class function CreateRemote(const MachineName: string): IDOMXmlSerializerFactory;
  end;

// *********************************************************************//
// The Class CoDOMParser provides a Create and CreateRemote method to          
// create instances of the default interface DispDOMParser exposed by              
// the CoClass DOMParser. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoDOMParser = class
    class function Create: DispDOMParser;
    class function CreateRemote(const MachineName: string): DispDOMParser;
  end;

// *********************************************************************//
// The Class CoDOMParserFactory provides a Create and CreateRemote method to          
// create instances of the default interface IDOMParserFactory exposed by              
// the CoClass DOMParserFactory. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoDOMParserFactory = class
    class function Create: IDOMParserFactory;
    class function CreateRemote(const MachineName: string): IDOMParserFactory;
  end;

// *********************************************************************//
// The Class CoHTMLSemanticElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLSemanticElement exposed by              
// the CoClass HTMLSemanticElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLSemanticElement = class
    class function Create: DispHTMLSemanticElement;
    class function CreateRemote(const MachineName: string): DispHTMLSemanticElement;
  end;

// *********************************************************************//
// The Class CoHTMLProgressElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLProgressElement exposed by              
// the CoClass HTMLProgressElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLProgressElement = class
    class function Create: DispHTMLProgressElement;
    class function CreateRemote(const MachineName: string): DispHTMLProgressElement;
  end;

// *********************************************************************//
// The Class CoDOMMSTransitionEvent provides a Create and CreateRemote method to          
// create instances of the default interface DispDOMMSTransitionEvent exposed by              
// the CoClass DOMMSTransitionEvent. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoDOMMSTransitionEvent = class
    class function Create: DispDOMMSTransitionEvent;
    class function CreateRemote(const MachineName: string): DispDOMMSTransitionEvent;
  end;

// *********************************************************************//
// The Class CoDOMMSAnimationEvent provides a Create and CreateRemote method to          
// create instances of the default interface DispDOMMSAnimationEvent exposed by              
// the CoClass DOMMSAnimationEvent. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoDOMMSAnimationEvent = class
    class function Create: DispDOMMSAnimationEvent;
    class function CreateRemote(const MachineName: string): DispDOMMSAnimationEvent;
  end;

// *********************************************************************//
// The Class CoWebGeolocation provides a Create and CreateRemote method to          
// create instances of the default interface DispWebGeolocation exposed by              
// the CoClass WebGeolocation. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoWebGeolocation = class
    class function Create: DispWebGeolocation;
    class function CreateRemote(const MachineName: string): DispWebGeolocation;
  end;

// *********************************************************************//
// The Class CoWebGeocoordinates provides a Create and CreateRemote method to          
// create instances of the default interface DispWebGeocoordinates exposed by              
// the CoClass WebGeocoordinates. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoWebGeocoordinates = class
    class function Create: DispWebGeocoordinates;
    class function CreateRemote(const MachineName: string): DispWebGeocoordinates;
  end;

// *********************************************************************//
// The Class CoWebGeopositionError provides a Create and CreateRemote method to          
// create instances of the default interface DispWebGeopositionError exposed by              
// the CoClass WebGeopositionError. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoWebGeopositionError = class
    class function Create: DispWebGeopositionError;
    class function CreateRemote(const MachineName: string): DispWebGeopositionError;
  end;

// *********************************************************************//
// The Class CoWebGeoposition provides a Create and CreateRemote method to          
// create instances of the default interface DispWebGeoposition exposed by              
// the CoClass WebGeoposition. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoWebGeoposition = class
    class function Create: DispWebGeoposition;
    class function CreateRemote(const MachineName: string): DispWebGeoposition;
  end;

// *********************************************************************//
// The Class CoCClientCaps provides a Create and CreateRemote method to          
// create instances of the default interface IClientCaps exposed by              
// the CoClass CClientCaps. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoCClientCaps = class
    class function Create: IClientCaps;
    class function CreateRemote(const MachineName: string): IClientCaps;
  end;

// *********************************************************************//
// The Class CoDOMMSManipulationEvent provides a Create and CreateRemote method to          
// create instances of the default interface DispDOMMSManipulationEvent exposed by              
// the CoClass DOMMSManipulationEvent. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoDOMMSManipulationEvent = class
    class function Create: DispDOMMSManipulationEvent;
    class function CreateRemote(const MachineName: string): DispDOMMSManipulationEvent;
  end;

// *********************************************************************//
// The Class CoDOMCloseEvent provides a Create and CreateRemote method to          
// create instances of the default interface DispDOMCloseEvent exposed by              
// the CoClass DOMCloseEvent. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoDOMCloseEvent = class
    class function Create: DispDOMCloseEvent;
    class function CreateRemote(const MachineName: string): DispDOMCloseEvent;
  end;

// *********************************************************************//
// The Class CoapplicationCache provides a Create and CreateRemote method to          
// create instances of the default interface IHTMLApplicationCache exposed by              
// the CoClass applicationCache. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoapplicationCache = class
    class function Create: IHTMLApplicationCache;
    class function CreateRemote(const MachineName: string): IHTMLApplicationCache;
  end;

// *********************************************************************//
// The Class CoHtmlDlgSafeHelper provides a Create and CreateRemote method to          
// create instances of the default interface IHtmlDlgSafeHelper exposed by              
// the CoClass HtmlDlgSafeHelper. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHtmlDlgSafeHelper = class
    class function Create: IHtmlDlgSafeHelper;
    class function CreateRemote(const MachineName: string): IHtmlDlgSafeHelper;
  end;

// *********************************************************************//
// The Class CoBlockFormats provides a Create and CreateRemote method to          
// create instances of the default interface IBlockFormats exposed by              
// the CoClass BlockFormats. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoBlockFormats = class
    class function Create: IBlockFormats;
    class function CreateRemote(const MachineName: string): IBlockFormats;
  end;

// *********************************************************************//
// The Class CoFontNames provides a Create and CreateRemote method to          
// create instances of the default interface IFontNames exposed by              
// the CoClass FontNames. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoFontNames = class
    class function Create: IFontNames;
    class function CreateRemote(const MachineName: string): IFontNames;
  end;

// *********************************************************************//
// The Class CoHTMLNamespace provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLNamespace exposed by              
// the CoClass HTMLNamespace. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLNamespace = class
    class function Create: DispHTMLNamespace;
    class function CreateRemote(const MachineName: string): DispHTMLNamespace;
  end;

// *********************************************************************//
// The Class CoHTMLNamespaceCollection provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLNamespaceCollection exposed by              
// the CoClass HTMLNamespaceCollection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLNamespaceCollection = class
    class function Create: DispHTMLNamespaceCollection;
    class function CreateRemote(const MachineName: string): DispHTMLNamespaceCollection;
  end;

// *********************************************************************//
// The Class CoThreadDialogProcParam provides a Create and CreateRemote method to          
// create instances of the default interface IHTMLModelessInit exposed by              
// the CoClass ThreadDialogProcParam. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoThreadDialogProcParam = class
    class function Create: IHTMLModelessInit;
    class function CreateRemote(const MachineName: string): IHTMLModelessInit;
  end;

// *********************************************************************//
// The Class CoHTMLDialog provides a Create and CreateRemote method to          
// create instances of the default interface IHTMLDialog exposed by              
// the CoClass HTMLDialog. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLDialog = class
    class function Create: IHTMLDialog;
    class function CreateRemote(const MachineName: string): IHTMLDialog;
  end;

// *********************************************************************//
// The Class CoHTMLPopup provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLPopup exposed by              
// the CoClass HTMLPopup. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLPopup = class
    class function Create: DispHTMLPopup;
    class function CreateRemote(const MachineName: string): DispHTMLPopup;
  end;

// *********************************************************************//
// The Class CoHTMLAppBehavior provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLAppBehavior exposed by              
// the CoClass HTMLAppBehavior. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLAppBehavior = class
    class function Create: DispHTMLAppBehavior;
    class function CreateRemote(const MachineName: string): DispHTMLAppBehavior;
  end;

// *********************************************************************//
// The Class CoOldHTMLDocument provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLDocument exposed by              
// the CoClass OldHTMLDocument. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoOldHTMLDocument = class
    class function Create: DispHTMLDocument;
    class function CreateRemote(const MachineName: string): DispHTMLDocument;
  end;

// *********************************************************************//
// The Class CoOldHTMLFormElement provides a Create and CreateRemote method to          
// create instances of the default interface DispHTMLFormElement exposed by              
// the CoClass OldHTMLFormElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoOldHTMLFormElement = class
    class function Create: DispHTMLFormElement;
    class function CreateRemote(const MachineName: string): DispHTMLFormElement;
  end;

// *********************************************************************//
// The Class CoHTMLInputButtonElement provides a Create and CreateRemote method to          
// create instances of the default interface DispIHTMLInputButtonElement exposed by              
// the CoClass HTMLInputButtonElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLInputButtonElement = class
    class function Create: DispIHTMLInputButtonElement;
    class function CreateRemote(const MachineName: string): DispIHTMLInputButtonElement;
  end;

// *********************************************************************//
// The Class CoHTMLInputTextElement provides a Create and CreateRemote method to          
// create instances of the default interface DispIHTMLInputTextElement exposed by              
// the CoClass HTMLInputTextElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLInputTextElement = class
    class function Create: DispIHTMLInputTextElement;
    class function CreateRemote(const MachineName: string): DispIHTMLInputTextElement;
  end;

// *********************************************************************//
// The Class CoHTMLInputFileElement provides a Create and CreateRemote method to          
// create instances of the default interface DispIHTMLInputFileElement exposed by              
// the CoClass HTMLInputFileElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLInputFileElement = class
    class function Create: DispIHTMLInputFileElement;
    class function CreateRemote(const MachineName: string): DispIHTMLInputFileElement;
  end;

// *********************************************************************//
// The Class CoHTMLOptionButtonElement provides a Create and CreateRemote method to          
// create instances of the default interface DispIHTMLOptionButtonElement exposed by              
// the CoClass HTMLOptionButtonElement. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoHTMLOptionButtonElement = class
    class function Create: DispIHTMLOptionButtonElement;
    class function CreateRemote(const MachineName: string): DispIHTMLOptionButtonElement;
  end;

// *********************************************************************//
// The Class CohtmlInputImage provides a Create and CreateRemote method to          
// create instances of the default interface DispIHTMLInputImage exposed by              
// the CoClass htmlInputImage. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CohtmlInputImage = class
    class function Create: DispIHTMLInputImage;
    class function CreateRemote(const MachineName: string): DispIHTMLInputImage;
  end;

implementation

uses System.Win.ComObj;

class function CoHTMLCSSStyleDeclaration.Create: DispHTMLCSSStyleDeclaration;
begin
  Result := CreateComObject(CLASS_HTMLCSSStyleDeclaration) as DispHTMLCSSStyleDeclaration;
end;

class function CoHTMLCSSStyleDeclaration.CreateRemote(const MachineName: string): DispHTMLCSSStyleDeclaration;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLCSSStyleDeclaration) as DispHTMLCSSStyleDeclaration;
end;

class function CoHTMLStyle.Create: DispHTMLStyle;
begin
  Result := CreateComObject(CLASS_HTMLStyle) as DispHTMLStyle;
end;

class function CoHTMLStyle.CreateRemote(const MachineName: string): DispHTMLStyle;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLStyle) as DispHTMLStyle;
end;

class function CoHTMLRuleStyle.Create: DispHTMLRuleStyle;
begin
  Result := CreateComObject(CLASS_HTMLRuleStyle) as DispHTMLRuleStyle;
end;

class function CoHTMLRuleStyle.CreateRemote(const MachineName: string): DispHTMLRuleStyle;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLRuleStyle) as DispHTMLRuleStyle;
end;

class function CoHTMLCSSRule.Create: DispHTMLCSSRule;
begin
  Result := CreateComObject(CLASS_HTMLCSSRule) as DispHTMLCSSRule;
end;

class function CoHTMLCSSRule.CreateRemote(const MachineName: string): DispHTMLCSSRule;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLCSSRule) as DispHTMLCSSRule;
end;

class function CoHTMLCSSImportRule.Create: DispHTMLCSSImportRule;
begin
  Result := CreateComObject(CLASS_HTMLCSSImportRule) as DispHTMLCSSImportRule;
end;

class function CoHTMLCSSImportRule.CreateRemote(const MachineName: string): DispHTMLCSSImportRule;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLCSSImportRule) as DispHTMLCSSImportRule;
end;

class function CoHTMLCSSMediaRule.Create: DispHTMLCSSMediaRule;
begin
  Result := CreateComObject(CLASS_HTMLCSSMediaRule) as DispHTMLCSSMediaRule;
end;

class function CoHTMLCSSMediaRule.CreateRemote(const MachineName: string): DispHTMLCSSMediaRule;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLCSSMediaRule) as DispHTMLCSSMediaRule;
end;

class function CoHTMLCSSMediaList.Create: DispHTMLCSSMediaList;
begin
  Result := CreateComObject(CLASS_HTMLCSSMediaList) as DispHTMLCSSMediaList;
end;

class function CoHTMLCSSMediaList.CreateRemote(const MachineName: string): DispHTMLCSSMediaList;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLCSSMediaList) as DispHTMLCSSMediaList;
end;

class function CoHTMLCSSNamespaceRule.Create: DispHTMLCSSNamespaceRule;
begin
  Result := CreateComObject(CLASS_HTMLCSSNamespaceRule) as DispHTMLCSSNamespaceRule;
end;

class function CoHTMLCSSNamespaceRule.CreateRemote(const MachineName: string): DispHTMLCSSNamespaceRule;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLCSSNamespaceRule) as DispHTMLCSSNamespaceRule;
end;

class function CoHTMLMSCSSKeyframeRule.Create: DispHTMLMSCSSKeyframeRule;
begin
  Result := CreateComObject(CLASS_HTMLMSCSSKeyframeRule) as DispHTMLMSCSSKeyframeRule;
end;

class function CoHTMLMSCSSKeyframeRule.CreateRemote(const MachineName: string): DispHTMLMSCSSKeyframeRule;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLMSCSSKeyframeRule) as DispHTMLMSCSSKeyframeRule;
end;

class function CoHTMLMSCSSKeyframesRule.Create: DispHTMLMSCSSKeyframesRule;
begin
  Result := CreateComObject(CLASS_HTMLMSCSSKeyframesRule) as DispHTMLMSCSSKeyframesRule;
end;

class function CoHTMLMSCSSKeyframesRule.CreateRemote(const MachineName: string): DispHTMLMSCSSKeyframesRule;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLMSCSSKeyframesRule) as DispHTMLMSCSSKeyframesRule;
end;

class function CoHTMLRenderStyle.Create: DispHTMLRenderStyle;
begin
  Result := CreateComObject(CLASS_HTMLRenderStyle) as DispHTMLRenderStyle;
end;

class function CoHTMLRenderStyle.CreateRemote(const MachineName: string): DispHTMLRenderStyle;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLRenderStyle) as DispHTMLRenderStyle;
end;

class function CoHTMLCurrentStyle.Create: DispHTMLCurrentStyle;
begin
  Result := CreateComObject(CLASS_HTMLCurrentStyle) as DispHTMLCurrentStyle;
end;

class function CoHTMLCurrentStyle.CreateRemote(const MachineName: string): DispHTMLCurrentStyle;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLCurrentStyle) as DispHTMLCurrentStyle;
end;

class function CoHTMLDOMAttribute.Create: DispHTMLDOMAttribute;
begin
  Result := CreateComObject(CLASS_HTMLDOMAttribute) as DispHTMLDOMAttribute;
end;

class function CoHTMLDOMAttribute.CreateRemote(const MachineName: string): DispHTMLDOMAttribute;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLDOMAttribute) as DispHTMLDOMAttribute;
end;

class function CoHTMLDOMTextNode.Create: DispHTMLDOMTextNode;
begin
  Result := CreateComObject(CLASS_HTMLDOMTextNode) as DispHTMLDOMTextNode;
end;

class function CoHTMLDOMTextNode.CreateRemote(const MachineName: string): DispHTMLDOMTextNode;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLDOMTextNode) as DispHTMLDOMTextNode;
end;

class function CoHTMLDOMImplementation.Create: DispHTMLDOMImplementation;
begin
  Result := CreateComObject(CLASS_HTMLDOMImplementation) as DispHTMLDOMImplementation;
end;

class function CoHTMLDOMImplementation.CreateRemote(const MachineName: string): DispHTMLDOMImplementation;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLDOMImplementation) as DispHTMLDOMImplementation;
end;

class function CoHTMLAttributeCollection.Create: DispHTMLAttributeCollection;
begin
  Result := CreateComObject(CLASS_HTMLAttributeCollection) as DispHTMLAttributeCollection;
end;

class function CoHTMLAttributeCollection.CreateRemote(const MachineName: string): DispHTMLAttributeCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLAttributeCollection) as DispHTMLAttributeCollection;
end;

class function CoStaticNodeList.Create: DispStaticNodeList;
begin
  Result := CreateComObject(CLASS_StaticNodeList) as DispStaticNodeList;
end;

class function CoStaticNodeList.CreateRemote(const MachineName: string): DispStaticNodeList;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_StaticNodeList) as DispStaticNodeList;
end;

class function CoDOMChildrenCollection.Create: DispDOMChildrenCollection;
begin
  Result := CreateComObject(CLASS_DOMChildrenCollection) as DispDOMChildrenCollection;
end;

class function CoDOMChildrenCollection.CreateRemote(const MachineName: string): DispDOMChildrenCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_DOMChildrenCollection) as DispDOMChildrenCollection;
end;

class function CoHTMLDefaults.Create: DispHTMLDefaults;
begin
  Result := CreateComObject(CLASS_HTMLDefaults) as DispHTMLDefaults;
end;

class function CoHTMLDefaults.CreateRemote(const MachineName: string): DispHTMLDefaults;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLDefaults) as DispHTMLDefaults;
end;

class function CoHTCDefaultDispatch.Create: DispHTCDefaultDispatch;
begin
  Result := CreateComObject(CLASS_HTCDefaultDispatch) as DispHTCDefaultDispatch;
end;

class function CoHTCDefaultDispatch.CreateRemote(const MachineName: string): DispHTCDefaultDispatch;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTCDefaultDispatch) as DispHTCDefaultDispatch;
end;

class function CoHTCPropertyBehavior.Create: DispHTCPropertyBehavior;
begin
  Result := CreateComObject(CLASS_HTCPropertyBehavior) as DispHTCPropertyBehavior;
end;

class function CoHTCPropertyBehavior.CreateRemote(const MachineName: string): DispHTCPropertyBehavior;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTCPropertyBehavior) as DispHTCPropertyBehavior;
end;

class function CoHTCMethodBehavior.Create: DispHTCMethodBehavior;
begin
  Result := CreateComObject(CLASS_HTCMethodBehavior) as DispHTCMethodBehavior;
end;

class function CoHTCMethodBehavior.CreateRemote(const MachineName: string): DispHTCMethodBehavior;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTCMethodBehavior) as DispHTCMethodBehavior;
end;

class function CoHTCEventBehavior.Create: DispHTCEventBehavior;
begin
  Result := CreateComObject(CLASS_HTCEventBehavior) as DispHTCEventBehavior;
end;

class function CoHTCEventBehavior.CreateRemote(const MachineName: string): DispHTCEventBehavior;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTCEventBehavior) as DispHTCEventBehavior;
end;

class function CoHTCAttachBehavior.Create: DispHTCAttachBehavior;
begin
  Result := CreateComObject(CLASS_HTCAttachBehavior) as DispHTCAttachBehavior;
end;

class function CoHTCAttachBehavior.CreateRemote(const MachineName: string): DispHTCAttachBehavior;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTCAttachBehavior) as DispHTCAttachBehavior;
end;

class function CoHTCDescBehavior.Create: DispHTCDescBehavior;
begin
  Result := CreateComObject(CLASS_HTCDescBehavior) as DispHTCDescBehavior;
end;

class function CoHTCDescBehavior.CreateRemote(const MachineName: string): DispHTCDescBehavior;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTCDescBehavior) as DispHTCDescBehavior;
end;

class function CoHTMLUrnCollection.Create: DispHTMLUrnCollection;
begin
  Result := CreateComObject(CLASS_HTMLUrnCollection) as DispHTMLUrnCollection;
end;

class function CoHTMLUrnCollection.CreateRemote(const MachineName: string): DispHTMLUrnCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLUrnCollection) as DispHTMLUrnCollection;
end;

class function CoHTMLGenericElement.Create: DispHTMLGenericElement;
begin
  Result := CreateComObject(CLASS_HTMLGenericElement) as DispHTMLGenericElement;
end;

class function CoHTMLGenericElement.CreateRemote(const MachineName: string): DispHTMLGenericElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLGenericElement) as DispHTMLGenericElement;
end;

class function CoHTMLStyleSheetRule.Create: DispHTMLStyleSheetRule;
begin
  Result := CreateComObject(CLASS_HTMLStyleSheetRule) as DispHTMLStyleSheetRule;
end;

class function CoHTMLStyleSheetRule.CreateRemote(const MachineName: string): DispHTMLStyleSheetRule;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLStyleSheetRule) as DispHTMLStyleSheetRule;
end;

class function CoHTMLStyleSheetRulesCollection.Create: DispHTMLStyleSheetRulesCollection;
begin
  Result := CreateComObject(CLASS_HTMLStyleSheetRulesCollection) as DispHTMLStyleSheetRulesCollection;
end;

class function CoHTMLStyleSheetRulesCollection.CreateRemote(const MachineName: string): DispHTMLStyleSheetRulesCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLStyleSheetRulesCollection) as DispHTMLStyleSheetRulesCollection;
end;

class function CoHTMLStyleSheetPage.Create: DispHTMLStyleSheetPage;
begin
  Result := CreateComObject(CLASS_HTMLStyleSheetPage) as DispHTMLStyleSheetPage;
end;

class function CoHTMLStyleSheetPage.CreateRemote(const MachineName: string): DispHTMLStyleSheetPage;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLStyleSheetPage) as DispHTMLStyleSheetPage;
end;

class function CoHTMLStyleSheetPagesCollection.Create: DispHTMLStyleSheetPagesCollection;
begin
  Result := CreateComObject(CLASS_HTMLStyleSheetPagesCollection) as DispHTMLStyleSheetPagesCollection;
end;

class function CoHTMLStyleSheetPagesCollection.CreateRemote(const MachineName: string): DispHTMLStyleSheetPagesCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLStyleSheetPagesCollection) as DispHTMLStyleSheetPagesCollection;
end;

class function CoHTMLStyleSheet.Create: DispHTMLStyleSheet;
begin
  Result := CreateComObject(CLASS_HTMLStyleSheet) as DispHTMLStyleSheet;
end;

class function CoHTMLStyleSheet.CreateRemote(const MachineName: string): DispHTMLStyleSheet;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLStyleSheet) as DispHTMLStyleSheet;
end;

class function CoHTMLStyleSheetsCollection.Create: DispHTMLStyleSheetsCollection;
begin
  Result := CreateComObject(CLASS_HTMLStyleSheetsCollection) as DispHTMLStyleSheetsCollection;
end;

class function CoHTMLStyleSheetsCollection.CreateRemote(const MachineName: string): DispHTMLStyleSheetsCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLStyleSheetsCollection) as DispHTMLStyleSheetsCollection;
end;

class function CoHTMLLinkElement.Create: DispHTMLLinkElement;
begin
  Result := CreateComObject(CLASS_HTMLLinkElement) as DispHTMLLinkElement;
end;

class function CoHTMLLinkElement.CreateRemote(const MachineName: string): DispHTMLLinkElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLLinkElement) as DispHTMLLinkElement;
end;

class function CoHTMLDOMRange.Create: DispHTMLDOMRange;
begin
  Result := CreateComObject(CLASS_HTMLDOMRange) as DispHTMLDOMRange;
end;

class function CoHTMLDOMRange.CreateRemote(const MachineName: string): DispHTMLDOMRange;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLDOMRange) as DispHTMLDOMRange;
end;

class function CoHTMLFormElement.Create: DispHTMLFormElement;
begin
  Result := CreateComObject(CLASS_HTMLFormElement) as DispHTMLFormElement;
end;

class function CoHTMLFormElement.CreateRemote(const MachineName: string): DispHTMLFormElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLFormElement) as DispHTMLFormElement;
end;

class function CoHTMLTextElement.Create: DispHTMLTextElement;
begin
  Result := CreateComObject(CLASS_HTMLTextElement) as DispHTMLTextElement;
end;

class function CoHTMLTextElement.CreateRemote(const MachineName: string): DispHTMLTextElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLTextElement) as DispHTMLTextElement;
end;

class function CoHTMLImg.Create: DispHTMLImg;
begin
  Result := CreateComObject(CLASS_HTMLImg) as DispHTMLImg;
end;

class function CoHTMLImg.CreateRemote(const MachineName: string): DispHTMLImg;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLImg) as DispHTMLImg;
end;

class function CoHTMLImageElementFactory.Create: IHTMLImageElementFactory;
begin
  Result := CreateComObject(CLASS_HTMLImageElementFactory) as IHTMLImageElementFactory;
end;

class function CoHTMLImageElementFactory.CreateRemote(const MachineName: string): IHTMLImageElementFactory;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLImageElementFactory) as IHTMLImageElementFactory;
end;

class function CoHTMLBody.Create: DispHTMLBody;
begin
  Result := CreateComObject(CLASS_HTMLBody) as DispHTMLBody;
end;

class function CoHTMLBody.CreateRemote(const MachineName: string): DispHTMLBody;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLBody) as DispHTMLBody;
end;

class function CoHTMLFontElement.Create: DispHTMLFontElement;
begin
  Result := CreateComObject(CLASS_HTMLFontElement) as DispHTMLFontElement;
end;

class function CoHTMLFontElement.CreateRemote(const MachineName: string): DispHTMLFontElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLFontElement) as DispHTMLFontElement;
end;

class function CoHTMLAnchorElement.Create: DispHTMLAnchorElement;
begin
  Result := CreateComObject(CLASS_HTMLAnchorElement) as DispHTMLAnchorElement;
end;

class function CoHTMLAnchorElement.CreateRemote(const MachineName: string): DispHTMLAnchorElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLAnchorElement) as DispHTMLAnchorElement;
end;

class function CoHTMLLabelElement.Create: DispHTMLLabelElement;
begin
  Result := CreateComObject(CLASS_HTMLLabelElement) as DispHTMLLabelElement;
end;

class function CoHTMLLabelElement.CreateRemote(const MachineName: string): DispHTMLLabelElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLLabelElement) as DispHTMLLabelElement;
end;

class function CoHTMLListElement.Create: DispHTMLListElement;
begin
  Result := CreateComObject(CLASS_HTMLListElement) as DispHTMLListElement;
end;

class function CoHTMLListElement.CreateRemote(const MachineName: string): DispHTMLListElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLListElement) as DispHTMLListElement;
end;

class function CoHTMLUListElement.Create: DispHTMLUListElement;
begin
  Result := CreateComObject(CLASS_HTMLUListElement) as DispHTMLUListElement;
end;

class function CoHTMLUListElement.CreateRemote(const MachineName: string): DispHTMLUListElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLUListElement) as DispHTMLUListElement;
end;

class function CoHTMLOListElement.Create: DispHTMLOListElement;
begin
  Result := CreateComObject(CLASS_HTMLOListElement) as DispHTMLOListElement;
end;

class function CoHTMLOListElement.CreateRemote(const MachineName: string): DispHTMLOListElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLOListElement) as DispHTMLOListElement;
end;

class function CoHTMLLIElement.Create: DispHTMLLIElement;
begin
  Result := CreateComObject(CLASS_HTMLLIElement) as DispHTMLLIElement;
end;

class function CoHTMLLIElement.CreateRemote(const MachineName: string): DispHTMLLIElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLLIElement) as DispHTMLLIElement;
end;

class function CoHTMLBlockElement.Create: DispHTMLBlockElement;
begin
  Result := CreateComObject(CLASS_HTMLBlockElement) as DispHTMLBlockElement;
end;

class function CoHTMLBlockElement.CreateRemote(const MachineName: string): DispHTMLBlockElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLBlockElement) as DispHTMLBlockElement;
end;

class function CoHTMLDivElement.Create: DispHTMLDivElement;
begin
  Result := CreateComObject(CLASS_HTMLDivElement) as DispHTMLDivElement;
end;

class function CoHTMLDivElement.CreateRemote(const MachineName: string): DispHTMLDivElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLDivElement) as DispHTMLDivElement;
end;

class function CoHTMLDDElement.Create: DispHTMLDDElement;
begin
  Result := CreateComObject(CLASS_HTMLDDElement) as DispHTMLDDElement;
end;

class function CoHTMLDDElement.CreateRemote(const MachineName: string): DispHTMLDDElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLDDElement) as DispHTMLDDElement;
end;

class function CoHTMLDTElement.Create: DispHTMLDTElement;
begin
  Result := CreateComObject(CLASS_HTMLDTElement) as DispHTMLDTElement;
end;

class function CoHTMLDTElement.CreateRemote(const MachineName: string): DispHTMLDTElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLDTElement) as DispHTMLDTElement;
end;

class function CoHTMLBRElement.Create: DispHTMLBRElement;
begin
  Result := CreateComObject(CLASS_HTMLBRElement) as DispHTMLBRElement;
end;

class function CoHTMLBRElement.CreateRemote(const MachineName: string): DispHTMLBRElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLBRElement) as DispHTMLBRElement;
end;

class function CoHTMLDListElement.Create: DispHTMLDListElement;
begin
  Result := CreateComObject(CLASS_HTMLDListElement) as DispHTMLDListElement;
end;

class function CoHTMLDListElement.CreateRemote(const MachineName: string): DispHTMLDListElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLDListElement) as DispHTMLDListElement;
end;

class function CoHTMLHRElement.Create: DispHTMLHRElement;
begin
  Result := CreateComObject(CLASS_HTMLHRElement) as DispHTMLHRElement;
end;

class function CoHTMLHRElement.CreateRemote(const MachineName: string): DispHTMLHRElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLHRElement) as DispHTMLHRElement;
end;

class function CoHTMLParaElement.Create: DispHTMLParaElement;
begin
  Result := CreateComObject(CLASS_HTMLParaElement) as DispHTMLParaElement;
end;

class function CoHTMLParaElement.CreateRemote(const MachineName: string): DispHTMLParaElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLParaElement) as DispHTMLParaElement;
end;

class function CoHTMLElementCollection.Create: DispHTMLElementCollection;
begin
  Result := CreateComObject(CLASS_HTMLElementCollection) as DispHTMLElementCollection;
end;

class function CoHTMLElementCollection.CreateRemote(const MachineName: string): DispHTMLElementCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLElementCollection) as DispHTMLElementCollection;
end;

class function CoHTMLHeaderElement.Create: DispHTMLHeaderElement;
begin
  Result := CreateComObject(CLASS_HTMLHeaderElement) as DispHTMLHeaderElement;
end;

class function CoHTMLHeaderElement.CreateRemote(const MachineName: string): DispHTMLHeaderElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLHeaderElement) as DispHTMLHeaderElement;
end;

class function CoHTMLSelectElement.Create: DispHTMLSelectElement;
begin
  Result := CreateComObject(CLASS_HTMLSelectElement) as DispHTMLSelectElement;
end;

class function CoHTMLSelectElement.CreateRemote(const MachineName: string): DispHTMLSelectElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLSelectElement) as DispHTMLSelectElement;
end;

class function CoHTMLWndSelectElement.Create: DispHTMLWndSelectElement;
begin
  Result := CreateComObject(CLASS_HTMLWndSelectElement) as DispHTMLWndSelectElement;
end;

class function CoHTMLWndSelectElement.CreateRemote(const MachineName: string): DispHTMLWndSelectElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLWndSelectElement) as DispHTMLWndSelectElement;
end;

class function CoHTMLOptionElement.Create: DispHTMLOptionElement;
begin
  Result := CreateComObject(CLASS_HTMLOptionElement) as DispHTMLOptionElement;
end;

class function CoHTMLOptionElement.CreateRemote(const MachineName: string): DispHTMLOptionElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLOptionElement) as DispHTMLOptionElement;
end;

class function CoHTMLOptionElementFactory.Create: IHTMLOptionElementFactory;
begin
  Result := CreateComObject(CLASS_HTMLOptionElementFactory) as IHTMLOptionElementFactory;
end;

class function CoHTMLOptionElementFactory.CreateRemote(const MachineName: string): IHTMLOptionElementFactory;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLOptionElementFactory) as IHTMLOptionElementFactory;
end;

class function CoHTMLWndOptionElement.Create: DispHTMLWndOptionElement;
begin
  Result := CreateComObject(CLASS_HTMLWndOptionElement) as DispHTMLWndOptionElement;
end;

class function CoHTMLWndOptionElement.CreateRemote(const MachineName: string): DispHTMLWndOptionElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLWndOptionElement) as DispHTMLWndOptionElement;
end;

class function CoHTMLInputElement.Create: DispHTMLInputElement;
begin
  Result := CreateComObject(CLASS_HTMLInputElement) as DispHTMLInputElement;
end;

class function CoHTMLInputElement.CreateRemote(const MachineName: string): DispHTMLInputElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLInputElement) as DispHTMLInputElement;
end;

class function CoHTMLTextAreaElement.Create: DispHTMLTextAreaElement;
begin
  Result := CreateComObject(CLASS_HTMLTextAreaElement) as DispHTMLTextAreaElement;
end;

class function CoHTMLTextAreaElement.CreateRemote(const MachineName: string): DispHTMLTextAreaElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLTextAreaElement) as DispHTMLTextAreaElement;
end;

class function CoHTMLRichtextElement.Create: DispHTMLRichtextElement;
begin
  Result := CreateComObject(CLASS_HTMLRichtextElement) as DispHTMLRichtextElement;
end;

class function CoHTMLRichtextElement.CreateRemote(const MachineName: string): DispHTMLRichtextElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLRichtextElement) as DispHTMLRichtextElement;
end;

class function CoHTMLButtonElement.Create: DispHTMLButtonElement;
begin
  Result := CreateComObject(CLASS_HTMLButtonElement) as DispHTMLButtonElement;
end;

class function CoHTMLButtonElement.CreateRemote(const MachineName: string): DispHTMLButtonElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLButtonElement) as DispHTMLButtonElement;
end;

class function CoHTMLMarqueeElement.Create: DispHTMLMarqueeElement;
begin
  Result := CreateComObject(CLASS_HTMLMarqueeElement) as DispHTMLMarqueeElement;
end;

class function CoHTMLMarqueeElement.CreateRemote(const MachineName: string): DispHTMLMarqueeElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLMarqueeElement) as DispHTMLMarqueeElement;
end;

class function CoHTMLHtmlElement.Create: DispHTMLHtmlElement;
begin
  Result := CreateComObject(CLASS_HTMLHtmlElement) as DispHTMLHtmlElement;
end;

class function CoHTMLHtmlElement.CreateRemote(const MachineName: string): DispHTMLHtmlElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLHtmlElement) as DispHTMLHtmlElement;
end;

class function CoHTMLHeadElement.Create: DispHTMLHeadElement;
begin
  Result := CreateComObject(CLASS_HTMLHeadElement) as DispHTMLHeadElement;
end;

class function CoHTMLHeadElement.CreateRemote(const MachineName: string): DispHTMLHeadElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLHeadElement) as DispHTMLHeadElement;
end;

class function CoHTMLTitleElement.Create: DispHTMLTitleElement;
begin
  Result := CreateComObject(CLASS_HTMLTitleElement) as DispHTMLTitleElement;
end;

class function CoHTMLTitleElement.CreateRemote(const MachineName: string): DispHTMLTitleElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLTitleElement) as DispHTMLTitleElement;
end;

class function CoHTMLMetaElement.Create: DispHTMLMetaElement;
begin
  Result := CreateComObject(CLASS_HTMLMetaElement) as DispHTMLMetaElement;
end;

class function CoHTMLMetaElement.CreateRemote(const MachineName: string): DispHTMLMetaElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLMetaElement) as DispHTMLMetaElement;
end;

class function CoHTMLBaseElement.Create: DispHTMLBaseElement;
begin
  Result := CreateComObject(CLASS_HTMLBaseElement) as DispHTMLBaseElement;
end;

class function CoHTMLBaseElement.CreateRemote(const MachineName: string): DispHTMLBaseElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLBaseElement) as DispHTMLBaseElement;
end;

class function CoHTMLIsIndexElement.Create: DispHTMLIsIndexElement;
begin
  Result := CreateComObject(CLASS_HTMLIsIndexElement) as DispHTMLIsIndexElement;
end;

class function CoHTMLIsIndexElement.CreateRemote(const MachineName: string): DispHTMLIsIndexElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLIsIndexElement) as DispHTMLIsIndexElement;
end;

class function CoHTMLNextIdElement.Create: DispHTMLNextIdElement;
begin
  Result := CreateComObject(CLASS_HTMLNextIdElement) as DispHTMLNextIdElement;
end;

class function CoHTMLNextIdElement.CreateRemote(const MachineName: string): DispHTMLNextIdElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLNextIdElement) as DispHTMLNextIdElement;
end;

class function CoHTMLBaseFontElement.Create: DispHTMLBaseFontElement;
begin
  Result := CreateComObject(CLASS_HTMLBaseFontElement) as DispHTMLBaseFontElement;
end;

class function CoHTMLBaseFontElement.CreateRemote(const MachineName: string): DispHTMLBaseFontElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLBaseFontElement) as DispHTMLBaseFontElement;
end;

class function CoHTMLUnknownElement.Create: DispHTMLUnknownElement;
begin
  Result := CreateComObject(CLASS_HTMLUnknownElement) as DispHTMLUnknownElement;
end;

class function CoHTMLUnknownElement.CreateRemote(const MachineName: string): DispHTMLUnknownElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLUnknownElement) as DispHTMLUnknownElement;
end;

class function CoHTMLHistory.Create: DispHTMLHistory;
begin
  Result := CreateComObject(CLASS_HTMLHistory) as DispHTMLHistory;
end;

class function CoHTMLHistory.CreateRemote(const MachineName: string): DispHTMLHistory;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLHistory) as DispHTMLHistory;
end;

class function CoCMimeTypes.Create: IHTMLMimeTypesCollection;
begin
  Result := CreateComObject(CLASS_CMimeTypes) as IHTMLMimeTypesCollection;
end;

class function CoCMimeTypes.CreateRemote(const MachineName: string): IHTMLMimeTypesCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_CMimeTypes) as IHTMLMimeTypesCollection;
end;

class function CoCPlugins.Create: DispCPlugins;
begin
  Result := CreateComObject(CLASS_CPlugins) as DispCPlugins;
end;

class function CoCPlugins.CreateRemote(const MachineName: string): DispCPlugins;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_CPlugins) as DispCPlugins;
end;

class function CoCOpsProfile.Create: IHTMLOpsProfile;
begin
  Result := CreateComObject(CLASS_COpsProfile) as IHTMLOpsProfile;
end;

class function CoCOpsProfile.CreateRemote(const MachineName: string): IHTMLOpsProfile;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_COpsProfile) as IHTMLOpsProfile;
end;

class function CoHTMLNavigator.Create: DispHTMLNavigator;
begin
  Result := CreateComObject(CLASS_HTMLNavigator) as DispHTMLNavigator;
end;

class function CoHTMLNavigator.CreateRemote(const MachineName: string): DispHTMLNavigator;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLNavigator) as DispHTMLNavigator;
end;

class function CoHTMLLocation.Create: DispHTMLLocation;
begin
  Result := CreateComObject(CLASS_HTMLLocation) as DispHTMLLocation;
end;

class function CoHTMLLocation.CreateRemote(const MachineName: string): DispHTMLLocation;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLLocation) as DispHTMLLocation;
end;

class function CoCEventObj.Create: DispCEventObj;
begin
  Result := CreateComObject(CLASS_CEventObj) as DispCEventObj;
end;

class function CoCEventObj.CreateRemote(const MachineName: string): DispCEventObj;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_CEventObj) as DispCEventObj;
end;

class function CoHTMLStyleMedia.Create: DispHTMLStyleMedia;
begin
  Result := CreateComObject(CLASS_HTMLStyleMedia) as DispHTMLStyleMedia;
end;

class function CoHTMLStyleMedia.CreateRemote(const MachineName: string): DispHTMLStyleMedia;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLStyleMedia) as DispHTMLStyleMedia;
end;

class function CoFramesCollection.Create: IHTMLFramesCollection2;
begin
  Result := CreateComObject(CLASS_FramesCollection) as IHTMLFramesCollection2;
end;

class function CoFramesCollection.CreateRemote(const MachineName: string): IHTMLFramesCollection2;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_FramesCollection) as IHTMLFramesCollection2;
end;

class function CoHTMLScreen.Create: DispHTMLScreen;
begin
  Result := CreateComObject(CLASS_HTMLScreen) as DispHTMLScreen;
end;

class function CoHTMLScreen.CreateRemote(const MachineName: string): DispHTMLScreen;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLScreen) as DispHTMLScreen;
end;

class function CoHTMLWindow2.Create: DispHTMLWindow2;
begin
  Result := CreateComObject(CLASS_HTMLWindow2) as DispHTMLWindow2;
end;

class function CoHTMLWindow2.CreateRemote(const MachineName: string): DispHTMLWindow2;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLWindow2) as DispHTMLWindow2;
end;

class function CoHTMLWindowProxy.Create: DispHTMLWindowProxy;
begin
  Result := CreateComObject(CLASS_HTMLWindowProxy) as DispHTMLWindowProxy;
end;

class function CoHTMLWindowProxy.CreateRemote(const MachineName: string): DispHTMLWindowProxy;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLWindowProxy) as DispHTMLWindowProxy;
end;

class function CoHTMLDocumentCompatibleInfo.Create: DispHTMLDocumentCompatibleInfo;
begin
  Result := CreateComObject(CLASS_HTMLDocumentCompatibleInfo) as DispHTMLDocumentCompatibleInfo;
end;

class function CoHTMLDocumentCompatibleInfo.CreateRemote(const MachineName: string): DispHTMLDocumentCompatibleInfo;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLDocumentCompatibleInfo) as DispHTMLDocumentCompatibleInfo;
end;

class function CoHTMLDocumentCompatibleInfoCollection.Create: DispHTMLDocumentCompatibleInfoCollection;
begin
  Result := CreateComObject(CLASS_HTMLDocumentCompatibleInfoCollection) as DispHTMLDocumentCompatibleInfoCollection;
end;

class function CoHTMLDocumentCompatibleInfoCollection.CreateRemote(const MachineName: string): DispHTMLDocumentCompatibleInfoCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLDocumentCompatibleInfoCollection) as DispHTMLDocumentCompatibleInfoCollection;
end;

class function CoHTMLDocument.Create: DispHTMLDocument;
begin
  Result := CreateComObject(CLASS_HTMLDocument) as DispHTMLDocument;
end;

class function CoHTMLDocument.CreateRemote(const MachineName: string): DispHTMLDocument;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLDocument) as DispHTMLDocument;
end;

procedure TScriptlet.InitControlData;
const
  CEventDispIDs: array [0..1] of DWORD = (
    $00000001, $FFFFFD9F);
  CControlData: TControlData2 = (
    ClassID:      '{AE24FDAE-03C6-11D1-8B76-0080C744F389}';
    EventIID:     '{A6D897FF-0A95-11D1-B0BA-006008166E11}';
    EventCount:   2;
    EventDispIDs: @CEventDispIDs;
    LicenseKey:   nil (*HR:$80004002*);
    Flags:        $00000000;
    Version:      500);
begin
  ControlData := @CControlData;
  TControlData2(CControlData).FirstEventOfs := UIntPtr(@@FOnonscriptletevent) - UIntPtr(Self);
end;

procedure TScriptlet.CreateControl;

  procedure DoCreate;
  begin
    FIntf := IUnknown(OleObject) as IWebBridge;
  end;

begin
  if FIntf = nil then DoCreate;
end;

function TScriptlet.GetControlInterface: IWebBridge;
begin
  CreateControl;
  Result := FIntf;
end;

function TScriptlet.Get_event: IDispatch;
begin
  Result := DefaultInterface.event;
end;

procedure TScriptlet.AboutBox;
begin
  DefaultInterface.AboutBox;
end;

class function CoHTMLEmbed.Create: DispHTMLEmbed;
begin
  Result := CreateComObject(CLASS_HTMLEmbed) as DispHTMLEmbed;
end;

class function CoHTMLEmbed.CreateRemote(const MachineName: string): DispHTMLEmbed;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLEmbed) as DispHTMLEmbed;
end;

class function CoHTMLAreasCollection.Create: DispHTMLAreasCollection;
begin
  Result := CreateComObject(CLASS_HTMLAreasCollection) as DispHTMLAreasCollection;
end;

class function CoHTMLAreasCollection.CreateRemote(const MachineName: string): DispHTMLAreasCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLAreasCollection) as DispHTMLAreasCollection;
end;

class function CoHTMLMapElement.Create: DispHTMLMapElement;
begin
  Result := CreateComObject(CLASS_HTMLMapElement) as DispHTMLMapElement;
end;

class function CoHTMLMapElement.CreateRemote(const MachineName: string): DispHTMLMapElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLMapElement) as DispHTMLMapElement;
end;

class function CoHTMLAreaElement.Create: DispHTMLAreaElement;
begin
  Result := CreateComObject(CLASS_HTMLAreaElement) as DispHTMLAreaElement;
end;

class function CoHTMLAreaElement.CreateRemote(const MachineName: string): DispHTMLAreaElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLAreaElement) as DispHTMLAreaElement;
end;

class function CoHTMLTableCaption.Create: DispHTMLTableCaption;
begin
  Result := CreateComObject(CLASS_HTMLTableCaption) as DispHTMLTableCaption;
end;

class function CoHTMLTableCaption.CreateRemote(const MachineName: string): DispHTMLTableCaption;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLTableCaption) as DispHTMLTableCaption;
end;

class function CoHTMLCommentElement.Create: DispHTMLCommentElement;
begin
  Result := CreateComObject(CLASS_HTMLCommentElement) as DispHTMLCommentElement;
end;

class function CoHTMLCommentElement.CreateRemote(const MachineName: string): DispHTMLCommentElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLCommentElement) as DispHTMLCommentElement;
end;

class function CoHTMLPhraseElement.Create: DispHTMLPhraseElement;
begin
  Result := CreateComObject(CLASS_HTMLPhraseElement) as DispHTMLPhraseElement;
end;

class function CoHTMLPhraseElement.CreateRemote(const MachineName: string): DispHTMLPhraseElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLPhraseElement) as DispHTMLPhraseElement;
end;

class function CoHTMLSpanElement.Create: DispHTMLSpanElement;
begin
  Result := CreateComObject(CLASS_HTMLSpanElement) as DispHTMLSpanElement;
end;

class function CoHTMLSpanElement.CreateRemote(const MachineName: string): DispHTMLSpanElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLSpanElement) as DispHTMLSpanElement;
end;

class function CoHTMLTable.Create: DispHTMLTable;
begin
  Result := CreateComObject(CLASS_HTMLTable) as DispHTMLTable;
end;

class function CoHTMLTable.CreateRemote(const MachineName: string): DispHTMLTable;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLTable) as DispHTMLTable;
end;

class function CoHTMLTableCol.Create: DispHTMLTableCol;
begin
  Result := CreateComObject(CLASS_HTMLTableCol) as DispHTMLTableCol;
end;

class function CoHTMLTableCol.CreateRemote(const MachineName: string): DispHTMLTableCol;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLTableCol) as DispHTMLTableCol;
end;

class function CoHTMLTableSection.Create: DispHTMLTableSection;
begin
  Result := CreateComObject(CLASS_HTMLTableSection) as DispHTMLTableSection;
end;

class function CoHTMLTableSection.CreateRemote(const MachineName: string): DispHTMLTableSection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLTableSection) as DispHTMLTableSection;
end;

class function CoHTMLTableRow.Create: DispHTMLTableRow;
begin
  Result := CreateComObject(CLASS_HTMLTableRow) as DispHTMLTableRow;
end;

class function CoHTMLTableRow.CreateRemote(const MachineName: string): DispHTMLTableRow;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLTableRow) as DispHTMLTableRow;
end;

class function CoHTMLTableCell.Create: DispHTMLTableCell;
begin
  Result := CreateComObject(CLASS_HTMLTableCell) as DispHTMLTableCell;
end;

class function CoHTMLTableCell.CreateRemote(const MachineName: string): DispHTMLTableCell;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLTableCell) as DispHTMLTableCell;
end;

class function CoHTMLScriptElement.Create: DispHTMLScriptElement;
begin
  Result := CreateComObject(CLASS_HTMLScriptElement) as DispHTMLScriptElement;
end;

class function CoHTMLScriptElement.CreateRemote(const MachineName: string): DispHTMLScriptElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLScriptElement) as DispHTMLScriptElement;
end;

class function CoHTMLNoShowElement.Create: DispHTMLNoShowElement;
begin
  Result := CreateComObject(CLASS_HTMLNoShowElement) as DispHTMLNoShowElement;
end;

class function CoHTMLNoShowElement.CreateRemote(const MachineName: string): DispHTMLNoShowElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLNoShowElement) as DispHTMLNoShowElement;
end;

class function CoHTMLObjectElement.Create: DispHTMLObjectElement;
begin
  Result := CreateComObject(CLASS_HTMLObjectElement) as DispHTMLObjectElement;
end;

class function CoHTMLObjectElement.CreateRemote(const MachineName: string): DispHTMLObjectElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLObjectElement) as DispHTMLObjectElement;
end;

class function CoHTMLParamElement.Create: DispHTMLParamElement;
begin
  Result := CreateComObject(CLASS_HTMLParamElement) as DispHTMLParamElement;
end;

class function CoHTMLParamElement.CreateRemote(const MachineName: string): DispHTMLParamElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLParamElement) as DispHTMLParamElement;
end;

class function CoHTMLFrameBase.Create: DispHTMLFrameBase;
begin
  Result := CreateComObject(CLASS_HTMLFrameBase) as DispHTMLFrameBase;
end;

class function CoHTMLFrameBase.CreateRemote(const MachineName: string): DispHTMLFrameBase;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLFrameBase) as DispHTMLFrameBase;
end;

class function CoHTMLFrameElement.Create: DispHTMLFrameElement;
begin
  Result := CreateComObject(CLASS_HTMLFrameElement) as DispHTMLFrameElement;
end;

class function CoHTMLFrameElement.CreateRemote(const MachineName: string): DispHTMLFrameElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLFrameElement) as DispHTMLFrameElement;
end;

class function CoHTMLIFrame.Create: DispHTMLIFrame;
begin
  Result := CreateComObject(CLASS_HTMLIFrame) as DispHTMLIFrame;
end;

class function CoHTMLIFrame.CreateRemote(const MachineName: string): DispHTMLIFrame;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLIFrame) as DispHTMLIFrame;
end;

class function CoHTMLDivPosition.Create: DispHTMLDivPosition;
begin
  Result := CreateComObject(CLASS_HTMLDivPosition) as DispHTMLDivPosition;
end;

class function CoHTMLDivPosition.CreateRemote(const MachineName: string): DispHTMLDivPosition;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLDivPosition) as DispHTMLDivPosition;
end;

class function CoHTMLFieldSetElement.Create: DispHTMLFieldSetElement;
begin
  Result := CreateComObject(CLASS_HTMLFieldSetElement) as DispHTMLFieldSetElement;
end;

class function CoHTMLFieldSetElement.CreateRemote(const MachineName: string): DispHTMLFieldSetElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLFieldSetElement) as DispHTMLFieldSetElement;
end;

class function CoHTMLLegendElement.Create: DispHTMLLegendElement;
begin
  Result := CreateComObject(CLASS_HTMLLegendElement) as DispHTMLLegendElement;
end;

class function CoHTMLLegendElement.CreateRemote(const MachineName: string): DispHTMLLegendElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLLegendElement) as DispHTMLLegendElement;
end;

class function CoHTMLSpanFlow.Create: DispHTMLSpanFlow;
begin
  Result := CreateComObject(CLASS_HTMLSpanFlow) as DispHTMLSpanFlow;
end;

class function CoHTMLSpanFlow.CreateRemote(const MachineName: string): DispHTMLSpanFlow;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLSpanFlow) as DispHTMLSpanFlow;
end;

class function CoHTMLFrameSetSite.Create: DispHTMLFrameSetSite;
begin
  Result := CreateComObject(CLASS_HTMLFrameSetSite) as DispHTMLFrameSetSite;
end;

class function CoHTMLFrameSetSite.CreateRemote(const MachineName: string): DispHTMLFrameSetSite;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLFrameSetSite) as DispHTMLFrameSetSite;
end;

class function CoHTMLBGsound.Create: DispHTMLBGsound;
begin
  Result := CreateComObject(CLASS_HTMLBGsound) as DispHTMLBGsound;
end;

class function CoHTMLBGsound.CreateRemote(const MachineName: string): DispHTMLBGsound;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLBGsound) as DispHTMLBGsound;
end;

class function CoHTMLStyleElement.Create: DispHTMLStyleElement;
begin
  Result := CreateComObject(CLASS_HTMLStyleElement) as DispHTMLStyleElement;
end;

class function CoHTMLStyleElement.CreateRemote(const MachineName: string): DispHTMLStyleElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLStyleElement) as DispHTMLStyleElement;
end;

class function CoHTMLStyleFontFace.Create: DispHTMLStyleFontFace;
begin
  Result := CreateComObject(CLASS_HTMLStyleFontFace) as DispHTMLStyleFontFace;
end;

class function CoHTMLStyleFontFace.CreateRemote(const MachineName: string): DispHTMLStyleFontFace;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLStyleFontFace) as DispHTMLStyleFontFace;
end;

class function CoXDomainRequest.Create: DispXDomainRequest;
begin
  Result := CreateComObject(CLASS_XDomainRequest) as DispXDomainRequest;
end;

class function CoXDomainRequest.CreateRemote(const MachineName: string): DispXDomainRequest;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_XDomainRequest) as DispXDomainRequest;
end;

class function CoXDomainRequestFactory.Create: IHTMLXDomainRequestFactory;
begin
  Result := CreateComObject(CLASS_XDomainRequestFactory) as IHTMLXDomainRequestFactory;
end;

class function CoXDomainRequestFactory.CreateRemote(const MachineName: string): IHTMLXDomainRequestFactory;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_XDomainRequestFactory) as IHTMLXDomainRequestFactory;
end;

class function CoHTMLStorage.Create: DispHTMLStorage;
begin
  Result := CreateComObject(CLASS_HTMLStorage) as DispHTMLStorage;
end;

class function CoHTMLStorage.CreateRemote(const MachineName: string): DispHTMLStorage;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLStorage) as DispHTMLStorage;
end;

class function CoDOMEvent.Create: DispDOMEvent;
begin
  Result := CreateComObject(CLASS_DOMEvent) as DispDOMEvent;
end;

class function CoDOMEvent.CreateRemote(const MachineName: string): DispDOMEvent;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_DOMEvent) as DispDOMEvent;
end;

class function CoDOMUIEvent.Create: DispDOMUIEvent;
begin
  Result := CreateComObject(CLASS_DOMUIEvent) as DispDOMUIEvent;
end;

class function CoDOMUIEvent.CreateRemote(const MachineName: string): DispDOMUIEvent;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_DOMUIEvent) as DispDOMUIEvent;
end;

class function CoDOMMouseEvent.Create: DispDOMMouseEvent;
begin
  Result := CreateComObject(CLASS_DOMMouseEvent) as DispDOMMouseEvent;
end;

class function CoDOMMouseEvent.CreateRemote(const MachineName: string): DispDOMMouseEvent;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_DOMMouseEvent) as DispDOMMouseEvent;
end;

class function CoDOMDragEvent.Create: DispDOMDragEvent;
begin
  Result := CreateComObject(CLASS_DOMDragEvent) as DispDOMDragEvent;
end;

class function CoDOMDragEvent.CreateRemote(const MachineName: string): DispDOMDragEvent;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_DOMDragEvent) as DispDOMDragEvent;
end;

class function CoDOMMouseWheelEvent.Create: DispDOMMouseWheelEvent;
begin
  Result := CreateComObject(CLASS_DOMMouseWheelEvent) as DispDOMMouseWheelEvent;
end;

class function CoDOMMouseWheelEvent.CreateRemote(const MachineName: string): DispDOMMouseWheelEvent;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_DOMMouseWheelEvent) as DispDOMMouseWheelEvent;
end;

class function CoDOMWheelEvent.Create: DispDOMWheelEvent;
begin
  Result := CreateComObject(CLASS_DOMWheelEvent) as DispDOMWheelEvent;
end;

class function CoDOMWheelEvent.CreateRemote(const MachineName: string): DispDOMWheelEvent;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_DOMWheelEvent) as DispDOMWheelEvent;
end;

class function CoDOMTextEvent.Create: DispDOMTextEvent;
begin
  Result := CreateComObject(CLASS_DOMTextEvent) as DispDOMTextEvent;
end;

class function CoDOMTextEvent.CreateRemote(const MachineName: string): DispDOMTextEvent;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_DOMTextEvent) as DispDOMTextEvent;
end;

class function CoDOMKeyboardEvent.Create: DispDOMKeyboardEvent;
begin
  Result := CreateComObject(CLASS_DOMKeyboardEvent) as DispDOMKeyboardEvent;
end;

class function CoDOMKeyboardEvent.CreateRemote(const MachineName: string): DispDOMKeyboardEvent;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_DOMKeyboardEvent) as DispDOMKeyboardEvent;
end;

class function CoDOMCompositionEvent.Create: DispDOMCompositionEvent;
begin
  Result := CreateComObject(CLASS_DOMCompositionEvent) as DispDOMCompositionEvent;
end;

class function CoDOMCompositionEvent.CreateRemote(const MachineName: string): DispDOMCompositionEvent;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_DOMCompositionEvent) as DispDOMCompositionEvent;
end;

class function CoDOMMutationEvent.Create: DispDOMMutationEvent;
begin
  Result := CreateComObject(CLASS_DOMMutationEvent) as DispDOMMutationEvent;
end;

class function CoDOMMutationEvent.CreateRemote(const MachineName: string): DispDOMMutationEvent;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_DOMMutationEvent) as DispDOMMutationEvent;
end;

class function CoDOMBeforeUnloadEvent.Create: DispDOMBeforeUnloadEvent;
begin
  Result := CreateComObject(CLASS_DOMBeforeUnloadEvent) as DispDOMBeforeUnloadEvent;
end;

class function CoDOMBeforeUnloadEvent.CreateRemote(const MachineName: string): DispDOMBeforeUnloadEvent;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_DOMBeforeUnloadEvent) as DispDOMBeforeUnloadEvent;
end;

class function CoDOMFocusEvent.Create: DispDOMFocusEvent;
begin
  Result := CreateComObject(CLASS_DOMFocusEvent) as DispDOMFocusEvent;
end;

class function CoDOMFocusEvent.CreateRemote(const MachineName: string): DispDOMFocusEvent;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_DOMFocusEvent) as DispDOMFocusEvent;
end;

class function CoDOMCustomEvent.Create: DispDOMCustomEvent;
begin
  Result := CreateComObject(CLASS_DOMCustomEvent) as DispDOMCustomEvent;
end;

class function CoDOMCustomEvent.CreateRemote(const MachineName: string): DispDOMCustomEvent;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_DOMCustomEvent) as DispDOMCustomEvent;
end;

class function CoCanvasGradient.Create: DispCanvasGradient;
begin
  Result := CreateComObject(CLASS_CanvasGradient) as DispCanvasGradient;
end;

class function CoCanvasGradient.CreateRemote(const MachineName: string): DispCanvasGradient;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_CanvasGradient) as DispCanvasGradient;
end;

class function CoCanvasPattern.Create: DispCanvasPattern;
begin
  Result := CreateComObject(CLASS_CanvasPattern) as DispCanvasPattern;
end;

class function CoCanvasPattern.CreateRemote(const MachineName: string): DispCanvasPattern;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_CanvasPattern) as DispCanvasPattern;
end;

class function CoCanvasTextMetrics.Create: DispCanvasTextMetrics;
begin
  Result := CreateComObject(CLASS_CanvasTextMetrics) as DispCanvasTextMetrics;
end;

class function CoCanvasTextMetrics.CreateRemote(const MachineName: string): DispCanvasTextMetrics;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_CanvasTextMetrics) as DispCanvasTextMetrics;
end;

class function CoCanvasImageData.Create: DispCanvasImageData;
begin
  Result := CreateComObject(CLASS_CanvasImageData) as DispCanvasImageData;
end;

class function CoCanvasImageData.CreateRemote(const MachineName: string): DispCanvasImageData;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_CanvasImageData) as DispCanvasImageData;
end;

class function CoCanvasRenderingContext2D.Create: DispCanvasRenderingContext2D;
begin
  Result := CreateComObject(CLASS_CanvasRenderingContext2D) as DispCanvasRenderingContext2D;
end;

class function CoCanvasRenderingContext2D.CreateRemote(const MachineName: string): DispCanvasRenderingContext2D;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_CanvasRenderingContext2D) as DispCanvasRenderingContext2D;
end;

class function CoHTMLCanvasElement.Create: DispHTMLCanvasElement;
begin
  Result := CreateComObject(CLASS_HTMLCanvasElement) as DispHTMLCanvasElement;
end;

class function CoHTMLCanvasElement.CreateRemote(const MachineName: string): DispHTMLCanvasElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLCanvasElement) as DispHTMLCanvasElement;
end;

class function CoDOMProgressEvent.Create: DispDOMProgressEvent;
begin
  Result := CreateComObject(CLASS_DOMProgressEvent) as DispDOMProgressEvent;
end;

class function CoDOMProgressEvent.CreateRemote(const MachineName: string): DispDOMProgressEvent;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_DOMProgressEvent) as DispDOMProgressEvent;
end;

class function CoDOMMessageEvent.Create: DispDOMMessageEvent;
begin
  Result := CreateComObject(CLASS_DOMMessageEvent) as DispDOMMessageEvent;
end;

class function CoDOMMessageEvent.CreateRemote(const MachineName: string): DispDOMMessageEvent;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_DOMMessageEvent) as DispDOMMessageEvent;
end;

class function CoDOMSiteModeEvent.Create: DispDOMSiteModeEvent;
begin
  Result := CreateComObject(CLASS_DOMSiteModeEvent) as DispDOMSiteModeEvent;
end;

class function CoDOMSiteModeEvent.CreateRemote(const MachineName: string): DispDOMSiteModeEvent;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_DOMSiteModeEvent) as DispDOMSiteModeEvent;
end;

class function CoDOMStorageEvent.Create: DispDOMStorageEvent;
begin
  Result := CreateComObject(CLASS_DOMStorageEvent) as DispDOMStorageEvent;
end;

class function CoDOMStorageEvent.CreateRemote(const MachineName: string): DispDOMStorageEvent;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_DOMStorageEvent) as DispDOMStorageEvent;
end;

class function CoXMLHttpRequestEventTarget.Create: DispXMLHttpRequestEventTarget;
begin
  Result := CreateComObject(CLASS_XMLHttpRequestEventTarget) as DispXMLHttpRequestEventTarget;
end;

class function CoXMLHttpRequestEventTarget.CreateRemote(const MachineName: string): DispXMLHttpRequestEventTarget;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_XMLHttpRequestEventTarget) as DispXMLHttpRequestEventTarget;
end;

class function CoHTMLXMLHttpRequest.Create: DispHTMLXMLHttpRequest;
begin
  Result := CreateComObject(CLASS_HTMLXMLHttpRequest) as DispHTMLXMLHttpRequest;
end;

class function CoHTMLXMLHttpRequest.CreateRemote(const MachineName: string): DispHTMLXMLHttpRequest;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLXMLHttpRequest) as DispHTMLXMLHttpRequest;
end;

class function CoHTMLXMLHttpRequestFactory.Create: IHTMLXMLHttpRequestFactory;
begin
  Result := CreateComObject(CLASS_HTMLXMLHttpRequestFactory) as IHTMLXMLHttpRequestFactory;
end;

class function CoHTMLXMLHttpRequestFactory.CreateRemote(const MachineName: string): IHTMLXMLHttpRequestFactory;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLXMLHttpRequestFactory) as IHTMLXMLHttpRequestFactory;
end;

class function CoSVGAngle.Create: ISVGAngle;
begin
  Result := CreateComObject(CLASS_SVGAngle) as ISVGAngle;
end;

class function CoSVGAngle.CreateRemote(const MachineName: string): ISVGAngle;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGAngle) as ISVGAngle;
end;

class function CoSVGAnimatedAngle.Create: ISVGAnimatedAngle;
begin
  Result := CreateComObject(CLASS_SVGAnimatedAngle) as ISVGAnimatedAngle;
end;

class function CoSVGAnimatedAngle.CreateRemote(const MachineName: string): ISVGAnimatedAngle;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGAnimatedAngle) as ISVGAnimatedAngle;
end;

class function CoSVGAnimatedTransformList.Create: ISVGAnimatedTransformList;
begin
  Result := CreateComObject(CLASS_SVGAnimatedTransformList) as ISVGAnimatedTransformList;
end;

class function CoSVGAnimatedTransformList.CreateRemote(const MachineName: string): ISVGAnimatedTransformList;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGAnimatedTransformList) as ISVGAnimatedTransformList;
end;

class function CoSVGAnimatedBoolean.Create: ISVGAnimatedBoolean;
begin
  Result := CreateComObject(CLASS_SVGAnimatedBoolean) as ISVGAnimatedBoolean;
end;

class function CoSVGAnimatedBoolean.CreateRemote(const MachineName: string): ISVGAnimatedBoolean;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGAnimatedBoolean) as ISVGAnimatedBoolean;
end;

class function CoSVGAnimatedEnumeration.Create: ISVGAnimatedEnumeration;
begin
  Result := CreateComObject(CLASS_SVGAnimatedEnumeration) as ISVGAnimatedEnumeration;
end;

class function CoSVGAnimatedEnumeration.CreateRemote(const MachineName: string): ISVGAnimatedEnumeration;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGAnimatedEnumeration) as ISVGAnimatedEnumeration;
end;

class function CoSVGAnimatedInteger.Create: ISVGAnimatedInteger;
begin
  Result := CreateComObject(CLASS_SVGAnimatedInteger) as ISVGAnimatedInteger;
end;

class function CoSVGAnimatedInteger.CreateRemote(const MachineName: string): ISVGAnimatedInteger;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGAnimatedInteger) as ISVGAnimatedInteger;
end;

class function CoSVGAnimatedLength.Create: ISVGAnimatedLength;
begin
  Result := CreateComObject(CLASS_SVGAnimatedLength) as ISVGAnimatedLength;
end;

class function CoSVGAnimatedLength.CreateRemote(const MachineName: string): ISVGAnimatedLength;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGAnimatedLength) as ISVGAnimatedLength;
end;

class function CoSVGAnimatedLengthList.Create: ISVGAnimatedLengthList;
begin
  Result := CreateComObject(CLASS_SVGAnimatedLengthList) as ISVGAnimatedLengthList;
end;

class function CoSVGAnimatedLengthList.CreateRemote(const MachineName: string): ISVGAnimatedLengthList;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGAnimatedLengthList) as ISVGAnimatedLengthList;
end;

class function CoSVGAnimatedNumber.Create: ISVGAnimatedNumber;
begin
  Result := CreateComObject(CLASS_SVGAnimatedNumber) as ISVGAnimatedNumber;
end;

class function CoSVGAnimatedNumber.CreateRemote(const MachineName: string): ISVGAnimatedNumber;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGAnimatedNumber) as ISVGAnimatedNumber;
end;

class function CoSVGAnimatedNumberList.Create: ISVGAnimatedNumberList;
begin
  Result := CreateComObject(CLASS_SVGAnimatedNumberList) as ISVGAnimatedNumberList;
end;

class function CoSVGAnimatedNumberList.CreateRemote(const MachineName: string): ISVGAnimatedNumberList;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGAnimatedNumberList) as ISVGAnimatedNumberList;
end;

class function CoSVGAnimatedRect.Create: ISVGAnimatedRect;
begin
  Result := CreateComObject(CLASS_SVGAnimatedRect) as ISVGAnimatedRect;
end;

class function CoSVGAnimatedRect.CreateRemote(const MachineName: string): ISVGAnimatedRect;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGAnimatedRect) as ISVGAnimatedRect;
end;

class function CoSVGAnimatedString.Create: ISVGAnimatedString;
begin
  Result := CreateComObject(CLASS_SVGAnimatedString) as ISVGAnimatedString;
end;

class function CoSVGAnimatedString.CreateRemote(const MachineName: string): ISVGAnimatedString;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGAnimatedString) as ISVGAnimatedString;
end;

class function CoSVGClipPathElement.Create: DispSVGClipPathElement;
begin
  Result := CreateComObject(CLASS_SVGClipPathElement) as DispSVGClipPathElement;
end;

class function CoSVGClipPathElement.CreateRemote(const MachineName: string): DispSVGClipPathElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGClipPathElement) as DispSVGClipPathElement;
end;

class function CoSVGElement.Create: DispSVGElement;
begin
  Result := CreateComObject(CLASS_SVGElement) as DispSVGElement;
end;

class function CoSVGElement.CreateRemote(const MachineName: string): DispSVGElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGElement) as DispSVGElement;
end;

class function CoSVGLength.Create: ISVGLength;
begin
  Result := CreateComObject(CLASS_SVGLength) as ISVGLength;
end;

class function CoSVGLength.CreateRemote(const MachineName: string): ISVGLength;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGLength) as ISVGLength;
end;

class function CoSVGLengthList.Create: ISVGLengthList;
begin
  Result := CreateComObject(CLASS_SVGLengthList) as ISVGLengthList;
end;

class function CoSVGLengthList.CreateRemote(const MachineName: string): ISVGLengthList;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGLengthList) as ISVGLengthList;
end;

class function CoSVGMatrix.Create: ISVGMatrix;
begin
  Result := CreateComObject(CLASS_SVGMatrix) as ISVGMatrix;
end;

class function CoSVGMatrix.CreateRemote(const MachineName: string): ISVGMatrix;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGMatrix) as ISVGMatrix;
end;

class function CoSVGNumber.Create: ISVGNumber;
begin
  Result := CreateComObject(CLASS_SVGNumber) as ISVGNumber;
end;

class function CoSVGNumber.CreateRemote(const MachineName: string): ISVGNumber;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGNumber) as ISVGNumber;
end;

class function CoSVGNumberList.Create: ISVGNumberList;
begin
  Result := CreateComObject(CLASS_SVGNumberList) as ISVGNumberList;
end;

class function CoSVGNumberList.CreateRemote(const MachineName: string): ISVGNumberList;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGNumberList) as ISVGNumberList;
end;

class function CoSVGPatternElement.Create: DispSVGPatternElement;
begin
  Result := CreateComObject(CLASS_SVGPatternElement) as DispSVGPatternElement;
end;

class function CoSVGPatternElement.CreateRemote(const MachineName: string): DispSVGPatternElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGPatternElement) as DispSVGPatternElement;
end;

class function CoSVGPathSeg.Create: ISVGPathSeg;
begin
  Result := CreateComObject(CLASS_SVGPathSeg) as ISVGPathSeg;
end;

class function CoSVGPathSeg.CreateRemote(const MachineName: string): ISVGPathSeg;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGPathSeg) as ISVGPathSeg;
end;

class function CoSVGPathSegArcAbs.Create: DispSVGPathSegArcAbs;
begin
  Result := CreateComObject(CLASS_SVGPathSegArcAbs) as DispSVGPathSegArcAbs;
end;

class function CoSVGPathSegArcAbs.CreateRemote(const MachineName: string): DispSVGPathSegArcAbs;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGPathSegArcAbs) as DispSVGPathSegArcAbs;
end;

class function CoSVGPathSegArcRel.Create: DispSVGPathSegArcRel;
begin
  Result := CreateComObject(CLASS_SVGPathSegArcRel) as DispSVGPathSegArcRel;
end;

class function CoSVGPathSegArcRel.CreateRemote(const MachineName: string): DispSVGPathSegArcRel;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGPathSegArcRel) as DispSVGPathSegArcRel;
end;

class function CoSVGPathSegClosePath.Create: DispSVGPathSegClosePath;
begin
  Result := CreateComObject(CLASS_SVGPathSegClosePath) as DispSVGPathSegClosePath;
end;

class function CoSVGPathSegClosePath.CreateRemote(const MachineName: string): DispSVGPathSegClosePath;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGPathSegClosePath) as DispSVGPathSegClosePath;
end;

class function CoSVGPathSegMovetoAbs.Create: DispSVGPathSegMovetoAbs;
begin
  Result := CreateComObject(CLASS_SVGPathSegMovetoAbs) as DispSVGPathSegMovetoAbs;
end;

class function CoSVGPathSegMovetoAbs.CreateRemote(const MachineName: string): DispSVGPathSegMovetoAbs;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGPathSegMovetoAbs) as DispSVGPathSegMovetoAbs;
end;

class function CoSVGPathSegMovetoRel.Create: DispSVGPathSegMovetoRel;
begin
  Result := CreateComObject(CLASS_SVGPathSegMovetoRel) as DispSVGPathSegMovetoRel;
end;

class function CoSVGPathSegMovetoRel.CreateRemote(const MachineName: string): DispSVGPathSegMovetoRel;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGPathSegMovetoRel) as DispSVGPathSegMovetoRel;
end;

class function CoSVGPathSegLinetoAbs.Create: DispSVGPathSegLinetoAbs;
begin
  Result := CreateComObject(CLASS_SVGPathSegLinetoAbs) as DispSVGPathSegLinetoAbs;
end;

class function CoSVGPathSegLinetoAbs.CreateRemote(const MachineName: string): DispSVGPathSegLinetoAbs;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGPathSegLinetoAbs) as DispSVGPathSegLinetoAbs;
end;

class function CoSVGPathSegLinetoRel.Create: DispSVGPathSegLinetoRel;
begin
  Result := CreateComObject(CLASS_SVGPathSegLinetoRel) as DispSVGPathSegLinetoRel;
end;

class function CoSVGPathSegLinetoRel.CreateRemote(const MachineName: string): DispSVGPathSegLinetoRel;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGPathSegLinetoRel) as DispSVGPathSegLinetoRel;
end;

class function CoSVGPathSegCurvetoCubicAbs.Create: DispSVGPathSegCurvetoCubicAbs;
begin
  Result := CreateComObject(CLASS_SVGPathSegCurvetoCubicAbs) as DispSVGPathSegCurvetoCubicAbs;
end;

class function CoSVGPathSegCurvetoCubicAbs.CreateRemote(const MachineName: string): DispSVGPathSegCurvetoCubicAbs;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGPathSegCurvetoCubicAbs) as DispSVGPathSegCurvetoCubicAbs;
end;

class function CoSVGPathSegCurvetoCubicRel.Create: DispSVGPathSegCurvetoCubicRel;
begin
  Result := CreateComObject(CLASS_SVGPathSegCurvetoCubicRel) as DispSVGPathSegCurvetoCubicRel;
end;

class function CoSVGPathSegCurvetoCubicRel.CreateRemote(const MachineName: string): DispSVGPathSegCurvetoCubicRel;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGPathSegCurvetoCubicRel) as DispSVGPathSegCurvetoCubicRel;
end;

class function CoSVGPathSegCurvetoCubicSmoothAbs.Create: DispSVGPathSegCurvetoCubicSmoothAbs;
begin
  Result := CreateComObject(CLASS_SVGPathSegCurvetoCubicSmoothAbs) as DispSVGPathSegCurvetoCubicSmoothAbs;
end;

class function CoSVGPathSegCurvetoCubicSmoothAbs.CreateRemote(const MachineName: string): DispSVGPathSegCurvetoCubicSmoothAbs;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGPathSegCurvetoCubicSmoothAbs) as DispSVGPathSegCurvetoCubicSmoothAbs;
end;

class function CoSVGPathSegCurvetoCubicSmoothRel.Create: DispSVGPathSegCurvetoCubicSmoothRel;
begin
  Result := CreateComObject(CLASS_SVGPathSegCurvetoCubicSmoothRel) as DispSVGPathSegCurvetoCubicSmoothRel;
end;

class function CoSVGPathSegCurvetoCubicSmoothRel.CreateRemote(const MachineName: string): DispSVGPathSegCurvetoCubicSmoothRel;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGPathSegCurvetoCubicSmoothRel) as DispSVGPathSegCurvetoCubicSmoothRel;
end;

class function CoSVGPathSegCurvetoQuadraticAbs.Create: DispSVGPathSegCurvetoQuadraticAbs;
begin
  Result := CreateComObject(CLASS_SVGPathSegCurvetoQuadraticAbs) as DispSVGPathSegCurvetoQuadraticAbs;
end;

class function CoSVGPathSegCurvetoQuadraticAbs.CreateRemote(const MachineName: string): DispSVGPathSegCurvetoQuadraticAbs;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGPathSegCurvetoQuadraticAbs) as DispSVGPathSegCurvetoQuadraticAbs;
end;

class function CoSVGPathSegCurvetoQuadraticRel.Create: DispSVGPathSegCurvetoQuadraticRel;
begin
  Result := CreateComObject(CLASS_SVGPathSegCurvetoQuadraticRel) as DispSVGPathSegCurvetoQuadraticRel;
end;

class function CoSVGPathSegCurvetoQuadraticRel.CreateRemote(const MachineName: string): DispSVGPathSegCurvetoQuadraticRel;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGPathSegCurvetoQuadraticRel) as DispSVGPathSegCurvetoQuadraticRel;
end;

class function CoSVGPathSegCurvetoQuadraticSmoothAbs.Create: DispSVGPathSegCurvetoQuadraticSmoothAbs;
begin
  Result := CreateComObject(CLASS_SVGPathSegCurvetoQuadraticSmoothAbs) as DispSVGPathSegCurvetoQuadraticSmoothAbs;
end;

class function CoSVGPathSegCurvetoQuadraticSmoothAbs.CreateRemote(const MachineName: string): DispSVGPathSegCurvetoQuadraticSmoothAbs;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGPathSegCurvetoQuadraticSmoothAbs) as DispSVGPathSegCurvetoQuadraticSmoothAbs;
end;

class function CoSVGPathSegCurvetoQuadraticSmoothRel.Create: DispSVGPathSegCurvetoQuadraticSmoothRel;
begin
  Result := CreateComObject(CLASS_SVGPathSegCurvetoQuadraticSmoothRel) as DispSVGPathSegCurvetoQuadraticSmoothRel;
end;

class function CoSVGPathSegCurvetoQuadraticSmoothRel.CreateRemote(const MachineName: string): DispSVGPathSegCurvetoQuadraticSmoothRel;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGPathSegCurvetoQuadraticSmoothRel) as DispSVGPathSegCurvetoQuadraticSmoothRel;
end;

class function CoSVGPathSegLinetoHorizontalAbs.Create: DispSVGPathSegLinetoHorizontalAbs;
begin
  Result := CreateComObject(CLASS_SVGPathSegLinetoHorizontalAbs) as DispSVGPathSegLinetoHorizontalAbs;
end;

class function CoSVGPathSegLinetoHorizontalAbs.CreateRemote(const MachineName: string): DispSVGPathSegLinetoHorizontalAbs;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGPathSegLinetoHorizontalAbs) as DispSVGPathSegLinetoHorizontalAbs;
end;

class function CoSVGPathSegLinetoHorizontalRel.Create: DispSVGPathSegLinetoHorizontalRel;
begin
  Result := CreateComObject(CLASS_SVGPathSegLinetoHorizontalRel) as DispSVGPathSegLinetoHorizontalRel;
end;

class function CoSVGPathSegLinetoHorizontalRel.CreateRemote(const MachineName: string): DispSVGPathSegLinetoHorizontalRel;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGPathSegLinetoHorizontalRel) as DispSVGPathSegLinetoHorizontalRel;
end;

class function CoSVGPathSegLinetoVerticalAbs.Create: DispSVGPathSegLinetoVerticalAbs;
begin
  Result := CreateComObject(CLASS_SVGPathSegLinetoVerticalAbs) as DispSVGPathSegLinetoVerticalAbs;
end;

class function CoSVGPathSegLinetoVerticalAbs.CreateRemote(const MachineName: string): DispSVGPathSegLinetoVerticalAbs;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGPathSegLinetoVerticalAbs) as DispSVGPathSegLinetoVerticalAbs;
end;

class function CoSVGPathSegLinetoVerticalRel.Create: DispSVGPathSegLinetoVerticalRel;
begin
  Result := CreateComObject(CLASS_SVGPathSegLinetoVerticalRel) as DispSVGPathSegLinetoVerticalRel;
end;

class function CoSVGPathSegLinetoVerticalRel.CreateRemote(const MachineName: string): DispSVGPathSegLinetoVerticalRel;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGPathSegLinetoVerticalRel) as DispSVGPathSegLinetoVerticalRel;
end;

class function CoSVGPathSegList.Create: ISVGPathSegList;
begin
  Result := CreateComObject(CLASS_SVGPathSegList) as ISVGPathSegList;
end;

class function CoSVGPathSegList.CreateRemote(const MachineName: string): ISVGPathSegList;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGPathSegList) as ISVGPathSegList;
end;

class function CoSVGPoint.Create: ISVGPoint;
begin
  Result := CreateComObject(CLASS_SVGPoint) as ISVGPoint;
end;

class function CoSVGPoint.CreateRemote(const MachineName: string): ISVGPoint;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGPoint) as ISVGPoint;
end;

class function CoSVGPointList.Create: ISVGPointList;
begin
  Result := CreateComObject(CLASS_SVGPointList) as ISVGPointList;
end;

class function CoSVGPointList.CreateRemote(const MachineName: string): ISVGPointList;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGPointList) as ISVGPointList;
end;

class function CoSVGRect.Create: ISVGRect;
begin
  Result := CreateComObject(CLASS_SVGRect) as ISVGRect;
end;

class function CoSVGRect.CreateRemote(const MachineName: string): ISVGRect;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGRect) as ISVGRect;
end;

class function CoSVGStringList.Create: ISVGStringList;
begin
  Result := CreateComObject(CLASS_SVGStringList) as ISVGStringList;
end;

class function CoSVGStringList.CreateRemote(const MachineName: string): ISVGStringList;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGStringList) as ISVGStringList;
end;

class function CoSVGTransform.Create: ISVGTransform;
begin
  Result := CreateComObject(CLASS_SVGTransform) as ISVGTransform;
end;

class function CoSVGTransform.CreateRemote(const MachineName: string): ISVGTransform;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGTransform) as ISVGTransform;
end;

class function CoSVGSVGElement.Create: DispSVGSVGElement;
begin
  Result := CreateComObject(CLASS_SVGSVGElement) as DispSVGSVGElement;
end;

class function CoSVGSVGElement.CreateRemote(const MachineName: string): DispSVGSVGElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGSVGElement) as DispSVGSVGElement;
end;

class function CoSVGUseElement.Create: DispSVGUseElement;
begin
  Result := CreateComObject(CLASS_SVGUseElement) as DispSVGUseElement;
end;

class function CoSVGUseElement.CreateRemote(const MachineName: string): DispSVGUseElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGUseElement) as DispSVGUseElement;
end;

class function CoHTMLStyleSheetRulesAppliedCollection.Create: DispHTMLStyleSheetRulesAppliedCollection;
begin
  Result := CreateComObject(CLASS_HTMLStyleSheetRulesAppliedCollection) as DispHTMLStyleSheetRulesAppliedCollection;
end;

class function CoHTMLStyleSheetRulesAppliedCollection.CreateRemote(const MachineName: string): DispHTMLStyleSheetRulesAppliedCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLStyleSheetRulesAppliedCollection) as DispHTMLStyleSheetRulesAppliedCollection;
end;

class function CoRulesApplied.Create: DispRulesApplied;
begin
  Result := CreateComObject(CLASS_RulesApplied) as DispRulesApplied;
end;

class function CoRulesApplied.CreateRemote(const MachineName: string): DispRulesApplied;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RulesApplied) as DispRulesApplied;
end;

class function CoRulesAppliedCollection.Create: DispRulesAppliedCollection;
begin
  Result := CreateComObject(CLASS_RulesAppliedCollection) as DispRulesAppliedCollection;
end;

class function CoRulesAppliedCollection.CreateRemote(const MachineName: string): DispRulesAppliedCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RulesAppliedCollection) as DispRulesAppliedCollection;
end;

class function CoHTMLW3CComputedStyle.Create: DispHTMLW3CComputedStyle;
begin
  Result := CreateComObject(CLASS_HTMLW3CComputedStyle) as DispHTMLW3CComputedStyle;
end;

class function CoHTMLW3CComputedStyle.CreateRemote(const MachineName: string): DispHTMLW3CComputedStyle;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLW3CComputedStyle) as DispHTMLW3CComputedStyle;
end;

class function CoSVGTransformList.Create: ISVGTransformList;
begin
  Result := CreateComObject(CLASS_SVGTransformList) as ISVGTransformList;
end;

class function CoSVGTransformList.CreateRemote(const MachineName: string): ISVGTransformList;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGTransformList) as ISVGTransformList;
end;

class function CoSVGCircleElement.Create: DispSVGCircleElement;
begin
  Result := CreateComObject(CLASS_SVGCircleElement) as DispSVGCircleElement;
end;

class function CoSVGCircleElement.CreateRemote(const MachineName: string): DispSVGCircleElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGCircleElement) as DispSVGCircleElement;
end;

class function CoSVGEllipseElement.Create: DispSVGEllipseElement;
begin
  Result := CreateComObject(CLASS_SVGEllipseElement) as DispSVGEllipseElement;
end;

class function CoSVGEllipseElement.CreateRemote(const MachineName: string): DispSVGEllipseElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGEllipseElement) as DispSVGEllipseElement;
end;

class function CoSVGLineElement.Create: DispSVGLineElement;
begin
  Result := CreateComObject(CLASS_SVGLineElement) as DispSVGLineElement;
end;

class function CoSVGLineElement.CreateRemote(const MachineName: string): DispSVGLineElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGLineElement) as DispSVGLineElement;
end;

class function CoSVGRectElement.Create: DispSVGRectElement;
begin
  Result := CreateComObject(CLASS_SVGRectElement) as DispSVGRectElement;
end;

class function CoSVGRectElement.CreateRemote(const MachineName: string): DispSVGRectElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGRectElement) as DispSVGRectElement;
end;

class function CoSVGPolygonElement.Create: DispSVGPolygonElement;
begin
  Result := CreateComObject(CLASS_SVGPolygonElement) as DispSVGPolygonElement;
end;

class function CoSVGPolygonElement.CreateRemote(const MachineName: string): DispSVGPolygonElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGPolygonElement) as DispSVGPolygonElement;
end;

class function CoSVGPolylineElement.Create: DispSVGPolylineElement;
begin
  Result := CreateComObject(CLASS_SVGPolylineElement) as DispSVGPolylineElement;
end;

class function CoSVGPolylineElement.CreateRemote(const MachineName: string): DispSVGPolylineElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGPolylineElement) as DispSVGPolylineElement;
end;

class function CoSVGGElement.Create: DispSVGGElement;
begin
  Result := CreateComObject(CLASS_SVGGElement) as DispSVGGElement;
end;

class function CoSVGGElement.CreateRemote(const MachineName: string): DispSVGGElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGGElement) as DispSVGGElement;
end;

class function CoSVGSymbolElement.Create: DispSVGSymbolElement;
begin
  Result := CreateComObject(CLASS_SVGSymbolElement) as DispSVGSymbolElement;
end;

class function CoSVGSymbolElement.CreateRemote(const MachineName: string): DispSVGSymbolElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGSymbolElement) as DispSVGSymbolElement;
end;

class function CoSVGDefsElement.Create: DispSVGDefsElement;
begin
  Result := CreateComObject(CLASS_SVGDefsElement) as DispSVGDefsElement;
end;

class function CoSVGDefsElement.CreateRemote(const MachineName: string): DispSVGDefsElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGDefsElement) as DispSVGDefsElement;
end;

class function CoSVGPathElement.Create: DispSVGPathElement;
begin
  Result := CreateComObject(CLASS_SVGPathElement) as DispSVGPathElement;
end;

class function CoSVGPathElement.CreateRemote(const MachineName: string): DispSVGPathElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGPathElement) as DispSVGPathElement;
end;

class function CoSVGPreserveAspectRatio.Create: ISVGPreserveAspectRatio;
begin
  Result := CreateComObject(CLASS_SVGPreserveAspectRatio) as ISVGPreserveAspectRatio;
end;

class function CoSVGPreserveAspectRatio.CreateRemote(const MachineName: string): ISVGPreserveAspectRatio;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGPreserveAspectRatio) as ISVGPreserveAspectRatio;
end;

class function CoSVGTextElement.Create: DispSVGTextElement;
begin
  Result := CreateComObject(CLASS_SVGTextElement) as DispSVGTextElement;
end;

class function CoSVGTextElement.CreateRemote(const MachineName: string): DispSVGTextElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGTextElement) as DispSVGTextElement;
end;

class function CoSVGAnimatedPreserveAspectRatio.Create: ISVGAnimatedPreserveAspectRatio;
begin
  Result := CreateComObject(CLASS_SVGAnimatedPreserveAspectRatio) as ISVGAnimatedPreserveAspectRatio;
end;

class function CoSVGAnimatedPreserveAspectRatio.CreateRemote(const MachineName: string): ISVGAnimatedPreserveAspectRatio;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGAnimatedPreserveAspectRatio) as ISVGAnimatedPreserveAspectRatio;
end;

class function CoSVGImageElement.Create: DispSVGImageElement;
begin
  Result := CreateComObject(CLASS_SVGImageElement) as DispSVGImageElement;
end;

class function CoSVGImageElement.CreateRemote(const MachineName: string): DispSVGImageElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGImageElement) as DispSVGImageElement;
end;

class function CoSVGStopElement.Create: DispSVGStopElement;
begin
  Result := CreateComObject(CLASS_SVGStopElement) as DispSVGStopElement;
end;

class function CoSVGStopElement.CreateRemote(const MachineName: string): DispSVGStopElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGStopElement) as DispSVGStopElement;
end;

class function CoSVGGradientElement.Create: DispSVGGradientElement;
begin
  Result := CreateComObject(CLASS_SVGGradientElement) as DispSVGGradientElement;
end;

class function CoSVGGradientElement.CreateRemote(const MachineName: string): DispSVGGradientElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGGradientElement) as DispSVGGradientElement;
end;

class function CoSVGLinearGradientElement.Create: DispSVGLinearGradientElement;
begin
  Result := CreateComObject(CLASS_SVGLinearGradientElement) as DispSVGLinearGradientElement;
end;

class function CoSVGLinearGradientElement.CreateRemote(const MachineName: string): DispSVGLinearGradientElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGLinearGradientElement) as DispSVGLinearGradientElement;
end;

class function CoSVGRadialGradientElement.Create: DispSVGRadialGradientElement;
begin
  Result := CreateComObject(CLASS_SVGRadialGradientElement) as DispSVGRadialGradientElement;
end;

class function CoSVGRadialGradientElement.CreateRemote(const MachineName: string): DispSVGRadialGradientElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGRadialGradientElement) as DispSVGRadialGradientElement;
end;

class function CoSVGMaskElement.Create: DispSVGMaskElement;
begin
  Result := CreateComObject(CLASS_SVGMaskElement) as DispSVGMaskElement;
end;

class function CoSVGMaskElement.CreateRemote(const MachineName: string): DispSVGMaskElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGMaskElement) as DispSVGMaskElement;
end;

class function CoSVGMarkerElement.Create: DispSVGMarkerElement;
begin
  Result := CreateComObject(CLASS_SVGMarkerElement) as DispSVGMarkerElement;
end;

class function CoSVGMarkerElement.CreateRemote(const MachineName: string): DispSVGMarkerElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGMarkerElement) as DispSVGMarkerElement;
end;

class function CoSVGZoomEvent.Create: DispSVGZoomEvent;
begin
  Result := CreateComObject(CLASS_SVGZoomEvent) as DispSVGZoomEvent;
end;

class function CoSVGZoomEvent.CreateRemote(const MachineName: string): DispSVGZoomEvent;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGZoomEvent) as DispSVGZoomEvent;
end;

class function CoSVGAElement.Create: DispSVGAElement;
begin
  Result := CreateComObject(CLASS_SVGAElement) as DispSVGAElement;
end;

class function CoSVGAElement.CreateRemote(const MachineName: string): DispSVGAElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGAElement) as DispSVGAElement;
end;

class function CoSVGViewElement.Create: DispSVGViewElement;
begin
  Result := CreateComObject(CLASS_SVGViewElement) as DispSVGViewElement;
end;

class function CoSVGViewElement.CreateRemote(const MachineName: string): DispSVGViewElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGViewElement) as DispSVGViewElement;
end;

class function CoHTMLMediaError.Create: DispHTMLMediaError;
begin
  Result := CreateComObject(CLASS_HTMLMediaError) as DispHTMLMediaError;
end;

class function CoHTMLMediaError.CreateRemote(const MachineName: string): DispHTMLMediaError;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLMediaError) as DispHTMLMediaError;
end;

class function CoHTMLTimeRanges.Create: DispHTMLTimeRanges;
begin
  Result := CreateComObject(CLASS_HTMLTimeRanges) as DispHTMLTimeRanges;
end;

class function CoHTMLTimeRanges.CreateRemote(const MachineName: string): DispHTMLTimeRanges;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLTimeRanges) as DispHTMLTimeRanges;
end;

class function CoHTMLMediaElement.Create: DispHTMLMediaElement;
begin
  Result := CreateComObject(CLASS_HTMLMediaElement) as DispHTMLMediaElement;
end;

class function CoHTMLMediaElement.CreateRemote(const MachineName: string): DispHTMLMediaElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLMediaElement) as DispHTMLMediaElement;
end;

class function CoHTMLSourceElement.Create: DispHTMLSourceElement;
begin
  Result := CreateComObject(CLASS_HTMLSourceElement) as DispHTMLSourceElement;
end;

class function CoHTMLSourceElement.CreateRemote(const MachineName: string): DispHTMLSourceElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLSourceElement) as DispHTMLSourceElement;
end;

class function CoHTMLAudioElement.Create: DispHTMLAudioElement;
begin
  Result := CreateComObject(CLASS_HTMLAudioElement) as DispHTMLAudioElement;
end;

class function CoHTMLAudioElement.CreateRemote(const MachineName: string): DispHTMLAudioElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLAudioElement) as DispHTMLAudioElement;
end;

class function CoHTMLAudioElementFactory.Create: IHTMLAudioElementFactory;
begin
  Result := CreateComObject(CLASS_HTMLAudioElementFactory) as IHTMLAudioElementFactory;
end;

class function CoHTMLAudioElementFactory.CreateRemote(const MachineName: string): IHTMLAudioElementFactory;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLAudioElementFactory) as IHTMLAudioElementFactory;
end;

class function CoHTMLVideoElement.Create: DispHTMLVideoElement;
begin
  Result := CreateComObject(CLASS_HTMLVideoElement) as DispHTMLVideoElement;
end;

class function CoHTMLVideoElement.CreateRemote(const MachineName: string): DispHTMLVideoElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLVideoElement) as DispHTMLVideoElement;
end;

class function CoSVGSwitchElement.Create: DispSVGSwitchElement;
begin
  Result := CreateComObject(CLASS_SVGSwitchElement) as DispSVGSwitchElement;
end;

class function CoSVGSwitchElement.CreateRemote(const MachineName: string): DispSVGSwitchElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGSwitchElement) as DispSVGSwitchElement;
end;

class function CoSVGDescElement.Create: DispSVGDescElement;
begin
  Result := CreateComObject(CLASS_SVGDescElement) as DispSVGDescElement;
end;

class function CoSVGDescElement.CreateRemote(const MachineName: string): DispSVGDescElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGDescElement) as DispSVGDescElement;
end;

class function CoSVGTitleElement.Create: DispSVGTitleElement;
begin
  Result := CreateComObject(CLASS_SVGTitleElement) as DispSVGTitleElement;
end;

class function CoSVGTitleElement.CreateRemote(const MachineName: string): DispSVGTitleElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGTitleElement) as DispSVGTitleElement;
end;

class function CoSVGMetadataElement.Create: DispSVGMetadataElement;
begin
  Result := CreateComObject(CLASS_SVGMetadataElement) as DispSVGMetadataElement;
end;

class function CoSVGMetadataElement.CreateRemote(const MachineName: string): DispSVGMetadataElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGMetadataElement) as DispSVGMetadataElement;
end;

class function CoSVGElementInstance.Create: DispSVGElementInstance;
begin
  Result := CreateComObject(CLASS_SVGElementInstance) as DispSVGElementInstance;
end;

class function CoSVGElementInstance.CreateRemote(const MachineName: string): DispSVGElementInstance;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGElementInstance) as DispSVGElementInstance;
end;

class function CoSVGElementInstanceList.Create: DispSVGElementInstanceList;
begin
  Result := CreateComObject(CLASS_SVGElementInstanceList) as DispSVGElementInstanceList;
end;

class function CoSVGElementInstanceList.CreateRemote(const MachineName: string): DispSVGElementInstanceList;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGElementInstanceList) as DispSVGElementInstanceList;
end;

class function CoDOMException.Create: DispDOMException;
begin
  Result := CreateComObject(CLASS_DOMException) as DispDOMException;
end;

class function CoDOMException.CreateRemote(const MachineName: string): DispDOMException;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_DOMException) as DispDOMException;
end;

class function CoRangeException.Create: DispRangeException;
begin
  Result := CreateComObject(CLASS_RangeException) as DispRangeException;
end;

class function CoRangeException.CreateRemote(const MachineName: string): DispRangeException;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_RangeException) as DispRangeException;
end;

class function CoSVGException.Create: DispSVGException;
begin
  Result := CreateComObject(CLASS_SVGException) as DispSVGException;
end;

class function CoSVGException.CreateRemote(const MachineName: string): DispSVGException;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGException) as DispSVGException;
end;

class function CoEventException.Create: DispEventException;
begin
  Result := CreateComObject(CLASS_EventException) as DispEventException;
end;

class function CoEventException.CreateRemote(const MachineName: string): DispEventException;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_EventException) as DispEventException;
end;

class function CoSVGScriptElement.Create: DispSVGScriptElement;
begin
  Result := CreateComObject(CLASS_SVGScriptElement) as DispSVGScriptElement;
end;

class function CoSVGScriptElement.CreateRemote(const MachineName: string): DispSVGScriptElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGScriptElement) as DispSVGScriptElement;
end;

class function CoSVGStyleElement.Create: DispSVGStyleElement;
begin
  Result := CreateComObject(CLASS_SVGStyleElement) as DispSVGStyleElement;
end;

class function CoSVGStyleElement.CreateRemote(const MachineName: string): DispSVGStyleElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGStyleElement) as DispSVGStyleElement;
end;

class function CoSVGTextContentElement.Create: DispSVGTextContentElement;
begin
  Result := CreateComObject(CLASS_SVGTextContentElement) as DispSVGTextContentElement;
end;

class function CoSVGTextContentElement.CreateRemote(const MachineName: string): DispSVGTextContentElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGTextContentElement) as DispSVGTextContentElement;
end;

class function CoSVGTextPositioningElement.Create: DispSVGTextPositioningElement;
begin
  Result := CreateComObject(CLASS_SVGTextPositioningElement) as DispSVGTextPositioningElement;
end;

class function CoSVGTextPositioningElement.CreateRemote(const MachineName: string): DispSVGTextPositioningElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGTextPositioningElement) as DispSVGTextPositioningElement;
end;

class function CoDOMDocumentType.Create: DispDOMDocumentType;
begin
  Result := CreateComObject(CLASS_DOMDocumentType) as DispDOMDocumentType;
end;

class function CoDOMDocumentType.CreateRemote(const MachineName: string): DispDOMDocumentType;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_DOMDocumentType) as DispDOMDocumentType;
end;

class function CoNodeIterator.Create: DispNodeIterator;
begin
  Result := CreateComObject(CLASS_NodeIterator) as DispNodeIterator;
end;

class function CoNodeIterator.CreateRemote(const MachineName: string): DispNodeIterator;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_NodeIterator) as DispNodeIterator;
end;

class function CoTreeWalker.Create: DispTreeWalker;
begin
  Result := CreateComObject(CLASS_TreeWalker) as DispTreeWalker;
end;

class function CoTreeWalker.CreateRemote(const MachineName: string): DispTreeWalker;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_TreeWalker) as DispTreeWalker;
end;

class function CoDOMProcessingInstruction.Create: DispDOMProcessingInstruction;
begin
  Result := CreateComObject(CLASS_DOMProcessingInstruction) as DispDOMProcessingInstruction;
end;

class function CoDOMProcessingInstruction.CreateRemote(const MachineName: string): DispDOMProcessingInstruction;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_DOMProcessingInstruction) as DispDOMProcessingInstruction;
end;

class function CoHTMLPerformance.Create: DispHTMLPerformance;
begin
  Result := CreateComObject(CLASS_HTMLPerformance) as DispHTMLPerformance;
end;

class function CoHTMLPerformance.CreateRemote(const MachineName: string): DispHTMLPerformance;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLPerformance) as DispHTMLPerformance;
end;

class function CoHTMLPerformanceNavigation.Create: DispHTMLPerformanceNavigation;
begin
  Result := CreateComObject(CLASS_HTMLPerformanceNavigation) as DispHTMLPerformanceNavigation;
end;

class function CoHTMLPerformanceNavigation.CreateRemote(const MachineName: string): DispHTMLPerformanceNavigation;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLPerformanceNavigation) as DispHTMLPerformanceNavigation;
end;

class function CoHTMLPerformanceTiming.Create: DispHTMLPerformanceTiming;
begin
  Result := CreateComObject(CLASS_HTMLPerformanceTiming) as DispHTMLPerformanceTiming;
end;

class function CoHTMLPerformanceTiming.CreateRemote(const MachineName: string): DispHTMLPerformanceTiming;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLPerformanceTiming) as DispHTMLPerformanceTiming;
end;

class function CoSVGTSpanElement.Create: DispSVGTSpanElement;
begin
  Result := CreateComObject(CLASS_SVGTSpanElement) as DispSVGTSpanElement;
end;

class function CoSVGTSpanElement.CreateRemote(const MachineName: string): DispSVGTSpanElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGTSpanElement) as DispSVGTSpanElement;
end;

class function CoCTemplatePrinter.Create: ITemplatePrinter3;
begin
  Result := CreateComObject(CLASS_CTemplatePrinter) as ITemplatePrinter3;
end;

class function CoCTemplatePrinter.CreateRemote(const MachineName: string): ITemplatePrinter3;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_CTemplatePrinter) as ITemplatePrinter3;
end;

class function CoCPrintManagerTemplatePrinter.Create: DispCPrintManagerTemplatePrinter;
begin
  Result := CreateComObject(CLASS_CPrintManagerTemplatePrinter) as DispCPrintManagerTemplatePrinter;
end;

class function CoCPrintManagerTemplatePrinter.CreateRemote(const MachineName: string): DispCPrintManagerTemplatePrinter;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_CPrintManagerTemplatePrinter) as DispCPrintManagerTemplatePrinter;
end;

class function CoSVGTextPathElement.Create: DispSVGTextPathElement;
begin
  Result := CreateComObject(CLASS_SVGTextPathElement) as DispSVGTextPathElement;
end;

class function CoSVGTextPathElement.CreateRemote(const MachineName: string): DispSVGTextPathElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_SVGTextPathElement) as DispSVGTextPathElement;
end;

class function CoXMLSerializer.Create: DispXMLSerializer;
begin
  Result := CreateComObject(CLASS_XMLSerializer) as DispXMLSerializer;
end;

class function CoXMLSerializer.CreateRemote(const MachineName: string): DispXMLSerializer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_XMLSerializer) as DispXMLSerializer;
end;

class function CoHTMLDOMXmlSerializerFactory.Create: IDOMXmlSerializerFactory;
begin
  Result := CreateComObject(CLASS_HTMLDOMXmlSerializerFactory) as IDOMXmlSerializerFactory;
end;

class function CoHTMLDOMXmlSerializerFactory.CreateRemote(const MachineName: string): IDOMXmlSerializerFactory;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLDOMXmlSerializerFactory) as IDOMXmlSerializerFactory;
end;

class function CoDOMParser.Create: DispDOMParser;
begin
  Result := CreateComObject(CLASS_DOMParser) as DispDOMParser;
end;

class function CoDOMParser.CreateRemote(const MachineName: string): DispDOMParser;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_DOMParser) as DispDOMParser;
end;

class function CoDOMParserFactory.Create: IDOMParserFactory;
begin
  Result := CreateComObject(CLASS_DOMParserFactory) as IDOMParserFactory;
end;

class function CoDOMParserFactory.CreateRemote(const MachineName: string): IDOMParserFactory;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_DOMParserFactory) as IDOMParserFactory;
end;

class function CoHTMLSemanticElement.Create: DispHTMLSemanticElement;
begin
  Result := CreateComObject(CLASS_HTMLSemanticElement) as DispHTMLSemanticElement;
end;

class function CoHTMLSemanticElement.CreateRemote(const MachineName: string): DispHTMLSemanticElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLSemanticElement) as DispHTMLSemanticElement;
end;

class function CoHTMLProgressElement.Create: DispHTMLProgressElement;
begin
  Result := CreateComObject(CLASS_HTMLProgressElement) as DispHTMLProgressElement;
end;

class function CoHTMLProgressElement.CreateRemote(const MachineName: string): DispHTMLProgressElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLProgressElement) as DispHTMLProgressElement;
end;

class function CoDOMMSTransitionEvent.Create: DispDOMMSTransitionEvent;
begin
  Result := CreateComObject(CLASS_DOMMSTransitionEvent) as DispDOMMSTransitionEvent;
end;

class function CoDOMMSTransitionEvent.CreateRemote(const MachineName: string): DispDOMMSTransitionEvent;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_DOMMSTransitionEvent) as DispDOMMSTransitionEvent;
end;

class function CoDOMMSAnimationEvent.Create: DispDOMMSAnimationEvent;
begin
  Result := CreateComObject(CLASS_DOMMSAnimationEvent) as DispDOMMSAnimationEvent;
end;

class function CoDOMMSAnimationEvent.CreateRemote(const MachineName: string): DispDOMMSAnimationEvent;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_DOMMSAnimationEvent) as DispDOMMSAnimationEvent;
end;

class function CoWebGeolocation.Create: DispWebGeolocation;
begin
  Result := CreateComObject(CLASS_WebGeolocation) as DispWebGeolocation;
end;

class function CoWebGeolocation.CreateRemote(const MachineName: string): DispWebGeolocation;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_WebGeolocation) as DispWebGeolocation;
end;

class function CoWebGeocoordinates.Create: DispWebGeocoordinates;
begin
  Result := CreateComObject(CLASS_WebGeocoordinates) as DispWebGeocoordinates;
end;

class function CoWebGeocoordinates.CreateRemote(const MachineName: string): DispWebGeocoordinates;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_WebGeocoordinates) as DispWebGeocoordinates;
end;

class function CoWebGeopositionError.Create: DispWebGeopositionError;
begin
  Result := CreateComObject(CLASS_WebGeopositionError) as DispWebGeopositionError;
end;

class function CoWebGeopositionError.CreateRemote(const MachineName: string): DispWebGeopositionError;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_WebGeopositionError) as DispWebGeopositionError;
end;

class function CoWebGeoposition.Create: DispWebGeoposition;
begin
  Result := CreateComObject(CLASS_WebGeoposition) as DispWebGeoposition;
end;

class function CoWebGeoposition.CreateRemote(const MachineName: string): DispWebGeoposition;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_WebGeoposition) as DispWebGeoposition;
end;

class function CoCClientCaps.Create: IClientCaps;
begin
  Result := CreateComObject(CLASS_CClientCaps) as IClientCaps;
end;

class function CoCClientCaps.CreateRemote(const MachineName: string): IClientCaps;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_CClientCaps) as IClientCaps;
end;

class function CoDOMMSManipulationEvent.Create: DispDOMMSManipulationEvent;
begin
  Result := CreateComObject(CLASS_DOMMSManipulationEvent) as DispDOMMSManipulationEvent;
end;

class function CoDOMMSManipulationEvent.CreateRemote(const MachineName: string): DispDOMMSManipulationEvent;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_DOMMSManipulationEvent) as DispDOMMSManipulationEvent;
end;

class function CoDOMCloseEvent.Create: DispDOMCloseEvent;
begin
  Result := CreateComObject(CLASS_DOMCloseEvent) as DispDOMCloseEvent;
end;

class function CoDOMCloseEvent.CreateRemote(const MachineName: string): DispDOMCloseEvent;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_DOMCloseEvent) as DispDOMCloseEvent;
end;

class function CoapplicationCache.Create: IHTMLApplicationCache;
begin
  Result := CreateComObject(CLASS_applicationCache) as IHTMLApplicationCache;
end;

class function CoapplicationCache.CreateRemote(const MachineName: string): IHTMLApplicationCache;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_applicationCache) as IHTMLApplicationCache;
end;

class function CoHtmlDlgSafeHelper.Create: IHtmlDlgSafeHelper;
begin
  Result := CreateComObject(CLASS_HtmlDlgSafeHelper) as IHtmlDlgSafeHelper;
end;

class function CoHtmlDlgSafeHelper.CreateRemote(const MachineName: string): IHtmlDlgSafeHelper;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HtmlDlgSafeHelper) as IHtmlDlgSafeHelper;
end;

class function CoBlockFormats.Create: IBlockFormats;
begin
  Result := CreateComObject(CLASS_BlockFormats) as IBlockFormats;
end;

class function CoBlockFormats.CreateRemote(const MachineName: string): IBlockFormats;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_BlockFormats) as IBlockFormats;
end;

class function CoFontNames.Create: IFontNames;
begin
  Result := CreateComObject(CLASS_FontNames) as IFontNames;
end;

class function CoFontNames.CreateRemote(const MachineName: string): IFontNames;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_FontNames) as IFontNames;
end;

class function CoHTMLNamespace.Create: DispHTMLNamespace;
begin
  Result := CreateComObject(CLASS_HTMLNamespace) as DispHTMLNamespace;
end;

class function CoHTMLNamespace.CreateRemote(const MachineName: string): DispHTMLNamespace;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLNamespace) as DispHTMLNamespace;
end;

class function CoHTMLNamespaceCollection.Create: DispHTMLNamespaceCollection;
begin
  Result := CreateComObject(CLASS_HTMLNamespaceCollection) as DispHTMLNamespaceCollection;
end;

class function CoHTMLNamespaceCollection.CreateRemote(const MachineName: string): DispHTMLNamespaceCollection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLNamespaceCollection) as DispHTMLNamespaceCollection;
end;

class function CoThreadDialogProcParam.Create: IHTMLModelessInit;
begin
  Result := CreateComObject(CLASS_ThreadDialogProcParam) as IHTMLModelessInit;
end;

class function CoThreadDialogProcParam.CreateRemote(const MachineName: string): IHTMLModelessInit;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_ThreadDialogProcParam) as IHTMLModelessInit;
end;

class function CoHTMLDialog.Create: IHTMLDialog;
begin
  Result := CreateComObject(CLASS_HTMLDialog) as IHTMLDialog;
end;

class function CoHTMLDialog.CreateRemote(const MachineName: string): IHTMLDialog;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLDialog) as IHTMLDialog;
end;

class function CoHTMLPopup.Create: DispHTMLPopup;
begin
  Result := CreateComObject(CLASS_HTMLPopup) as DispHTMLPopup;
end;

class function CoHTMLPopup.CreateRemote(const MachineName: string): DispHTMLPopup;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLPopup) as DispHTMLPopup;
end;

class function CoHTMLAppBehavior.Create: DispHTMLAppBehavior;
begin
  Result := CreateComObject(CLASS_HTMLAppBehavior) as DispHTMLAppBehavior;
end;

class function CoHTMLAppBehavior.CreateRemote(const MachineName: string): DispHTMLAppBehavior;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLAppBehavior) as DispHTMLAppBehavior;
end;

class function CoOldHTMLDocument.Create: DispHTMLDocument;
begin
  Result := CreateComObject(CLASS_OldHTMLDocument) as DispHTMLDocument;
end;

class function CoOldHTMLDocument.CreateRemote(const MachineName: string): DispHTMLDocument;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_OldHTMLDocument) as DispHTMLDocument;
end;

class function CoOldHTMLFormElement.Create: DispHTMLFormElement;
begin
  Result := CreateComObject(CLASS_OldHTMLFormElement) as DispHTMLFormElement;
end;

class function CoOldHTMLFormElement.CreateRemote(const MachineName: string): DispHTMLFormElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_OldHTMLFormElement) as DispHTMLFormElement;
end;

class function CoHTMLInputButtonElement.Create: DispIHTMLInputButtonElement;
begin
  Result := CreateComObject(CLASS_HTMLInputButtonElement) as DispIHTMLInputButtonElement;
end;

class function CoHTMLInputButtonElement.CreateRemote(const MachineName: string): DispIHTMLInputButtonElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLInputButtonElement) as DispIHTMLInputButtonElement;
end;

class function CoHTMLInputTextElement.Create: DispIHTMLInputTextElement;
begin
  Result := CreateComObject(CLASS_HTMLInputTextElement) as DispIHTMLInputTextElement;
end;

class function CoHTMLInputTextElement.CreateRemote(const MachineName: string): DispIHTMLInputTextElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLInputTextElement) as DispIHTMLInputTextElement;
end;

class function CoHTMLInputFileElement.Create: DispIHTMLInputFileElement;
begin
  Result := CreateComObject(CLASS_HTMLInputFileElement) as DispIHTMLInputFileElement;
end;

class function CoHTMLInputFileElement.CreateRemote(const MachineName: string): DispIHTMLInputFileElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLInputFileElement) as DispIHTMLInputFileElement;
end;

class function CoHTMLOptionButtonElement.Create: DispIHTMLOptionButtonElement;
begin
  Result := CreateComObject(CLASS_HTMLOptionButtonElement) as DispIHTMLOptionButtonElement;
end;

class function CoHTMLOptionButtonElement.CreateRemote(const MachineName: string): DispIHTMLOptionButtonElement;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_HTMLOptionButtonElement) as DispIHTMLOptionButtonElement;
end;

class function CohtmlInputImage.Create: DispIHTMLInputImage;
begin
  Result := CreateComObject(CLASS_htmlInputImage) as DispIHTMLInputImage;
end;

class function CohtmlInputImage.CreateRemote(const MachineName: string): DispIHTMLInputImage;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_htmlInputImage) as DispIHTMLInputImage;
end;

end.
